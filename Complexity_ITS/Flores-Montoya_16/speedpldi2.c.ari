(format LCTRS)
(theory Ints)
(fun eval_speedpldi2_0 (-> Int Int Int Int Int))
(fun eval_speedpldi2_1 (-> Int Int Int Int Int))
(fun eval_speedpldi2_2 (-> Int Int Int Int Int))
(fun eval_speedpldi2_bb0_in (-> Int Int Int Int Int))
(fun eval_speedpldi2_bb1_in (-> Int Int Int Int Int))
(fun eval_speedpldi2_bb2_in (-> Int Int Int Int Int))
(fun eval_speedpldi2_bb3_in (-> Int Int Int Int Int))
(fun eval_speedpldi2_bb4_in (-> Int Int Int Int Int))
(fun eval_speedpldi2_start (-> Int Int Int Int Int))
(fun eval_speedpldi2_stop (-> Int Int Int Int Int))
(entrypoint eval_speedpldi2_start)
(rule
  (eval_speedpldi2_start v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb0_in v_m v_n v_v1_0 v_v2_0))
(rule
  (eval_speedpldi2_bb0_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_0 v_m v_n v_v1_0 v_v2_0))
(rule
  (eval_speedpldi2_0 v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_1 v_m v_n v_v1_0 v_v2_0))
(rule
  (eval_speedpldi2_1 v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_2 v_m v_n v_v1_0 v_v2_0))
(rule
  (eval_speedpldi2_2 v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb1_in v_m v_n v_n 0)
  :guard
  (and (>= v_n 0) (> v_m 0)))
(rule
  (eval_speedpldi2_2 v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb4_in v_m v_n v_v1_0 v_v2_0)
  :guard
  (< v_n 0))
(rule
  (eval_speedpldi2_2 v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb4_in v_m v_n v_v1_0 v_v2_0)
  :guard
  (<= v_m 0))
(rule
  (eval_speedpldi2_bb1_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb2_in v_m v_n v_v1_0 v_v2_0)
  :guard
  (> v_v1_0 0))
(rule
  (eval_speedpldi2_bb1_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb4_in v_m v_n v_v1_0 v_v2_0)
  :guard
  (<= v_v1_0 0))
(rule
  (eval_speedpldi2_bb2_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb3_in v_m v_n v_v1_0 v_v2_0)
  :guard
  (< v_v2_0 v_m))
(rule
  (eval_speedpldi2_bb2_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb1_in v_m v_n v_v1_0 0)
  :guard
  (>= v_v2_0 v_m))
(rule
  (eval_speedpldi2_bb3_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_bb1_in v_m v_n (- v_v1_0 1) (+ v_v2_0 1)))
(rule
  (eval_speedpldi2_bb4_in v_m v_n v_v1_0 v_v2_0)
  (eval_speedpldi2_stop v_m v_n v_v1_0 v_v2_0))
