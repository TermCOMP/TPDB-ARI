(format LCTRS)
(theory Ints)
(fun eval_start_0 (-> Int Int Int Int Int Int))
(fun eval_start_1 (-> Int Int Int Int Int Int))
(fun eval_start_2 (-> Int Int Int Int Int Int))
(fun eval_start_3 (-> Int Int Int Int Int Int))
(fun eval_start_4 (-> Int Int Int Int Int Int))
(fun eval_start_5 (-> Int Int Int Int Int Int))
(fun eval_start_6 (-> Int Int Int Int Int Int))
(fun eval_start_bb0_in (-> Int Int Int Int Int Int))
(fun eval_start_bb1_in (-> Int Int Int Int Int Int))
(fun eval_start_bb2_in (-> Int Int Int Int Int Int))
(fun eval_start_bb3_in (-> Int Int Int Int Int Int))
(fun eval_start_start (-> Int Int Int Int Int Int))
(fun eval_start_stop (-> Int Int Int Int Int Int))
(entrypoint eval_start_start)
(rule
  (eval_start_start v__0 v__01 v_1 v_x v_y)
  (eval_start_bb0_in v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_bb0_in v__0 v__01 v_1 v_x v_y)
  (eval_start_0 v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_0 v__0 v__01 v_1 v_x v_y)
  (eval_start_1 v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_1 v__0 v__01 v_1 v_x v_y)
  (eval_start_2 v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_2 v__0 v__01 v_1 v_x v_y)
  (eval_start_3 v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_3 v__0 v__01 v_1 v_x v_y)
  (eval_start_4 v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_4 v__0 v__01 v_1 v_x v_y)
  (eval_start_bb1_in v_x v_y v_1 v_x v_y))
(rule
  (eval_start_bb1_in v__0 v__01 v_1 v_x v_y)
  (eval_start_bb2_in v__0 v__01 v_1 v_x v_y)
  :guard
  (> v__0 v__01))
(rule
  (eval_start_bb1_in v__0 v__01 v_1 v_x v_y)
  (eval_start_bb3_in v__0 v__01 v_1 v_x v_y)
  :guard
  (<= v__0 v__01))
(rule
  (eval_start_bb2_in v__0 v__01 v_1 v_x v_y)
  (eval_start_5 v__0 v__01 v_1 v_x v_y))
(rule
  (eval_start_5 v__0 v__01 v_1 v_x v_y)
  (eval_start_6 v__0 v__01 nondef_0 v_x v_y))
(rule
  (eval_start_6 v__0 v__01 v_1 v_x v_y)
  (eval_start_bb1_in v__0 (+ v__01 1) v_1 v_x v_y)
  :guard
  (and (> v_1 0) (> v_1 0)))
(rule
  (eval_start_6 v__0 v__01 v_1 v_x v_y)
  (eval_start_bb1_in (- v__0 1) (+ v__01 1) v_1 v_x v_y)
  :guard
  (and (> v_1 0) (<= v_1 0)))
(rule
  (eval_start_6 v__0 v__01 v_1 v_x v_y)
  (eval_start_bb1_in v__0 v__01 v_1 v_x v_y)
  :guard
  (and (<= v_1 0) (> v_1 0)))
(rule
  (eval_start_6 v__0 v__01 v_1 v_x v_y)
  (eval_start_bb1_in (- v__0 1) v__01 v_1 v_x v_y)
  :guard
  (and (<= v_1 0) (<= v_1 0)))
(rule
  (eval_start_bb3_in v__0 v__01 v_1 v_x v_y)
  (eval_start_stop v__0 v__01 v_1 v_x v_y))
