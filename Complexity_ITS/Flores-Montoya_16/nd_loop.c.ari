(format LCTRS)
(theory Ints)
(fun eval_nd_loop_0 (-> Int Int Int))
(fun eval_nd_loop_1 (-> Int Int Int))
(fun eval_nd_loop_2 (-> Int Int Int))
(fun eval_nd_loop_3 (-> Int Int Int))
(fun eval_nd_loop_4 (-> Int Int Int))
(fun eval_nd_loop_5 (-> Int Int Int))
(fun eval_nd_loop_bb0_in (-> Int Int Int))
(fun eval_nd_loop_bb1_in (-> Int Int Int))
(fun eval_nd_loop_bb2_in (-> Int Int Int))
(fun eval_nd_loop_start (-> Int Int Int))
(fun eval_nd_loop_stop (-> Int Int Int))
(entrypoint eval_nd_loop_start)
(rule (eval_nd_loop_start v_0 v_x_0) (eval_nd_loop_bb0_in v_0 v_x_0))
(rule (eval_nd_loop_bb0_in v_0 v_x_0) (eval_nd_loop_0 v_0 v_x_0))
(rule (eval_nd_loop_0 v_0 v_x_0) (eval_nd_loop_1 v_0 v_x_0))
(rule (eval_nd_loop_1 v_0 v_x_0) (eval_nd_loop_2 v_0 v_x_0))
(rule (eval_nd_loop_2 v_0 v_x_0) (eval_nd_loop_3 v_0 v_x_0))
(rule (eval_nd_loop_3 v_0 v_x_0) (eval_nd_loop_bb1_in v_0 0))
(rule (eval_nd_loop_bb1_in v_0 v_x_0) (eval_nd_loop_4 v_0 v_x_0))
(rule (eval_nd_loop_4 v_0 v_x_0) (eval_nd_loop_5 nondef_0 v_x_0))
(rule
  (eval_nd_loop_5 v_0 v_x_0)
  (eval_nd_loop_bb1_in v_0 v_0)
  :guard
  (and (and (<= (- v_0 v_x_0) 2) (>= (- v_0 v_x_0) 1)) (< v_0 10)))

(rule
  (eval_nd_loop_5 v_0 v_x_0)
  (eval_nd_loop_bb2_in v_0 v_x_0)
  :guard
  (> (- v_0 v_x_0) 2))

(rule
  (eval_nd_loop_5 v_0 v_x_0)
  (eval_nd_loop_bb2_in v_0 v_x_0)
  :guard
  (< (- v_0 v_x_0) 1))

(rule
  (eval_nd_loop_5 v_0 v_x_0)
  (eval_nd_loop_bb2_in v_0 v_x_0)
  :guard
  (>= v_0 10))

(rule (eval_nd_loop_bb2_in v_0 v_x_0) (eval_nd_loop_stop v_0 v_x_0))
