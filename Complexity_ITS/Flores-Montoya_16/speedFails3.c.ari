(format LCTRS)
(theory Ints)
(fun eval_speedFails3_0 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_1 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_2 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_3 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_4 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_5 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_6 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_7 (-> Int Int Int Int Int Int))
(fun eval_speedFails3_bb0_in (-> Int Int Int Int Int Int))
(fun eval_speedFails3_bb1_in (-> Int Int Int Int Int Int))
(fun eval_speedFails3_bb2_in (-> Int Int Int Int Int Int))
(fun eval_speedFails3_bb3_in (-> Int Int Int Int Int Int))
(fun eval_speedFails3_start (-> Int Int Int Int Int Int))
(fun eval_speedFails3_stop (-> Int Int Int Int Int Int))
(entrypoint eval_speedFails3_start)
(rule
  (eval_speedFails3_start v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb0_in v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_bb0_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_0 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_0 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_1 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_1 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_2 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_2 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_3 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_3 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_4 v__0 nondef_0 v_n v_t v_x))
(rule
  (eval_speedFails3_4 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_5 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_5 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_6 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_6 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_7 v__0 v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_7 v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb1_in v_x v_0 v_n v_t v_x))
(rule
  (eval_speedFails3_bb1_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb2_in v__0 v_0 v_n v_t v_x)
  :guard
  (and (>= v__0 0) (<= v__0 v_n)))
(rule
  (eval_speedFails3_bb1_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb3_in v__0 v_0 v_n v_t v_x)
  :guard
  (< v__0 0))
(rule
  (eval_speedFails3_bb1_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb3_in v__0 v_0 v_n v_t v_x)
  :guard
  (> v__0 v_n))
(rule
  (eval_speedFails3_bb2_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb1_in (+ v__0 v_t) v_0 v_n v_t v_x)
  :guard
  (> v_0 0))
(rule
  (eval_speedFails3_bb2_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_bb1_in (- v__0 v_t) v_0 v_n v_t v_x)
  :guard
  (<= v_0 0))
(rule
  (eval_speedFails3_bb3_in v__0 v_0 v_n v_t v_x)
  (eval_speedFails3_stop v__0 v_0 v_n v_t v_x))
