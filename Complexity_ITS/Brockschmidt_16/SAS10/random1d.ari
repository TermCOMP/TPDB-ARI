(format LCTRS)
(theory Ints)
(fun lbl101 (-> Int Int Int Int Int Int Int))
(fun start (-> Int Int Int Int Int Int Int))
(fun start0 (-> Int Int Int Int Int Int Int))
(fun stop (-> Int Int Int Int Int Int Int))
(entrypoint start0)
(rule
  (start A B C D E F)
  (stop A B C D E F)
  :guard
  (and (and (and (>= 0 A) (= B C)) (= D A)) (= E F)))
(rule
  (start A B C D E F)
  (lbl101 A 2 C D 1 F)
  :guard
  (and (and (and (>= A 1) (= B C)) (= D A)) (= E F)))
(rule
  (start A B C D E F)
  (lbl101 A 2 C D (- 1) F)
  :guard
  (and (and (and (>= A 1) (= B C)) (= D A)) (= E F)))
(rule
  (lbl101 A B C D E F)
  (stop A B C D E F)
  :guard
  (and
    (and (and (and (>= (+ E A) 0) (>= A 1)) (>= A E)) (= B (+ A 1)))
    (= D A))
  )
(rule
  (lbl101 A B C D E F)
  (lbl101 A (+ 1 B) C D (+ 1 E) F)
  :guard
  (and
    (and
      (and (and (and (>= A B) (>= (+ E B) 1)) (>= (+ A 1) B)) (>= B 2))
      (>= B (+ E 1)))
    (= D A))
  )
(rule
  (lbl101 A B C D E F)
  (lbl101 A (+ 1 B) C D (- E 1) F)
  :guard
  (and
    (and
      (and (and (and (>= A B) (>= (+ E B) 1)) (>= (+ A 1) B)) (>= B 2))
      (>= B (+ E 1)))
    (= D A))
  )
(rule (start0 A B C D E F) (start A C C A F F))
