(format LCTRS)
(theory Ints)
(fun cut (-> Int Int Int Int Int Int Int Int Int))
(fun start (-> Int Int Int Int Int Int Int Int Int))
(fun start0 (-> Int Int Int Int Int Int Int Int Int))
(fun stop (-> Int Int Int Int Int Int Int Int Int))
(entrypoint start0)
(rule
  (start A B C D E F G H)
  (stop A B C D 0 F D H)
  :guard
  (and (and (and (and (>= 0 A) (= B C)) (= D A)) (= E F)) (= G H)))

(rule
  (start A B C D E F G H)
  (cut A B C D 0 F (- D 1) H)
  :guard
  (and (and (and (and (>= A 2) (= B C)) (= D A)) (= E F)) (= G H)))

(rule
  (start A B C D E F G H)
  (stop A B C D 0 F (- D 1) H)
  :guard
  (and (and (and (and (= D 1) (= B C)) (= A 1)) (= E F)) (= G H)))

(rule
  (start A B C D E F G H)
  (cut A 0 C D 1 F (- D 1) H)
  :guard
  (and (and (and (and (>= A 2) (= B C)) (= D A)) (= E F)) (= G H)))

(rule
  (start A B C D E F G H)
  (stop A 0 C D 0 F (- D 1) H)
  :guard
  (and (and (and (and (= D 1) (= B C)) (= A 1)) (= E F)) (= G H)))

(rule
  (cut A B C D E F G H)
  (cut A B C D (- E 1) F (- G 1) H)
  :guard
  (and
    (and
      (and
        (and (and (and (>= G 2) (>= E 2)) (>= G 1)) (>= E 0))
        (>= A (+ G 1)))
      (>= A (+ G E)))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (stop A B C D (- E 1) F (- G 1) H)
  :guard
  (and
    (and
      (and (and (and (>= E 2) (>= E 0)) (>= A 2)) (>= A (+ 1 E)))
      (= G 1))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (cut A B C D 0 F (- G 1) H)
  :guard
  (and
    (and
      (and
        (and (and (and (>= G 2) (>= 1 E)) (>= G 1)) (>= E 0))
        (>= A (+ G 1)))
      (>= A (+ G E)))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (stop A B C D 0 F (- G 1) H)
  :guard
  (and
    (and
      (and (and (and (>= 1 E) (>= E 0)) (>= A 2)) (>= A (+ 1 E)))
      (= G 1))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (cut A E C D (+ 1 E) F (- G 1) H)
  :guard
  (and
    (and
      (and
        (and (and (and (>= G 2) (>= A (+ E 2))) (>= G 1)) (>= E 0))
        (>= A (+ G 1)))
      (>= A (+ G E)))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (stop A E C D (+ 1 E) F (- G 1) H)
  :guard
  (and
    (and
      (and (and (and (>= A (+ E 2)) (>= E 0)) (>= A 2)) (>= A (+ 1 E)))
      (= G 1))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (cut A E C D 0 F (- G 1) H)
  :guard
  (and
    (and
      (and
        (and (and (and (>= G 2) (>= (+ E 1) A)) (>= G 1)) (>= E 0))
        (>= A (+ G 1)))
      (>= A (+ G E)))
    (= D A))
  )

(rule
  (cut A B C D E F G H)
  (stop A E C D 0 F (- G 1) H)
  :guard
  (and
    (and (and (and (>= A 1) (>= A 2)) (= G 1)) (= (+ E 1) A))
    (= D A))
  )

(rule (start0 A B C D E F G H) (start A C C A F F H H))
