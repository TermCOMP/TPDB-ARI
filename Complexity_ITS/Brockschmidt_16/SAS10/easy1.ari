(format LCTRS)
(theory Ints)
(fun lbl111 (-> Int Int Int Int Int Int Int))
(fun lbl91 (-> Int Int Int Int Int Int Int))
(fun start (-> Int Int Int Int Int Int Int))
(fun start0 (-> Int Int Int Int Int Int Int))
(fun stop (-> Int Int Int Int Int Int Int))
(entrypoint start0)
(rule
  (start A B C D E F)
  (lbl91 A B 100 D 1 F)
  :guard
  (and (and (and (= A 0) (= B 0)) (= C D)) (= E F)))
(rule
  (start A B C D E F)
  (lbl111 A B 100 D 2 F)
  :guard
  (and (and (and (>= 0 (+ B 1)) (= A B)) (= C D)) (= E F)))
(rule
  (start A B C D E F)
  (lbl111 A B 100 D 2 F)
  :guard
  (and (and (and (>= B 1) (= A B)) (= C D)) (= E F)))
(rule
  (lbl91 A B C D E F)
  (stop A B C D E F)
  :guard
  (and (and (and (= E 40) (= C 100)) (= A 0)) (= B 0)))
(rule
  (lbl91 A B C D E F)
  (lbl91 A B C D (+ 1 E) F)
  :guard
  (and
    (and (and (and (and (>= 39 E) (>= E 1)) (>= 40 E)) (= A 0)) (= C 100))
    (= B 0))
  )
(rule
  (lbl91 A B C D E F)
  (lbl111 A B C D (+ 2 E) F)
  :guard
  (and
    (and
      (and (and (and (and (>= 0 1) (>= 39 E)) (>= E 1)) (>= 40 E)) (= C 100))
      (= A 0))
    (= B 0))
  )
(rule
  (lbl91 A B C D E F)
  (lbl111 A B C D (+ 2 E) F)
  :guard
  (and
    (and
      (and (and (and (and (>= 0 1) (>= 39 E)) (>= E 1)) (>= 40 E)) (= C 100))
      (= A 0))
    (= B 0))
  )
(rule
  (lbl111 A B C D E F)
  (stop A B C D E F)
  :guard
  (and (and (and (and (>= E 40) (>= E 2)) (>= 41 E)) (= C 100)) (= A B)))
(rule
  (lbl111 A B C D E F)
  (lbl91 A B C D (+ 1 E) F)
  :guard
  (and
    (and (and (and (and (>= 39 E) (>= E 2)) (>= 41 E)) (= A 0)) (= C 100))
    (= B 0))
  )
(rule
  (lbl111 A B C D E F)
  (lbl111 A B C D (+ 2 E) F)
  :guard
  (and
    (and
      (and (and (and (>= 0 (+ B 1)) (>= 39 E)) (>= E 2)) (>= 41 E))
      (= C 100))
    (= A B))
  )
(rule
  (lbl111 A B C D E F)
  (lbl111 A B C D (+ 2 E) F)
  :guard
  (and
    (and (and (and (and (>= B 1) (>= 39 E)) (>= E 2)) (>= 41 E)) (= C 100))
    (= A B))
  )
(rule (start0 A B C D E F) (start B B D D F F))
