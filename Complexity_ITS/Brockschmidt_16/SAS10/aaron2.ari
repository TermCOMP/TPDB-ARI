(format LCTRS)
(theory Ints)
(fun lbl101 (-> Int Int Int Int Int Int Int))
(fun lbl91 (-> Int Int Int Int Int Int Int))
(fun start (-> Int Int Int Int Int Int Int))
(fun start0 (-> Int Int Int Int Int Int Int))
(fun stop (-> Int Int Int Int Int Int Int))
(entrypoint start0)
(rule
  (start A B C D E F)
  (stop A B C D E F)
  :guard
  (and (and (and (>= 0 (+ A 1)) (= B C)) (= D E)) (= F A)))

(rule
  (start A B C D E F)
  (stop A B C D E F)
  :guard
  (and
    (and (and (and (>= A 0) (>= C (+ E 1))) (= B C)) (= D E))
    (= F A))
  )

(rule
  (start A B C D E F)
  (lbl91 A B C (- (- D 1) F) E F)
  :guard
  (and (and (and (and (>= A 0) (>= E C)) (= B C)) (= D E)) (= F A)))

(rule
  (start A B C D E F)
  (lbl101 A (+ (+ 1 F) B) C D E F)
  :guard
  (and (and (and (and (>= A 0) (>= E C)) (= B C)) (= D E)) (= F A)))

(rule
  (lbl91 A B C D E F)
  (stop A B C D E F)
  :guard
  (and
    (and
      (and
        (and (and (>= B (+ D 1)) (>= B C)) (>= A 0))
        (>= (+ (+ A D) 1) B))
      (>= E (+ (+ A D) 1)))
    (= F A))
  )

(rule
  (lbl91 A B C D E F)
  (stop A B C D E F)
  :guard
  (and
    (and
      (and
        (and (and (and (>= D B) (>= 0 (+ A 1))) (>= B C)) (>= A 0))
        (>= (+ (+ A D) 1) B))
      (>= E (+ (+ A D) 1)))
    (= F A))
  )

(rule
  (lbl91 A B C D E F)
  (lbl91 A B C (- (- D 1) F) E F)
  :guard
  (and
    (and
      (and (and (and (>= A 0) (>= D B)) (>= B C)) (>= (+ (+ A D) 1) B))
      (>= E (+ (+ A D) 1)))
    (= F A))
  )

(rule
  (lbl91 A B C D E F)
  (lbl101 A (+ (+ 1 F) B) C D E F)
  :guard
  (and
    (and
      (and (and (and (>= A 0) (>= D B)) (>= B C)) (>= (+ (+ A D) 1) B))
      (>= E (+ (+ A D) 1)))
    (= F A))
  )

(rule
  (lbl101 A B C D E F)
  (stop A B C D E F)
  :guard
  (and
    (and
      (and
        (and (and (>= B (+ D 1)) (>= E D)) (>= A 0))
        (>= B (+ (+ A C) 1)))
      (>= (+ (+ A D) 1) B))
    (= F A))
  )

(rule
  (lbl101 A B C D E F)
  (stop A B C D E F)
  :guard
  (and
    (and
      (and
        (and (and (and (>= D B) (>= 0 (+ A 1))) (>= E D)) (>= A 0))
        (>= B (+ (+ A C) 1)))
      (>= (+ (+ A D) 1) B))
    (= F A))
  )

(rule
  (lbl101 A B C D E F)
  (lbl91 A B C (- (- D 1) F) E F)
  :guard
  (and
    (and
      (and (and (and (>= A 0) (>= D B)) (>= E D)) (>= B (+ (+ A C) 1)))
      (>= (+ (+ A D) 1) B))
    (= F A))
  )

(rule
  (lbl101 A B C D E F)
  (lbl101 A (+ (+ 1 F) B) C D E F)
  :guard
  (and
    (and
      (and (and (and (>= A 0) (>= D B)) (>= E D)) (>= B (+ (+ A C) 1)))
      (>= (+ (+ A D) 1) B))
    (= F A))
  )

(rule (start0 A B C D E F) (start A C C E E A))
