(format LCTRS)
(theory Ints)
(fun eval (-> Int Int))
(fun start (-> Int Int))
(entrypoint start)
(rule
  (eval A)
  (eval 0)
  :guard
  (and (and (>= (* 2 B) 0) (>= 0 (* 2 B))) (= A 1)))

(rule
  (eval A)
  (eval (* 2 B))
  :guard
  (and (and (>= (* 2 B) 0) (>= (+ 2 (* 2 B)) 0)) (= A (+ 1 (* 2 B)))))

(rule
  (eval A)
  (eval B)
  :guard
  (and
    (and
      (and
        (and
          (and
            (and
              (and
                (and
                  (and (and (>= 1 (* 2 C)) (>= (* 2 C) 0)) (>= (* 2 D) 1))
                  (>= 1 (* 2 D)))
                (>= 1 (* 2 E)))
              (>= (* 3 E) 2))
            (>= B E))
          (>= 1 (* 2 F)))
        (>= (* 3 F) 2))
      (>= F B))
    (= A 1))
  )

(rule
  (eval A)
  (eval B)
  :guard
  (and
    (and
      (and
        (and
          (and
            (and
              (and
                (and
                  (and (and (>= (* 2 D) 1) (>= (+ 1 (* 2 D)) 0)) (>= (* 2 D) (* 2 C)))
                  (>= (+ 1 (* 2 C)) (* 2 D)))
                (>= (* 2 D) (* 2 E)))
              (>= (* 3 E) (+ (* 2 D) 1)))
            (>= B E))
          (>= (* 2 D) (* 2 F)))
        (>= (* 3 F) (+ (* 2 D) 1)))
      (>= F B))
    (= A (* 2 D)))
  )

(rule (start A) (eval A))
