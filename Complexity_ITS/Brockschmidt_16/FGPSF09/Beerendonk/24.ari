(format LCTRS)
(theory Ints)
(fun eval1 (-> Int Int Int))
(fun eval2 (-> Int Int Int))
(fun eval3 (-> Int Int Int))
(fun start (-> Int Int Int))
(entrypoint start)
(rule
  (eval1 A B)
  (eval2 A B)
  :guard
  (and (and (>= A 1) (>= B 1)) (>= A (+ B 1))))
(rule
  (eval1 A B)
  (eval3 A B)
  :guard
  (and (and (>= A 1) (>= B 1)) (>= B A)))
(rule (eval2 A B) (eval2 (- A 1) B) :guard (>= A 1))
(rule (eval2 A B) (eval1 A B) :guard (>= 0 A))
(rule (eval3 A B) (eval3 A (- B 1)) :guard (>= B 1))
(rule (eval3 A B) (eval1 A B) :guard (>= 0 B))
(rule (start A B) (eval1 A B))
