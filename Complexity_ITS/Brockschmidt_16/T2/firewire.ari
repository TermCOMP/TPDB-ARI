(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int Int Int))
(fun f20 (-> Int Int Int Int Int Int Int Int Int Int))
(fun f32 (-> Int Int Int Int Int Int Int Int Int Int))
(fun f38 (-> Int Int Int Int Int Int Int Int Int Int))
(fun f9 (-> Int Int Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f0 A B C D E F G H I) (f9 0 1 1 0 0 J G H I) :guard (>= J 1))
(rule
  (f9 A B C D E F G H I)
  (f20 A B (- C 1) D D 0 (- A 2) 1 (- A 2))
  :guard
  (and (and (and (>= A 3) (>= C 1)) (= D E)) (= F 0)))
(rule
  (f9 A B C D E F G H I)
  (f20 A B (- C 1) D D 0 A 0 A)
  :guard
  (and (and (and (>= 2 A) (>= C 1)) (= D E)) (= F 0)))
(rule
  (f9 A B C D E F G H I)
  (f20 0 (+ B 1) (+ B 1) D D J G H I)
  :guard
  (and (and (and (and (>= J 1) (>= A 3)) (>= 0 C)) (= D E)) (= F 0)))
(rule
  (f9 A B C D E F G H I)
  (f20 (+ A 1) (+ B 1) (+ B 1) D D J G H I)
  :guard
  (and (and (and (and (>= J 1) (>= 2 A)) (>= 0 C)) (= D E)) (= F 0)))
(rule
  (f9 A B C D E F G H I)
  (f20 A B C D D (- F 1) G J K)
  :guard
  (and (>= 0 (+ F 1)) (= D E)))
(rule
  (f9 A B C D E F G H I)
  (f20 A B C D D (- F 1) G J K)
  :guard
  (and (>= F 1) (= D E)))
(rule (f20 A B C D E F G H I) (f32 A B C 0 E F G H 0) :guard (= I 0))
(rule
  (f20 A B C D E F G H I)
  (f32 A B C 1 E F G H I)
  :guard
  (>= 0 (+ I 1)))
(rule (f20 A B C D E F G H I) (f32 A B C 1 E F G H I) :guard (>= I 1))
(rule (f32 A B C D E F G H I) (f9 A B C D 0 F G 0 I) :guard (= H 0))
(rule (f32 A B C D E F G H I) (f9 A B C D 1 F G H I) :guard (>= 0 (+ H 1)))
(rule (f32 A B C D E F G H I) (f9 A B C D 1 F G H I) :guard (>= H 1))
(rule (f9 A B C D E F G H I) (f38 A B C D E F G H I) :guard (>= E (+ D 1)))
(rule (f9 A B C D E F G H I) (f38 A B C D E F G H I) :guard (>= D (+ 1 E)))
