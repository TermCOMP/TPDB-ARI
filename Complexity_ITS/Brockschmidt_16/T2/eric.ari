(format LCTRS)
(theory Ints)
(fun f1 (-> Int Int Int Int))
(fun f2 (-> Int Int Int Int))
(fun f3 (-> Int Int Int Int))
(entrypoint f1)
(rule
  (f1 A B C)
  (f2 A B (+ B 1))
  :guard
  (and (and (>= A B) (>= A 1)) (>= B 1)))
(rule (f2 A B C) (f3 A B C) :guard (>= B (+ C 1)))
(rule (f2 A B C) (f3 A B C) :guard (>= C (+ B 1)))
(rule
  (f3 A B C)
  (f2 A B 0)
  :guard
  (and (and (>= (+ A 1) 0) (>= C 1)) (>= C (+ A 1))))
(rule (f3 A B C) (f2 A B (+ C 1)) :guard (and (>= A C) (>= (+ C 1) 0)))
