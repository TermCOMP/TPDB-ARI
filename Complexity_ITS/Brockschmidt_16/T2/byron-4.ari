(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int))
(fun f3 (-> Int Int Int Int))
(fun f4 (-> Int Int Int Int))
(fun f5 (-> Int Int Int Int))
(fun f6 (-> Int Int Int Int))
(fun f7 (-> Int Int Int Int))
(entrypoint f6)
(rule (f0 A B C) (f3 (- A) B C))
(rule (f3 A B C) (f7 0 D C) :guard (= A 0))
(rule (f4 A B C) (f7 0 D C) :guard (= A 0))
(rule (f6 A B C) (f4 A B 1) :guard (>= A 1))
(rule
  (f3 A B C)
  (f4 (- (- 1) A) B 1)
  :guard
  (and (>= 0 (+ A 1)) (>= 0 C)))

(rule
  (f3 A B C)
  (f4 (- (- 1) A) B 1)
  :guard
  (and (>= 0 (+ A 1)) (>= C 2)))

(rule (f3 A B C) (f4 (- (- 1) A) B 1) :guard (and (>= A 1) (>= 0 C)))
(rule (f3 A B C) (f4 (- (- 1) A) B 1) :guard (and (>= A 1) (>= C 2)))
(rule (f4 A B C) (f3 (- 1 A) B 0) :guard (and (>= 0 (+ A 1)) (= C 1)))
(rule (f4 A B C) (f3 (- 1 A) B 0) :guard (and (>= A 1) (= C 1)))
(rule (f5 A B C) (f3 (- 1 A) B 0) :guard (and (>= 0 (+ A 1)) (= C 1)))
(rule (f5 A B C) (f3 (- 1 A) B 0) :guard (and (>= A 1) (= C 1)))
