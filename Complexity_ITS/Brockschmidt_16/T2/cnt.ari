(format LCTRS)
(theory Ints)
(fun
  f0
  (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun
  f11
  (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun
  f14
  (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun
  f33
  (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun
  f36
  (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun
  f58
  (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule
  (f11 A B C D E F G H I J K L M N O P Q)
  (f14 A 0 C D E F G H I J K L M N O P Q)
  :guard
  (>= 9 A))
(rule
  (f33 A B C D E F G H I J K L M N O P Q)
  (f36 A B C 0 E F G H I J K L M N O P Q)
  :guard
  (>= 9 C))
(rule
  (f36 A B C D E F G H I J K L M N O P Q)
  (f36 A B C (+ D 1) (+ E S) (+ F 1) G H I J K L M N O P Q)
  :guard
  (exists ((R Int)) (and (>= 9 D) (>= 0 (+ R 1)))))
(rule
  (f36 A B C D E F G H I J K L M N O P Q)
  (f36 A B C (+ D 1) E F (+ G S) (+ H 1) I J K L M N O P Q)
  :guard
  (>= 9 D))
(rule
  (f36 A B C D E F G H I J K L M N O P Q)
  (f33 A B (+ C 1) D E F G H I J K L M N O P Q)
  :guard
  (>= D 10))
(rule
  (f33 A B C D E F G H I J K L M N O P Q)
  (f58 A B C D E F G H E F G H 1500 S O P Q)
  :guard
  (>= C 10))
(rule
  (f14 A B C D E F G H I J K L M N O P Q)
  (f14 A (+ B 1) C D E F G H I J K L M N S S Q)
  :guard
  (>= 9 B))
(rule
  (f14 A B C D E F G H I J K L M N O P Q)
  (f11 (+ A 1) B C D E F G H I J K L M N O P Q)
  :guard
  (>= B 10))
(rule
  (f11 A B C D E F G H I J K L M N O P Q)
  (f33 A B 0 D 0 0 0 0 I J K L M N O P 1000)
  :guard
  (>= A 10))
(rule
  (f0 A B C D E F G H I J K L M N O P Q)
  (f11 0 B C D E F G H I J K L M N 0 P Q))
