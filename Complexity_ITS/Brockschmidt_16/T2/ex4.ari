(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int))
(fun f10 (-> Int Int Int Int Int Int Int Int))
(fun f16 (-> Int Int Int Int Int Int Int Int))
(fun f28 (-> Int Int Int Int Int Int Int Int))
(fun f9 (-> Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f0 A B C D E F G) (f9 0 0 H D E F G))
(rule (f9 A B C D E F G) (f10 A B C C E F G) :guard (>= 0 (+ C 1)))
(rule (f9 A B C D E F G) (f10 A B C C E F G) :guard (>= C 1))
(rule (f10 A B C D E F G) (f9 (+ A 1) (+ A 1) H D E F G) :guard (>= 9 A))
(rule (f16 A B C D E F G) (f28 A B C D E F G) :guard (>= A 10))
(rule
  (f16 A B C D E F G)
  (f16 (+ A 1) B C D A H H)
  :guard
  (and (>= 9 A) (>= 0 (+ H 1))))

(rule
  (f16 A B C D E F G)
  (f16 (+ A 1) B C D A H H)
  :guard
  (and (>= 9 A) (>= H 1)))

(rule (f16 A B C D E F G) (f28 A B C D A 0 0) :guard (>= 9 A))
(rule (f10 A B C D E F G) (f16 0 B C D E F G) :guard (>= A 10))
(rule (f9 A B C D E F G) (f16 0 B 0 0 E F G) :guard (= C 0))
