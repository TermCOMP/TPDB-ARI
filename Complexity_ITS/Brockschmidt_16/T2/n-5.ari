(format LCTRS)
(theory Ints)
(fun f1 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f10 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f12 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f13 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f15 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f300 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f32 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f8 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint f15)
(rule
  (f8 A B C D E F G H I J K L M)
  (f32 A B N D E F G H I J K L M)
  :guard
  (>= A B))

(rule (f15 A B C D E F G H I J K L M) (f8 A B C N E F G H I J K L M))
(rule
  (f300 A B C D E F G H I J K L M)
  (f8 (+ 1 A) B C D E F G H I J K L M)
  :guard
  (>= B E))

(rule
  (f8 A B C D E F G H I J K L M)
  (f8 (+ 1 A) B C D E F G H I J K L M)
  :guard
  (and (>= B (+ 1 A)) (>= B E)))

(rule (f13 A B C D E F G H I J K L M) (f1 A B N D E O P 0 (- 2) 0 0 L M))
(rule
  (f12 A B C D E F G H I J K L M)
  (f1 A B N D E O P 0 I 0 0 (+ (- 1) I) M)
  :guard
  (>= 4 I))

(rule (f10 A B C D E F G H I J K L M) (f1 A B N D E O P 0 I 0 0 L (- 2)))
(rule
  (f8 A B C D E F G H I J K L M)
  (f1 A B N D E O P 0 I 0 0 L M)
  :guard
  (and (>= B (+ 1 A)) (>= E (+ 1 B))))

(rule
  (f1 A B C D E F G H I J K L M)
  (f1 A B N D E O P 0 I 0 0 L M)
  :guard
  (and (>= E (+ 1 B)) (>= 4 M)))

(rule
  (f300 A B C D E F G H I J K L M)
  (f1 A B N D E O P 0 I 0 0 L M)
  :guard
  (>= E (+ 1 B)))

(rule
  (f12 A B C D E F G H I J K L M)
  (f300 A (+ 1 B) N D E O G 1 I 1 1 L M)
  :guard
  (>= I 5))

(rule
  (f1 A B C D E F G H I J K L M)
  (f300 A (+ 1 B) N D E O G 1 I 1 1 L M)
  :guard
  (and (>= E (+ 1 B)) (>= M 5)))

