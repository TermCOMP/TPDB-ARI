(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int Int))
(fun f12 (-> Int Int Int Int Int Int Int Int Int))
(fun f22 (-> Int Int Int Int Int Int Int Int Int))
(fun f29 (-> Int Int Int Int Int Int Int Int Int))
(fun f35 (-> Int Int Int Int Int Int Int Int Int))
(fun f37 (-> Int Int Int Int Int Int Int Int Int))
(fun f43 (-> Int Int Int Int Int Int Int Int Int))
(fun f48 (-> Int Int Int Int Int Int Int Int Int))
(fun f58 (-> Int Int Int Int Int Int Int Int Int))
(fun start (-> Int Int Int Int Int Int Int Int Int))
(entrypoint start)
(rule (f0 A B C D E F G H) (f12 A B 0 B E F G H) :guard (>= A (+ B 1)))
(rule
  (f12 A B C D E F G H)
  (f12 A B C D (+ E 1) J I H)
  :guard
  (and (>= A E) (>= I J)))
(rule
  (f12 A B C D E F G H)
  (f12 A B J E (+ E 1) I K H)
  :guard
  (and (>= A E) (>= I (+ 1 K))))
(rule (f22 A B C D E F G H) (f22 A B C D (+ E 1) F G J) :guard (>= A E))
(rule (f29 A B C D E F G H) (f29 A B C D (+ E 1) F G J) :guard (>= A E))
(rule (f35 A B C D E F G H) (f37 A B C D E F G H) :guard (>= 0 (+ C 1)))
(rule (f35 A B C D E F G H) (f37 A B C D E F G H) :guard (>= C 1))
(rule
  (f37 A B C D E F G H)
  (f43 A B C D E F G J)
  :guard
  (exists ((I Int)) (and (>= A D) (>= 0 (+ I 1)))))
(rule
  (f37 A B C D E F G H)
  (f43 A B C D E F G J)
  :guard
  (exists ((I Int)) (and (>= A D) (>= I 1))))
(rule (f43 A B C D E F G H) (f43 A B C D (+ E 1) F G H) :guard (>= A E))
(rule (f48 A B C D E F G H) (f48 A B C D (+ E 1) F G H) :guard (>= A E))
(rule (f37 A B C D E F G H) (f37 A B C (+ D 1) E F G 0) :guard (>= A D))
(rule (f35 A B C D E F G H) (f0 A (+ B 1) 0 D E F G H) :guard (= C 0))
(rule
  (f48 A B C D E F G H)
  (f37 A B C (+ D 1) E F G H)
  :guard
  (>= E (+ 1 A)))
(rule (f43 A B C D E F G H) (f48 A B C D E F G H) :guard (>= E (+ 1 A)))
(rule
  (f37 A B C D E F G H)
  (f0 A (+ B 1) C D E F G H)
  :guard
  (>= D (+ 1 A)))
(rule (f29 A B C D E F G H) (f35 A B C D E F G H) :guard (>= E (+ 1 A)))
(rule (f22 A B C D E F G H) (f29 A B C D E F G H) :guard (>= E (+ 1 A)))
(rule
  (f12 A B C D E F G H)
  (f35 A B C B E F G H)
  :guard
  (and (>= E (+ 1 A)) (= B D)))
(rule
  (f12 A B C D E F G H)
  (f22 A B C D E F G H)
  :guard
  (and (>= B (+ D 1)) (>= E (+ 1 A))))
(rule
  (f12 A B C D E F G H)
  (f22 A B C D E F G H)
  :guard
  (and (>= D (+ 1 B)) (>= E (+ 1 A))))
(rule (f0 A B C D E F G H) (f58 A B C D E F G H) :guard (>= B A))
(rule (start A B C D E F G H) (f0 A B C D E F G H))
