(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f16 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f25 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f50 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f73 (-> Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f25 A B C D E F G H I J) (f16 A B C D E F G H I J) :guard (>= 0 A))
(rule
  (f0 A B C D E F G H I J)
  (f16 A 1 0 1 N 0 M L K J)
  :guard
  (and
    (and (and (and (and (>= K 0) (>= L K)) (>= L 0)) (>= M L)) (>= N 0))
    (>= M 0))
  )

(rule
  (f16 A B C D E F G H I J)
  (f25 0 B C D E (+ F 1) G H I J)
  :guard
  (and (and (>= I 1) (>= 0 F)) (>= 0 E)))

(rule
  (f16 A B C D E F G H I J)
  (f25 N B C D E F G H I J)
  :guard
  (and (and (and (and (>= I 1) (>= F 2)) (>= 0 E)) (>= 1 N)) (>= N 0)))

(rule
  (f16 A B C D E F G H I J)
  (f25 1 B (+ C 1) D E F G H I J)
  :guard
  (and (and (and (>= I 1) (>= 0 E)) (>= 0 C)) (= F 1)))

(rule
  (f16 A B C D E F G H I J)
  (f25 0 B 0 (- D 1) E F G H I J)
  :guard
  (and (and (and (and (>= I 1) (>= 0 E)) (>= D 1)) (= F 1)) (= C 1)))

(rule
  (f16 A B C D E F G H I J)
  (f25 M (+ B 1) 0 (+ B 1) N 0 G H I J)
  :guard
  (and
    (and
      (and (and (and (and (>= I 1) (>= 0 E)) (>= M 0)) (>= 1 M)) (>= C 2))
      (>= N 0))
    (= F 1))
  )

(rule
  (f16 A B C D E F G H I J)
  (f25 M (+ B 1) 0 (+ B 1) N 0 G H I J)
  :guard
  (and
    (and
      (and
        (and (and (and (and (>= I 1) (>= 0 E)) (>= 0 D)) (>= M 0)) (>= 1 M))
        (>= N 0))
      (= F 1))
    (= C 1))
  )

(rule
  (f16 A B C D E F G H I J)
  (f25 N B C D (- E 1) F G H I J)
  :guard
  (and (and (and (>= I 1) (>= E 1)) (>= 1 N)) (>= N 0)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A B C D E (+ F 1) G H I 0)
  :guard
  (and (and (>= A 1) (>= 0 F)) (>= 0 E)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A B C D E F G H I N)
  :guard
  (and (and (and (and (>= A 1) (>= F 2)) (>= 0 E)) (>= 1 N)) (>= N 0)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A B (+ C 1) D E F G H I 1)
  :guard
  (and (and (and (>= A 1) (>= 0 E)) (>= 0 C)) (= F 1)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A B 0 (- D 1) E F G H I 0)
  :guard
  (and (and (and (and (>= A 1) (>= 0 E)) (>= D 1)) (= F 1)) (= C 1)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A (+ B 1) 0 (+ B 1) N 0 G H I M)
  :guard
  (and
    (and
      (and (and (and (and (>= A 1) (>= 0 E)) (>= M 0)) (>= 1 M)) (>= C 2))
      (>= N 0))
    (= F 1))
  )

(rule
  (f25 A B C D E F G H I J)
  (f50 A (+ B 1) 0 (+ B 1) N 0 G H I M)
  :guard
  (and
    (and
      (and
        (and (and (and (and (>= A 1) (>= 0 E)) (>= 0 D)) (>= M 0)) (>= 1 M))
        (>= N 0))
      (= F 1))
    (= C 1))
  )

(rule
  (f25 A B C D E F G H I J)
  (f50 A B C D (- E 1) F G H I N)
  :guard
  (and (and (and (>= A 1) (>= E 1)) (>= 1 N)) (>= N 0)))

(rule
  (f50 A B C D E F G H I J)
  (f16 A B C D E F G H I J)
  :guard
  (and (>= I H) (>= J 1)))

(rule
  (f50 A B C D E F G H I J)
  (f16 A B C D E F G H (+ I 1) J)
  :guard
  (and (>= H (+ I 1)) (>= J 1)))

(rule
  (f50 A B C D E F G H I J)
  (f16 A B C D E F G H (- I 1) J)
  :guard
  (>= 0 J))

(rule (f16 A B C D E F G H I J) (f73 A B C D E F G H I J) :guard (>= 0 I))
