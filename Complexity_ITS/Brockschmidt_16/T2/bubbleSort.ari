(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int))
(fun f10 (-> Int Int Int Int Int Int Int Int))
(fun f18 (-> Int Int Int Int Int Int Int Int))
(fun f21 (-> Int Int Int Int Int Int Int Int))
(fun f32 (-> Int Int Int Int Int Int Int Int))
(fun f41 (-> Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f0 A B C D E F G) (f10 H 0 C D E F G))
(rule (f10 A B C D E F G) (f10 A (+ B 1) C D E F G) :guard (>= C (+ B 1)))
(rule (f18 A B C D E F G) (f21 A B C D E 0 G) :guard (>= D (+ 2 E)))
(rule
  (f21 A B C D E F G)
  (f21 A B C D E (+ F 1) G)
  :guard
  (>= D (+ (+ E 2) F)))
(rule
  (f21 A B C D E F G)
  (f21 A B C D E (+ F 1) H)
  :guard
  (>= D (+ (+ E 2) F)))
(rule (f32 A B C D E F G) (f32 A B C D (+ E 1) F G) :guard (>= D (+ 2 E)))
(rule (f32 A B C D E F G) (f41 A B C D E F G) :guard (>= (+ E 1) D))
(rule
  (f21 A B C D E F G)
  (f18 A B C D (+ E 1) F G)
  :guard
  (>= (+ (+ F E) 1) D))
(rule (f18 A B C D E F G) (f32 A B C D 0 F G) :guard (>= (+ E 1) D))
(rule (f10 A B C D E F G) (f18 A B C C 0 F G) :guard (>= B C))
