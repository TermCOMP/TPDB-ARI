(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int))
(fun f1 (-> Int Int Int Int Int))
(entrypoint f0)
(rule
  (f0 A B C D)
  (f1 A B 2 D)
  :guard
  (and (and (and (>= A 0) (>= 3 A)) (>= 3 B)) (>= B 0)))
(rule
  (f1 A B C D)
  (f1 A (+ B 1) C (+ B 1))
  :guard
  (and (>= (+ C A) (+ (* 2 B) 1)) (>= 0 2)))
(rule
  (f1 A B C D)
  (f1 A (+ B 1) C (+ B 1))
  :guard
  (>= (+ C A) (+ (* 2 B) 1)))
(rule
  (f1 A B C D)
  (f1 A (- B 1) C (- B 1))
  :guard
  (>= (* 2 B) (+ (+ 2 C) A)))
(rule
  (f1 A B C D)
  (f1 A (- B 1) C (- B 1))
  :guard
  (and (>= (* 2 B) (+ (+ 2 C) A)) (>= 0 2)))
(rule
  (f1 A B C D)
  (f1 A B C B)
  :guard
  (and (and (>= 0 1) (>= (* 2 B) (+ C A))) (>= (+ (+ C A) 1) (* 2 B))))
(rule
  (f1 A B C D)
  (f1 A B C B)
  :guard
  (and (and (>= 0 1) (>= (* 2 B) (+ C A))) (>= (+ (+ C A) 1) (* 2 B))))
