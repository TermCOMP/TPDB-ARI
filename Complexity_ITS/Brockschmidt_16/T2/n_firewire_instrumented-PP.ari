(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int))
(fun f11 (-> Int Int Int Int Int Int Int Int))
(fun f34 (-> Int Int Int Int Int Int Int Int))
(fun f38 (-> Int Int Int Int Int Int Int Int))
(fun f53 (-> Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f38 A B C D E F G) (f11 A A C D E F G) :guard (= A B))
(rule
  (f0 A B C D E F G)
  (f11 0 0 H 0 1 I I)
  :guard
  (and (>= H 0) (>= I 1)))

(rule
  (f11 A B C D E F G)
  (f34 0 H C (+ D 1) E F G)
  :guard
  (and (and (and (and (>= H 0) (>= 1 H)) (>= G 1)) (>= 0 C)) (>= 0 D)))

(rule
  (f11 A B C D E F G)
  (f34 1 H C (+ D 1) E F G)
  :guard
  (and (and (and (and (>= H 0) (>= 1 H)) (>= G 1)) (>= 0 C)) (= D 1)))

(rule
  (f11 A B C D E F G)
  (f34 0 H C (+ D 1) E F G)
  :guard
  (and (and (and (and (>= H 0) (>= 1 H)) (>= G 1)) (>= 0 C)) (= D 2)))

(rule
  (f11 A B C D E F G)
  (f34 I J H 0 (+ E 1) F G)
  :guard
  (and
    (and
      (and
        (and (and (and (and (>= J 0) (>= 1 J)) (>= I 0)) (>= 1 I)) (>= H 0))
        (>= G 1))
      (>= 0 C))
    (>= D 3))
  )

(rule
  (f11 A B C D E F G)
  (f34 H I (- C 1) D E F G)
  :guard
  (and
    (and (and (and (and (>= I 0) (>= 1 I)) (>= H 0)) (>= 1 H)) (>= C 1))
    (>= G 1))
  )

(rule
  (f34 A B C D E F G)
  (f38 A B C (+ D 1) E F G)
  :guard
  (and (and (>= 0 B) (>= 0 C)) (>= 0 D)))

(rule
  (f34 A B C D E F G)
  (f38 A B C (+ D 1) E F G)
  :guard
  (and (and (>= B 1) (>= 0 C)) (= D 1)))

(rule
  (f34 A B C D E F G)
  (f38 A B C (+ D 1) E F G)
  :guard
  (and (and (>= 0 B) (>= 0 C)) (= D 2)))

(rule
  (f34 A B C D E F G)
  (f38 A B H 0 (+ E 1) F G)
  :guard
  (and (and (>= H 0) (>= 0 C)) (>= D 3)))

(rule (f34 A B C D E F G) (f38 A B (- C 1) D E F G) :guard (>= C 1))
(rule (f38 A B C D E F G) (f11 A B C D E F (- G 1)) :guard (>= B (+ A 1)))
(rule (f38 A B C D E F G) (f11 A B C D E F (- G 1)) :guard (>= A (+ 1 B)))
(rule (f11 A B C D E F G) (f53 A B C D E F G) :guard (>= 0 G))
