(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f16 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f25 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f50 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun f74 (-> Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule
  (f0 A B C D E F G H I J)
  (f16 1 0 1 N 0 M L K I J)
  :guard
  (and
    (and (and (and (and (>= K 0) (>= L K)) (>= L 0)) (>= M L)) (>= N 0))
    (>= M 0))
  )

(rule
  (f16 A B C D E F G H I J)
  (f25 A B C D (+ E 1) F G H 0 J)
  :guard
  (and (and (>= H 1) (>= 0 E)) (>= 0 D)))

(rule
  (f16 A B C D E F G H I J)
  (f25 A B C D E F G H N J)
  :guard
  (and (and (and (and (>= H 1) (>= E 2)) (>= 0 D)) (>= 1 N)) (>= N 0)))

(rule
  (f16 A B C D E F G H I J)
  (f25 A (+ B 1) C D E F G H 1 J)
  :guard
  (and (and (and (>= H 1) (>= 0 D)) (>= 0 B)) (= E 1)))

(rule
  (f16 A B C D E F G H I J)
  (f25 A 0 (- C 1) D E F G H 0 J)
  :guard
  (and (and (and (and (>= H 1) (>= 0 D)) (>= C 1)) (= E 1)) (= B 1)))

(rule
  (f16 A B C D E F G H I J)
  (f25 (+ A 1) 0 (+ A 1) N 0 F G H M J)
  :guard
  (and
    (and
      (and (and (and (and (>= H 1) (>= 0 D)) (>= M 0)) (>= 1 M)) (>= B 2))
      (>= N 0))
    (= E 1))
  )

(rule
  (f16 A B C D E F G H I J)
  (f25 (+ A 1) 0 (+ A 1) N 0 F G H M J)
  :guard
  (and
    (and
      (and
        (and (and (and (and (>= H 1) (>= 0 D)) (>= 0 C)) (>= M 0)) (>= 1 M))
        (>= N 0))
      (= E 1))
    (= B 1))
  )

(rule
  (f16 A B C D E F G H I J)
  (f25 A B C (- D 1) E F G H N J)
  :guard
  (and (and (and (>= H 1) (>= D 1)) (>= 1 N)) (>= N 0)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A B C D (+ E 1) F G H I 0)
  :guard
  (and (and (>= I 1) (>= 0 E)) (>= 0 D)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A B C D E F G H I N)
  :guard
  (and (and (and (and (>= I 1) (>= E 2)) (>= 0 D)) (>= 1 N)) (>= N 0)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A (+ B 1) C D E F G H I 1)
  :guard
  (and (and (and (>= I 1) (>= 0 D)) (>= 0 B)) (= E 1)))

(rule
  (f25 A B C D E F G H I J)
  (f50 A 0 (- C 1) D E F G H I 0)
  :guard
  (and (and (and (and (>= I 1) (>= 0 D)) (>= C 1)) (= E 1)) (= B 1)))

(rule
  (f25 A B C D E F G H I J)
  (f50 (+ A 1) 0 (+ A 1) N 0 F G H I M)
  :guard
  (and
    (and
      (and (and (and (and (>= I 1) (>= 0 D)) (>= M 0)) (>= 1 M)) (>= B 2))
      (>= N 0))
    (= E 1))
  )

(rule
  (f25 A B C D E F G H I J)
  (f50 (+ A 1) 0 (+ A 1) N 0 F G H I M)
  :guard
  (and
    (and
      (and
        (and (and (and (and (>= I 1) (>= 0 D)) (>= 0 C)) (>= M 0)) (>= 1 M))
        (>= N 0))
      (= E 1))
    (= B 1))
  )

(rule
  (f25 A B C D E F G H I J)
  (f50 A B C (- D 1) E F G H I N)
  :guard
  (and (and (and (>= I 1) (>= D 1)) (>= 1 N)) (>= N 0)))

(rule
  (f25 A B C D E F G H I J)
  (f16 A B C D E F G H I J)
  :guard
  (and (>= (+ F 1) A) (>= 0 I)))

(rule
  (f50 A B C D E F G H I J)
  (f16 A B C D E F G H I J)
  :guard
  (and (and (>= J 1) (>= (+ F 1) A)) (>= H G)))

(rule
  (f50 A B C D E F G H I J)
  (f16 A B C D E F G (+ H 1) I J)
  :guard
  (and (and (>= J 1) (>= (+ F 1) A)) (>= G (+ H 1))))

(rule
  (f50 A B C D E F G H I J)
  (f16 A B C D E F G (- H 1) I J)
  :guard
  (and (>= (+ F 1) A) (>= 0 J)))

(rule (f16 A B C D E F G H I J) (f74 A B C D E F G H I J) :guard (>= 0 H))
