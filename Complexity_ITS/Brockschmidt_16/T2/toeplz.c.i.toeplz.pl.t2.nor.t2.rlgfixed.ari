(format LCTRS)
(theory Ints)
(fun
  f1
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(fun
  f13
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(fun
  f2
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(fun
  f20
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(fun
  f31
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(fun
  f45
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(fun
  f60
  (->
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int
    Int)
  )

(entrypoint f2)
(rule
  (f2 A B C D E F G H I J K L M N O P Q R)
  (f1 1 B C D E F G H I J K L M N O P Q R)
  :guard
  (= A 1))

(rule
  (f2 A B C D E F G H I J K L M N O P Q R)
  (f13 A 1 C D E F G H I J K L M N O P Q R)
  :guard
  (>= 0 A))

(rule
  (f2 A B C D E F G H I J K L M N O P Q R)
  (f13 A 1 C D E F G H I J K L M N O P Q R)
  :guard
  (>= A 2))

(rule
  (f13 A B C D E F G H I J K L M N O P Q R)
  (f20 A B (+ B 1) S T 1 G H I J K L M N O P Q R)
  :guard
  (>= A B))

(rule
  (f20 A B C D E F G H I J K L M N O P Q R)
  (f20 A B C S T (+ F 1) G H I J K L M N O P Q R)
  :guard
  (>= B F))

(rule
  (f31 A B C D E F G H I J K L M N O P Q R)
  (f31 A B C D E (+ F 1) G H I J K L M N O P Q R)
  :guard
  (>= B F))

(rule
  (f45 A B C D E F G H I J K L M N O P Q R)
  (f45 A B C D E (+ F 1) S T U J K L M N O P Q R)
  :guard
  (>= B F))

(rule
  (f60 A B C D E F G H I J K L M N O P Q R)
  (f60 A B C D E (+ F 1) G H I J (- K 1) S T U V K Q R)
  :guard
  (>= J F))

(rule
  (f60 A B C D E F G H I J K L M N O P Q R)
  (f13 A (+ B 1) C D E F G H I J K L M N O P Q R)
  :guard
  (>= F (+ 1 J)))

(rule
  (f45 A B C D E F G H I J K L M N O P Q R)
  (f60 A B C D E 1 G H I S B L M N O P T U)
  :guard
  (>= F (+ 1 B)))

(rule
  (f31 A B C D E F G H I J K L M N O P Q R)
  (f1 A B A D E F G H I J K L M N O P Q R)
  :guard
  (and (>= F (+ 1 B)) (= A C)))

(rule
  (f31 A B C D E F G H I J K L M N O P Q R)
  (f45 A B C D E 1 S T U J K L M N O P Q R)
  :guard
  (and (>= A (+ C 1)) (>= F (+ 1 B))))

(rule
  (f31 A B C D E F G H I J K L M N O P Q R)
  (f45 A B C D E 1 S T U J K L M N O P Q R)
  :guard
  (and (>= C (+ 1 A)) (>= F (+ 1 B))))

(rule
  (f20 A B C D E F G H I J K L M N O P Q R)
  (f31 A B C D E 1 G H I J K L M N O P Q R)
  :guard
  (and (>= 0 (+ E 1)) (>= F (+ 1 B))))

(rule
  (f20 A B C D E F G H I J K L M N O P Q R)
  (f31 A B C D E 1 G H I J K L M N O P Q R)
  :guard
  (and (>= E 1) (>= F (+ 1 B))))

(rule
  (f20 A B C D E F G H I J K L M N O P Q R)
  (f31 A B C D 0 1 G H I J K L M N O P Q R)
  :guard
  (and (>= F (+ 1 B)) (= E 0)))

(rule
  (f13 A B C D E F G H I J K L M N O P Q R)
  (f1 A B C D E F G H I J K L M N O P Q R)
  :guard
  (>= B (+ 1 A)))

