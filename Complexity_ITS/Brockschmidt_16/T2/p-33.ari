(format LCTRS)
(theory Ints)
(fun f2 (-> Int Int Int))
(fun f3 (-> Int Int Int))
(fun f300 (-> Int Int Int))
(entrypoint f3)
(rule
  (f2 A B)
  (f2 (+ (- 1) D) B)
  :guard
  (exists ((C Int)) (and (>= 0 C) (>= 0 (+ A 1)))))

(rule
  (f2 A B)
  (f2 (+ 1 D) B)
  :guard
  (exists ((C Int)) (and (>= C 2) (>= 0 (+ A 1)))))

(rule
  (f2 A B)
  (f2 (+ (- 1) D) B)
  :guard
  (exists ((C Int)) (and (>= 0 (+ 2 C)) (>= A 1))))

(rule
  (f2 A B)
  (f2 (+ 1 D) B)
  :guard
  (exists ((C Int)) (and (>= C 0) (>= A 1))))

(rule (f3 A B) (f2 A B))
(rule (f2 A B) (f300 0 D) :guard (>= 0 (+ A 1)))
(rule (f2 A B) (f300 0 D) :guard (>= A 1))
(rule (f2 A B) (f300 A D) :guard (= A 0))
