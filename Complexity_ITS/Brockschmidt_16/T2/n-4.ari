(format LCTRS)
(theory Ints)
(fun f1 (-> Int Int Int Int Int Int))
(fun f2 (-> Int Int Int Int Int Int))
(fun f300 (-> Int Int Int Int Int Int))
(fun f4 (-> Int Int Int Int Int Int))
(fun f5 (-> Int Int Int Int Int Int))
(entrypoint f5)
(rule (f5 A B C D E) (f300 A B C D E))
(rule (f4 A B C D E) (f300 A B (+ 1 C) D E) :guard (>= A B))
(rule
  (f4 A B C D E)
  (f4 (+ 1 A) B C F E)
  :guard
  (and (>= F 1) (>= B (+ 1 A))))
(rule
  (f4 A B C D E)
  (f4 (+ 1 A) B C F E)
  :guard
  (and (>= 0 (+ F 1)) (>= B (+ 1 A))))
(rule (f4 A B C D E) (f2 A B C 0 E) :guard (>= B (+ 1 A)))
(rule
  (f2 A B C D E)
  (f4 (+ 1 A) B C F E)
  :guard
  (and (>= F 1) (>= B (+ 1 A))))
(rule
  (f2 A B C D E)
  (f4 (+ 1 A) B C F E)
  :guard
  (and (>= 0 (+ F 1)) (>= B (+ 1 A))))
(rule (f2 A B C D E) (f2 A B C 0 E) :guard (>= B (+ 1 A)))
(rule (f300 A B C D E) (f1 A B C D F) :guard (>= C A))
(rule
  (f300 A B C D E)
  (f300 A B (+ 1 C) D E)
  :guard
  (and (>= A (+ 1 C)) (>= A B)))
(rule
  (f300 A B C D E)
  (f4 (+ 1 A) B C F E)
  :guard
  (and (and (>= F 1) (>= A (+ 1 C))) (>= B (+ 1 A))))
(rule
  (f300 A B C D E)
  (f4 (+ 1 A) B C F E)
  :guard
  (and (and (>= 0 (+ F 1)) (>= A (+ 1 C))) (>= B (+ 1 A))))
(rule
  (f300 A B C D E)
  (f2 A B C 0 E)
  :guard
  (and (>= A (+ 1 C)) (>= B (+ 1 A))))
