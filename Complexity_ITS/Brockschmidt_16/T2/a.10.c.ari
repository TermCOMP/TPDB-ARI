(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f3 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f4 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun f8 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f0 A B C D E F G H I J K L) (f3 A B C D E F G H I J K L))
(rule (f0 A B C D E F G H I J K L) (f4 A B C D E F G H I J K L))
(rule (f0 A B C D E F G H I J K L) (f8 A B C D E F G H I J K L))
(rule
  (f3 A B C D E F G H I J K L)
  (f4 A B D D F F A B I J K L)
  :guard
  (>= A (+ B 1)))
(rule
  (f3 A B C D E F G H I J K L)
  (f4 A B D D F F A B I J K L)
  :guard
  (>= B (+ A 1)))
(rule (f0 A B C D E F G H I J K L) (f3 F D D D F F A B I J K L))
(rule (f0 A B C D E F G H I J K L) (f3 F D D D F F M N M N K L))
(rule (f0 A B C D E F G H I J K L) (f8 O P D M F N A B M N O P))
(rule
  (f3 A B C D E F G H I J K L)
  (f8 O P D M F N A A M N O P)
  :guard
  (= A B))
(rule (f0 A B C D E F G H I J K L) (f3 (+ A 1) B D D F F A B I J K L))
(rule
  (f4 A B C D E F G H I J K L)
  (f3 (+ A 1) B D D F F A B I J K L)
  :guard
  (>= B (+ A 1)))
(rule (f0 A B C D E F G H I J K L) (f3 A (+ B 1) D D F F A B I J K L))
(rule
  (f4 A B C D E F G H I J K L)
  (f3 A (+ B 1) D D F F A B I J K L)
  :guard
  (>= A B))
