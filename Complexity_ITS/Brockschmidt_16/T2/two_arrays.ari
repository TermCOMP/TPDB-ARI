(format LCTRS)
(theory Ints)
(fun f0 (-> Int Int Int Int Int Int Int Int))
(fun f15 (-> Int Int Int Int Int Int Int Int))
(fun f25 (-> Int Int Int Int Int Int Int Int))
(fun f33 (-> Int Int Int Int Int Int Int Int))
(fun f42 (-> Int Int Int Int Int Int Int Int))
(fun f52 (-> Int Int Int Int Int Int Int Int))
(fun f60 (-> Int Int Int Int Int Int Int Int))
(fun f69 (-> Int Int Int Int Int Int Int Int))
(entrypoint f0)
(rule (f0 A B C D E F G) (f15 0 H I 0 E F G))
(rule (f15 A B C D E F G) (f15 A B C (+ D 1) E F G) :guard (>= 49 D))
(rule (f25 A B C D E F G) (f25 A B C D (+ E 1) F G) :guard (>= 49 E))
(rule (f33 A B C D E F G) (f33 (+ A 1) B C D E F G) :guard (>= 49 A))
(rule (f42 A B C D E F G) (f42 A B C D E (+ F 1) G) :guard (>= 49 F))
(rule (f52 A B C D E F G) (f52 A B C D E F (+ G 1)) :guard (>= 49 G))
(rule (f60 A B C D E F G) (f60 (+ A 1) B C D E F G) :guard (>= 49 A))
(rule (f60 A B C D E F G) (f69 A B C D E F G) :guard (>= A 50))
(rule (f52 A B C D E F G) (f60 0 B C D E F G) :guard (>= G 50))
(rule (f42 A B C D E F G) (f52 A B C D E F 0) :guard (>= F 50))
(rule (f33 A B C D E F G) (f42 A B C D E 0 G) :guard (>= A 50))
(rule (f25 A B C D E F G) (f33 0 B C D E F G) :guard (>= E 50))
(rule (f15 A B C D E F G) (f25 A B C D 0 F G) :guard (>= D 50))
