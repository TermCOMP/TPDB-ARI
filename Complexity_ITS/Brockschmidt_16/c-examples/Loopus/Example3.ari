(format LCTRS)
(theory Ints)
(fun evalfbb1in (-> Int Int Int))
(fun evalfbb2in (-> Int Int Int))
(fun evalfbb3in (-> Int Int Int))
(fun evalfbbin (-> Int Int Int))
(fun evalfentryin (-> Int Int Int))
(fun evalfreturnin (-> Int Int Int))
(fun evalfstart (-> Int Int Int))
(fun evalfstop (-> Int Int Int))
(entrypoint evalfstart)
(rule (evalfstart A B) (evalfentryin A B))
(rule (evalfentryin A B) (evalfbb3in B A))
(rule (evalfbb3in A B) (evalfbbin A B) :guard (and (>= B 1) (>= 254 B)))
(rule (evalfbb3in A B) (evalfreturnin A B) :guard (>= 0 B))
(rule (evalfbb3in A B) (evalfreturnin A B) :guard (>= B 255))
(rule (evalfbbin A B) (evalfbb1in A B) :guard (>= 0 (+ A 1)))
(rule (evalfbbin A B) (evalfbb1in A B) :guard (>= A 1))
(rule (evalfbbin A B) (evalfbb2in A B) :guard (= A 0))
(rule (evalfbb1in A B) (evalfbb3in A (+ B 1)))
(rule (evalfbb2in A B) (evalfbb3in A (- B 1)))
(rule (evalfreturnin A B) (evalfstop A B))
