(format LCTRS)
(theory Ints)
(fun evalfbb1in (-> Int Int Int Int Int))
(fun evalfbb2in (-> Int Int Int Int Int))
(fun evalfbb3in (-> Int Int Int Int Int))
(fun evalfbb4in (-> Int Int Int Int Int))
(fun evalfentryin (-> Int Int Int Int Int))
(fun evalfreturnin (-> Int Int Int Int Int))
(fun evalfstart (-> Int Int Int Int Int))
(fun evalfstop (-> Int Int Int Int Int))
(entrypoint evalfstart)
(rule (evalfstart A B C D) (evalfentryin A B C D))
(rule (evalfentryin A B C D) (evalfbb4in 1 B C D))
(rule (evalfbb4in A B C D) (evalfbb2in A B 1 D) :guard (>= B A))
(rule (evalfbb4in A B C D) (evalfreturnin A B C D) :guard (>= A (+ B 1)))
(rule (evalfbb2in A B C D) (evalfbb1in A B C D) :guard (>= D C))
(rule (evalfbb2in A B C D) (evalfbb3in A B C D) :guard (>= C (+ D 1)))
(rule (evalfbb1in A B C D) (evalfbb2in A B (+ C 1) D))
(rule (evalfbb3in A B C D) (evalfbb4in (+ A 1) B C D))
(rule (evalfreturnin A B C D) (evalfstop A B C D))
