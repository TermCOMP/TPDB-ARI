(format LCTRS)
(theory Ints)
(fun evalDis1bb1in (-> Int Int Int Int Int))
(fun evalDis1bb2in (-> Int Int Int Int Int))
(fun evalDis1bb3in (-> Int Int Int Int Int))
(fun evalDis1bbin (-> Int Int Int Int Int))
(fun evalDis1entryin (-> Int Int Int Int Int))
(fun evalDis1returnin (-> Int Int Int Int Int))
(fun evalDis1start (-> Int Int Int Int Int))
(fun evalDis1stop (-> Int Int Int Int Int))
(entrypoint evalDis1start)
(rule (evalDis1start A B C D) (evalDis1entryin A B C D))
(rule (evalDis1entryin A B C D) (evalDis1bb3in B A D C))
(rule (evalDis1bb3in A B C D) (evalDis1bbin A B C D) :guard (>= A (+ B 1)))
(rule (evalDis1bb3in A B C D) (evalDis1returnin A B C D) :guard (>= B A))
(rule (evalDis1bbin A B C D) (evalDis1bb1in A B C D) :guard (>= C (+ D 1)))
(rule (evalDis1bbin A B C D) (evalDis1bb2in A B C D) :guard (>= D C))
(rule (evalDis1bb1in A B C D) (evalDis1bb3in A B C (+ D 1)))
(rule (evalDis1bb2in A B C D) (evalDis1bb3in A (+ B 1) C D))
(rule (evalDis1returnin A B C D) (evalDis1stop A B C D))
