(format LCTRS)
(theory Ints)
(fun evalSimpleSinglebb3in (-> Int Int Int))
(fun evalSimpleSinglebbin (-> Int Int Int))
(fun evalSimpleSingleentryin (-> Int Int Int))
(fun evalSimpleSinglereturnin (-> Int Int Int))
(fun evalSimpleSinglestart (-> Int Int Int))
(fun evalSimpleSinglestop (-> Int Int Int))
(entrypoint evalSimpleSinglestart)
(rule (evalSimpleSinglestart A B) (evalSimpleSingleentryin A B))
(rule (evalSimpleSingleentryin A B) (evalSimpleSinglebb3in 0 B))
(rule
  (evalSimpleSinglebb3in A B)
  (evalSimpleSinglebbin A B)
  :guard
  (>= B (+ A 1)))
(rule
  (evalSimpleSinglebb3in A B)
  (evalSimpleSinglereturnin A B)
  :guard
  (>= A B))
(rule (evalSimpleSinglebbin A B) (evalSimpleSinglebb3in (+ A 1) B))
(rule (evalSimpleSinglereturnin A B) (evalSimpleSinglestop A B))
