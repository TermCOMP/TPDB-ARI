(format LCTRS)
(theory Ints)
(fun evalperfectbb1in (-> Int Int Int Int Int))
(fun evalperfectbb3in (-> Int Int Int Int Int))
(fun evalperfectbb4in (-> Int Int Int Int Int))
(fun evalperfectbb5in (-> Int Int Int Int Int))
(fun evalperfectbb8in (-> Int Int Int Int Int))
(fun evalperfectbb9in (-> Int Int Int Int Int))
(fun evalperfectentryin (-> Int Int Int Int Int))
(fun evalperfectreturnin (-> Int Int Int Int Int))
(fun evalperfectstart (-> Int Int Int Int Int))
(fun evalperfectstop (-> Int Int Int Int Int))
(entrypoint evalperfectstart)
(rule (evalperfectstart A B C D) (evalperfectentryin A B C D))
(rule
  (evalperfectentryin A B C D)
  (evalperfectreturnin A B C D)
  :guard
  (>= 1 A))

(rule
  (evalperfectentryin A B C D)
  (evalperfectbb1in A B C D)
  :guard
  (>= A 2))

(rule (evalperfectbb1in A B C D) (evalperfectbb8in A A (- A 1) D))
(rule (evalperfectbb8in A B C D) (evalperfectbb4in A B C A) :guard (>= C 1))
(rule (evalperfectbb8in A B C D) (evalperfectbb9in B B C D) :guard (>= 0 C))
(rule (evalperfectbb4in A B C D) (evalperfectbb3in A B C D) :guard (>= D C))
(rule
  (evalperfectbb4in A B C D)
  (evalperfectbb5in A B C D)
  :guard
  (>= C (+ D 1)))

(rule (evalperfectbb3in A B C D) (evalperfectbb4in A B C (- D C)))
(rule
  (evalperfectbb5in A B C D)
  (evalperfectbb8in A (- B C) (- C 1) D)
  :guard
  (= D 0))

(rule
  (evalperfectbb5in A B C D)
  (evalperfectbb8in A B (- C 1) D)
  :guard
  (>= 0 (+ D 1)))

(rule
  (evalperfectbb5in A B C D)
  (evalperfectbb8in A B (- C 1) D)
  :guard
  (>= D 1))

(rule
  (evalperfectbb9in A B C D)
  (evalperfectreturnin A B C D)
  :guard
  (>= 0 (+ A 1)))

(rule
  (evalperfectbb9in A B C D)
  (evalperfectreturnin A B C D)
  :guard
  (>= A 1))

(rule
  (evalperfectbb9in A B C D)
  (evalperfectreturnin A B C D)
  :guard
  (= A 0))

(rule (evalperfectreturnin A B C D) (evalperfectstop A B C D))
