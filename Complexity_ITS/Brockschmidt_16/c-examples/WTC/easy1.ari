(format LCTRS)
(theory Ints)
(fun evaleasy1bb1in (-> Int Int Int))
(fun evaleasy1bb2in (-> Int Int Int))
(fun evaleasy1bb3in (-> Int Int Int))
(fun evaleasy1bbin (-> Int Int Int))
(fun evaleasy1entryin (-> Int Int Int))
(fun evaleasy1returnin (-> Int Int Int))
(fun evaleasy1start (-> Int Int Int))
(fun evaleasy1stop (-> Int Int Int))
(entrypoint evaleasy1start)
(rule (evaleasy1start A B) (evaleasy1entryin A B))
(rule (evaleasy1entryin A B) (evaleasy1bb3in 0 B))
(rule (evaleasy1bb3in A B) (evaleasy1bbin A B) :guard (>= 39 A))
(rule (evaleasy1bb3in A B) (evaleasy1returnin A B) :guard (>= A 40))
(rule (evaleasy1bbin A B) (evaleasy1bb1in A B) :guard (= B 0))
(rule (evaleasy1bbin A B) (evaleasy1bb2in A B) :guard (>= 0 (+ B 1)))
(rule (evaleasy1bbin A B) (evaleasy1bb2in A B) :guard (>= B 1))
(rule (evaleasy1bb1in A B) (evaleasy1bb3in (+ A 1) B))
(rule (evaleasy1bb2in A B) (evaleasy1bb3in (+ A 2) B))
(rule (evaleasy1returnin A B) (evaleasy1stop A B))
