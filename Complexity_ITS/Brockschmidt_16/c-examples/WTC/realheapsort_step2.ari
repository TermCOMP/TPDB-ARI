(format LCTRS)
(theory Ints)
(fun evalrealheapsortstep2bb10in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb11in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb1in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb2in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb3in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb4in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb5in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb6in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb7in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bb9in (-> Int Int Int Int Int))
(fun evalrealheapsortstep2bbin (-> Int Int Int Int Int))
(fun evalrealheapsortstep2entryin (-> Int Int Int Int Int))
(fun evalrealheapsortstep2returnin (-> Int Int Int Int Int))
(fun evalrealheapsortstep2start (-> Int Int Int Int Int))
(fun evalrealheapsortstep2stop (-> Int Int Int Int Int))
(entrypoint evalrealheapsortstep2start)
(rule
  (evalrealheapsortstep2start A B C D)
  (evalrealheapsortstep2entryin A B C D))
(rule
  (evalrealheapsortstep2entryin A B C D)
  (evalrealheapsortstep2bbin A B C D)
  :guard
  (>= A 3))
(rule
  (evalrealheapsortstep2entryin A B C D)
  (evalrealheapsortstep2returnin A B C D)
  :guard
  (>= 2 A))
(rule
  (evalrealheapsortstep2bbin A B C D)
  (evalrealheapsortstep2bb11in A 0 C D))
(rule
  (evalrealheapsortstep2bb11in A B C D)
  (evalrealheapsortstep2bb1in A B C D)
  :guard
  (>= A (+ 2 B)))
(rule
  (evalrealheapsortstep2bb11in A B C D)
  (evalrealheapsortstep2returnin A B C D)
  :guard
  (>= (+ B 1) A))
(rule
  (evalrealheapsortstep2bb1in A B C D)
  (evalrealheapsortstep2bb9in A B 0 D))
(rule
  (evalrealheapsortstep2bb9in A B C D)
  (evalrealheapsortstep2bb2in A B C D)
  :guard
  (>= A (+ (+ B 3) (* 2 C))))
(rule
  (evalrealheapsortstep2bb9in A B C D)
  (evalrealheapsortstep2bb10in A B C D)
  :guard
  (>= (+ (+ (* 2 C) 2) B) A))
(rule
  (evalrealheapsortstep2bb2in A B C D)
  (evalrealheapsortstep2bb4in A B C D)
  :guard
  (= A (+ (+ (* 2 C) 3) B)))
(rule
  (evalrealheapsortstep2bb2in A B C D)
  (evalrealheapsortstep2bb3in A B C D)
  :guard
  (>= A (+ (+ B 4) (* 2 C))))
(rule
  (evalrealheapsortstep2bb2in A B C D)
  (evalrealheapsortstep2bb3in A B C D)
  :guard
  (>= (+ (+ (* 2 C) 2) B) A))
(rule
  (evalrealheapsortstep2bb3in A B C D)
  (evalrealheapsortstep2bb4in A B C D))
(rule
  (evalrealheapsortstep2bb3in A B C D)
  (evalrealheapsortstep2bb5in A B C D))
(rule
  (evalrealheapsortstep2bb4in A B C D)
  (evalrealheapsortstep2bb6in A B C (+ (* 2 C) 1)))
(rule
  (evalrealheapsortstep2bb5in A B C D)
  (evalrealheapsortstep2bb6in A B C (+ (* 2 C) 2)))
(rule
  (evalrealheapsortstep2bb6in A B C D)
  (evalrealheapsortstep2bb7in A B C D))
(rule
  (evalrealheapsortstep2bb6in A B C D)
  (evalrealheapsortstep2bb9in A B A D))
(rule
  (evalrealheapsortstep2bb7in A B C D)
  (evalrealheapsortstep2bb9in A B D D))
(rule
  (evalrealheapsortstep2bb10in A B C D)
  (evalrealheapsortstep2bb11in A (+ B 1) C D))
(rule
  (evalrealheapsortstep2returnin A B C D)
  (evalrealheapsortstep2stop A B C D))
