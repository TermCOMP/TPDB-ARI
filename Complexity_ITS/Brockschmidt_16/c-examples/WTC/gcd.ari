(format LCTRS)
(theory Ints)
(fun evalgcdbb4in (-> Int Int Int))
(fun evalgcdbb5in (-> Int Int Int))
(fun evalgcdbb6in (-> Int Int Int))
(fun evalgcdbb7in (-> Int Int Int))
(fun evalgcdentryin (-> Int Int Int))
(fun evalgcdreturnin (-> Int Int Int))
(fun evalgcdstart (-> Int Int Int))
(fun evalgcdstop (-> Int Int Int))
(entrypoint evalgcdstart)
(rule (evalgcdstart A B) (evalgcdentryin A B))
(rule (evalgcdentryin A B) (evalgcdreturnin A B) :guard (>= 0 A))
(rule (evalgcdentryin A B) (evalgcdreturnin A B) :guard (>= 0 B))
(rule
  (evalgcdentryin A B)
  (evalgcdbb7in B A)
  :guard
  (and (>= A 1) (>= B 1)))

(rule (evalgcdbb7in A B) (evalgcdbb4in A B) :guard (>= A (+ B 1)))
(rule (evalgcdbb7in A B) (evalgcdbb4in A B) :guard (>= B (+ A 1)))
(rule (evalgcdbb7in A B) (evalgcdreturnin A B) :guard (= B A))
(rule (evalgcdbb4in A B) (evalgcdbb5in A B) :guard (>= A (+ B 1)))
(rule (evalgcdbb4in A B) (evalgcdbb6in A B) :guard (>= B A))
(rule (evalgcdbb5in A B) (evalgcdbb7in (- A B) B))
(rule (evalgcdbb6in A B) (evalgcdbb7in A (- B A)))
(rule (evalgcdreturnin A B) (evalgcdstop A B))
