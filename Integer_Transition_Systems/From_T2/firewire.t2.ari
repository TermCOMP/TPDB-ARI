(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int))
(entrypoint l16)
(rule
(l0 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l1
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= buffer^0 buffer^post) (= c1^0 c1^post)) (= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l2 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l0
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= yy^post 1) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= z^0 z^post))
)

(rule
(l3 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l4
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= xx^post 1) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l4 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l2
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 c2^0)) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l4 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l2
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 c2^0) 0) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l4 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l0
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 c2^0) 0) (<= 0 (+ 0 c2^0))) (= yy^post 0))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= z^0 z^post))
)

(rule
(l5 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l6
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= z^post (+ -1 z^0)) (= c1^post c1^post)) (= c2^post c2^post))
(= buffer^0 buffer^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
)

(rule
(l7 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l6
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= z^post z^post) (<= 1 (+ 0 z^post)))
(= seqlen^post (+ 1 seqlen^0)))
(= it^post (+ 0 seqlen^post)))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= pattern^0 pattern^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
)

(rule
(l8 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l7
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 pattern^0) 3) (= pattern^post (+ 1 pattern^0)))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l8 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l7
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 3 (+ 0 pattern^0)) (= pattern^post 0))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l6 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l3
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 c1^0)) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l6 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l3
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 c1^0) 0) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l6 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l4
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 c1^0) 0) (<= 0 (+ 0 c1^0))) (= xx^post 0))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l9 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l0
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= pattern^post 0) (= seqlen^post 1))
(= it^post (+ 0 seqlen^post)))
(= xx^post 0))
(= yy^post 0))
(= z^post z^post))
(<= 1 (+ 0 z^post)))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
)

(rule
(l10 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l6
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= c1^post (+ 0 buffer^0)) (= buffer^0 buffer^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l11 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l10
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 buffer^0) 2) (= c2^post 0)) (= buffer^0 buffer^post))
(= c1^0 c1^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l11 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l10
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 3 (+ 0 buffer^0)) (= c2^post 1))
(= buffer^post (+ -2 buffer^0)))
(= c1^0 c1^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l12 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l8
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 it^0) 0) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l12 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l11
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 it^0)) (= it^post (+ -1 it^0)))
(= buffer^post (+ 0 pattern^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l13 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l14
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= buffer^0 buffer^post) (= c1^0 c1^post)) (= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l15 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l5
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l15 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l5
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 z^0) 0) (= buffer^0 buffer^post)) (= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l15 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l12
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (<= 0 (+ 0 z^0))) (= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l1 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l13
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 yy^0) (+ 0 xx^0)) (= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l1 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l13
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 xx^0) (+ 0 yy^0)) (= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l1 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l15
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 xx^0) (+ 0 yy^0)) (<= (+ 0 yy^0) (+ 0 xx^0)))
(= buffer^0 buffer^post))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

(rule
(l16 buffer^0 c1^0 c2^0 it^0 pattern^0 seqlen^0 xx^0 yy^0 z^0)
(l9
buffer^post
c1^post
c2^post
it^post
pattern^post
seqlen^post
xx^post
yy^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= buffer^0 buffer^post) (= c1^0 c1^post)) (= c2^0 c2^post))
(= it^0 it^post))
(= pattern^0 pattern^post))
(= seqlen^0 seqlen^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)

