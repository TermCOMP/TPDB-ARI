(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int))
(entrypoint l11)
(rule
(l0
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l1
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 x_14^0)) (= b_16^post 1))
(= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l2
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l4
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __disjvr_0^post __disjvr_0^0) (= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l4
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l3
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 b_16^0)) (<= (+ 0 b_16^0) 1))
(= x_14^post (+ -1 x_14^0)))
(= b_16^post 0))
(= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)
(rule
(l1
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l5
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 0 (+ 0 x_14^0)) (<= (+ 0 x_14^0) 0))
(= rt_11^post (+ 0 st_15^0)))
(= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l1
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l6
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __disjvr_1^post __disjvr_1^0) (= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l6
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l3
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 b_16^0)) (<= (+ 0 b_16^0) 1))
(= x_14^post (+ -1 x_14^0)))
(= b_16^post 0))
(= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)
(rule
(l7
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l5
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 0 (+ 0 x_14^0)) (<= (+ 0 x_14^0) 0))
(= rt_11^post (+ 0 st_15^0)))
(= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l7
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l8
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __disjvr_2^post __disjvr_2^0) (= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l8
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l9
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __disjvr_3^post __disjvr_3^0) (= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
(rule
(l9
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l1
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(exists
((x_14^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and (= x_14^1 (+ 1 x_14^0)) (= b_16^post 1))
(= x_14^post (+ 0 (* -1 x_14^1))))
(= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)
)
(rule
(l3
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l7
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= x_14^post (+ 0 (* -1 x_14^0))) (= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)
(rule
(l10
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l7
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= x_14^post (+ 0 (* -1 x_14^0))) (= __disjvr_0^0 __disjvr_0^post))
(= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)
(rule
(l11
__disjvr_0^0
__disjvr_1^0
__disjvr_2^0
__disjvr_3^0
b_16^0
rt_11^0
st_15^0
x_14^0)
(l0
__disjvr_0^post
__disjvr_1^post
__disjvr_2^post
__disjvr_3^post
b_16^post
rt_11^post
st_15^post
x_14^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __disjvr_0^0 __disjvr_0^post) (= __disjvr_1^0 __disjvr_1^post))
(= __disjvr_2^0 __disjvr_2^post))
(= __disjvr_3^0 __disjvr_3^post))
(= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)
