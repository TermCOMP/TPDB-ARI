(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int))
(entrypoint l3)
(rule
(l0 __const_1000^0 __const_110^0 __const_3000^0 __const_4000^0 x^0 y^0)
(l1
__const_1000^post
__const_110^post
__const_3000^post
__const_4000^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 y^0) (+ 0 __const_4000^0))
(= x^post (+ (+ 0 __const_1000^0) x^0)))
(<= (+ 1 __const_110^0) (+ 0 x^post)))
(= __const_1000^0 __const_1000^post))
(= __const_110^0 __const_110^post))
(= __const_3000^0 __const_3000^post))
(= __const_4000^0 __const_4000^post))
(= y^0 y^post))
)

(rule
(l1 __const_1000^0 __const_110^0 __const_3000^0 __const_4000^0 x^0 y^0)
(l0
__const_1000^post
__const_110^post
__const_3000^post
__const_4000^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and (= __const_1000^0 __const_1000^post) (= __const_110^0 __const_110^post))
(= __const_3000^0 __const_3000^post))
(= __const_4000^0 __const_4000^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l2 __const_1000^0 __const_110^0 __const_3000^0 __const_4000^0 x^0 y^0)
(l0
__const_1000^post
__const_110^post
__const_3000^post
__const_4000^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and (= y^post (+ 0 __const_3000^0)) (= __const_1000^0 __const_1000^post))
(= __const_110^0 __const_110^post))
(= __const_3000^0 __const_3000^post))
(= __const_4000^0 __const_4000^post))
(= x^0 x^post))
)

(rule
(l3 __const_1000^0 __const_110^0 __const_3000^0 __const_4000^0 x^0 y^0)
(l2
__const_1000^post
__const_110^post
__const_3000^post
__const_4000^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and (= __const_1000^0 __const_1000^post) (= __const_110^0 __const_110^post))
(= __const_3000^0 __const_3000^post))
(= __const_4000^0 __const_4000^post))
(= x^0 x^post))
(= y^0 y^post))
)

