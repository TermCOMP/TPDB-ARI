(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int))
(entrypoint l7)
(rule
(l0 c^0 ox^0 oy^0 x^0 y^0)
(l1 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and
(and
(and
(and (<= (+ 0 ox^0) (+ 0 x^0)) (<= (+ 0 oy^0) (+ 0 y^0)))
(= c^0 c^post))
(= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l0 c^0 ox^0 oy^0 x^0 y^0)
(l2 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and (and (= x^post (+ 0 x^0)) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= y^0 y^post))
)
(rule
(l3 c^0 ox^0 oy^0 x^0 y^0)
(l2 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and
(and (and (<= (+ 0 c^0) 0) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l3 c^0 ox^0 oy^0 x^0 y^0)
(l2 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and (and (= ox^post (+ 0 x^0)) (= oy^post (+ 0 y^0))) (= c^post 1))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l4 c^0 ox^0 oy^0 x^0 y^0)
(l3 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and
(and (and (<= (+ 0 c^0) 0) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l4 c^0 ox^0 oy^0 x^0 y^0)
(l0 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and
(and (and (<= 1 (+ 0 c^0)) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l5 c^0 ox^0 oy^0 x^0 y^0)
(l4 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and (and (= y^post (+ -1 y^0)) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
)
(rule
(l5 c^0 ox^0 oy^0 x^0 y^0)
(l4 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and (and (= x^post (+ -1 x^0)) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= y^0 y^post))
)
(rule
(l2 c^0 ox^0 oy^0 x^0 y^0)
(l5 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and
(and
(and (and (<= 1 (+ 0 x^0)) (<= 1 (+ 0 y^0))) (= c^0 c^post))
(= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l6 c^0 ox^0 oy^0 x^0 y^0)
(l2 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and
(and (and (<= (+ 0 c^0) 0) (= c^0 c^post)) (= ox^0 ox^post))
(= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l7 c^0 ox^0 oy^0 x^0 y^0)
(l6 c^post ox^post oy^post x^post y^post)
:guard
(and
(and
(and (and (= c^0 c^post) (= ox^0 ox^post)) (= oy^0 oy^post))
(= x^0 x^post))
(= y^0 y^post))
)
