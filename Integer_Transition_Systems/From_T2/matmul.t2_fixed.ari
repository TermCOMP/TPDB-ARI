(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int))
(fun l1 (-> Int Int Int Int))
(fun l10 (-> Int Int Int Int))
(fun l11 (-> Int Int Int Int))
(fun l12 (-> Int Int Int Int))
(fun l2 (-> Int Int Int Int))
(fun l3 (-> Int Int Int Int))
(fun l4 (-> Int Int Int Int))
(fun l5 (-> Int Int Int Int))
(fun l6 (-> Int Int Int Int))
(fun l7 (-> Int Int Int Int))
(fun l8 (-> Int Int Int Int))
(fun l9 (-> Int Int Int Int))
(entrypoint l12)
(rule
(l0 i4^0 j5^0 k6^0)
(l1 i4^post j5^post k6^post)
:guard
(and (and (= i4^0 i4^post) (= j5^0 j5^post)) (= k6^0 k6^post)))
(rule
(l2 i4^0 j5^0 k6^0)
(l3 i4^post j5^post k6^post)
:guard
(and (and (= i4^0 i4^post) (= j5^0 j5^post)) (= k6^0 k6^post)))
(rule
(l4 i4^0 j5^0 k6^0)
(l5 i4^post j5^post k6^post)
:guard
(and (and (= i4^0 i4^post) (= j5^0 j5^post)) (= k6^0 k6^post)))
(rule
(l6 i4^0 j5^0 k6^0)
(l7 i4^post j5^post k6^post)
:guard
(and (and (= i4^0 i4^post) (= j5^0 j5^post)) (= k6^0 k6^post)))
(rule
(l8 i4^0 j5^0 k6^0)
(l6 i4^post j5^post k6^post)
:guard
(and
(and (and (<= 6 (+ 0 k6^0)) (= j5^post (+ 1 j5^0))) (= i4^0 i4^post))
(= k6^0 k6^post))
)
(rule
(l8 i4^0 j5^0 k6^0)
(l9 i4^post j5^post k6^post)
:guard
(and
(and (and (<= (+ 0 k6^0) 5) (= k6^post (+ 1 k6^0))) (= i4^0 i4^post))
(= j5^0 j5^post))
)
(rule
(l7 i4^0 j5^0 k6^0)
(l4 i4^post j5^post k6^post)
:guard
(and
(and (and (<= 6 (+ 0 j5^0)) (= i4^post (+ 1 i4^0))) (= j5^0 j5^post))
(= k6^0 k6^post))
)
(rule
(l7 i4^0 j5^0 k6^0)
(l9 i4^post j5^post k6^post)
:guard
(and
(and (and (<= (+ 0 j5^0) 5) (= k6^post 1)) (= i4^0 i4^post))
(= j5^0 j5^post))
)
(rule
(l5 i4^0 j5^0 k6^0)
(l10 i4^post j5^post k6^post)
:guard
(and
(and (and (<= 6 (+ 0 i4^0)) (= i4^0 i4^post)) (= j5^0 j5^post))
(= k6^0 k6^post))
)
(rule
(l5 i4^0 j5^0 k6^0)
(l6 i4^post j5^post k6^post)
:guard
(and
(and (and (<= (+ 0 i4^0) 5) (= j5^post 1)) (= i4^0 i4^post))
(= k6^0 k6^post))
)
(rule
(l9 i4^0 j5^0 k6^0)
(l8 i4^post j5^post k6^post)
:guard
(and (and (= i4^0 i4^post) (= j5^0 j5^post)) (= k6^0 k6^post)))
(rule
(l3 i4^0 j5^0 k6^0)
(l0 i4^post j5^post k6^post)
:guard
(and
(and (and (<= 6 (+ 0 j5^0)) (= i4^post (+ 1 i4^0))) (= j5^0 j5^post))
(= k6^0 k6^post))
)
(rule
(l3 i4^0 j5^0 k6^0)
(l2 i4^post j5^post k6^post)
:guard
(and
(and (and (<= (+ 0 j5^0) 5) (= j5^post (+ 1 j5^0))) (= i4^0 i4^post))
(= k6^0 k6^post))
)
(rule
(l1 i4^0 j5^0 k6^0)
(l4 i4^post j5^post k6^post)
:guard
(and
(and (and (<= 6 (+ 0 i4^0)) (= i4^post 1)) (= j5^0 j5^post))
(= k6^0 k6^post))
)
(rule
(l1 i4^0 j5^0 k6^0)
(l2 i4^post j5^post k6^post)
:guard
(and
(and (and (<= (+ 0 i4^0) 5) (= j5^post 1)) (= i4^0 i4^post))
(= k6^0 k6^post))
)
(rule
(l11 i4^0 j5^0 k6^0)
(l0 i4^post j5^post k6^post)
:guard
(and (and (= i4^post 1) (= j5^0 j5^post)) (= k6^0 k6^post)))
(rule
(l12 i4^0 j5^0 k6^0)
(l11 i4^post j5^post k6^post)
:guard
(and (and (= i4^0 i4^post) (= j5^0 j5^post)) (= k6^0 k6^post)))
