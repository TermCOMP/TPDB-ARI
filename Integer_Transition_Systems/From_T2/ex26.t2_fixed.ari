(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int))
(entrypoint l12)
(rule
(l0 i^0 j^0 y4^0 y6^0 y8^0)
(l1 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^0 i^post) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l2 i^0 j^0 y4^0 y6^0 y8^0)
(l3 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and
(and (and (<= 100 (+ 0 i^0)) (= j^post 100)) (= i^0 i^post))
(= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l2 i^0 j^0 y4^0 y6^0 y8^0)
(l0 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and
(and (and (<= (+ 1 i^0) 100) (= y4^post (+ 0 i^0))) (= i^0 i^post))
(= j^0 j^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l4 i^0 j^0 y4^0 y6^0 y8^0)
(l3 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= j^post (+ 1 j^0)) (= i^0 i^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l5 i^0 j^0 y4^0 y6^0 y8^0)
(l2 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^0 i^post) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l6 i^0 j^0 y4^0 y6^0 y8^0)
(l4 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^0 i^post) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l7 i^0 j^0 y4^0 y6^0 y8^0)
(l8 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and
(and (and (<= 200 (+ 0 j^0)) (= i^0 i^post)) (= j^0 j^post))
(= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l7 i^0 j^0 y4^0 y6^0 y8^0)
(l6 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and
(and (and (<= (+ 1 j^0) 200) (= y8^post (+ 0 j^0))) (= i^0 i^post))
(= j^0 j^post))
(= y4^0 y4^post))
(= y6^0 y6^post))
)
(rule
(l3 i^0 j^0 y4^0 y6^0 y8^0)
(l7 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^0 i^post) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l9 i^0 j^0 y4^0 y6^0 y8^0)
(l5 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^post (+ 1 i^0)) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l10 i^0 j^0 y4^0 y6^0 y8^0)
(l9 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^0 i^post) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l1 i^0 j^0 y4^0 y6^0 y8^0)
(l10 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= y6^post (+ 0 i^0)) (= i^0 i^post)) (= j^0 j^post))
(= y4^0 y4^post))
(= y8^0 y8^post))
)
(rule
(l11 i^0 j^0 y4^0 y6^0 y8^0)
(l5 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^post 0) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
(rule
(l12 i^0 j^0 y4^0 y6^0 y8^0)
(l11 i^post j^post y4^post y6^post y8^post)
:guard
(and
(and
(and (and (= i^0 i^post) (= j^0 j^post)) (= y4^0 y4^post))
(= y6^0 y6^post))
(= y8^0 y8^post))
)
