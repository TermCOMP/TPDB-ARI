(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l17 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l18 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l19 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l20 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l21 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l22 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l23 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l24 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l25 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l26 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l27 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l28 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l28)
(rule
(l0
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l1
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l2
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l3
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l4
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l5
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l6
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l7
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= k_1^post (+ 1 k_1^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l8
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l6
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= 1 (+ 0 destflag^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l8
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l6
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 destflag^0) 0)
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l8
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l6
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 destflag^0) 0) (<= 0 (+ 0 destflag^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l9
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l6
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= 1 (+ 0 sourceflag^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l9
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l6
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 sourceflag^0) 0)
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l9
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l8
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 sourceflag^0) 0) (<= 0 (+ 0 sourceflag^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l10
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l11
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l12
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l13
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= j^post (+ 1 j^0)) (= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l14
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l12
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l14
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l12
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= destflag^post 0) (= ___lengthofvisited^0 ___lengthofvisited^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l14
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l12
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l15
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l9
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 0 nodecount^0) (+ 0 j^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l15
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l14
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 j^0) (+ 0 nodecount^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l16
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l17
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= j^post (+ 1 j^0)) (= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l7
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l18
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l19
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l16
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l19
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l16
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= sourceflag^post 1) (= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
)

(rule
(l19
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l16
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l20
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l13
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 nodecount^0) (+ 0 j^0)) (= destflag^post 1))
(= j^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l20
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l19
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 j^0) (+ 0 nodecount^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l21
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l22
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= h^post (+ 1 h^0)) (= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l23
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l21
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= min^post (+ 0 h^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l23
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l21
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l22
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l24
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l24
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l17
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 edgecount^0) (+ 0 h^0)) (= sourceflag^post 0))
(= j^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
)

(rule
(l24
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l23
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 h^0) (+ 0 edgecount^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l18
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l4
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 edgecount^0) (+ 0 k_1^0)) (= k^post (+ 1 k^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l18
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l22
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 k_1^0) (+ 0 edgecount^0)) (= h^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l11
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l7
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 edgecount^0) (+ 0 i^0)) (= k_1^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l11
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l10
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 edgecount^0)) (= i^post (+ 1 i^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l17
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l20
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l25
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l10
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= min^post 0) (= i^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l5
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l26
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 k^0) (+ -1 nodecount^0)) (<= (+ -1 nodecount^0) (+ 0 k^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l5
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l25
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 0 nodecount^0) (+ 0 k^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l5
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l25
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 1 k^0) (+ -1 nodecount^0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l3
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l4
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ -1 nodecount^0) (+ 0 i^0)) (= k^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l3
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l2
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ -1 nodecount^0)) (= i^post (+ 1 i^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l13
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l15
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l1
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l2
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 nodecount^0) (+ 0 i^0)) (= i^post 0))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l1
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l0
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 nodecount^0)) (= i^post (+ 1 i^0)))
(= ___lengthofvisited^0 ___lengthofvisited^post))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l27
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l0
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= ___lengthofvisited^post (+ 0 edgecount^0)) (= i^post 1))
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

(rule
(l28
___lengthofvisited^0
destflag^0
edgecount^0
h^0
i^0
j^0
k^0
k_1^0
min^0
nodecount^0
sourceflag^0)
(l27
___lengthofvisited^post
destflag^post
edgecount^post
h^post
i^post
j^post
k^post
k_1^post
min^post
nodecount^post
sourceflag^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(= ___lengthofvisited^0 ___lengthofvisited^post)
(= destflag^0 destflag^post))
(= edgecount^0 edgecount^post))
(= h^0 h^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= k_1^0 k_1^post))
(= min^0 min^post))
(= nodecount^0 nodecount^post))
(= sourceflag^0 sourceflag^post))
)

