(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int))
(fun l1 (-> Int Int Int Int))
(fun l2 (-> Int Int Int Int))
(fun l3 (-> Int Int Int Int))
(fun l4 (-> Int Int Int Int))
(fun l5 (-> Int Int Int Int))
(entrypoint l5)
(rule
(l0 nd^0 p^0 x^0)
(l1 nd^post p^post x^post)
:guard
(and
(and (and (<= (+ 0 nd^0) 0) (= p^post 2)) (= nd^0 nd^post))
(= x^0 x^post))
)
(rule
(l0 nd^0 p^0 x^0)
(l1 nd^post p^post x^post)
:guard
(and
(and (and (<= 1 (+ 0 nd^0)) (= p^post 1)) (= nd^0 nd^post))
(= x^0 x^post))
)
(rule
(l1 nd^0 p^0 x^0)
(l0 nd^post p^post x^post)
:guard
(and (and (= nd^post nd^post) (= p^0 p^post)) (= x^0 x^post)))
(rule
(l2 nd^0 p^0 x^0)
(l3 nd^post p^post x^post)
:guard
(and
(and (and (<= (+ 0 nd^0) 0) (= x^post (+ -2 x^0))) (= nd^0 nd^post))
(= p^0 p^post))
)
(rule
(l2 nd^0 p^0 x^0)
(l3 nd^post p^post x^post)
:guard
(and
(and (and (<= 1 (+ 0 nd^0)) (= x^post (+ -1 x^0))) (= nd^0 nd^post))
(= p^0 p^post))
)
(rule
(l3 nd^0 p^0 x^0)
(l1 nd^post p^post x^post)
:guard
(and
(and (and (<= (+ 0 x^0) 0) (= nd^0 nd^post)) (= p^0 p^post))
(= x^0 x^post))
)
(rule
(l3 nd^0 p^0 x^0)
(l2 nd^post p^post x^post)
:guard
(and
(and (and (<= 1 (+ 0 x^0)) (= nd^post nd^post)) (= p^0 p^post))
(= x^0 x^post))
)
(rule
(l4 nd^0 p^0 x^0)
(l3 nd^post p^post x^post)
:guard
(and (and (= p^post 0) (= nd^0 nd^post)) (= x^0 x^post)))
(rule
(l5 nd^0 p^0 x^0)
(l4 nd^post p^post x^post)
:guard
(and (and (= nd^0 nd^post) (= p^0 p^post)) (= x^0 x^post)))
