(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(fun l5 (-> Int Int Int))
(fun l6 (-> Int Int Int))
(fun l7 (-> Int Int Int))
(entrypoint l7)
(rule
(l0 __const_42^0 i1^0)
(l1 __const_42^post i1^post)
:guard
(and (= i1^post (+ 1 i1^0)) (= __const_42^0 __const_42^post)))

(rule
(l2 __const_42^0 i1^0)
(l0 __const_42^post i1^post)
:guard
(and (= __const_42^0 __const_42^post) (= i1^0 i1^post)))

(rule
(l3 __const_42^0 i1^0)
(l2 __const_42^post i1^post)
:guard
(and (= __const_42^0 __const_42^post) (= i1^0 i1^post)))

(rule
(l3 __const_42^0 i1^0)
(l0 __const_42^post i1^post)
:guard
(and (= __const_42^0 __const_42^post) (= i1^0 i1^post)))

(rule
(l3 __const_42^0 i1^0)
(l2 __const_42^post i1^post)
:guard
(and (= __const_42^0 __const_42^post) (= i1^0 i1^post)))

(rule
(l4 __const_42^0 i1^0)
(l5 __const_42^post i1^post)
:guard
(and
(and (<= (+ 0 __const_42^0) (+ 0 i1^0)) (= __const_42^0 __const_42^post))
(= i1^0 i1^post))
)

(rule
(l4 __const_42^0 i1^0)
(l3 __const_42^post i1^post)
:guard
(and
(and (<= (+ 1 i1^0) (+ 0 __const_42^0)) (= __const_42^0 __const_42^post))
(= i1^0 i1^post))
)

(rule
(l1 __const_42^0 i1^0)
(l4 __const_42^post i1^post)
:guard
(and (= __const_42^0 __const_42^post) (= i1^0 i1^post)))

(rule
(l6 __const_42^0 i1^0)
(l1 __const_42^post i1^post)
:guard
(and (= i1^post 0) (= __const_42^0 __const_42^post)))

(rule
(l7 __const_42^0 i1^0)
(l6 __const_42^post i1^post)
:guard
(and (= __const_42^0 __const_42^post) (= i1^0 i1^post)))

