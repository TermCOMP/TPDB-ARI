(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int))
(fun l1 (-> Int Int))
(fun l2 (-> Int Int))
(fun l3 (-> Int Int))
(entrypoint l3)
(rule
(l0 x^0)
(l1 x^post)
:guard
(exists
((x^1 Int) (x^2 Int) (x^3 Int))
(and
(and
(and (and (<= (+ 0 x^0) 0) (= x^1 (+ 0 x^0))) (= x^2 (+ 0 x^1)))
(= x^3 (+ 0 x^2)))
(= x^post (+ 0 x^3)))
)
)

(rule
(l0 x^0)
(l2 x^post)
:guard
(exists
((x^1 Int))
(and (and (<= 1 (+ 0 x^0)) (= x^1 (+ 0 x^0))) (= x^post (+ -1 x^1))))
)

(rule (l2 x^0) (l0 x^post) :guard (= x^post (+ 0 x^0)))
(rule (l3 x^0) (l2 x^post) :guard (= x^0 x^post))
