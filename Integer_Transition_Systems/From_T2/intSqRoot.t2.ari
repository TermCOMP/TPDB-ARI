(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int))
(entrypoint l5)
(rule
(l0 N^0 p^0 q^0 r^0)
(l1 N^post p^post q^post r^post)
:guard
(and
(and (and (= r^post (+ 0 p^0)) (= N^0 N^post)) (= p^0 p^post))
(= q^0 q^post))
)
(rule
(l0 N^0 p^0 q^0 r^0)
(l1 N^post p^post q^post r^post)
:guard
(and
(and (and (= q^post (+ 0 p^0)) (= N^0 N^post)) (= p^0 p^post))
(= r^0 r^post))
)
(rule
(l2 N^0 p^0 q^0 r^0)
(l3 N^post p^post q^post r^post)
:guard
(and
(and
(and (and (<= (+ 0 q^0) (+ 1 r^0)) (= N^0 N^post)) (= p^0 p^post))
(= q^0 q^post))
(= r^0 r^post))
)
(rule
(l2 N^0 p^0 q^0 r^0)
(l0 N^post p^post q^post r^post)
:guard
(and
(and
(and (and (<= (+ 2 r^0) (+ 0 q^0)) (= p^post p^post)) (= N^0 N^post))
(= q^0 q^post))
(= r^0 r^post))
)
(rule
(l1 N^0 p^0 q^0 r^0)
(l2 N^post p^post q^post r^post)
:guard
(and
(and (and (= N^0 N^post) (= p^0 p^post)) (= q^0 q^post))
(= r^0 r^post))
)
(rule
(l4 N^0 p^0 q^0 r^0)
(l1 N^post p^post q^post r^post)
:guard
(and
(and (and (= r^post 1) (= q^post (+ 0 N^0))) (= N^0 N^post))
(= p^0 p^post))
)
(rule
(l5 N^0 p^0 q^0 r^0)
(l4 N^post p^post q^post r^post)
:guard
(and
(and (and (= N^0 N^post) (= p^0 p^post)) (= q^0 q^post))
(= r^0 r^post))
)
