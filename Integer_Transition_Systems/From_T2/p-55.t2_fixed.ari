(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int))
(fun l1 (-> Int Int Int Int))
(fun l2 (-> Int Int Int Int))
(fun l3 (-> Int Int Int Int))
(fun l4 (-> Int Int Int Int))
(fun l5 (-> Int Int Int Int))
(fun l6 (-> Int Int Int Int))
(fun l7 (-> Int Int Int Int))
(entrypoint l7)
(rule
(l0 Result^0 x^0 y^0)
(l1 Result^post x^post y^post)
:guard
(and
(and
(and (<= (+ 0 (* -1 x^0)) 0) (= Result^post Result^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l0 Result^0 x^0 y^0)
(l3 Result^post x^post y^post)
:guard
(and
(and
(and (<= 0 (+ -1 (* -1 x^0))) (= Result^0 Result^post))
(= x^0 x^post))
(= y^0 y^post))
)
(rule
(l3 Result^0 x^0 y^0)
(l4 Result^post x^post y^post)
:guard
(and
(and (and (<= (+ 1 y^0) -1) (= Result^0 Result^post)) (= x^0 x^post))
(= y^0 y^post))
)
(rule
(l3 Result^0 x^0 y^0)
(l4 Result^post x^post y^post)
:guard
(and
(and (and (<= 0 (+ 0 y^0)) (= Result^0 Result^post)) (= x^0 x^post))
(= y^0 y^post))
)
(rule
(l4 Result^0 x^0 y^0)
(l2 Result^post x^post y^post)
:guard
(and
(and (= x^post (+ 1 x^0)) (= y^post (+ 1 y^0)))
(= Result^0 Result^post))
)
(rule
(l2 Result^0 x^0 y^0)
(l0 Result^post x^post y^post)
:guard
(and (and (= Result^0 Result^post) (= x^0 x^post)) (= y^0 y^post)))
(rule
(l0 Result^0 x^0 y^0)
(l5 Result^post x^post y^post)
:guard
(and
(and
(and
(and
(and (<= 0 (+ -1 (* -1 x^0))) (<= (+ 0 y^0) -1))
(<= -1 (+ 0 y^0)))
(= y^post (+ 1 y^0)))
(= x^post (+ -99 x^0)))
(= Result^0 Result^post))
)
(rule
(l5 Result^0 x^0 y^0)
(l0 Result^post x^post y^post)
:guard
(and (and (= Result^0 Result^post) (= x^0 x^post)) (= y^0 y^post)))
(rule
(l6 Result^0 x^0 y^0)
(l0 Result^post x^post y^post)
:guard
(and (and (= Result^0 Result^post) (= x^0 x^post)) (= y^0 y^post)))
(rule
(l7 Result^0 x^0 y^0)
(l6 Result^post x^post y^post)
:guard
(and (and (= Result^0 Result^post) (= x^0 x^post)) (= y^0 y^post)))
