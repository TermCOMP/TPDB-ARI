(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int))
(fun l17 (-> Int Int Int Int Int Int Int Int Int))
(fun l18 (-> Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int))
(entrypoint l18)
(rule
(l0 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l1
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 __const_100^0) (+ 0 i^0)) (= j^post (+ -2 i^0)))
(= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l0 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l2
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 __const_100^0)) (= i^post (+ 1 i^0)))
(= __const_100^0 __const_100^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l3 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l4
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l2 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l0
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l5 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l6
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l7 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l5
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= j10^post (+ 1 j10^0)) (= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j^0 j^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l8 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l7
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l8 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l5
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l8 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l7
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l9 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l3
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= ret_check12^post (+ 0 j10^0)) (= j^post (+ 0 ret_check12^post)))
(= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l9 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l8
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l10 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l11
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l12 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l6
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= j10^post (+ 0 j^0)) (= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j^0 j^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l13 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l12
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l13 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l3
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l13 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l12
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l14 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l10
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l15 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l14
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= j6^post (+ 1 j6^0)) (= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l6 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l9
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l16 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l15
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l16 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l14
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l16 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l15
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l11 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l13
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= ret_check8^post (+ 0 j6^0)) (= j^post (+ 0 ret_check8^post)))
(= tmp^post tmp^post))
(= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
)

(rule
(l11 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l16
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l1 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l10
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) 0) (= j6^post (+ 0 j^0)))
(= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l1 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l4
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= 0 (+ 0 i^0)) (= __const_100^0 __const_100^post))
(= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l17 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l2
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and (and (= i^post 0) (= __const_100^0 __const_100^post)) (= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

(rule
(l18 __const_100^0 i^0 j10^0 j6^0 j^0 ret_check12^0 ret_check8^0 tmp^0)
(l17
__const_100^post
i^post
j10^post
j6^post
j^post
ret_check12^post
ret_check8^post
tmp^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= __const_100^0 __const_100^post) (= i^0 i^post))
(= j^0 j^post))
(= j10^0 j10^post))
(= j6^0 j6^post))
(= ret_check12^0 ret_check12^post))
(= ret_check8^0 ret_check8^post))
(= tmp^0 tmp^post))
)

