(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(entrypoint l4)
(rule
(l0 i4^0 tmp^0)
(l1 i4^post tmp^post)
:guard
(and (and (<= 10 (+ 0 i4^0)) (= i4^0 i4^post)) (= tmp^0 tmp^post)))
(rule
(l0 i4^0 tmp^0)
(l2 i4^post tmp^post)
:guard
(and (and (<= (+ 1 i4^0) 10) (= i4^post (+ 1 i4^0))) (= tmp^0 tmp^post)))
(rule
(l2 i4^0 tmp^0)
(l0 i4^post tmp^post)
:guard
(and (= i4^0 i4^post) (= tmp^0 tmp^post)))
(rule
(l3 i4^0 tmp^0)
(l2 i4^post tmp^post)
:guard
(and (= tmp^post tmp^post) (= i4^post 0)))
(rule
(l4 i4^0 tmp^0)
(l3 i4^post tmp^post)
:guard
(and (= i4^0 i4^post) (= tmp^0 tmp^post)))
