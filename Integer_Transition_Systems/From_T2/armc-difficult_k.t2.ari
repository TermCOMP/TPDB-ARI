(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l3)
(rule
(l0 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l1
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(exists
((c1^1 Int)
(c1^2 Int)
(c1^3 Int)
(c1^4 Int)
(c2^1 Int)
(c2^2 Int)
(c2^3 Int)
(m^1 Int)
(m^2 Int)
(m^3 Int)
(pi^1 Int)
(pi^2 Int)
(pos^1 Int)
(wpos^1 Int)
(wpos^2 Int)
(wpos^3 Int)
(wpos^4 Int)
(wpos^5 Int)
(z^1 Int)
(z^2 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 m^0)) (= c1^1 c1^1)) (<= 0 (+ 0 c1^1)))
(<= (+ 0 c1^1) 1))
(<= (+ 0 z^0) 0))
(<= 1 (+ 0 pos^0)))
(<= (+ 0 pos^0) 1))
(<= (+ 0 wpos^0) 0))
(<= 1 (+ 0 c1^1)))
(= wpos^1 (+ 1 wpos^0)))
(<= 1 (+ 0 c1^1)))
(= c2^1 c2^1))
(<= 0 (+ 0 c2^1)))
(<= (+ 0 c2^1) 1))
(<= (+ 0 z^0) 0))
(<= 1 (+ 0 pos^0)))
(<= (+ 0 pos^0) 1))
(<= 1 (+ 0 wpos^1)))
(<= (+ 0 wpos^1) 1))
(<= 1 (+ 0 pi^0)))
(<= (+ 0 c2^1) 0))
(= wpos^2 0))
(= pi^1 (+ -1 pi^0)))
(<= (+ 1 c2^1) 1))
(= m^1 (+ -1 m^0)))
(<= 1 (+ 0 m^1)))
(= c1^2 c1^2))
(<= 0 (+ 0 c1^2)))
(<= (+ 0 c1^2) 1))
(<= (+ 0 z^0) 0))
(<= 1 (+ 0 pos^0)))
(<= (+ 0 pos^0) 1))
(<= (+ 0 wpos^2) 0))
(<= 1 (+ 0 c1^2)))
(= wpos^3 (+ 1 wpos^2)))
(<= 1 (+ 0 c1^2)))
(= c2^2 c2^2))
(<= 0 (+ 0 c2^2)))
(<= (+ 0 c2^2) 1))
(<= (+ 0 z^0) 0))
(<= 1 (+ 0 pos^0)))
(<= (+ 0 pos^0) 1))
(<= 1 (+ 0 wpos^3)))
(<= (+ 0 wpos^3) 1))
(<= (+ 0 pi^1) 0))
(= seq^post (+ 1 seq^0)))
(= wpos^4 0))
(= pos^1 0))
(= pi^2 (+ 0 seq^post)))
(= z^1 z^1))
(<= 0 (+ 0 z^1)))
(<= 1 (+ 0 c2^2)))
(<= (+ 1 m^1) (+ 0 max^0)))
(= m^2 (+ 1 m^1)))
(<= 1 (+ 0 m^2)))
(= c1^3 c1^3))
(<= 0 (+ 0 c1^3)))
(<= (+ 0 c1^3) 1))
(<= 1 (+ 0 z^1)))
(= z^2 (+ -1 z^1)))
(<= 1 (+ 0 c1^3)))
(= c2^3 c2^3))
(<= 0 (+ 0 c2^3)))
(<= (+ 0 c2^3) 1))
(<= 1 (+ 0 z^2)))
(= z^post (+ -1 z^2)))
(<= 1 (+ 0 c2^3)))
(<= (+ 1 m^2) (+ 0 max^0)))
(= m^3 (+ 1 m^2)))
(<= 1 (+ 0 m^3)))
(= c1^4 c1^4))
(<= 0 (+ 0 c1^4)))
(<= (+ 0 c1^4) 1))
(<= (+ 0 z^post) 0))
(<= (+ 0 pos^1) 0))
(<= (+ 0 c1^4) 0))
(= pos^post (+ 1 pos^1)))
(<= (+ 1 c1^4) 1))
(<= 1 (+ 0 m^3)))
(= c1^post c1^post))
(<= 0 (+ 0 c1^post)))
(<= (+ 0 c1^post) 1))
(<= (+ 0 z^post) 0))
(<= 1 (+ 0 pos^post)))
(<= (+ 0 pos^post) 1))
(<= (+ 0 wpos^4) 0))
(<= 1 (+ 0 c1^post)))
(= wpos^5 (+ 1 wpos^4)))
(<= 1 (+ 0 c1^post)))
(= c2^post c2^post))
(<= 0 (+ 0 c2^post)))
(<= (+ 0 c2^post) 1))
(<= (+ 0 z^post) 0))
(<= 1 (+ 0 pos^post)))
(<= (+ 0 pos^post) 1))
(<= 1 (+ 0 wpos^5)))
(<= (+ 0 wpos^5) 1))
(<= 1 (+ 0 pi^2)))
(<= (+ 0 c2^post) 0))
(= wpos^post 0))
(= pi^post (+ -1 pi^2)))
(<= (+ 1 c2^post) 1))
(= m^post (+ -1 m^3)))
(= max^0 max^post))
(= n^0 n^post))
)
)
(rule
(l1 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l0
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (= c1^0 c1^post) (= c2^0 c2^post)) (= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l2 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l0
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(exists
((pos^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= seq^post 1) (= wpos^post 0)) (= pi^post (+ 0 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^1 0))
(= n^post n^post))
(<= 0 (+ 0 n^post)))
(= max^post max^post))
(<= 0 (+ 0 max^post)))
(<= (+ 0 max^post) (+ 0 n^post)))
(= m^post m^post))
(<= (+ 0 m^post) (+ 0 max^post)))
(<= 0 (+ 0 m^post)))
(<= 1 (+ 0 m^post)))
(= c1^post c1^post))
(<= 0 (+ 0 c1^post)))
(<= (+ 0 c1^post) 1))
(<= (+ 0 z^post) 0))
(<= (+ 0 pos^1) 0))
(<= (+ 0 c1^post) 0))
(= pos^post (+ 1 pos^1)))
(<= (+ 1 c1^post) 1))
(= c2^0 c2^post))
)
)
(rule
(l3 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l2
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (= c1^0 c1^post) (= c2^0 c2^post)) (= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
