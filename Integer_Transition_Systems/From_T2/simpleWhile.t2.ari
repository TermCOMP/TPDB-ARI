(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int))
(entrypoint l10)
(rule
(l0 N^0 i^0 tmp^0 x^0)
(l1 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= x^post (+ 2 x^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
)

(rule
(l0 N^0 i^0 tmp^0 x^0)
(l1 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= N^0 N^post) (= i^0 i^post)) (= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l2 N^0 i^0 tmp^0 x^0)
(l3 N^post i^post tmp^post x^post)
:guard
(and
(and
(and (and (<= (+ 0 N^0) (+ 0 i^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l2 N^0 i^0 tmp^0 x^0)
(l0 N^post i^post tmp^post x^post)
:guard
(and
(and
(and (and (<= (+ 1 i^0) (+ 0 N^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l4 N^0 i^0 tmp^0 x^0)
(l2 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= N^0 N^post) (= i^0 i^post)) (= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l5 N^0 i^0 tmp^0 x^0)
(l6 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= tmp^post 0) (= N^0 N^post)) (= i^0 i^post))
(= x^0 x^post))
)

(rule
(l7 N^0 i^0 tmp^0 x^0)
(l5 N^post i^post tmp^post x^post)
:guard
(and
(and
(and (and (<= (+ 2 N^0) (+ 0 x^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l7 N^0 i^0 tmp^0 x^0)
(l5 N^post i^post tmp^post x^post)
:guard
(and
(and
(and (and (<= (+ 1 x^0) (+ 1 N^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l7 N^0 i^0 tmp^0 x^0)
(l6 N^post i^post tmp^post x^post)
:guard
(and
(and
(and
(and
(and (<= (+ 0 x^0) (+ 1 N^0)) (<= (+ 1 N^0) (+ 0 x^0)))
(= tmp^post 1))
(= N^0 N^post))
(= i^0 i^post))
(= x^0 x^post))
)

(rule
(l6 N^0 i^0 tmp^0 x^0)
(l8 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= N^0 N^post) (= i^0 i^post)) (= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l3 N^0 i^0 tmp^0 x^0)
(l7 N^post i^post tmp^post x^post)
:guard
(and
(and
(and (and (<= (+ 1 N^0) (+ 0 x^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l3 N^0 i^0 tmp^0 x^0)
(l7 N^post i^post tmp^post x^post)
:guard
(and
(and
(and (and (<= (+ 1 x^0) (+ 0 N^0)) (= N^0 N^post)) (= i^0 i^post))
(= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l3 N^0 i^0 tmp^0 x^0)
(l6 N^post i^post tmp^post x^post)
:guard
(and
(and
(and
(and
(and (<= (+ 0 x^0) (+ 0 N^0)) (<= (+ 0 N^0) (+ 0 x^0)))
(= tmp^post 1))
(= N^0 N^post))
(= i^0 i^post))
(= x^0 x^post))
)

(rule
(l1 N^0 i^0 tmp^0 x^0)
(l4 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= i^post (+ 1 i^0)) (= N^0 N^post)) (= tmp^0 tmp^post))
(= x^0 x^post))
)

(rule
(l9 N^0 i^0 tmp^0 x^0)
(l4 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= x^post 0) (= i^post 0)) (= N^0 N^post))
(= tmp^0 tmp^post))
)

(rule
(l10 N^0 i^0 tmp^0 x^0)
(l9 N^post i^post tmp^post x^post)
:guard
(and
(and (and (= N^0 N^post) (= i^0 i^post)) (= tmp^0 tmp^post))
(= x^0 x^post))
)

