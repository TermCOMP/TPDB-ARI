(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int))
(entrypoint l6)
(rule
(l0 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l1 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and (and (= i10^0 i10^post) (= i13^0 i13^post)) (= n^0 n^post))
(= n12^0 n12^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l2 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l3 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 n12^0) (+ 0 i13^0)) (= i10^0 i10^post))
(= i13^0 i13^post))
(= n^0 n^post))
(= n12^0 n12^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l2 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l4 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i13^0) (+ 0 n12^0)) (= i13^post (+ 1 i13^0)))
(= i10^0 i10^post))
(= n^0 n^post))
(= n12^0 n12^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l4 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l2 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and (and (= i10^0 i10^post) (= i13^0 i13^post)) (= n^0 n^post))
(= n12^0 n12^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l1 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l4 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 n9^0) (+ 0 i10^0)) (= tmp___0^post tmp___0^post))
(= n12^post (+ 0 n^0)))
(= i13^post 0))
(= i10^0 i10^post))
(= n^0 n^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
)

(rule
(l1 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l0 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i10^0) (+ 0 n9^0)) (= i10^post (+ 1 i10^0)))
(= i13^0 i13^post))
(= n^0 n^post))
(= n12^0 n12^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l5 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l0 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and (and (= n^post n^post) (= tmp^post tmp^post)) (= n9^post n9^post))
(= i10^post 0))
(= i13^0 i13^post))
(= n12^0 n12^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l6 i10^0 i13^0 n12^0 n9^0 n^0 tmp^0 tmp___0^0)
(l5 i10^post i13^post n12^post n9^post n^post tmp^post tmp___0^post)
:guard
(and
(and
(and
(and
(and (and (= i10^0 i10^post) (= i13^0 i13^post)) (= n^0 n^post))
(= n12^0 n12^post))
(= n9^0 n9^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

