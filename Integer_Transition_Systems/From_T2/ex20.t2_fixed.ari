(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int))
(entrypoint l10)
(rule
(l0 b^0 i^0 j^0 n^0 tmp^0)
(l1 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= (+ 1 n^0) (+ 0 i^0)) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l0 b^0 i^0 j^0 n^0 tmp^0)
(l2 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and
(and (<= (+ 0 i^0) (+ 0 n^0)) (= i^post (+ 1 i^0)))
(= j^post (+ 2 j^0)))
(= b^0 b^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l3 b^0 i^0 j^0 n^0 tmp^0)
(l2 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and (and (= i^post 0) (= b^0 b^post)) (= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l4 b^0 i^0 j^0 n^0 tmp^0)
(l3 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and (and (= n^post 0) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= tmp^0 tmp^post))
)

(rule
(l5 b^0 i^0 j^0 n^0 tmp^0)
(l3 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and
(and (and (<= (+ 0 tmp^0) 0) (<= 0 (+ 0 tmp^0))) (= n^post 1023))
(= b^0 b^post))
(= i^0 i^post))
(= j^0 j^post))
(= tmp^0 tmp^post))
)

(rule
(l5 b^0 i^0 j^0 n^0 tmp^0)
(l4 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= 1 (+ 0 tmp^0)) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l5 b^0 i^0 j^0 n^0 tmp^0)
(l4 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= (+ 1 tmp^0) 0) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l2 b^0 i^0 j^0 n^0 tmp^0)
(l0 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and (and (= b^0 b^post) (= i^0 i^post)) (= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l6 b^0 i^0 j^0 n^0 tmp^0)
(l7 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and (and (= b^0 b^post) (= i^0 i^post)) (= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l8 b^0 i^0 j^0 n^0 tmp^0)
(l6 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= 1023 (+ 0 b^0)) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l8 b^0 i^0 j^0 n^0 tmp^0)
(l6 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= (+ 1 b^0) 1023) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l1 b^0 i^0 j^0 n^0 tmp^0)
(l6 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= (+ 1 b^0) 0) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l1 b^0 i^0 j^0 n^0 tmp^0)
(l8 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and
(and (and (<= 0 (+ 0 b^0)) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

(rule
(l9 b^0 i^0 j^0 n^0 tmp^0)
(l5 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and (and (= tmp^post tmp^post) (= b^0 b^post)) (= i^0 i^post))
(= j^0 j^post))
(= n^0 n^post))
)

(rule
(l10 b^0 i^0 j^0 n^0 tmp^0)
(l9 b^post i^post j^post n^post tmp^post)
:guard
(and
(and
(and (and (= b^0 b^post) (= i^0 i^post)) (= j^0 j^post))
(= n^0 n^post))
(= tmp^0 tmp^post))
)

