(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(entrypoint l4)
(rule
(l0 Result_4^0 i_5^0)
(l1 Result_4^post i_5^post)
:guard
(exists
((i_5^1 Int))
(and
(and
(and (<= 0 (+ 0 i_5^0)) (= i_5^1 (+ 1 i_5^0)))
(= i_5^post (+ -2 i_5^1)))
(= Result_4^0 Result_4^post))
)
)

(rule
(l1 Result_4^0 i_5^0)
(l0 Result_4^post i_5^post)
:guard
(and (= Result_4^0 Result_4^post) (= i_5^0 i_5^post)))

(rule
(l0 Result_4^0 i_5^0)
(l2 Result_4^post i_5^post)
:guard
(and
(and (<= (+ 1 i_5^0) 0) (= Result_4^post Result_4^post))
(= i_5^0 i_5^post))
)

(rule
(l3 Result_4^0 i_5^0)
(l0 Result_4^post i_5^post)
:guard
(and (= Result_4^0 Result_4^post) (= i_5^0 i_5^post)))

(rule
(l4 Result_4^0 i_5^0)
(l3 Result_4^post i_5^post)
:guard
(and (= Result_4^0 Result_4^post) (= i_5^0 i_5^post)))

