(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int))
(entrypoint l13)
(rule
(l0 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l1 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= oldX3^post oldX3^post))
(= x0^post (+ 0 oldX2^post)))
(= x1^post (+ 0 oldX3^post)))
)

(rule
(l2 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l3 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ -1 oldX1^post)))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l3 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l0 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(<= (+ 1 oldX1^post) 0))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l3 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l2 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(<= 0 (+ 0 oldX1^post)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l4 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l5 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= x0^post (+ -1 oldX0^post)))
(= x1^post (+ 0 oldX2^post)))
(= oldX3^0 oldX3^post))
)

(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l3 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(<= (+ 1 oldX0^post) 0))
(= x0^post (+ 0 oldX0^post)))
(= x1^post 7))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l4 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(<= 0 (+ 0 oldX0^post)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX2^post)))
(= oldX3^0 oldX3^post))
)

(rule
(l6 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l5 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= x0^post 7))
(= x1^post (+ 0 oldX2^post)))
(= oldX3^0 oldX3^post))
)

(rule
(l7 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l8 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= oldX3^post oldX3^post))
(= x0^post (+ 0 oldX2^post)))
(= x1^post (+ 0 oldX3^post)))
)

(rule
(l9 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l10 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= x0^post (+ 1 oldX0^post)))
(= x1^post (+ 0 oldX2^post)))
(= oldX3^0 oldX3^post))
)

(rule
(l10 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l7 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(<= 64 (+ 0 oldX0^post)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l10 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l9 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(<= (+ 0 oldX0^post) 63))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l11 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l10 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= x0^post 0))
(= x1^post 0))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l11 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= oldX3^post oldX3^post))
(= x0^post (+ 0 oldX2^post)))
(= x1^post (+ 0 oldX3^post)))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l6 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post oldX2^post))
(= oldX3^post oldX3^post))
(= x0^post (+ 0 oldX2^post)))
(= x1^post (+ 0 oldX3^post)))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l1 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l0 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l2 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l3 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l4 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l5 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l6 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l8 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l7 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l9 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l10 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l12 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l11 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

(rule
(l13 oldX0^0 oldX1^0 oldX2^0 oldX3^0 x0^0 x1^0)
(l12 oldX0^post oldX1^post oldX2^post oldX3^post x0^post x1^post)
:guard
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
)

