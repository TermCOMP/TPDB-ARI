(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(entrypoint l4)
(rule
(l0 i^0 tmp^0)
(l1 i^post tmp^post)
:guard
(and (and (<= 50 (+ 0 i^0)) (= i^0 i^post)) (= tmp^0 tmp^post)))
(rule
(l0 i^0 tmp^0)
(l2 i^post tmp^post)
:guard
(and (and (<= (+ 1 i^0) 50) (= i^post (+ 1 i^0))) (= tmp^0 tmp^post)))
(rule
(l2 i^0 tmp^0)
(l0 i^post tmp^post)
:guard
(and (= i^0 i^post) (= tmp^0 tmp^post)))
(rule
(l3 i^0 tmp^0)
(l2 i^post tmp^post)
:guard
(exists
((i^1 Int))
(and (and (= i^1 0) (= tmp^post tmp^post)) (= i^post 0)))
)
(rule
(l4 i^0 tmp^0)
(l3 i^post tmp^post)
:guard
(and (= i^0 i^post) (= tmp^0 tmp^post)))
