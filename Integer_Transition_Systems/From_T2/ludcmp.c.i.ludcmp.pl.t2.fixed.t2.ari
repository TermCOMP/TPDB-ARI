(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l17 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l18 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l19 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l20 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l21 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l22 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l23 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l24 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l25 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l26 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l27 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l28 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l29 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l30 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l31 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l32 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l32)
(rule
(l0 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l1
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 j^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l0 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l2
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 j^0) (+ 0 n^0)) (= tmp^post tmp^post))
(= temp^post (+ 0 tmp^post)))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l3 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l0
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l4 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l5
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= j^post (+ 1 j^0)) (= big^0 big^post)) (= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l6 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l4
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 i^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l6 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l7
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) (+ 0 n^0)) (= i^post (+ 1 i^0)))
(= big^0 big^post))
(= dum^0 dum^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l7 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l6
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l8 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l7
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= dum^post dum^post) (= big^0 big^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l9 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l4
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 j^0) (+ 0 n^0)) (<= (+ 0 n^0) (+ 0 j^0)))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l9 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l8
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 j^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l9 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l8
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 j^0) (+ 0 n^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l10 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l9
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l10 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l9
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l10 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l9
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l11 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l10
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l12 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l11
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 k^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l12 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l13
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 k^0) (+ 0 n^0)) (= dum^post dum^post))
(= k^post (+ 1 k^0)))
(= big^0 big^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l13 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l12
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l14 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l11
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 j^0) (+ 0 imax^0)) (<= (+ 0 imax^0) (+ 0 j^0)))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l14 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l13
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 imax^0) (+ 0 j^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l14 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l13
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 j^0) (+ 0 imax^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l15 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l16
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= i^post (+ 1 i^0)) (= big^0 big^post)) (= dum^0 dum^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l17 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l15
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 dum^0) (+ 0 big^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l17 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l15
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 big^0) (+ 0 dum^0)) (= big^post (+ 0 dum^0)))
(= imax^post (+ 0 i^0)))
(= dum^0 dum^post))
(= i^0 i^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l18 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l5
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 i^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l18 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l3
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 i^0) (+ 0 n^0)) (= big^post 0)) (= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l19 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l17
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 j^0) (+ 0 k^0)) (= tmp___0^post tmp___0^post))
(= dum^post dum^post))
(= big^0 big^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
)

(rule
(l19 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l20
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 k^0) (+ 0 j^0)) (= sum^post sum^post))
(= k^post (+ 1 k^0)))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= n^0 n^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l20 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l19
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l21 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l14
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 i^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l21 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l20
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) (+ 0 n^0)) (= sum^post sum^post))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l22 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l18
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l16 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l21
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l23 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l24
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) (+ 0 k^0)) (= i^post (+ 1 i^0)))
(= big^0 big^post))
(= dum^0 dum^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l23 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l25
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 k^0) (+ 0 i^0)) (= sum^post sum^post))
(= k^post (+ 1 k^0)))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= n^0 n^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l25 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l23
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l26 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l16
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 j^0) (+ 0 i^0)) (= big^post 0)) (= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l26 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l25
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 j^0)) (= sum^post sum^post))
(= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l24 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l26
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l27 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l28
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 n^0) (+ 0 j^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l27 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l24
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 j^0) (+ 0 n^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l5 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l27
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l29 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l22
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l30 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l22
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= i^post (+ 1 i^0)) (= big^0 big^post)) (= dum^0 dum^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l1 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l30
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 big^0)) (= big^0 big^post)) (= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l1 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l30
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 big^0) 0) (= big^0 big^post)) (= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l1 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l30
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 big^0) 0) (<= 0 (+ 0 big^0))) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l31 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l3
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= j^post (+ 1 j^0)) (= big^0 big^post)) (= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l2 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l31
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 temp^0) (+ 0 big^0)) (= big^0 big^post))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l2 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l31
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 big^0) (+ 0 temp^0)) (= big^post (+ 0 temp^0)))
(= dum^0 dum^post))
(= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

(rule
(l32 big^0 dum^0 i^0 imax^0 j^0 k^0 n^0 sum^0 temp^0 tmp^0 tmp___0^0)
(l29
big^post
dum^post
i^post
imax^post
j^post
k^post
n^post
sum^post
temp^post
tmp^post
tmp___0^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= big^0 big^post) (= dum^0 dum^post)) (= i^0 i^post))
(= imax^0 imax^post))
(= j^0 j^post))
(= k^0 k^post))
(= n^0 n^post))
(= sum^0 sum^post))
(= temp^0 temp^post))
(= tmp^0 tmp^post))
(= tmp___0^0 tmp___0^post))
)

