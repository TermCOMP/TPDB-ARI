(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l6)
(rule
(l0
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l1
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(exists
((lt_11^1 Int) (lt_12^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_11^1 (+ 0 x_7^0)) (= lt_12^1 (+ 0 cnt_33^0)))
(<= (+ 0 lt_12^1) 0))
(= lt_11^post lt_11^post))
(= lt_12^post lt_12^post))
(= Result_4^post Result_4^post))
(= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_10^0 lt_10^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= q_9^0 q_9^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
)
(rule
(l0
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l2
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(exists
((lt_10^1 Int) (lt_11^1 Int) (lt_12^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_11^1 (+ 0 x_7^0)) (= lt_12^1 (+ 0 cnt_33^0)))
(<= 0 (+ -1 lt_12^1)))
(= lt_11^post lt_11^post))
(= lt_12^post lt_12^post))
(= lt_10^1 (+ 0 cnt_33^0)))
(= lt_10^post lt_10^post))
(= q_9^post (+ 0 py_6^0)))
(= Result_4^0 Result_4^post))
(= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
)
(rule
(l3
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l0
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= px_8^post px_8^post) (= x_7^post x_7^post))
(= py_6^post py_6^post))
(= y_5^post y_5^post))
(= q_9^post (+ 0 px_8^post)))
(= Result_4^0 Result_4^post))
(= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_10^0 lt_10^post))
(= lt_11^0 lt_11^post))
(= lt_12^0 lt_12^post))
(= lt_65^0 lt_65^post))
)
(rule
(l2
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l1
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(exists
((lt_11^1 Int) (lt_12^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_11^1 (+ 0 y_5^0)) (= lt_12^1 (+ 0 cnt_54^0)))
(<= (+ 0 lt_12^1) 0))
(= lt_11^post lt_11^post))
(= lt_12^post lt_12^post))
(= Result_4^post Result_4^post))
(= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_10^0 lt_10^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= q_9^0 q_9^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
)
(rule
(l2
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l4
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(exists
((lt_10^1 Int) (lt_11^1 Int) (lt_12^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_11^1 (+ 0 y_5^0)) (= lt_12^1 (+ 0 cnt_54^0)))
(<= 0 (+ -1 lt_12^1)))
(= lt_11^post lt_11^post))
(= lt_12^post lt_12^post))
(= lt_10^1 (+ -1 cnt_33^0)))
(= lt_10^post lt_10^post))
(= q_9^post (+ 0 py_6^0)))
(= Result_4^0 Result_4^post))
(= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
)
(rule
(l4
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l5
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(exists
((lt_10^1 Int) (lt_11^1 Int) (lt_12^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_11^1 (+ 0 y_5^0)) (= lt_12^1 (+ 0 cnt_54^0)))
(<= 0 (+ -1 lt_12^1)))
(= lt_11^post lt_11^post))
(= lt_12^post lt_12^post))
(= lt_10^1 (+ -1 lt_65^0)))
(= lt_10^post lt_10^post))
(= q_9^post (+ 0 py_6^0)))
(= Result_4^0 Result_4^post))
(= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
)
(rule
(l5
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l4
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= Result_4^0 Result_4^post) (= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_10^0 lt_10^post))
(= lt_11^0 lt_11^post))
(= lt_12^0 lt_12^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= q_9^0 q_9^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
(rule
(l6
Result_4^0
cnt_33^0
cnt_54^0
lt_10^0
lt_11^0
lt_12^0
lt_65^0
px_8^0
py_6^0
q_9^0
x_7^0
y_5^0)
(l3
Result_4^post
cnt_33^post
cnt_54^post
lt_10^post
lt_11^post
lt_12^post
lt_65^post
px_8^post
py_6^post
q_9^post
x_7^post
y_5^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= Result_4^0 Result_4^post) (= cnt_33^0 cnt_33^post))
(= cnt_54^0 cnt_54^post))
(= lt_10^0 lt_10^post))
(= lt_11^0 lt_11^post))
(= lt_12^0 lt_12^post))
(= lt_65^0 lt_65^post))
(= px_8^0 px_8^post))
(= py_6^0 py_6^post))
(= q_9^0 q_9^post))
(= x_7^0 x_7^post))
(= y_5^0 y_5^post))
)
