(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l9)
(rule
(l0
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l1
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 __const_30^0) (+ 0 a4^0)) (= ret_complex6^post 1))
(= answer^post (+ 0 ret_complex6^post)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= b^0 b^post))
(= b5^0 b5^post))
)

(rule
(l0
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l2
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 a4^0) (+ 0 __const_30^0)) (= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l3
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l0
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l2
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l4
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l5
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l2
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 __const_12^0) (+ 0 b5^0)) (= a4^post (+ 1 a4^0)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l5
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l2
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(<= (+ 0 b5^0) (+ 0 __const_12^0))
(= a4^post (+ (+ 0 __const_10^0) a4^0)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l6
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l2
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 b5^0) (+ 0 __const_10^0)) (= a4^post (+ 1 a4^0)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l6
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l5
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 __const_10^0) (+ 0 b5^0)) (= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l7
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l6
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 b5^0) (+ 0 __const_5^0)) (= b5^post (+ 2 b5^0)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l7
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l6
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 __const_5^0) (+ 0 b5^0)) (= b5^post b5^post))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l4
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l3
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 a4^0) (+ 0 b5^0)) (= a4^post (+ 2 a4^0)))
(= b5^post (+ (+ 0 (* -1 __const_10^0)) b5^0)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l4
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l7
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 b5^0) (+ 0 a4^0)) (= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l8
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l3
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (= a^post 1) (= b^post 1)) (= answer^post 0))
(= a4^post (+ 0 a^post)))
(= b5^post (+ 0 b^post)))
(= __const_10^0 __const_10^post))
(= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= ret_complex6^0 ret_complex6^post))
)

(rule
(l9
__const_10^0
__const_12^0
__const_30^0
__const_5^0
a4^0
a^0
answer^0
b5^0
b^0
ret_complex6^0)
(l8
__const_10^post
__const_12^post
__const_30^post
__const_5^post
a4^post
a^post
answer^post
b5^post
b^post
ret_complex6^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_12^0 __const_12^post))
(= __const_30^0 __const_30^post))
(= __const_5^0 __const_5^post))
(= a^0 a^post))
(= a4^0 a4^post))
(= answer^0 answer^post))
(= b^0 b^post))
(= b5^0 b5^post))
(= ret_complex6^0 ret_complex6^post))
)

