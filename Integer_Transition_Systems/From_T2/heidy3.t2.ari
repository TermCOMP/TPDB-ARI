(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(fun l5 (-> Int Int Int))
(entrypoint l5)
(rule
(l0 p^0 y_1^0)
(l1 p^post y_1^post)
:guard
(and (= p^0 p^post) (= y_1^0 y_1^post)))
(rule
(l1 p^0 y_1^0)
(l0 p^post y_1^post)
:guard
(and (= p^0 p^post) (= y_1^0 y_1^post)))
(rule
(l2 p^0 y_1^0)
(l3 p^post y_1^post)
:guard
(and (= p^post 0) (= y_1^0 y_1^post)))
(rule
(l3 p^0 y_1^0)
(l4 p^post y_1^post)
:guard
(and (and (<= 1 (+ 0 y_1^0)) (= y_1^post (+ -1 y_1^0))) (= p^0 p^post)))
(rule
(l4 p^0 y_1^0)
(l3 p^post y_1^post)
:guard
(and (= p^0 p^post) (= y_1^0 y_1^post)))
(rule
(l3 p^0 y_1^0)
(l0 p^post y_1^post)
:guard
(and (and (<= (+ 0 y_1^0) 0) (= p^post -1)) (= y_1^0 y_1^post)))
(rule
(l5 p^0 y_1^0)
(l2 p^post y_1^post)
:guard
(and (= p^0 p^post) (= y_1^0 y_1^post)))
