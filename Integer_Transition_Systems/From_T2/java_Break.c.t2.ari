(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int))
(entrypoint l6)
(rule
(l0 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l1 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= x0^post (+ 1 oldX0^post)))
(= __const_10^0 __const_10^post))
(= oldX1^0 oldX1^post))
)
(rule
(l2 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l3 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post oldX1^post))
(= x0^post (+ 0 oldX1^post)))
(= __const_10^0 __const_10^post))
)
(rule
(l1 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l0 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (<= (+ 0 oldX0^post) (+ 0 __const_10^0)))
(= x0^post (+ 0 oldX0^post)))
(= __const_10^0 __const_10^post))
(= oldX1^0 oldX1^post))
)
(rule
(l1 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l2 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (<= (+ 1 __const_10^0) (+ 0 oldX0^post)))
(= x0^post (+ 0 oldX0^post)))
(= __const_10^0 __const_10^post))
(= oldX1^0 oldX1^post))
)
(rule
(l4 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l1 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= x0^post 0))
(= __const_10^0 __const_10^post))
(= oldX1^0 oldX1^post))
)
(rule
(l5 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l4 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post oldX1^post))
(= x0^post (+ 0 oldX1^post)))
(= __const_10^0 __const_10^post))
)
(rule
(l5 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l3 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= oldX0^0 oldX0^post))
(= oldX1^0 oldX1^post))
(= x0^0 x0^post))
)
(rule
(l5 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l0 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= oldX0^0 oldX0^post))
(= oldX1^0 oldX1^post))
(= x0^0 x0^post))
)
(rule
(l5 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l2 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= oldX0^0 oldX0^post))
(= oldX1^0 oldX1^post))
(= x0^0 x0^post))
)
(rule
(l5 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l1 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= oldX0^0 oldX0^post))
(= oldX1^0 oldX1^post))
(= x0^0 x0^post))
)
(rule
(l5 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l4 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= oldX0^0 oldX0^post))
(= oldX1^0 oldX1^post))
(= x0^0 x0^post))
)
(rule
(l6 __const_10^0 oldX0^0 oldX1^0 x0^0)
(l5 __const_10^post oldX0^post oldX1^post x0^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= oldX0^0 oldX0^post))
(= oldX1^0 oldX1^post))
(= x0^0 x0^post))
)
