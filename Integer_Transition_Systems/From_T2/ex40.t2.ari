(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(fun l5 (-> Int Int Int))
(fun l6 (-> Int Int Int))
(fun l7 (-> Int Int Int))
(fun l8 (-> Int Int Int))
(fun l9 (-> Int Int Int))
(entrypoint l9)
(rule
(l0 i^0 k^0)
(l1 i^post k^post)
:guard
(and (= i^post (+ 1 i^0)) (= k^0 k^post)))

(rule
(l2 i^0 k^0)
(l0 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l2 i^0 k^0)
(l0 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l2 i^0 k^0)
(l3 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l1 i^0 k^0)
(l2 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l4 i^0 k^0)
(l5 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l6 i^0 k^0)
(l4 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l6 i^0 k^0)
(l4 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l6 i^0 k^0)
(l5 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

(rule
(l7 i^0 k^0)
(l4 i^post k^post)
:guard
(and (and (<= (+ 0 i^0) (+ 0 k^0)) (= i^0 i^post)) (= k^0 k^post)))

(rule
(l7 i^0 k^0)
(l6 i^post k^post)
:guard
(and (and (<= (+ 1 k^0) (+ 0 i^0)) (= i^0 i^post)) (= k^0 k^post)))

(rule
(l3 i^0 k^0)
(l4 i^post k^post)
:guard
(and (and (<= (+ 1 k^0) 0) (= i^0 i^post)) (= k^0 k^post)))

(rule
(l3 i^0 k^0)
(l7 i^post k^post)
:guard
(and (and (<= 0 (+ 0 k^0)) (= i^0 i^post)) (= k^0 k^post)))

(rule
(l8 i^0 k^0)
(l1 i^post k^post)
:guard
(and (= k^post k^post) (= i^post 0)))

(rule
(l9 i^0 k^0)
(l8 i^post k^post)
:guard
(and (= i^0 i^post) (= k^0 k^post)))

