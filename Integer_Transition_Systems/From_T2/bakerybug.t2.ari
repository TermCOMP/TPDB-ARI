(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l6)
(rule
(l0
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l1
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 conditional^0) 1) (= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l0
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l1
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 2 (+ 0 conditional^0)) (= INCREASE^post INCREASE^post))
(<= 1 (+ 0 INCREASE^post)))
(= j_min^post (+ (+ 0 INCREASE^post) j_min^0)))
(= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l2
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l0
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 conditional^0) 1) (= P^post 1))
(= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= Q^0 Q^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l2
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l1
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 2 (+ 0 conditional^0)) (= INCREASE^post INCREASE^post))
(= MAX_MIN^post (+ (+ 0 MAX^0) (* -1 MIN^0))))
(= NUM_MIN^post (+ (+ 0 (* -1 MIN^0)) num^0)))
(<= (+ 0 num^0) (+ 0 INCREASE^post)))
(<= (+ 0 INCREASE^post) (+ (+ 0 MAX^0) (* -1 MIN^0))))
(<= (+ 0 INCREASE^post) (+ 0 NUM_MIN^post)))
(= MIN^post (+ (+ 0 INCREASE^post) MIN^0)))
(= Q^post 1))
(= j_min^post j_min^post))
(<= 1 (+ 0 j_min^post)))
(= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= MAX^0 MAX^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= P^0 P^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l3
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l2
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 conditional^0) 1) (= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l3
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l2
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 2 (+ 0 conditional^0)) (= INCREASE^post INCREASE^post))
(<= 1 (+ 0 INCREASE^post)))
(= MAX^post (+ (+ 0 INCREASE^post) MAX^0)))
(= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l1
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l3
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 MIN^0) (+ 0 num^0)) (<= (+ 1 j_min^0) (+ 0 pid^0)))
(= conditional^post conditional^post))
(= CRITICAL^0 CRITICAL^post))
(= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l1
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l4
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= Q^post 0) (= P^post 0)) (<= (+ 0 pid^0) (+ 0 j_min^0)))
(= CRITICAL^post 0))
(= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= conditional^0 conditional^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l1
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l4
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= Q^post 0) (= P^post 0)) (<= (+ 1 num^0) (+ 0 MIN^0)))
(= CRITICAL^post 0))
(= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= conditional^0 conditional^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

(rule
(l4
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l1
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= num^post (+ 1 MAX^0)) (= MAX^post (+ 1 MAX^0)))
(= NONCRITICAL^post 1))
(= CRITICAL^post 0))
(= INCREASE^0 INCREASE^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= conditional^0 conditional^post))
(= j_min^0 j_min^post))
(= pid^0 pid^post))
)

(rule
(l5
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l4
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= P^post 0) (= Q^post 0)) (= pid^post pid^post))
(<= 1 (+ 0 pid^post)))
(= j_min^post j_min^post))
(<= 1 (+ 0 j_min^post)))
(= MIN^post MIN^post))
(<= 1 (+ 0 MIN^post)))
(= MAX^post MAX^post))
(<= (+ 0 MIN^post) (+ 0 MAX^post)))
(= NONCRITICAL^post 1))
(= CRITICAL^post 0))
(= INCREASE^0 INCREASE^post))
(= MAX_MIN^0 MAX_MIN^post))
(= NUM_MIN^0 NUM_MIN^post))
(= conditional^0 conditional^post))
(= num^0 num^post))
)

(rule
(l6
CRITICAL^0
INCREASE^0
MAX^0
MAX_MIN^0
MIN^0
NONCRITICAL^0
NUM_MIN^0
P^0
Q^0
conditional^0
j_min^0
num^0
pid^0)
(l5
CRITICAL^post
INCREASE^post
MAX^post
MAX_MIN^post
MIN^post
NONCRITICAL^post
NUM_MIN^post
P^post
Q^post
conditional^post
j_min^post
num^post
pid^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= CRITICAL^0 CRITICAL^post) (= INCREASE^0 INCREASE^post))
(= MAX^0 MAX^post))
(= MAX_MIN^0 MAX_MIN^post))
(= MIN^0 MIN^post))
(= NONCRITICAL^0 NONCRITICAL^post))
(= NUM_MIN^0 NUM_MIN^post))
(= P^0 P^post))
(= Q^0 Q^post))
(= conditional^0 conditional^post))
(= j_min^0 j_min^post))
(= num^0 num^post))
(= pid^0 pid^post))
)

