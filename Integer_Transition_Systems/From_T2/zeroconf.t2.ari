(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l17 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l18 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l19 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l20 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l21 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l22 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l23 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l23)
(rule
(l0 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l1
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 b_arp^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l0 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l1
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 b_arp^0) 0) (= b_configured^post 1)) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l2 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l0
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= N^0 N^post) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l3 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l4
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (= k^post (+ 1 k^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l5 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l3
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 seq^0) (+ 1 N^0)) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l6 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l5
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= i^post (+ -1 i^0))) (= pos^post 0))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= k^0 k^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l6 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l5
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 b_arp^0) 0))
(= pos^post (+ 1 pos^0)))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l7 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l5
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) 0) (= seq^post (+ 1 seq^0)))
(= i^post (+ 3 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= k^0 k^post))
)

(rule
(l7 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l6
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 i^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l8 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l5
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
)

(rule
(l8 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l7
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l9 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l3
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 b_ip^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l9 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l8
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 b_ip^0) 0) (= b_arp^post b_arp^post))
(<= 0 (+ 0 b_arp^post)))
(<= (+ 0 b_arp^post) 1))
(= N^0 N^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l10 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l3
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 b_probe^0) 1) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l10 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l9
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 b_probe^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l11 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l10
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= i^post (+ -1 i^0))) (= pos^post 0))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= k^0 k^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l11 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l10
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 b_probe^0) 0))
(= pos^post (+ 1 pos^0)))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l12 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l10
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) 0) (= seq^post (+ 1 seq^0)))
(= i^post (+ 3 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= k^0 k^post))
)

(rule
(l12 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l11
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 i^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l13 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l10
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
)

(rule
(l13 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l12
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l14 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l2
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 N^0) (+ 0 k^0)) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l14 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l13
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 k^0) (+ 0 N^0)) (= b_probe^post b_probe^post))
(<= 0 (+ 0 b_probe^post)))
(<= (+ 0 b_probe^post) 1))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l15 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l2
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 b_arp^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l15 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l14
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 b_arp^0) 0) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l4 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l15
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= N^0 N^post) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l16 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l4
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= i^post (+ -1 i^0))) (= pos^post 0))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= k^0 k^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l16 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l4
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 b_ip^0) 0))
(= pos^post (+ 1 pos^0)))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l17 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l4
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) 0) (= seq^post (+ 1 seq^0)))
(= i^post (+ 3 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= k^0 k^post))
)

(rule
(l17 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l16
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 i^0)) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l18 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l4
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
)

(rule
(l18 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l17
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= N^0 N^post)) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l19 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l1
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= seq^post 1) (= i^post (+ 3 seq^post))) (= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= N^post N^post))
(<= 0 (+ 0 N^post)))
(= b_ip^post 0))
(= b_probe^post 0))
(= b_arp^post 0))
(= b_configured^post 0))
(= k^post 0))
)

(rule
(l20 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l21
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= N^0 N^post) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l22 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l20
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 b_configured^0)) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l22 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l20
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 b_configured^0) 0) (= N^0 N^post))
(= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l22 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l18
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 b_configured^0) 0) (<= 0 (+ 0 b_configured^0)))
(= b_arp^post 0))
(= b_probe^post 0))
(= k^post 0))
(= b_ip^post b_ip^post))
(<= 0 (+ 0 b_ip^post)))
(<= (+ 0 b_ip^post) 1))
(= N^0 N^post))
(= b_configured^0 b_configured^post))
(= i^0 i^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l1 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l22
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= N^0 N^post) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

(rule
(l23 N^0 b_arp^0 b_configured^0 b_ip^0 b_probe^0 i^0 k^0 pos^0 seq^0 z^0)
(l19
N^post
b_arp^post
b_configured^post
b_ip^post
b_probe^post
i^post
k^post
pos^post
seq^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= N^0 N^post) (= b_arp^0 b_arp^post))
(= b_configured^0 b_configured^post))
(= b_ip^0 b_ip^post))
(= b_probe^0 b_probe^post))
(= i^0 i^post))
(= k^0 k^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)

