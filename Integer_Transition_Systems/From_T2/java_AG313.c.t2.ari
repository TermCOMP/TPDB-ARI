(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int))
(entrypoint l6)
(rule
(l0 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l1
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ (+ 0 (* -1 oldX1^post)) oldX2^post)))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l1 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l2
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(= oldX3^post oldX3^post))
(<= (+ 0 oldX1^post) 0))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX3^post)))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l1 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l2
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(= oldX3^post oldX3^post))
(<= (+ 0 oldX2^post) 0))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX3^post)))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l1 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l0
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(<= 1 (+ 0 oldX2^post)))
(<= 1 (+ 0 oldX1^post)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX2^post)))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l2 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l3
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(= oldX3^post oldX3^post))
(= oldX4^post oldX4^post))
(= oldX5^post oldX5^post))
(= x0^post (+ 0 oldX3^post)))
(= x1^post (+ 0 oldX4^post)))
(= x2^post (+ 0 oldX5^post)))
)
(rule
(l4 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l1
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(<= 1 (+ 0 oldX0^post)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX0^post)))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l4 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l1
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(<= (+ 1 oldX0^post) 0))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX0^post)))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l4 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l2
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(= oldX3^post oldX3^post))
(<= (+ 0 oldX0^post) 0))
(<= 0 (+ 0 oldX0^post)))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX3^post)))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l4
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^post (+ 0 x0^0)) (= oldX1^post (+ 0 x1^0)))
(= oldX2^post (+ 0 x2^0)))
(= oldX3^post oldX3^post))
(= x0^post (+ 0 oldX0^post)))
(= x1^post (+ 0 oldX1^post)))
(= x2^post (+ 0 oldX3^post)))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
)
(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l3
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
(= x2^0 x2^post))
)
(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l0
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
(= x2^0 x2^post))
)
(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l1
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
(= x2^0 x2^post))
)
(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l2
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
(= x2^0 x2^post))
)
(rule
(l5 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l4
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
(= x2^0 x2^post))
)
(rule
(l6 oldX0^0 oldX1^0 oldX2^0 oldX3^0 oldX4^0 oldX5^0 x0^0 x1^0 x2^0)
(l5
oldX0^post
oldX1^post
oldX2^post
oldX3^post
oldX4^post
oldX5^post
x0^post
x1^post
x2^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= oldX0^0 oldX0^post) (= oldX1^0 oldX1^post))
(= oldX2^0 oldX2^post))
(= oldX3^0 oldX3^post))
(= oldX4^0 oldX4^post))
(= oldX5^0 oldX5^post))
(= x0^0 x0^post))
(= x1^0 x1^post))
(= x2^0 x2^post))
)
