(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int))
(entrypoint l11)
(rule
(l0 b_16^0 rt_11^0 st_15^0 x_14^0)
(l1 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and (and (<= 1 (+ 0 x_14^0)) (= b_16^post 1)) (= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l2 b_16^0 rt_11^0 st_15^0 x_14^0)
(l4 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= 1 (+ 0 x_14^0)) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l2 b_16^0 rt_11^0 st_15^0 x_14^0)
(l4 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= (+ 1 x_14^0) 0) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l4 b_16^0 rt_11^0 st_15^0 x_14^0)
(l3 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and
(and (<= 1 (+ 0 b_16^0)) (<= (+ 0 b_16^0) 1))
(= x_14^post (+ -1 x_14^0)))
(= b_16^post 0))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)

(rule
(l1 b_16^0 rt_11^0 st_15^0 x_14^0)
(l5 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and
(and (<= 0 (+ 0 x_14^0)) (<= (+ 0 x_14^0) 0))
(= rt_11^post (+ 0 st_15^0)))
(= b_16^0 b_16^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l1 b_16^0 rt_11^0 st_15^0 x_14^0)
(l6 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= 1 (+ 0 x_14^0)) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l1 b_16^0 rt_11^0 st_15^0 x_14^0)
(l6 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= (+ 1 x_14^0) 0) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l6 b_16^0 rt_11^0 st_15^0 x_14^0)
(l3 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and
(and (<= 1 (+ 0 b_16^0)) (<= (+ 0 b_16^0) 1))
(= x_14^post (+ -1 x_14^0)))
(= b_16^post 0))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)

(rule
(l7 b_16^0 rt_11^0 st_15^0 x_14^0)
(l5 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and
(and (<= 0 (+ 0 x_14^0)) (<= (+ 0 x_14^0) 0))
(= rt_11^post (+ 0 st_15^0)))
(= b_16^0 b_16^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l7 b_16^0 rt_11^0 st_15^0 x_14^0)
(l8 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= 1 (+ 0 x_14^0)) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l7 b_16^0 rt_11^0 st_15^0 x_14^0)
(l8 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= (+ 1 x_14^0) 0) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l8 b_16^0 rt_11^0 st_15^0 x_14^0)
(l9 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= 2 (+ 0 b_16^0)) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l8 b_16^0 rt_11^0 st_15^0 x_14^0)
(l9 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and
(and (<= (+ 1 b_16^0) 1) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

(rule
(l9 b_16^0 rt_11^0 st_15^0 x_14^0)
(l1 b_16^post rt_11^post st_15^post x_14^post)
:guard
(exists
((x_14^1 Int))
(and
(and
(and
(and (= x_14^1 (+ 1 x_14^0)) (= b_16^post 1))
(= x_14^post (+ 0 (* -1 x_14^1))))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)
)

(rule
(l3 b_16^0 rt_11^0 st_15^0 x_14^0)
(l7 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and (= x_14^post (+ 0 (* -1 x_14^0))) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)

(rule
(l10 b_16^0 rt_11^0 st_15^0 x_14^0)
(l7 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and (= x_14^post (+ 0 (* -1 x_14^0))) (= b_16^0 b_16^post))
(= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
)

(rule
(l11 b_16^0 rt_11^0 st_15^0 x_14^0)
(l0 b_16^post rt_11^post st_15^post x_14^post)
:guard
(and
(and
(and (= b_16^0 b_16^post) (= rt_11^0 rt_11^post))
(= st_15^0 st_15^post))
(= x_14^0 x_14^post))
)

