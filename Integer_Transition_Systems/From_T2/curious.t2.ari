(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(fun l5 (-> Int Int Int))
(entrypoint l5)
(rule
(l0 __disjvr_0^0 b^0)
(l2 __disjvr_0^post b^post)
:guard
(and (and (<= 0 (+ 0 b^0)) (= b^post 1)) (= __disjvr_0^0 __disjvr_0^post)))

(rule
(l2 __disjvr_0^0 b^0)
(l3 __disjvr_0^post b^post)
:guard
(and
(and (= __disjvr_0^post __disjvr_0^0) (= __disjvr_0^0 __disjvr_0^post))
(= b^0 b^post))
)

(rule
(l3 __disjvr_0^0 b^0)
(l1 __disjvr_0^post b^post)
:guard
(and (= b^post 0) (= __disjvr_0^0 __disjvr_0^post)))

(rule
(l1 __disjvr_0^0 b^0)
(l0 __disjvr_0^post b^post)
:guard
(and (= __disjvr_0^0 __disjvr_0^post) (= b^0 b^post)))

(rule
(l4 __disjvr_0^0 b^0)
(l0 __disjvr_0^post b^post)
:guard
(and (= __disjvr_0^0 __disjvr_0^post) (= b^0 b^post)))

(rule
(l5 __disjvr_0^0 b^0)
(l4 __disjvr_0^post b^post)
:guard
(and (= __disjvr_0^0 __disjvr_0^post) (= b^0 b^post)))

