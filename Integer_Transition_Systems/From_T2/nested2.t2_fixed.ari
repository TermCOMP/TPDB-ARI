(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int))
(entrypoint l5)
(rule
(l0 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l1 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and
(and (= x_13^post x_13^post) (= y_16^post y_16^post))
(= x_27^0 x_27^post))
(= x_32^0 x_32^post))
(= y_28^0 y_28^post))
(= y_33^0 y_33^post))
)
(rule
(l1 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l2 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 x_13^0)) (= y_16^post 5000)) (<= 1 (+ 0 y_16^post)))
(<= 1 (+ 0 x_13^0)))
(= x_13^0 x_13^post))
(= x_27^0 x_27^post))
(= x_32^0 x_32^post))
(= y_28^0 y_28^post))
(= y_33^0 y_33^post))
)
(rule
(l3 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l2 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= x_27^post x_27^post) (= y_28^post y_28^post))
(<= 1 (+ 0 y_16^0)))
(= x_13^post (+ -1 x_13^0)))
(= y_16^post (+ -1 y_16^0)))
(<= (+ 0 x_13^post) (+ -1 x_27^post)))
(<= (+ -1 x_27^post) (+ 0 x_13^post)))
(<= (+ 0 y_16^post) (+ -1 y_28^post)))
(<= (+ -1 y_28^post) (+ 0 y_16^post)))
(<= 1 (+ 0 x_27^post)))
(<= 1 (+ 0 y_28^post)))
(= x_32^0 x_32^post))
(= y_33^0 y_33^post))
)
(rule
(l2 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l1 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ 0 y_16^0) 0) (<= (+ 0 y_16^0) 0)) (= x_13^0 x_13^post))
(= x_27^0 x_27^post))
(= x_32^0 x_32^post))
(= y_16^0 y_16^post))
(= y_28^0 y_28^post))
(= y_33^0 y_33^post))
)
(rule
(l2 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l4 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= x_32^post x_32^post) (= y_33^post y_33^post))
(<= 1 (+ 0 y_16^0)))
(= x_13^post (+ -1 x_13^0)))
(= y_16^post (+ -1 y_16^0)))
(<= (+ 0 x_13^post) (+ -1 x_32^post)))
(<= (+ -1 x_32^post) (+ 0 x_13^post)))
(<= (+ 0 y_16^post) (+ -1 y_33^post)))
(<= (+ -1 y_33^post) (+ 0 y_16^post)))
(<= 1 (+ 0 y_33^post)))
(= x_27^0 x_27^post))
(= y_28^0 y_28^post))
)
(rule
(l4 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l2 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and (and (= x_13^0 x_13^post) (= x_27^0 x_27^post)) (= x_32^0 x_32^post))
(= y_16^0 y_16^post))
(= y_28^0 y_28^post))
(= y_33^0 y_33^post))
)
(rule
(l5 x_13^0 x_27^0 x_32^0 y_16^0 y_28^0 y_33^0)
(l0 x_13^post x_27^post x_32^post y_16^post y_28^post y_33^post)
:guard
(and
(and
(and
(and (and (= x_13^0 x_13^post) (= x_27^0 x_27^post)) (= x_32^0 x_32^post))
(= y_16^0 y_16^post))
(= y_28^0 y_28^post))
(= y_33^0 y_33^post))
)
