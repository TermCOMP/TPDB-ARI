(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int))
(entrypoint l8)
(rule
(l0 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l1 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and (= ___rho_1_^0 ___rho_1_^post) (= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l2 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l3 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and (= ___rho_1_^0 ___rho_1_^post) (= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l4 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l5 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and (= ___rho_1_^0 ___rho_1_^post) (= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l5 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l4 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and (= ___rho_1_^0 ___rho_1_^post) (= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l6 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l0 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 ___rho_1_^0) 0) (<= (+ 1 c^0) (+ 0 curr_serv^0)))
(= curr_serv^post (+ -1 curr_serv^0)))
(= ___rho_1_^0 ___rho_1_^post))
(= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l6 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l0 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 ___rho_1_^0)) (= c^post (+ -1 c^0)))
(= curr_serv^post (+ -1 curr_serv^0)))
(= resp^post (+ 1 resp^0)))
(= ___rho_1_^0 ___rho_1_^post))
(= ___rho_2_^0 ___rho_2_^post))
(= servers^0 servers^post))
)
(rule
(l1 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l6 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and
(and (<= 1 (+ 0 curr_serv^0)) (= ___rho_1_^post ___rho_1_^post))
(= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l1 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l4 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and
(and (<= (+ 0 curr_serv^0) 0) (= ___rho_1_^0 ___rho_1_^post))
(= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
(rule
(l7 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l0 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and
(and (= ___rho_2_^post ___rho_2_^post) (= c^post (+ 0 ___rho_2_^post)))
(<= 1 (+ 0 c^post)))
(= servers^post 4))
(= resp^post 0))
(= curr_serv^post (+ 0 servers^post)))
(= ___rho_1_^0 ___rho_1_^post))
)
(rule
(l8 ___rho_1_^0 ___rho_2_^0 c^0 curr_serv^0 resp^0 servers^0)
(l7 ___rho_1_^post ___rho_2_^post c^post curr_serv^post resp^post servers^post)
:guard
(and
(and
(and
(and
(and (= ___rho_1_^0 ___rho_1_^post) (= ___rho_2_^0 ___rho_2_^post))
(= c^0 c^post))
(= curr_serv^0 curr_serv^post))
(= resp^0 resp^post))
(= servers^0 servers^post))
)
