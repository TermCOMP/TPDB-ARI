(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(entrypoint l3)
(rule
(l0 x^0 x_next^0)
(l1 x^post x_next^post)
:guard
(exists
((x^1 Int) (x_next^1 Int))
(and
(and
(and
(and
(and (= x_next^1 x_next^1) (= x^1 (+ 0 x_next^1)))
(= x_next^post x_next^post))
(<= (+ 1 x^1) (+ 0 x_next^post)))
(<= (+ 0 x_next^post) (+ 1 x^1)))
(= x^post (+ 0 x_next^post)))
)
)
(rule
(l1 x^0 x_next^0)
(l0 x^post x_next^post)
:guard
(and (= x^0 x^post) (= x_next^0 x_next^post)))
(rule
(l2 x^0 x_next^0)
(l0 x^post x_next^post)
:guard
(and (= x^0 x^post) (= x_next^0 x_next^post)))
(rule
(l3 x^0 x_next^0)
(l2 x^post x_next^post)
:guard
(and (= x^0 x^post) (= x_next^0 x_next^post)))
