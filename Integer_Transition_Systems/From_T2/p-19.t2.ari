(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int))
(entrypoint l4)
(rule
(l0 Result_4^0 cnt_25^0 lt_10^0 lt_8^0 lt_9^0 p_6^0 q_7^0 x_5^0)
(l1
Result_4^post
cnt_25^post
lt_10^post
lt_8^post
lt_9^post
p_6^post
q_7^post
x_5^post)
:guard
(exists
((lt_10^1 Int) (lt_9^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_9^1 (+ 0 x_5^0)) (= lt_10^1 (+ 0 cnt_25^0)))
(<= (+ 0 lt_10^1) 0))
(= lt_9^post lt_9^post))
(= lt_10^post lt_10^post))
(= Result_4^post Result_4^post))
(= cnt_25^0 cnt_25^post))
(= lt_8^0 lt_8^post))
(= p_6^0 p_6^post))
(= q_7^0 q_7^post))
(= x_5^0 x_5^post))
)
)

(rule
(l0 Result_4^0 cnt_25^0 lt_10^0 lt_8^0 lt_9^0 p_6^0 q_7^0 x_5^0)
(l2
Result_4^post
cnt_25^post
lt_10^post
lt_8^post
lt_9^post
p_6^post
q_7^post
x_5^post)
:guard
(exists
((lt_10^1 Int) (lt_8^1 Int) (lt_9^1 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (= lt_9^1 (+ 0 x_5^0)) (= lt_10^1 (+ 0 cnt_25^0)))
(<= 0 (+ -1 lt_10^1)))
(= lt_9^post lt_9^post))
(= lt_10^post lt_10^post))
(= lt_8^1 (+ 0 cnt_25^0)))
(= lt_8^post lt_8^post))
(= Result_4^0 Result_4^post))
(= cnt_25^0 cnt_25^post))
(= p_6^0 p_6^post))
(= q_7^0 q_7^post))
(= x_5^0 x_5^post))
)
)

(rule
(l2 Result_4^0 cnt_25^0 lt_10^0 lt_8^0 lt_9^0 p_6^0 q_7^0 x_5^0)
(l0
Result_4^post
cnt_25^post
lt_10^post
lt_8^post
lt_9^post
p_6^post
q_7^post
x_5^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= Result_4^0 Result_4^post) (= cnt_25^0 cnt_25^post))
(= lt_10^0 lt_10^post))
(= lt_8^0 lt_8^post))
(= lt_9^0 lt_9^post))
(= p_6^0 p_6^post))
(= q_7^0 q_7^post))
(= x_5^0 x_5^post))
)

(rule
(l3 Result_4^0 cnt_25^0 lt_10^0 lt_8^0 lt_9^0 p_6^0 q_7^0 x_5^0)
(l0
Result_4^post
cnt_25^post
lt_10^post
lt_8^post
lt_9^post
p_6^post
q_7^post
x_5^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= p_6^post p_6^post) (= x_5^post x_5^post))
(= q_7^post (+ 0 p_6^post)))
(= Result_4^0 Result_4^post))
(= cnt_25^0 cnt_25^post))
(= lt_10^0 lt_10^post))
(= lt_8^0 lt_8^post))
(= lt_9^0 lt_9^post))
)

(rule
(l4 Result_4^0 cnt_25^0 lt_10^0 lt_8^0 lt_9^0 p_6^0 q_7^0 x_5^0)
(l3
Result_4^post
cnt_25^post
lt_10^post
lt_8^post
lt_9^post
p_6^post
q_7^post
x_5^post)
:guard
(and
(and
(and
(and
(and
(and
(and (= Result_4^0 Result_4^post) (= cnt_25^0 cnt_25^post))
(= lt_10^0 lt_10^post))
(= lt_8^0 lt_8^post))
(= lt_9^0 lt_9^post))
(= p_6^0 p_6^post))
(= q_7^0 q_7^post))
(= x_5^0 x_5^post))
)

