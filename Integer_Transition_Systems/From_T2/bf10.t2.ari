(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l17 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int))
(entrypoint l17)
(rule
(l0 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l1
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 nodecount^0) (+ 0 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l0 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l2
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 nodecount^0)) (= i^post (+ 1 i^0)))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l3 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l4
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= i^post (+ 1 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l3 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l1
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l5 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l2
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 edgecount^0) (+ 0 i^0)) (= i^post 0))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l5 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l3
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 edgecount^0)) (= x^post x^post))
(= y^post y^post))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
)

(rule
(l6 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l7
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l8 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l9
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= j^post (+ 1 j^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l10 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l11
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 edgecount^0) (+ 0 j^0)) (= i^post (+ 1 i^0)))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l10 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l8
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 j^0) (+ 0 edgecount^0)) (= x^post x^post))
(= y^post y^post))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
)

(rule
(l11 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l12
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l12 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l4
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 nodecount^0) (+ 0 i^0)) (= i^post 0))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l12 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l9
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 nodecount^0)) (= j^post 0))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l13 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l14
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l14 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l6
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= i^post (+ 1 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l15 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l13
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 source^0) (+ 0 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l15 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l13
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 source^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l15 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l14
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 i^0) (+ 0 source^0)) (<= (+ 0 source^0) (+ 0 i^0)))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l7 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l11
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 nodecount^0) (+ 0 i^0)) (= i^post 0))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l7 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l15
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 nodecount^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l9 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l10
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l4 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l5
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l2 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l0
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l16 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l6
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(= nodecount^post (+ 0 __const_5^0))
(= edgecount^post (+ 0 __const_10^0)))
(= source^post 0))
(= i^post 0))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= j^0 j^post))
(= x^0 x^post))
(= y^0 y^post))
)

(rule
(l17 __const_10^0 __const_5^0 edgecount^0 i^0 j^0 nodecount^0 source^0 x^0 y^0)
(l16
__const_10^post
__const_5^post
edgecount^post
i^post
j^post
nodecount^post
source^post
x^post
y^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= edgecount^0 edgecount^post))
(= i^0 i^post))
(= j^0 j^post))
(= nodecount^0 nodecount^post))
(= source^0 source^post))
(= x^0 x^post))
(= y^0 y^post))
)

