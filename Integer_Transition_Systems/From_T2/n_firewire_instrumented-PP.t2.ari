(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int))
(entrypoint l15)
(rule
(l0 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l1 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and (and (= K^post (+ -1 K^0)) (= N^0 N^post)) (= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l2 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l3 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= 3 (+ 0 pos^0)) (= next^post (+ 1 next^0)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= K^0 K^post))
(= N^0 N^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
)
(rule
(l2 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l3 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 2) (<= (+ 0 yy^0) 0))
(= pos^post (+ 1 pos^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l4 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l2 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= 2 (+ 0 pos^0)) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l4 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l3 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 1) (<= 1 (+ 0 yy^0)))
(= pos^post (+ 1 pos^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l3 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l1 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 xx^0) (+ 0 yy^0)) (<= (+ 0 yy^0) (+ 0 xx^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l3 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l0 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ 1 yy^0) (+ 0 xx^0)) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l3 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l0 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ 1 xx^0) (+ 0 yy^0)) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l5 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l4 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l5 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l3 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 yy^0) 0))
(= pos^post (+ 1 pos^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l6 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l3 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
)
(rule
(l6 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l5 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l7 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l8 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= 3 (+ 0 pos^0)) (= next^post (+ 1 next^0)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= K^0 K^post))
(= N^0 N^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
)
(rule
(l7 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l8 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 2) (<= (+ 0 xx^0) 0))
(= pos^post (+ 1 pos^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l9 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l7 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= 2 (+ 0 pos^0)) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l9 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l8 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 1) (<= 1 (+ 0 xx^0)))
(= pos^post (+ 1 pos^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l8 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l6 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= yy^post yy^post) (<= 0 (+ 0 yy^post))) (<= (+ 0 yy^post) 1))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= z^0 z^post))
)
(rule
(l1 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l10 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and (and (= K^0 K^post) (= N^0 N^post)) (= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l11 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l9 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l11 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l8 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 xx^0) 0))
(= pos^post (+ 1 pos^0)))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l12 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l8 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
)
(rule
(l12 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l11 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l10 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l13 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ 0 K^0) 0) (= K^0 K^post)) (= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l10 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l12 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 K^0)) (= xx^post xx^post)) (<= 0 (+ 0 xx^post)))
(<= (+ 0 xx^post) 1))
(= K^0 K^post))
(= N^0 N^post))
(= next^0 next^post))
(= pos^0 pos^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
(rule
(l14 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l1 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and
(and
(and (and (= z^post z^post) (<= 0 (+ 0 z^post))) (= pos^post 0))
(= next^post 1))
(= N^post N^post))
(<= 1 (+ 0 N^post)))
(= K^post (+ 0 N^post)))
(= xx^post 0))
(= yy^post 0))
)
(rule
(l15 K^0 N^0 next^0 pos^0 xx^0 yy^0 z^0)
(l14 K^post N^post next^post pos^post xx^post yy^post z^post)
:guard
(and
(and
(and
(and
(and (and (= K^0 K^post) (= N^0 N^post)) (= next^0 next^post))
(= pos^0 pos^post))
(= xx^0 xx^post))
(= yy^0 yy^post))
(= z^0 z^post))
)
