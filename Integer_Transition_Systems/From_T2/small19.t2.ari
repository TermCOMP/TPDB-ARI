(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int))
(fun l1 (-> Int Int Int Int))
(fun l2 (-> Int Int Int Int))
(fun l3 (-> Int Int Int Int))
(entrypoint l3)
(rule
(l0 x^0 y^0 z^0)
(l1 x^post y^post z^post)
:guard
(and
(and
(and (and (<= 1 (+ 0 x^0)) (<= 1 (+ 0 y^0))) (= x^0 x^post))
(= y^0 y^post))
(= z^0 z^post))
)
(rule
(l1 x^0 y^0 z^0)
(l0 x^post y^post z^post)
:guard
(and (and (= y^post (+ -1 y^0)) (= x^post (+ 0 z^0))) (= z^0 z^post)))
(rule
(l1 x^0 y^0 z^0)
(l0 x^post y^post z^post)
:guard
(and (and (= x^post (+ -1 x^0)) (= y^0 y^post)) (= z^0 z^post)))
(rule
(l2 x^0 y^0 z^0)
(l0 x^post y^post z^post)
:guard
(and (and (= x^0 x^post) (= y^0 y^post)) (= z^0 z^post)))
(rule
(l3 x^0 y^0 z^0)
(l2 x^post y^post z^post)
:guard
(and (and (= x^0 x^post) (= y^0 y^post)) (= z^0 z^post)))
