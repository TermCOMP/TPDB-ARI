(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int))
(entrypoint l4)
(rule
(l0 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l2 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and
(and (<= (+ 1 deltaext^0) (+ 0 deltaext_new^0)) (= c0^0 c0^post))
(= deltaext^0 deltaext^post))
(= deltaext_new^0 deltaext_new^post))
(= wnt^0 wnt^post))
)
(rule
(l0 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l2 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and
(and (<= (+ 1 deltaext_new^0) (+ 0 deltaext^0)) (= c0^0 c0^post))
(= deltaext^0 deltaext^post))
(= deltaext_new^0 deltaext_new^post))
(= wnt^0 wnt^post))
)
(rule
(l2 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l1 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and (= deltaext^post (+ 0 deltaext_new^0)) (= c0^0 c0^post))
(= deltaext_new^0 deltaext_new^post))
(= wnt^0 wnt^post))
)
(rule
(l1 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l0 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and
(and
(and
(<= (+ -1 (* 2 deltaext^0)) (+ (+ 0 c0^0) wnt^0))
(<= (+ (+ 0 c0^0) wnt^0) (+ 0 (* 2 deltaext^0))))
(= deltaext_new^post (+ 0 deltaext^0)))
(= c0^0 c0^post))
(= deltaext^0 deltaext^post))
(= wnt^0 wnt^post))
)
(rule
(l1 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l0 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and
(and
(<= (+ (+ 1 c0^0) wnt^0) (+ -1 (* 2 deltaext^0)))
(= deltaext_new^post (+ -1 deltaext^0)))
(= c0^0 c0^post))
(= deltaext^0 deltaext^post))
(= wnt^0 wnt^post))
)
(rule
(l1 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l0 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and
(and
(<= (+ 1 (* 2 deltaext^0)) (+ (+ 0 c0^0) wnt^0))
(= deltaext_new^post (+ 1 deltaext^0)))
(= c0^0 c0^post))
(= deltaext^0 deltaext^post))
(= wnt^0 wnt^post))
)
(rule
(l3 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l1 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and
(and
(and
(and
(and (<= 0 (+ 0 wnt^0)) (<= (+ 0 wnt^0) 3))
(<= 0 (+ 0 deltaext^0)))
(<= (+ 0 deltaext^0) 3))
(= c0^post 2))
(= deltaext^0 deltaext^post))
(= deltaext_new^0 deltaext_new^post))
(= wnt^0 wnt^post))
)
(rule
(l4 c0^0 deltaext^0 deltaext_new^0 wnt^0)
(l3 c0^post deltaext^post deltaext_new^post wnt^post)
:guard
(and
(and
(and (= c0^0 c0^post) (= deltaext^0 deltaext^post))
(= deltaext_new^0 deltaext_new^post))
(= wnt^0 wnt^post))
)
