(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int))
(entrypoint l7)
(rule
(l0 __const_10^0 __const_5^0 i^0 j^0)
(l1 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and (= j^post (+ 0 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= i^0 i^post))
)

(rule
(l1 __const_10^0 __const_5^0 i^0 j^0)
(l2 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and (= i^post (+ 1 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= j^0 j^post))
)

(rule
(l3 __const_10^0 __const_5^0 i^0 j^0)
(l0 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and
(and (<= (+ 1 __const_5^0) (+ 0 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= i^0 i^post))
(= j^0 j^post))
)

(rule
(l3 __const_10^0 __const_5^0 i^0 j^0)
(l0 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 __const_5^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= i^0 i^post))
(= j^0 j^post))
)

(rule
(l3 __const_10^0 __const_5^0 i^0 j^0)
(l1 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and
(and
(and (<= (+ 0 i^0) (+ 0 __const_5^0)) (<= (+ 0 __const_5^0) (+ 0 i^0)))
(= i^post i^post))
(= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= j^0 j^post))
)

(rule
(l4 __const_10^0 __const_5^0 i^0 j^0)
(l5 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and
(and (<= (+ 0 __const_10^0) (+ 0 i^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= i^0 i^post))
(= j^0 j^post))
)

(rule
(l4 __const_10^0 __const_5^0 i^0 j^0)
(l3 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and
(and (<= (+ 1 i^0) (+ 0 __const_10^0)) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= i^0 i^post))
(= j^0 j^post))
)

(rule
(l2 __const_10^0 __const_5^0 i^0 j^0)
(l4 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= i^0 i^post))
(= j^0 j^post))
)

(rule
(l6 __const_10^0 __const_5^0 i^0 j^0)
(l2 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and (= i^post 0) (= __const_10^0 __const_10^post))
(= __const_5^0 __const_5^post))
(= j^0 j^post))
)

(rule
(l7 __const_10^0 __const_5^0 i^0 j^0)
(l6 __const_10^post __const_5^post i^post j^post)
:guard
(and
(and
(and (= __const_10^0 __const_10^post) (= __const_5^0 __const_5^post))
(= i^0 i^post))
(= j^0 j^post))
)

