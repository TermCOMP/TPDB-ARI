(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l1 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l10 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l11 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l12 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l13 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l14 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l15 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l16 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l17 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l18 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l19 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l2 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l20 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l21 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l22 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l3 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l4 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l5 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l6 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l7 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l8 (-> Int Int Int Int Int Int Int Int Int Int Int))
(fun l9 (-> Int Int Int Int Int Int Int Int Int Int Int))
(entrypoint l22)
(rule
(l0 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l1
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 seq^0) (+ 1 n^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l2 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l0
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 max^0) (+ 0 m^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l2 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l0
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 1 m^0) (+ 0 max^0)) (= m^post (+ 1 m^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l3 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l4
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= seq^post (+ 1 seq^0)) (= wpos^post 0)) (= pos^post 0))
(= pi^post (+ 0 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
)
(rule
(l5 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l3
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 pi^0) 0) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l5 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l4
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pi^0)) (<= (+ 0 c2^0) 0)) (= wpos^post 0))
(= pi^post (+ -1 pi^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)
(rule
(l6 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l3
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 2 (+ 0 wpos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l6 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l5
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 wpos^0) 1) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l7 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l6
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 wpos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l7 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l4
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 wpos^0) 0) (<= 1 (+ 0 c2^0)))
(= wpos^post (+ 1 wpos^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)
(rule
(l8 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l4
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 2 (+ 0 pos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l8 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l7
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 pos^0) 1) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l4 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l0
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 c2^0) 1) (= m^post (+ -1 m^0))) (= c1^0 c1^post))
(= c2^0 c2^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l4 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l2
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 c2^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l9 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l8
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l9 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l4
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 c2^0) 0))
(= pos^post (+ 1 pos^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l10 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l4
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
)
(rule
(l10 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l9
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l11 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l12
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= seq^post (+ 1 seq^0)) (= wpos^post 0)) (= pos^post 0))
(= pi^post (+ 0 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
)
(rule
(l13 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l11
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 pi^0) 0) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l13 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l12
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pi^0)) (<= (+ 0 c1^0) 0)) (= wpos^post 0))
(= pi^post (+ -1 pi^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)
(rule
(l14 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l11
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 2 (+ 0 wpos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l14 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l13
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 wpos^0) 1) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l15 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l14
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 wpos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l15 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l12
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 wpos^0) 0) (<= 1 (+ 0 c1^0)))
(= wpos^post (+ 1 wpos^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= z^0 z^post))
)
(rule
(l16 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l12
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 2 (+ 0 pos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l16 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l15
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 pos^0) 1) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l12 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l0
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 1 c1^0) 1) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l12 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l10
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 c1^0)) (= c2^post c2^post)) (<= 0 (+ 0 c2^post)))
(<= (+ 0 c2^post) 1))
(= c1^0 c1^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l17 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l16
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 pos^0)) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l17 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l12
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (<= (+ 0 pos^0) 0) (<= (+ 0 c1^0) 0))
(= pos^post (+ 1 pos^0)))
(= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l18 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l12
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 z^0)) (= z^post (+ -1 z^0))) (= c1^0 c1^post))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
)
(rule
(l18 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l17
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 z^0) 0) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l19 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l1
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= seq^post 1) (= wpos^post 0)) (= pi^post (+ 0 seq^post)))
(= z^post z^post))
(<= 0 (+ 0 z^post)))
(= pos^post 0))
(= n^post n^post))
(<= 0 (+ 0 n^post)))
(= max^post max^post))
(<= 0 (+ 0 max^post)))
(<= (+ 0 max^post) (+ 0 n^post)))
(= m^post m^post))
(<= (+ 0 m^post) (+ 0 max^post)))
(<= 0 (+ 0 m^post)))
(= c1^0 c1^post))
(= c2^0 c2^post))
)
(rule
(l20 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l21
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ 0 m^0) 0) (= c1^0 c1^post)) (= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l20 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l18
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= 1 (+ 0 m^0)) (= c1^post c1^post)) (<= 0 (+ 0 c1^post)))
(<= (+ 0 c1^post) 1))
(= c2^0 c2^post))
(= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l1 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l20
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (= c1^0 c1^post) (= c2^0 c2^post)) (= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
(rule
(l22 c1^0 c2^0 m^0 max^0 n^0 pi^0 pos^0 seq^0 wpos^0 z^0)
(l19
c1^post
c2^post
m^post
max^post
n^post
pi^post
pos^post
seq^post
wpos^post
z^post)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (= c1^0 c1^post) (= c2^0 c2^post)) (= m^0 m^post))
(= max^0 max^post))
(= n^0 n^post))
(= pi^0 pi^post))
(= pos^0 pos^post))
(= seq^0 seq^post))
(= wpos^0 wpos^post))
(= z^0 z^post))
)
