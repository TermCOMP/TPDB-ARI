(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int))
(fun l1 (-> Int Int Int))
(fun l2 (-> Int Int Int))
(fun l3 (-> Int Int Int))
(fun l4 (-> Int Int Int))
(fun l5 (-> Int Int Int))
(entrypoint l5)
(rule
(l0 x^0 y^0)
(l1 x^post y^post)
:guard
(and (and (<= 1 (+ 0 x^0)) (= y^post (+ 0 x^0))) (= x^0 x^post)))

(rule
(l1 x^0 y^0)
(l2 x^post y^post)
:guard
(and (and (<= (+ 0 y^0) 0) (= x^0 x^post)) (= y^0 y^post)))

(rule
(l1 x^0 y^0)
(l3 x^post y^post)
:guard
(and (and (<= 1 (+ 0 y^0)) (= y^post (+ -1 y^0))) (= x^0 x^post)))

(rule
(l3 x^0 y^0)
(l1 x^post y^post)
:guard
(and (= x^0 x^post) (= y^0 y^post)))

(rule
(l2 x^0 y^0)
(l0 x^post y^post)
:guard
(and (= y^post (+ 1 y^0)) (= x^0 x^post)))

(rule
(l2 x^0 y^0)
(l0 x^post y^post)
:guard
(and (= x^post (+ -1 x^0)) (= y^post (+ 1 y^0))))

(rule
(l4 x^0 y^0)
(l0 x^post y^post)
:guard
(and (= x^0 x^post) (= y^0 y^post)))

(rule
(l5 x^0 y^0)
(l4 x^post y^post)
:guard
(and (= x^0 x^post) (= y^0 y^post)))

