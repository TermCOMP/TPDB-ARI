(format LCTRS)
(theory Ints)
(fun l0 (-> Int Int Int Int))
(fun l1 (-> Int Int Int Int))
(fun l10 (-> Int Int Int Int))
(fun l2 (-> Int Int Int Int))
(fun l3 (-> Int Int Int Int))
(fun l4 (-> Int Int Int Int))
(fun l5 (-> Int Int Int Int))
(fun l6 (-> Int Int Int Int))
(fun l7 (-> Int Int Int Int))
(fun l8 (-> Int Int Int Int))
(fun l9 (-> Int Int Int Int))
(entrypoint l10)
(rule
(l0 Stored^0 tmp1^0 tmp___02^0)
(l1 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (and (<= (+ 0 tmp1^0) 0) (<= 0 (+ 0 tmp1^0))) (= Stored^post 1))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l0 Stored^0 tmp1^0 tmp___02^0)
(l2 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (<= 1 (+ 0 tmp1^0)) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l0 Stored^0 tmp1^0 tmp___02^0)
(l2 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (<= (+ 1 tmp1^0) 0) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l3 Stored^0 tmp1^0 tmp___02^0)
(l0 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= tmp1^post tmp1^post) (= Stored^0 Stored^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l4 Stored^0 tmp1^0 tmp___02^0)
(l1 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and
(and (<= (+ 0 tmp___02^0) 0) (<= 0 (+ 0 tmp___02^0)))
(= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l4 Stored^0 tmp1^0 tmp___02^0)
(l3 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (<= 1 (+ 0 tmp___02^0)) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l4 Stored^0 tmp1^0 tmp___02^0)
(l3 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (<= (+ 1 tmp___02^0) 0) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l5 Stored^0 tmp1^0 tmp___02^0)
(l6 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= Stored^0 Stored^post) (= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l7 Stored^0 tmp1^0 tmp___02^0)
(l4 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= tmp___02^post tmp___02^post) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
)
(rule
(l1 Stored^0 tmp1^0 tmp___02^0)
(l8 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= Stored^0 Stored^post) (= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l8 Stored^0 tmp1^0 tmp___02^0)
(l5 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (<= 2 (+ 0 Stored^0)) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l8 Stored^0 tmp1^0 tmp___02^0)
(l5 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (<= (+ 1 Stored^0) 1) (= Stored^0 Stored^post))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l8 Stored^0 tmp1^0 tmp___02^0)
(l5 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and
(and (and (<= (+ 0 Stored^0) 1) (<= 1 (+ 0 Stored^0))) (= Stored^post 0))
(= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l2 Stored^0 tmp1^0 tmp___02^0)
(l7 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= Stored^0 Stored^post) (= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l9 Stored^0 tmp1^0 tmp___02^0)
(l7 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= Stored^post 0) (= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
(rule
(l10 Stored^0 tmp1^0 tmp___02^0)
(l9 Stored^post tmp1^post tmp___02^post)
:guard
(and
(and (= Stored^0 Stored^post) (= tmp1^0 tmp1^post))
(= tmp___02^0 tmp___02^post))
)
