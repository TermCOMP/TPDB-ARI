(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))
(fun
f1_0_main_Load
(-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))

(fun
f2937_0_createMap_LE
(-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))

(fun
f3410_0_put_NULL
(-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))

(fun
f3488_0_put_EQ
(-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))

(fun
f3934_0_transfer_GE
(-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))

(fun
f4029_0_transfer_ArrayAccess
(-> Int Int Int Int Int Int Int Int Int Int Int Int Int Int))

(entrypoint __init)
(rule
(f1_0_main_Load
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f2937_0_createMap_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2P (- 1)) (> arg2 0)) (<= (- arg1P 14) arg1))
(> arg1 0))
(> arg1P 14))
(= arg2 arg3P))
(= 1 arg4P))
(= 0 arg5P))
(= 16 arg6P))
(= 12 arg7P))
)

(rule
(f2937_0_createMap_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f2937_0_createMap_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(exists
((x15 Int) (x16 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 0) (< (+ arg4 1) arg3)) (> arg3 (- 1)))
(> arg4 (- 1)))
(> x15 (- 1)))
(> x16 (- 1)))
(> arg6 1))
(> arg1 3))
(> arg1P 3))
(<= (+ arg5 3) arg1))
(>= arg1 (+ arg7 3)))
(= (- arg2 1) arg2P))
(= arg3 arg3P))
(= (+ arg4 2) arg4P))
)
)

(rule
(f2937_0_createMap_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3410_0_put_NULL
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(exists
((x28 Int) (x29 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< (+ arg4 1) arg3) (> arg6 1)) (> arg2 0))
(> arg3 (- 1)))
(> arg4 (- 1)))
(> x28 (- 1)))
(> x29 (- 1)))
(< arg3P arg6))
(<= arg1P arg1))
(> arg1 3))
(> arg1P 3))
(> arg4P (- 1)))
(<= (+ arg5 3) arg1))
(<= (+ arg7 3) arg1))
(= arg3 arg5P))
(= (+ arg4 2) arg6P))
(= arg5 arg7P))
(= arg6 arg8P))
(= arg7 arg9P))
)
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3488_0_put_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg8 1)) (<= arg3P arg4))
(<= (+ arg9P 2) arg4))
(> arg1 3))
(> arg4 2))
(> arg1P 3))
(> arg3P 2))
(> arg9P (- 1)))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(>= arg4 (+ arg2 2)))
(<= (+ arg10P 4) arg4))
(= arg3 arg2P))
(= 0 arg4P))
(= arg7 arg5P))
(= arg8 arg6P))
(= arg9 arg7P))
(= arg2 arg8P))
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3488_0_put_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg8 1)) (<= arg3P arg4))
(<= (+ arg9P 2) arg4))
(> arg1 3))
(> arg4 2))
(> arg1P 3))
(> arg3P 2))
(> arg9P (- 1)))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(>= arg4 (+ arg2 2)))
(<= (+ arg10P 4) arg4))
(= arg3 arg2P))
(= 1 arg4P))
(= arg7 arg5P))
(= arg8 arg6P))
(= arg9 arg7P))
(= arg2 arg8P))
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3410_0_put_NULL
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(exists
((x67 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (< x67 arg2)) (<= (+ arg4P 1) arg4))
(> arg1 3))
(> arg4 0))
(> arg1P 3))
(> arg4P (- 1)))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3410_0_put_NULL
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(exists
((x202 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> x202 arg2)) (<= (+ arg4P 1) arg4))
(> arg1 3))
(> arg4 0))
(> arg1P 3))
(> arg4P (- 1)))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3410_0_put_NULL
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg8 1)) (<= (+ arg4P 2) arg4))
(> arg1 3))
(> arg4 1))
(> arg1P 3))
(> arg4P (- 1)))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(>= arg4 (+ arg2 2)))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3410_0_put_NULL
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg8 1)) (<= (+ arg4P 2) arg4))
(> arg1 3))
(> arg4 2))
(> arg1P 3))
(> arg4P (- 1)))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(>= arg4 (+ arg2 2)))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)

(rule
(f3488_0_put_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3410_0_put_NULL
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (>= arg1 arg1P) (>= arg3 (+ arg4P 2))) (>= arg9 arg4P))
(> arg1 3))
(> arg3 2))
(> arg9 (- 1)))
(> arg1P 3))
(> arg4P (- 1)))
(<= (+ arg5 3) arg1))
(<= (+ arg7 3) arg1))
(>= arg3 (+ arg8 2)))
(<= (+ arg10 4) arg3))
(= 0 arg4))
(= arg8 arg2P))
(= arg2 arg3P))
(= arg5 arg7P))
(= arg6 arg8P))
(= arg7 arg9P))
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3934_0_transfer_GE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg8 arg3) (> arg8 1)) (<= arg9 arg7))
(>= (* 2 arg8) 0))
(< arg8 1073741824))
(<= (- arg1P 1) arg1))
(<= (+ arg2P 3) arg1))
(<= (- arg2P 1) arg4))
(<= (+ arg3P 3) arg1))
(<= (- arg3P 1) arg4))
(> arg1 3))
(> arg4 (- 1)))
(> arg1P 3))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(= 0 arg4P))
(= (+ arg7 1) arg5P))
(= arg9 arg6P))
(= (* 2 arg8) arg7P))
(= arg8 arg8P))
)

(rule
(f3410_0_put_NULL
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3934_0_transfer_GE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg8 arg3) (> arg8 1073741824)) (>= (* 2 arg8) 0))
(<= arg9 arg7))
(<= (- arg1P 1) arg1))
(<= (+ arg2P 3) arg1))
(<= (- arg2P 1) arg4))
(<= (+ arg3P 3) arg1))
(<= (- arg3P 1) arg4))
(> arg1 3))
(> arg4 (- 1)))
(> arg1P 3))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg7 3) arg1))
(<= (+ arg9 3) arg1))
(= 0 arg4P))
(= (+ arg7 1) arg5P))
(= arg9 arg6P))
(= (* 2 arg8) arg7P))
(= arg8 arg8P))
)

(rule
(f3934_0_transfer_GE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f4029_0_transfer_ArrayAccess
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg7 0) (> arg8 arg4)) (<= arg1P arg1))
(<= (+ arg2P 3) arg1))
(<= arg2P arg2))
(<= arg2P arg3))
(<= (+ arg6P 3) arg1))
(<= arg6P arg2))
(<= arg6P arg3))
(> arg1 3))
(> arg2 0))
(> arg3 0))
(> arg1P 3))
(> arg2P 0))
(> arg4P (- 1)))
(> arg5P 0))
(> arg6P 0))
(<= (+ arg5 3) arg1))
(<= (+ arg6 3) arg1))
(= arg4 arg3P))
(= arg5 arg8P))
(= arg6 arg9P))
(= arg8 arg10P))
(= arg7 arg13P))
)

(rule
(f4029_0_transfer_ArrayAccess
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f4029_0_transfer_ArrayAccess
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg13 arg7) (> arg13 0)) (<= arg1P arg1))
(<= (+ arg2P 3) arg1))
(<= arg2P arg2))
(<= arg2P arg4))
(<= (+ arg2P 2) arg5))
(<= arg2P arg6))
(<= (+ arg4P 1) arg4))
(<= (+ arg4P 3) arg5))
(<= arg5P arg4))
(<= (+ arg5P 2) arg5))
(<= (+ arg6P 3) arg1))
(<= arg6P arg2))
(<= arg6P arg4))
(<= (+ arg6P 2) arg5))
(<= arg6P arg6))
(> arg1 3))
(> arg2 0))
(> arg4 0))
(> arg5 2))
(> arg6 0))
(> arg1P 3))
(> arg2P 0))
(> arg4P (- 1)))
(> arg5P 0))
(> arg6P 0))
(<= (+ arg8 3) arg1))
(<= (+ arg9 3) arg1))
(<= (+ arg11P 2) arg4))
(<= (+ arg12P 2) arg4))
(<= (+ arg11 2) arg5))
(<= (+ arg11P 4) arg5))
(<= (+ arg12P 4) arg5))
(<= (+ arg12 2) arg5))
(= arg3 arg3P))
(= arg8 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg13 arg13P))
)

(rule
(f3934_0_transfer_GE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3934_0_transfer_GE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg8 (- 1)) (> arg8 arg4)) (<= arg1P arg1))
(<= (+ arg2P 3) arg1))
(<= arg2P arg2))
(<= arg2P arg3))
(<= (+ arg3P 3) arg1))
(<= arg3P arg2))
(<= arg3P arg3))
(> arg1 3))
(> arg2 0))
(> arg3 0))
(> arg1P 3))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg5 3) arg1))
(<= (+ arg6 3) arg1))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
)

(rule
(f4029_0_transfer_ArrayAccess
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13)
(f3934_0_transfer_GE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg10 (- 1)) (> arg13 arg7)) (<= arg1P arg1))
(<= (+ arg2P 3) arg1))
(<= arg2P arg2))
(<= (- arg2P 1) arg4))
(<= (+ arg2P 1) arg5))
(<= arg2P arg6))
(<= (+ arg3P 3) arg1))
(<= arg3P arg2))
(<= (- arg3P 1) arg4))
(<= (+ arg3P 1) arg5))
(<= arg3P arg6))
(> arg1 3))
(> arg2 0))
(> arg4 (- 1)))
(> arg5 1))
(> arg6 0))
(> arg1P 3))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg8 3) arg1))
(<= (+ arg9 3) arg1))
(<= (+ arg11 2) arg5))
(<= (+ arg12 2) arg5))
(= (+ arg3 1) arg4P))
(= arg8 arg5P))
(= arg9 arg6P))
(= arg13 arg7P))
(= arg10 arg8P))
)

(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9 arg10 arg11 arg12 arg13)
(f1_0_main_Load
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P)
)

