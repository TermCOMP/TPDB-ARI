(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f50_0_increase_GE (-> Int Int Int Int))
(fun f79_0_increase_LE (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f50_0_increase_GE arg1P arg2P arg3P)
:guard
(and (and (> arg1 0) (> arg2 (- 1))) (= arg2 arg1P)))
(rule
(f50_0_increase_GE arg1 arg2 arg3)
(f79_0_increase_LE arg1P arg2P arg3P)
:guard
(and
(and (and (< arg1 10) (= arg1 arg1P)) (= arg1 arg2P))
(= arg1 arg3P))
)
(rule
(f79_0_increase_LE arg1 arg2 arg3)
(f50_0_increase_GE arg1P arg2P arg3P)
:guard
(and (and (= 0 arg2) (= 0 arg3)) (= (+ arg1 1) arg1P)))
(rule
(f79_0_increase_LE arg1 arg2 arg3)
(f79_0_increase_LE arg1P arg2P arg3P)
:guard
(and
(and
(and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
(= (+ arg2 1) arg3P))
)
(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
