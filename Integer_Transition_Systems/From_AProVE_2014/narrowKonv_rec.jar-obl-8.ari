(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(fun f251_0_loop_GT (-> Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2)
(f251_0_loop_GT arg1P arg2P)
:guard
(and (and (and (> arg1 0) (> arg2 (- 1))) (= arg2 arg1P)) (= 20 arg2P)))

(rule
(f251_0_loop_GT arg1 arg2)
(f251_0_loop_GT arg1P arg2P)
:guard
(and (and (and (= 0 arg1) (= 0 arg2)) (= 0 arg1P)) (= 0 arg2P)))

(rule
(f251_0_loop_GT arg1 arg2)
(f251_0_loop_GT arg1P arg2P)
:guard
(and
(and
(and (and (> arg2 arg1) (> arg2 0)) (> arg1 0))
(= (+ arg1 1) arg1P))
(= arg2 arg2P))
)

(rule
(f251_0_loop_GT arg1 arg2)
(f251_0_loop_GT arg1P arg2P)
:guard
(and
(and (and (> arg1 0) (= arg1 arg2)) (= 0 arg1P))
(= (- arg1 1) arg2P))
)

(rule
(f251_0_loop_GT arg1 arg2)
(f251_0_loop_GT arg1P arg2P)
:guard
(and (and (and (> arg2 0) (= 0 arg1)) (= 1 arg1P)) (= arg2 arg2P)))

(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
