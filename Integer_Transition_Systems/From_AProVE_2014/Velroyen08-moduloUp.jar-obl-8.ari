(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(fun f48_0_up_GE (-> Int Int Int))
(fun |f48_0_up_GE'| (-> Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2)
(f48_0_up_GE arg1P arg2P)
:guard
(and (and (> arg1 0) (> arg2 (- 1))) (= arg2 arg1P)))
(rule
(f48_0_up_GE arg1 arg2)
(|f48_0_up_GE'| arg1P arg2P)
:guard
(and (< arg1 15) (= arg1 arg1P)))
(rule
(|f48_0_up_GE'| arg1 arg2)
(f48_0_up_GE arg1P arg2P)
:guard
(exists
((x4 Int))
(and
(and
(and (< arg1 15) (< (- (+ arg1 1) (* 10 x4)) 10))
(>= (- (+ arg1 1) (* 10 x4)) 0))
(= (- (+ arg1 1) (* 10 x4)) arg1P))
)
)
(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
