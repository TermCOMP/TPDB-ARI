(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int))
(fun f362_0_gt_LE (-> Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5)
(f362_0_gt_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and (and (> arg2P (- 1)) (> arg2 (- 1))) (> arg1P (- 1)))
(> arg1 0))
(= arg1P arg3P))
(= arg2P arg4P))
(= arg1P arg5P))
)
(rule
(f362_0_gt_LE arg1 arg2 arg3 arg4 arg5)
(f362_0_gt_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and (and (and (> arg3 0) (> arg4 0)) (= arg3 arg5)) (= arg1 arg1P))
(= arg2 arg2P))
(= (- arg3 1) arg3P))
(= (- arg4 1) arg4P))
(= (- arg3 1) arg5P))
)
(rule
(f362_0_gt_LE arg1 arg2 arg3 arg4 arg5)
(f362_0_gt_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and (and (and (> arg3 0) (= 0 arg4)) (= arg3 arg5)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= (+ arg2 1) arg4P))
(= arg1 arg5P))
)
(rule
(__init arg1 arg2 arg3 arg4 arg5)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P))
