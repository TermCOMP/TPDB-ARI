(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(fun f30_0_loop_JMP (-> Int Int Int))
(entrypoint __init)
(rule
(f30_0_loop_JMP arg1 arg2)
(f30_0_loop_JMP arg1P arg2P)
:guard
(and (and (and (<= arg1P arg1) (> arg1 0)) (> arg1P 0)) (= arg2 arg2P)))
(rule
(f1_0_main_Load arg1 arg2)
(f30_0_loop_JMP arg1P arg2P)
:guard
(and
(and (and (and (<= arg1P arg1) (> arg2 (- 1))) (> arg1 0)) (> arg1P 0))
(= arg2 arg2P))
)
(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
