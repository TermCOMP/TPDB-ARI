(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int))
(fun f248_0_mod_LT (-> Int Int Int Int Int))
(fun f319_0_minus_EQ (-> Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4)
(f248_0_mod_LT arg1P arg2P arg3P arg4P)
:guard
(and (and (and (> arg2P (- 1)) (> arg2 1)) (> arg1P (- 1))) (> arg1 0)))

(rule
(f248_0_mod_LT arg1 arg2 arg3 arg4)
(f319_0_minus_EQ arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and (and (and (<= arg2 arg1) (> arg2 0)) (= arg2 arg1P)) (= arg1 arg2P))
(= arg2 arg3P))
(= arg2 arg4P))
)

(rule
(f319_0_minus_EQ arg1 arg2 arg3 arg4)
(f248_0_mod_LT arg1P arg2P arg3P arg4P)
:guard
(and (and (and (= 0 arg3) (= 0 arg4)) (= arg2 arg1P)) (= arg1 arg2P)))

(rule
(f319_0_minus_EQ arg1 arg2 arg3 arg4)
(f319_0_minus_EQ arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and (and (and (< arg3 0) (< arg3 1)) (= arg3 arg4)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
(= (+ arg3 1) arg3P))
(= (+ arg3 1) arg4P))
)

(rule
(f319_0_minus_EQ arg1 arg2 arg3 arg4)
(f319_0_minus_EQ arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and (and (and (> arg3 0) (< arg3 1)) (= arg3 arg4)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
(= (+ arg3 1) arg3P))
(= (+ arg3 1) arg4P))
)

(rule
(f319_0_minus_EQ arg1 arg2 arg3 arg4)
(f319_0_minus_EQ arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and (and (> arg3 0) (= arg3 arg4)) (= arg1 arg1P))
(= (- arg2 1) arg2P))
(= (- arg3 1) arg3P))
(= (- arg3 1) arg4P))
)

(rule (__init arg1 arg2 arg3 arg4) (f1_0_main_Load arg1P arg2P arg3P arg4P))
