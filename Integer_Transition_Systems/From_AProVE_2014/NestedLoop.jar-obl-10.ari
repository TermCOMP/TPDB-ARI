(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int))
(fun f254_0_main_GE (-> Int Int Int Int Int))
(fun f494_0_main_GE (-> Int Int Int Int Int))
(fun f510_0_main_GE (-> Int Int Int Int Int))
(fun f609_0_main_GE (-> Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4)
(f254_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg2 (- 1))) (> arg1 0)) (> arg1P 0))
(= 0 arg2P))
(= (- arg2 1) arg3P))
(= arg2 arg4P))
)
(rule
(f254_0_main_GE arg1 arg2 arg3 arg4)
(f254_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (> arg3 arg2) (< arg2 arg4)) (> arg4 (- 1)))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(= (+ arg2 1) arg2P))
(= (- arg4 1) arg3P))
(= arg4 arg4P))
)
(rule
(f254_0_main_GE arg1 arg2 arg3 arg4)
(f494_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and (and (<= arg3 arg2) (> arg4 (- 1))) (>= arg1 arg1P))
(> arg1 0))
(> arg1P 0))
(= 0 arg2P))
(= (- arg4 1) arg3P))
(= arg4 arg4P))
)
(rule
(f494_0_main_GE arg1 arg2 arg3 arg4)
(f510_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg3 arg2)) (<= arg2P arg1))
(> arg1 0))
(> arg2P 0))
(= arg2 arg1P))
(= (+ arg2 1) arg3P))
(= arg4 arg4P))
)
(rule
(f510_0_main_GE arg1 arg2 arg3 arg4)
(f494_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (<= arg4 arg3)) (<= arg1P arg2))
(> arg2 0))
(> arg1P 0))
(= (+ arg1 1) arg2P))
(= (- arg4 1) arg3P))
(= arg4 arg4P))
)
(rule
(f494_0_main_GE arg1 arg2 arg3 arg4)
(f609_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and (and (<= arg3 arg2) (> arg4 (- 1))) (<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(= 0 arg2P))
(= (- arg4 1) arg3P))
(= arg4 arg4P))
)
(rule
(f609_0_main_GE arg1 arg2 arg3 arg4)
(f609_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> arg3 arg2)) (<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(= (+ arg2 1) arg2P))
(= (- arg4 1) arg3P))
(= arg4 arg4P))
)
(rule
(f510_0_main_GE arg1 arg2 arg3 arg4)
(f510_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(exists
((x39 Int) (x38 Int))
(and
(and
(and
(and
(and
(and
(and (and (> arg4 arg3) (> arg4 arg1)) (>= x39 x38))
(<= arg2P arg2))
(> arg2 0))
(> arg2P 0))
(= arg1 arg1P))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)
)
(rule
(f510_0_main_GE arg1 arg2 arg3 arg4)
(f510_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(exists
((x46 Int) (x45 Int))
(and
(and
(and
(and
(and
(and (and (and (> arg4 arg3) (> arg4 arg1)) (< x46 x45)) (<= arg2P arg2))
(> arg2 0))
(> arg2P 0))
(= arg1 arg1P))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)
)
(rule (__init arg1 arg2 arg3 arg4) (f1_0_main_Load arg1P arg2P arg3P arg4P))
