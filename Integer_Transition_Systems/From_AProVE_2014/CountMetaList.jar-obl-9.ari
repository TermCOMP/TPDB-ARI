(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int))
(fun f265_0_createMetaList_Return (-> Int Int Int Int Int))
(fun f693_0_createMetaList_GE (-> Int Int Int Int Int))
(fun f724_0_countMetaList_NULL (-> Int Int Int Int Int))
(fun f932_0_createMetaList_LE (-> Int Int Int Int Int))
(entrypoint __init)
(rule
(f265_0_createMetaList_Return arg1 arg2 arg3 arg4)
(f724_0_countMetaList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (and (<= arg1P arg1) (> arg1 (- 1))) (> arg1P (- 1))))

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4)
(f724_0_countMetaList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (> arg1 0) (> arg1P (- 1))))

(rule
(f724_0_countMetaList_NULL arg1 arg2 arg3 arg4)
(f724_0_countMetaList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (and (<= (+ arg1P 2) arg1) (> arg1 2)) (> arg1P (- 1))))

(rule
(f724_0_countMetaList_NULL arg1 arg2 arg3 arg4)
(f724_0_countMetaList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (and (<= (+ arg1P 2) arg1) (> arg1 1)) (> arg1P (- 1))))

(rule
(f724_0_countMetaList_NULL arg1 arg2 arg3 arg4)
(f724_0_countMetaList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (and (>= arg1 arg1P) (> arg1 2)) (> arg1P 0)))

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4)
(f693_0_createMetaList_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and (and (and (> arg2 (- 1)) (> arg2P (- 1))) (> arg1 0)) (= 0 arg1P))
(= 1 arg3P))
)

(rule
(f693_0_createMetaList_GE arg1 arg2 arg3 arg4)
(f932_0_createMetaList_LE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and (and (> arg3P (- 1)) (> arg2 arg1)) (> arg3 0))
(= arg2 arg1P))
(= arg1 arg2P))
(= (+ arg3 1) arg4P))
)

(rule
(f932_0_createMetaList_LE arg1 arg2 arg3 arg4)
(f693_0_createMetaList_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and (and (= 0 arg3) (= (+ arg2 1) arg1P)) (= arg1 arg2P))
(= arg4 arg3P))
)

(rule
(f932_0_createMetaList_LE arg1 arg2 arg3 arg4)
(f932_0_createMetaList_LE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and (and (> arg3 0) (= arg1 arg1P)) (= arg2 arg2P))
(= (- arg3 1) arg3P))
(= arg4 arg4P))
)

(rule (__init arg1 arg2 arg3 arg4) (f1_0_main_Load arg1P arg2P arg3P arg4P))
