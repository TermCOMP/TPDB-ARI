(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f151_0_main_InvokeMethod (-> Int Int Int Int))
(fun f1_0_main_ConstantStackPush (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_ConstantStackPush arg1 arg2 arg3)
(f151_0_main_InvokeMethod arg1P arg2P arg3P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (<= arg2P arg1)) (> arg1 0)) (> arg1P 0))
(> arg2P 0))
(= 2 arg2))
(= 2 arg3P))
)
(rule
(f1_0_main_ConstantStackPush arg1 arg2 arg3)
(f151_0_main_InvokeMethod arg1P arg2P arg3P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (<= arg2P arg1)) (> arg1 0)) (> arg1P 0))
(> arg2P 0))
(= 1 arg2))
(= 1 arg3P))
)
(rule
(f151_0_main_InvokeMethod arg1 arg2 arg3)
(f151_0_main_InvokeMethod arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg1P arg2)) (>= arg1 arg2P))
(>= arg2 arg2P))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= arg3 arg3P))
)
(rule
(f151_0_main_InvokeMethod arg1 arg2 arg3)
(f151_0_main_InvokeMethod arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg1P arg2)) (<= arg2P arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= arg3 arg3P))
)
(rule
(__init arg1 arg2 arg3)
(f1_0_main_ConstantStackPush arg1P arg2P arg3P))
