(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int))
(fun f1058_0_size_NULL (-> Int Int Int Int Int))
(fun f1097_0_outputList_NULL (-> Int Int Int Int Int))
(fun f1_0_main_New (-> Int Int Int Int Int))
(fun f909_0_main_GE (-> Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_New arg1 arg2 arg3 arg4)
(f909_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg2 (- 1))) (<= (- arg2P 1) arg1))
(> arg1 0))
(> arg1P 0))
(> arg2P 1))
(= 1 arg3P))
(= arg2 arg4P))
)
(rule
(f909_0_main_GE arg1 arg2 arg3 arg4)
(f1058_0_size_NULL arg1P arg2P arg3P arg4P)
:guard
(and (and (and (> arg1 0) (<= arg4 arg3)) (> arg2 0)) (> arg1P (- 1))))
(rule
(f1058_0_size_NULL arg1 arg2 arg3 arg4)
(f1097_0_outputList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (> arg1 (- 1)) (> arg1P (- 1))))
(rule
(f1058_0_size_NULL arg1 arg2 arg3 arg4)
(f1058_0_size_NULL arg1P arg2P arg3P arg4P)
:guard
(and (> arg1 0) (> arg1P (- 1))))
(rule
(f1097_0_outputList_NULL arg1 arg2 arg3 arg4)
(f1097_0_outputList_NULL arg1P arg2P arg3P arg4P)
:guard
(and (> arg1 0) (> arg1P (- 1))))
(rule
(f909_0_main_GE arg1 arg2 arg3 arg4)
(f909_0_main_GE arg1P arg2P arg3P arg4P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (+ arg3 2)) (> arg4 (+ arg3 1))) (> arg4 (- 1)))
(<= arg1P arg1))
(<= arg1P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 6))
(= (+ arg3 4) arg3P))
(= arg4 arg4P))
)
(rule (__init arg1 arg2 arg3 arg4) (f1_0_main_New arg1P arg2P arg3P arg4P))
