(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f137_0_odd_NE (-> Int Int Int))
(fun f172_0_even_NE (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2)
(f172_0_even_NE arg1P arg2P)
:guard
(and
(and (and (< (- arg2 5) arg2) (> arg2 (- 1))) (> arg1 0))
(= (- arg2 5) arg1P))
)

(rule
(f172_0_even_NE arg1 arg2)
(f137_0_odd_NE arg1P arg2P)
:guard
(and
(and (and (and (< arg1 1) (< arg1 0)) (< (- arg1 1) arg1)) (< arg1 2))
(= (- arg1 1) arg1P))
)

(rule
(f172_0_even_NE arg1 arg2)
(f137_0_odd_NE arg1P arg2P)
:guard
(and (and (> arg1 1) (< (- arg1 1) arg1)) (= (- arg1 1) arg1P)))

(rule
(f137_0_odd_NE arg1 arg2)
(f172_0_even_NE arg1P arg2P)
:guard
(and
(and (and (and (< arg1 1) (< arg1 0)) (< (- arg1 1) arg1)) (< arg1 2))
(= (- arg1 1) arg1P))
)

(rule
(f137_0_odd_NE arg1 arg2)
(f172_0_even_NE arg1P arg2P)
:guard
(and (and (> arg1 1) (< (- arg1 1) arg1)) (= (- arg1 1) arg1P)))

(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
