(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f191_0_main_LE (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f270_0_length_FieldAccess (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f191_0_main_LE arg1P arg2P arg3P)
:guard
(and
(and
(and (and (> arg1 0) (> arg2 (- 1))) (= (- arg2 1) arg1P))
(= arg2 arg2P))
(= 0 arg3P))
)
(rule
(f191_0_main_LE arg1 arg2 arg3)
(f191_0_main_LE arg1P arg2P arg3P)
:guard
(and
(and (and (> arg2 0) (> arg3 0)) (= (- arg1 1) arg1P))
(= arg1 arg2P))
)
(rule
(f191_0_main_LE arg1 arg2 arg3)
(f191_0_main_LE arg1P arg2P arg3P)
:guard
(and
(and (and (> arg2 0) (= (- arg1 1) arg1P)) (= arg1 arg2P))
(= 1 arg3P))
)
(rule
(f191_0_main_LE arg1 arg2 arg3)
(f270_0_length_FieldAccess arg1P arg2P arg3P)
:guard
(and (< arg2 1) (> arg1P 0)))
(rule
(f270_0_length_FieldAccess arg1 arg2 arg3)
(f270_0_length_FieldAccess arg1P arg2P arg3P)
:guard
(and (and (<= (+ arg1P 1) arg1) (> arg1 0)) (> arg1P (- 1))))
(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
