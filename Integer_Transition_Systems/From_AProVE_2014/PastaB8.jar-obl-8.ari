(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f115_0_main_EQ (-> Int Int Int))
(fun |f115_0_main_EQ'| (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2)
(f115_0_main_EQ arg1P arg2P)
:guard
(and (and (> arg1P 0) (> arg2 (- 1))) (> arg1 0)))
(rule
(f115_0_main_EQ arg1 arg2)
(|f115_0_main_EQ'| arg1P arg2P)
:guard
(exists
((x6 Int))
(and (and (= (- arg1 (* 2 x6)) 1) (> arg1 0)) (= arg1 arg1P)))
)
(rule
(|f115_0_main_EQ'| arg1 arg2)
(f115_0_main_EQ arg1P arg2P)
:guard
(exists
((x8 Int))
(and
(and
(and (and (> arg1 0) (= (- arg1 (* 2 x8)) 1)) (< (- arg1 (* 2 x8)) 2))
(>= (- arg1 (* 2 x8)) 0))
(= (- arg1 1) arg1P))
)
)
(rule
(f115_0_main_EQ arg1 arg2)
(|f115_0_main_EQ'| arg1P arg2P)
:guard
(exists
((x10 Int) (x11 Int))
(and
(and (and (= (- arg1 (* 2 x10)) 0) (> arg1 x11)) (> arg1 0))
(= arg1 arg1P))
)
)
(rule
(|f115_0_main_EQ'| arg1 arg2)
(f115_0_main_EQ arg1P arg2P)
:guard
(exists
((x14 Int))
(and
(and
(and
(and
(and (and (= (- arg1 (* 2 x14)) 0) (> arg1 0)) (> arg1 arg1P))
(>= (- arg1 (* 2 x14)) 0))
(< (- arg1 (* 2 x14)) 2))
(< (- arg1 (* 2 arg1P)) 2))
(>= (- arg1 (* 2 arg1P)) 0))
)
)
(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
