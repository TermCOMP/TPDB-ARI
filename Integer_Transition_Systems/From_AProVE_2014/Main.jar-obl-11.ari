(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int Int))
(fun f1598_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1863_0_minimum_NONNULL (-> Int Int Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int Int Int))
(fun f202_0_createCollection_Return (-> Int Int Int Int Int Int Int Int))
(fun f2353_0_createCollection_GE (-> Int Int Int Int Int Int Int Int))
(fun f2751_0_insert_NONNULL (-> Int Int Int Int Int Int Int Int))
(fun f2753_0_insert_NONNULL (-> Int Int Int Int Int Int Int Int))
(fun
f2789_0_createCollection_InvokeMethod
(-> Int Int Int Int Int Int Int Int))

(fun f89_0_createCollection_LE (-> Int Int Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1598_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (and (<= arg1P arg1) (> arg1 0)) (> arg1P 0)) (> arg2P 0)))

(rule
(f202_0_createCollection_Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1598_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (<= arg1P arg1) (<= (- arg2P 1) arg1)) (> arg1 0))
(> arg1P 0))
(> arg2P 1))
)

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f89_0_createCollection_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (and (> arg1 0) (> arg2 0)) (= 0 arg1P)) (= arg2 arg2P)))

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f89_0_createCollection_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (and (> arg1P (- 1)) (> arg2 0)) (> arg1 0)) (= arg2 arg2P)))

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 1) arg1) (> arg1 0)) (> arg1P 1))
(= 0 arg2))
(= 0 arg2P))
(= 0 arg3P))
(= 0 arg4P))
(= 0 arg5P))
)

(rule
(f89_0_createCollection_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (> arg1P 1) (= 0 arg1)) (= 1 arg2)) (= 0 arg2P))
(= 0 arg3P))
(= 1 arg4P))
(= 1 arg5P))
)

(rule
(f89_0_createCollection_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (> arg1 0) (> arg1P 1)) (= 1 arg2)) (= 0 arg2P))
(= 0 arg3P))
(= 1 arg4P))
(= 1 arg5P))
)

(rule
(f89_0_createCollection_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (> arg2 1) (> arg1P 1)) (= 0 arg1)) (= 0 arg2P))
(= 0 arg3P))
(= arg2 arg4P))
(= 2 arg5P))
)

(rule
(f89_0_createCollection_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (> arg3P (- 1)) (> arg1P 1)) (> arg2 1)) (= 0 arg1))
(= 0 arg2P))
(= arg2 arg4P))
(= 2 arg5P))
)

(rule
(f89_0_createCollection_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (> arg1 0) (> arg1P 1)) (> arg2 1)) (= 0 arg2P))
(= 0 arg3P))
(= arg2 arg4P))
(= 2 arg5P))
)

(rule
(f89_0_createCollection_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (> arg3P (- 1)) (> arg2 1)) (> arg1P 1)) (> arg1 0))
(= 0 arg2P))
(= arg2 arg4P))
(= 2 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2751_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(<= arg1P arg1))
(<= (+ arg2P 2) arg1))
(> arg1 1))
(> arg1P 1))
(> arg2P (- 1)))
(= 0 arg3P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2751_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(<= (+ arg1P 1) arg1))
(<= (+ arg2P 2) arg1))
(> arg1 2))
(> arg1P 1))
(> arg2P 0))
(= 0 arg3P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(<= arg1P arg1))
(<= (+ arg2P 2) arg1))
(> arg1 1))
(> arg1P 1))
(> arg2P (- 1)))
(= 0 arg3P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(<= (+ arg1P 1) arg1))
(<= (+ arg2P 2) arg1))
(> arg1 2))
(> arg1P 1))
(> arg2P 0))
(= 0 arg3P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2789_0_createCollection_InvokeMethod
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> arg3 arg2)) (< arg5 arg4))
(> arg5 (- 1)))
(<= arg3P arg1))
(<= (- arg4P 1) arg1))
(> arg1 0))
(> arg3P 0))
(> arg4P 1))
(= arg3 arg1P))
(= arg2 arg2P))
(= arg4 arg5P))
(= (+ arg5 1) arg6P))
(= 0 arg7P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2789_0_createCollection_InvokeMethod
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> arg3 arg2)) (< arg5 arg4))
(> arg7P (- 1)))
(> arg5 (- 1)))
(<= arg3P arg1))
(> arg1 0))
(> arg3P 0))
(> arg4P 0))
(= arg3 arg1P))
(= arg2 arg2P))
(= arg4 arg5P))
(= (+ arg5 1) arg6P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2751_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (<= arg1P arg4))
(<= (+ arg2P 2) arg3))
(<= (+ arg2P 1) arg4))
(> arg3 1))
(> arg4 0))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg7 2) arg4))
(= arg7 arg3P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (<= arg1P arg4))
(<= (+ arg2P 2) arg3))
(<= (+ arg2P 1) arg4))
(> arg3 1))
(> arg4 0))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg7 2) arg4))
(= arg7 arg3P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2751_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (<= arg1P arg4))
(<= (+ arg2P 2) arg3))
(> arg3 2))
(> arg4 0))
(> arg1P 0))
(> arg2P 0))
(<= (+ arg7 2) arg4))
(= arg7 arg3P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (<= arg1P arg4))
(<= (+ arg2P 2) arg3))
(> arg3 2))
(> arg4 0))
(> arg1P 0))
(> arg2P 0))
(<= (+ arg7 2) arg4))
(= arg7 arg3P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 4))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 4))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 4))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 4))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 4))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 4))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 10))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 10))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 10))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 10))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 10))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 10))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 10))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 10))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 2))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 2))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 8))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 8))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2353_0_createCollection_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 (- 1)) (> arg3 arg2)) (>= arg5 arg4)) (> arg3 0))
(> arg1 1))
(> arg1P 7))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f2789_0_createCollection_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2353_0_createCollection_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (< arg2 arg1)) (> arg6 0)) (> arg3 1))
(> arg4 0))
(> arg1P 7))
(<= (+ arg7 2) arg4))
(= (+ arg2 1) arg2P))
(= arg1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2751_0_insert_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2751_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (+ arg2P 2) arg2)) (> arg1 0))
(> arg2 1))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg3 2) arg1))
(= arg3 arg3P))
)

(rule
(f2751_0_insert_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2751_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x581 Int))
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= x581 arg3)) (<= (+ arg2P 3) arg2))
(> arg1 0))
(> arg2 2))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg3 2) arg1))
(= arg3 arg3P))
)
)

(rule
(f2753_0_insert_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (+ arg2P 2) arg2)) (> arg1 0))
(> arg2 1))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg3 2) arg1))
(= arg3 arg3P))
)

(rule
(f2753_0_insert_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x592 Int))
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= x592 arg3)) (<= (+ arg2P 3) arg2))
(> arg1 0))
(> arg2 2))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg3 2) arg1))
(= arg3 arg3P))
)
)

(rule
(f2753_0_insert_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2753_0_insert_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x598 Int))
(and
(and
(and
(and
(and
(and
(and
(and (and (> x598 0) (> x598 arg3)) (<= arg1P arg1))
(<= (+ arg2P 3) arg2))
(> arg1 0))
(> arg2 2))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg3 2) arg1))
(= arg3 arg3P))
)
)

(rule
(f1598_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1863_0_minimum_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 2) arg2) (<= (+ arg2P 3) arg2)) (> arg1 0))
(> arg2 2))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg4P 4) arg2))
(<= (+ arg3P 5) arg2))
)

(rule
(f1863_0_minimum_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1863_0_minimum_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 3) arg1) (<= arg1P arg2)) (<= (+ arg2P 4) arg1))
(<= (+ arg2P 1) arg2))
(> arg1 3))
(> arg2 0))
(> arg1P 0))
(> arg2P (- 1)))
(<= (+ arg3 3) arg1))
(<= (+ arg3P 6) arg1))
(<= (+ arg4P 5) arg1))
(<= (+ arg4 2) arg1))
(<= (+ arg4P 2) arg2))
(<= (+ arg3P 3) arg2))
)

(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P arg6P arg7P))

