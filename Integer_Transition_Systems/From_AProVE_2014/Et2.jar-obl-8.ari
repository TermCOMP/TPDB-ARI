(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int Int))
(fun f593_0_main_LE (-> Int Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6)
(f593_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg1 0)) (> arg1P 0)) (= 0 arg2))
(= 0 arg2P))
(= 0 arg3P))
(= 0 arg4P))
(= 0 arg5P))
(= 0 arg6P))
)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6)
(f593_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg2P (- 1))) (> arg1 0)) (> arg1P 0))
(= 1 arg2))
(= 0 arg3P))
(= 1 arg4P))
(= 1 arg5P))
(= 1 arg6P))
)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6)
(f593_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (> arg3P (- 1)) (> arg2 1)) (> arg2P (- 1)))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(= arg2 arg4P))
(= 2 arg5P))
(= arg2 arg6P))
)
(rule
(f593_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6)
(f593_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (>= arg5 arg4) (> arg4 (- 1))) (> arg3 0))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(= arg4 arg6))
(= (- arg2 1) arg2P))
(= (- arg2 1) arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg4 arg6P))
)
(rule
(f593_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6)
(f593_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(exists
((x22 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 0) (> arg4 (- 1))) (> arg5 (- 1)))
(< arg5 arg4))
(> x22 (- 1)))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(= arg4 arg6))
(= (- (- arg2 1) x22) arg2P))
(= (- (- arg2 1) x22) arg3P))
(= arg4 arg4P))
(= (+ arg5 1) arg5P))
(= arg4 arg6P))
)
)
(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P arg6P))
