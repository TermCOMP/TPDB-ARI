(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int Int))
(fun f132_0__init__LE (-> Int Int Int Int Int Int Int Int))
(fun f1508_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1518_0_length_NONNULL (-> Int Int Int Int Int Int Int Int))
(fun f1640_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun |f1640_0_main_InvokeMethod'| (-> Int Int Int Int Int Int Int Int))
(fun f1645_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1650_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun f1681_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun |f1681_0_main_InvokeMethod'| (-> Int Int Int Int Int Int Int Int))
(fun f1691_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun f1741_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun |f1741_0_main_LE'| (-> Int Int Int Int Int Int Int Int))
(fun f1743_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun |f1743_0_main_LE'| (-> Int Int Int Int Int Int Int Int))
(fun f1843_0_main_NE (-> Int Int Int Int Int Int Int Int))
(fun f1844_0_main_NE (-> Int Int Int Int Int Int Int Int))
(fun f1845_0_main_NE (-> Int Int Int Int Int Int Int Int))
(fun f1846_0_main_NE (-> Int Int Int Int Int Int Int Int))
(fun f1857_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun f1878_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1879_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1961_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun f1979_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1980_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f1_0_main_New (-> Int Int Int Int Int Int Int Int))
(fun f2043_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun f2045_0_main_LE (-> Int Int Int Int Int Int Int Int))
(fun f67_0__init__Return (-> Int Int Int Int Int Int Int Int))
(fun f92_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int))
(fun f97_0__init__Return (-> Int Int Int Int Int Int Int Int))
(fun |f97_0__init__Return'| (-> Int Int Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f67_0__init__Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f92_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg3 (- 1))) (<= arg1P arg2))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(<= (+ arg4 2) arg2))
(= arg3 arg3P))
)
(rule
(f1_0_main_New arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f92_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (- arg2P 1) arg1)) (> arg1 0))
(> arg1P 0))
(> arg2P 1))
(= 0 arg2))
(= 0 arg3P))
)
(rule
(f1_0_main_New arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f92_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (and (>= arg1 arg1P) (> arg2 (- 1))) (> arg1 0)) (> arg1P 0))
(> arg2P 2))
(= arg2 arg3P))
)
(rule
(f92_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f97_0__init__Return arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg1P arg2)) (<= arg2P arg2))
(<= (- arg3P 1) arg1))
(<= (- arg3P 1) arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(> arg3P 1))
(<= (+ arg5P 2) arg2))
(= 0 arg3))
(= 0 arg4P))
)
(rule
(f92_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f97_0__init__Return arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg1P arg2)) (<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(> arg3P 2))
(<= (+ arg5P 2) arg2))
(= arg3 arg4P))
)
(rule
(f97_0__init__Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f97_0__init__Return'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x515 Int) (x516 Int) (x517 Int) (x518 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (< (- arg4 (* 2 x515)) 0)) (<= x516 arg3))
(<= x517 arg3))
(<= x518 arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> x516 0))
(> x517 0))
(> x518 0))
(<= (+ arg5 2) arg2))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)
)
(rule
(f97_0__init__Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f97_0__init__Return'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x524 Int) (x525 Int) (x526 Int) (x527 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> (- arg4 (* 2 x524)) 0)) (<= x525 arg3))
(<= x526 arg3))
(<= x527 arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> x525 0))
(> x526 0))
(> x527 0))
(<= (+ arg5 2) arg2))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)
)
(rule
(|f97_0__init__Return'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x536 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> (- arg4 (* 2 x536)) 0) (> arg4 (- 1))) (<= arg1P arg3))
(<= arg2P arg3))
(<= arg3P arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> arg1P 0))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg5 2) arg2))
(< (- arg4 (* 2 x536)) 2))
)
)
(rule
(f97_0__init__Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f97_0__init__Return'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x542 Int) (x543 Int) (x544 Int) (x545 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= (- arg4 (* 2 x542)) 0) (> arg4 (- 1))) (<= x543 arg3))
(<= x544 arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> x543 0))
(> x545 2))
(> x544 0))
(<= (+ arg5 2) arg2))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)
)
(rule
(|f97_0__init__Return'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x554 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= (- arg4 (* 2 x554)) 0) (> arg4 (- 1))) (<= arg1P arg3))
(<= arg3P arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> arg1P 0))
(> arg2P 2))
(> arg3P 0))
(<= (+ arg5 2) arg2))
(< (- arg4 (* 2 x554)) 2))
(>= (- arg4 (* 2 x554)) 0))
)
)
(rule
(f97_0__init__Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f97_0__init__Return'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x560 Int) (x561 Int) (x562 Int) (x563 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= (- arg4 (* 2 x560)) 0) (> arg4 (- 1))) (<= x561 arg3))
(<= (- x562 1) arg1))
(<= (- x562 1) arg2))
(<= (- x562 1) arg3))
(<= x563 arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> x561 0))
(> x562 1))
(> x563 0))
(<= (+ arg5 2) arg2))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)
)
(rule
(|f97_0__init__Return'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x572 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= (- arg4 (* 2 x572)) 0) (> arg4 (- 1))) (<= arg1P arg3))
(<= (- arg2P 1) arg1))
(<= (- arg2P 1) arg2))
(<= (- arg2P 1) arg3))
(<= arg3P arg2))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> arg1P 0))
(> arg2P 1))
(> arg3P 0))
(<= (+ arg5 2) arg2))
(< (- arg4 (* 2 x572)) 2))
(>= (- arg4 (* 2 x572)) 0))
)
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (<= arg1P arg3) (> arg1 (- 1))) (> arg2 (- 1)))
(> arg3 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (<= arg1P arg1) (> arg1 (- 1))) (> arg2 (- 1)))
(> arg3 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (<= arg1P arg2) (> arg1 (- 1))) (> arg2 (- 1)))
(> arg3 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1640_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg3) (<= arg2P arg2)) (<= arg4P arg1))
(> arg1 (- 1)))
(> arg2 (- 1)))
(> arg3 2))
(> arg1P 2))
(> arg2P (- 1)))
(> arg4P (- 1)))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1640_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 2) arg1) (<= (- arg1P 2) arg2)) (<= arg1P arg3))
(<= arg2P arg2))
(<= arg4P arg1))
(> arg1 (- 1)))
(> arg2 (- 1)))
(> arg3 1))
(> arg1P 1))
(> arg2P (- 1)))
(> arg4P (- 1)))
(= 1 arg3P))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1645_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg3P arg2)) (> arg1 2))
(> arg2 (- 1)))
(> arg3 (- 1)))
(> arg1P 2))
(> arg3P (- 1)))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1645_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (- arg1P 2) arg2)) (<= (- arg1P 2) arg3))
(<= arg3P arg2))
(> arg1 1))
(> arg2 (- 1)))
(> arg3 (- 1)))
(> arg1P 1))
(> arg3P (- 1)))
(= 1 arg2P))
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1650_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x90 Int))
(and
(and
(and
(and (and (<= arg1P arg2) (> arg1 (- 1))) (> arg2 2))
(> arg3 (- 1)))
(> arg1P 2))
(= (* 5 x90) arg2P))
)
)
(rule
(f1508_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1650_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 2) arg1) (<= arg1P arg2)) (<= (- arg1P 2) arg3))
(> arg1 (- 1)))
(> arg2 1))
(> arg3 (- 1)))
(> arg1P 1))
(= 5 arg2P))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (<= arg1P arg4) (> arg1 0)) (> arg2 (- 1)))
(> arg4 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (<= arg1P arg3) (> arg1 0)) (> arg3 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1681_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (- arg2P 1) arg1)) (<= (- arg2P 2) arg2))
(<= arg2P arg4))
(<= arg4P arg2))
(> arg1 0))
(> arg2 (- 1)))
(> arg4 1))
(> arg1P 0))
(> arg2P 1))
(> arg4P (- 1)))
(= (+ arg3 1) arg3P))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1681_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x117 Int))
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg2P arg4)) (<= arg4P arg2))
(> arg1 0))
(> arg2 (- 1)))
(> arg4 2))
(> arg1P 0))
(> arg2P 2))
(> arg4P (- 1)))
(= (+ arg3 x117) arg3P))
)
)
(rule
(f1650_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (<= (+ arg1P 1) arg1) (> arg2 0)) (> arg1 0))
(> arg1P (- 1)))
)
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1691_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (- arg2P 1) arg1)) (<= arg2P arg3))
(> arg1 0))
(> arg3 1))
(> arg1P 0))
(> arg2P 1))
(= (+ arg2 5) arg3P))
)
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1691_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x132 Int))
(and
(and
(and
(and (and (and (<= arg1P arg1) (<= arg2P arg3)) (> arg1 0)) (> arg3 2))
(> arg1P 0))
(> arg2P 2))
(= (+ arg2 (* 5 x132)) arg3P))
)
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (<= arg1P arg2) (> arg1 0)) (> arg2 (- 1)))
(> arg4 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1681_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg4) (> arg1 0)) (> arg2 0)) (> arg4 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (> arg2 0)) (<= arg1P arg3))
(> arg1 0))
(> arg3 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1691_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (> arg3 0)) (<= (+ arg1P 1) arg2))
(> arg1 0))
(> arg2 0))
(> arg1P (- 1)))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1741_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (- arg2P 1) arg1)) (<= arg2P arg2))
(<= (- arg2P 2) arg4))
(> arg1 0))
(> arg2 1))
(> arg4 (- 1)))
(> arg1P 0))
(> arg2P 1))
(= (+ arg3 5) arg3P))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1741_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x163 Int))
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (<= arg2P arg2)) (> arg1 0)) (> arg2 2))
(> arg4 (- 1)))
(> arg1P 0))
(> arg2P 2))
(= (+ arg3 (* 5 x163)) arg3P))
)
)
(rule
(f1681_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1743_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg2P arg2)) (<= (- arg3P 1) arg1))
(<= (- arg3P 1) arg2))
(<= arg3P arg4))
(> arg1 0))
(> arg2 0))
(> arg4 1))
(> arg1P 0))
(> arg2P 0))
(> arg3P 1))
(<= (+ arg5P 2) arg2))
(= (+ arg3 5) arg4P))
)
(rule
(f1681_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1743_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x179 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg2P arg2)) (<= arg3P arg4))
(> arg1 0))
(> arg2 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 0))
(> arg3P 2))
(<= (+ arg5P 2) arg2))
(= (+ arg3 (* 5 x179)) arg4P))
)
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (> arg1 0)) (> arg2 (- 1)))
(> arg4 (- 1)))
(> arg1P 0))
)
(rule
(f1741_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (> arg1 0)) (> arg2 0))
(> arg1P 0))
)
(rule
(f1681_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (> arg1 0)) (> arg2 0))
(> arg4 (- 1)))
(> arg1P 0))
)
(rule
(f1743_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg4 0)) (> arg1 0)) (> arg2 0))
(> arg3 0))
(> arg1P 0))
(<= (+ arg5 2) arg2))
)
(rule
(f1650_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (and (<= arg1P arg1) (> arg2 0)) (> arg1 0)) (> arg1P 0)))
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg1) (> arg2 0)) (> arg1 0)) (> arg3 (- 1)))
(> arg1P 0))
)
(rule
(f1691_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (> arg1 0)) (> arg2 0))
(> arg1P 0))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1843_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg3 0)) (<= (- arg1P 2) arg2))
(<= (- arg1P 2) arg4))
(> arg1 1))
(> arg2 (- 1)))
(> arg4 (- 1)))
(> arg1P 1))
(= 1 arg2P))
)
(rule
(f1640_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f1640_0_main_InvokeMethod'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x221 Int))
(and
(and
(and
(and
(and
(and
(and (and (and (<= x221 arg1) (> arg3 0)) (> arg1 2)) (> arg2 (- 1)))
(> arg4 (- 1)))
(> x221 2))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
)
)
(rule
(|f1640_0_main_InvokeMethod'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1843_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x578 Int) (x579 Int))
(and
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (> arg1 2)) (> arg2 (- 1)))
(> arg4 (- 1)))
(> arg1P 2))
(< (- x578 (* 2 x579)) 2))
(>= (- x578 (* 2 x579)) 0))
(= (- x578 (* 2 x579)) arg2P))
)
)
(rule
(f1741_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1844_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg3 0)) (<= (- arg1P 1) arg2))
(<= arg2P arg2))
(> arg1 1))
(> arg2 0))
(> arg1P 1))
(> arg2P 0))
(= 1 arg3P))
)
(rule
(f1741_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f1741_0_main_LE'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x231 Int) (x232 Int))
(and
(and
(and
(and
(and
(and
(and (and (and (<= x231 arg1) (> arg3 0)) (<= x232 arg2)) (> arg1 2))
(> arg2 0))
(> x231 2))
(> x232 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
)
)
(rule
(|f1741_0_main_LE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1844_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x585 Int) (x586 Int))
(and
(and
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (<= arg2P arg2)) (> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(< (- x585 (* 2 x586)) 2))
(>= (- x585 (* 2 x586)) 0))
(= (- x585 (* 2 x586)) arg3P))
)
)
(rule
(f1681_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1845_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg3 0)) (<= (- arg1P 1) arg2))
(<= (- arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 1))
(> arg2 0))
(> arg4 (- 1)))
(> arg1P 1))
(> arg2P 0))
(= 1 arg3P))
)
(rule
(f1681_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f1681_0_main_InvokeMethod'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x244 Int) (x245 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (<= x244 arg1) (> arg3 0)) (<= x245 arg2)) (> arg1 2))
(> arg2 0))
(> arg4 (- 1)))
(> x244 2))
(> x245 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
)
)
(rule
(|f1681_0_main_InvokeMethod'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1845_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x593 Int) (x594 Int))
(and
(and
(and
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (<= arg2P arg2)) (> arg1 2))
(> arg2 0))
(> arg4 (- 1)))
(> arg1P 2))
(> arg2P 0))
(< (- x593 (* 2 x594)) 2))
(>= (- x593 (* 2 x594)) 0))
(= (- x593 (* 2 x594)) arg3P))
)
)
(rule
(f1743_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1846_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg4 0)) (<= (- arg1P 1) arg2))
(<= (- arg1P 1) arg3))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 1))
(> arg2 0))
(> arg3 0))
(> arg1P 1))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg5 2) arg2))
(<= (+ arg5P 2) arg3))
(= 1 arg4P))
)
(rule
(f1743_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f1743_0_main_LE'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x261 Int) (x262 Int) (x263 Int) (x265 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (<= x261 arg1) (> arg4 0)) (<= x262 arg2)) (<= x263 arg3))
(> arg1 2))
(> arg2 0))
(> arg3 0))
(> x261 2))
(> x262 0))
(> x263 0))
(<= (+ arg5 2) arg2))
(<= (+ x265 2) arg3))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)
)
(rule
(|f1743_0_main_LE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1846_0_main_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x603 Int) (x604 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg4 0)) (<= arg2P arg2))
(<= arg3P arg3))
(> arg1 2))
(> arg2 0))
(> arg3 0))
(> arg1P 2))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg5 2) arg2))
(<= (+ arg5P 2) arg3))
(< (- x603 (* 2 x604)) 2))
(>= (- x603 (* 2 x604)) 0))
(= (- x603 (* 2 x604)) arg4P))
)
)
(rule
(f1650_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1857_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg1) (> arg2 0)) (> arg1 1)) (> arg1P 1))
(= 1 arg2P))
)
(rule
(f1650_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1857_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (and (<= arg1P arg1) (> arg2 0)) (> arg1 2)) (> arg1P 2)))
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1878_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg2 0)) (<= (- arg1P 2) arg3))
(> arg1 1))
(> arg3 (- 1)))
(> arg1P 1))
(= 1 arg2P))
)
(rule
(f1645_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1878_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg1) (> arg2 0)) (> arg1 2)) (> arg3 (- 1)))
(> arg1P 2))
)
(rule
(f1691_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1879_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg3 0)) (<= (- arg1P 1) arg2))
(<= arg3P arg2))
(> arg1 1))
(> arg2 0))
(> arg1P 1))
(> arg3P 0))
(= 1 arg2P))
)
(rule
(f1691_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1879_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 0)) (<= arg3P arg2)) (> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg3P 0))
)
(rule
(f1878_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (<= (+ arg1P 1) arg1) (> arg1 0)) (> arg1P (- 1))))
(rule
(f1879_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (and (<= arg1P arg3) (> arg1 0)) (> arg3 0)) (> arg1P 0)))
(rule
(f1843_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (<= (+ arg1P 1) arg1) (< arg2 1)) (> arg1 0))
(> arg1P (- 1)))
)
(rule
(f1844_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (< arg3 1)) (<= (+ arg1P 1) arg2))
(> arg1 0))
(> arg2 0))
(> arg1P (- 1)))
)
(rule
(f1845_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg2) (< arg3 1)) (> arg1 0)) (> arg2 0))
(> arg1P 0))
)
(rule
(f1846_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg2) (< arg4 1)) (> arg1 0)) (> arg2 0))
(> arg3 0))
(> arg1P 0))
(<= (+ arg5 2) arg3))
)
(rule
(f1879_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1961_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (- arg2P 1) arg1)) (<= arg2P arg3))
(<= (+ arg5P 1) arg1))
(> arg1 0))
(> arg3 1))
(> arg1P 0))
(> arg2P 1))
(> arg5P (- 1)))
(= arg2 arg3P))
(= 1 arg4P))
)
(rule
(f1879_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1961_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg2P arg3)) (<= (+ arg5P 1) arg1))
(> arg1 0))
(> arg3 2))
(> arg1P 0))
(> arg2P 2))
(> arg5P (- 1)))
(= arg2 arg3P))
)
(rule
(f1843_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and (<= (+ arg1P 1) arg1) (<= (+ arg2P 1) arg1))
(<= (+ arg3P 1) arg1))
(> arg1 0))
(> arg1P (- 1)))
(> arg2P (- 1)))
(> arg3P (- 1)))
(= 1 arg2))
)
(rule
(f1844_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (<= (+ arg1P 1) arg2)) (<= arg2P arg2))
(<= (+ arg3P 1) arg1))
(> arg1 0))
(> arg2 0))
(> arg1P (- 1)))
(> arg2P 0))
(> arg3P (- 1)))
(= 1 arg3))
)
(rule
(f1845_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1979_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (< arg3 1)) (<= (- arg2P 1) arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 1))
(> arg1P 0))
(> arg2P 1))
(<= (+ arg4P 2) arg1))
(= 1 arg3P))
)
(rule
(f1845_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1979_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (< arg3 1)) (<= arg2P arg2)) (> arg1 0))
(> arg2 2))
(> arg1P 0))
(> arg2P 2))
(<= (+ arg4P 2) arg1))
)
(rule
(f1845_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg2) (<= (+ arg2P 1) arg1)) (<= (+ arg2P 1) arg2))
(<= (+ arg3P 1) arg1))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P (- 1)))
(> arg3P (- 1)))
(= 1 arg3))
)
(rule
(f1846_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1980_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (< arg4 1)) (<= (- arg2P 1) arg1))
(<= arg2P arg2))
(<= (- arg2P 1) arg3))
(<= arg4P arg3))
(> arg1 0))
(> arg2 1))
(> arg3 0))
(> arg1P 0))
(> arg2P 1))
(> arg4P 0))
(<= (+ arg5P 2) arg1))
(<= (+ arg5 2) arg3))
(= 1 arg3P))
)
(rule
(f1846_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1980_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (< arg4 1)) (<= arg2P arg2))
(<= arg4P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 0))
(> arg1P 0))
(> arg2P 2))
(> arg4P 0))
(<= (+ arg5P 2) arg1))
(<= (+ arg5 2) arg3))
)
(rule
(f1846_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg2) (<= arg2P arg3)) (<= (+ arg3P 1) arg1))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> arg1P 0))
(> arg2P 0))
(> arg3P (- 1)))
(<= (+ arg5 2) arg3))
(= 1 arg4))
)
(rule
(f1844_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and (and (and (<= arg1P arg2) (< arg3 1)) (> arg1 0)) (> arg2 0))
(> arg1P 0))
)
(rule
(f1979_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (<= (+ arg1P 1) arg2)) (> arg1 0))
(> arg2 0))
(> arg1P (- 1)))
(<= (+ arg4 2) arg1))
)
(rule
(f1980_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and (and (and (<= arg1P arg4) (> arg1 0)) (> arg2 0)) (> arg4 0))
(> arg1P 0))
(<= (+ arg5 2) arg1))
)
(rule
(f1844_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2043_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (< arg3 1)) (<= (- arg2P 1) arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 1))
(> arg1P 0))
(> arg2P 1))
(<= (+ arg4P 2) arg1))
(= 1 arg3P))
)
(rule
(f1844_0_main_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2043_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (< arg3 1)) (<= arg2P arg2)) (> arg1 0))
(> arg2 2))
(> arg1P 0))
(> arg2P 2))
(<= (+ arg4P 2) arg1))
)
(rule
(f1980_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2045_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg2P arg2)) (<= (- arg3P 1) arg1))
(<= (- arg3P 1) arg2))
(<= arg3P arg4))
(<= (+ arg7P 1) arg2))
(> arg1 0))
(> arg2 0))
(> arg4 1))
(> arg1P 0))
(> arg2P 0))
(> arg3P 1))
(> arg7P (- 1)))
(<= (+ arg5 2) arg1))
(= arg3 arg4P))
(= 1 arg5P))
(= arg5 arg6P))
)
(rule
(f1980_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f2045_0_main_LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg2P arg2)) (<= arg3P arg4))
(<= (+ arg7P 1) arg2))
(> arg1 0))
(> arg2 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 0))
(> arg3P 2))
(> arg7P (- 1)))
(<= (+ arg5 2) arg1))
(= arg3 arg4P))
(= arg5 arg6P))
)
(rule
(f1878_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (> arg2 0)) (<= (+ arg2P 1) arg1))
(<= (+ arg3P 1) arg1))
(> arg1 0))
(> arg1P (- 1)))
(> arg2P (- 1)))
(> arg3P (- 1)))
)
(rule
(f1961_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 1) arg1) (< arg4 arg3)) (<= arg1P arg5))
(<= arg2P arg2))
(<= (+ arg3P 1) arg1))
(<= (+ arg3P 1) arg2))
(<= arg3P arg5))
(> arg1 0))
(> arg2 0))
(> arg5 (- 1)))
(> arg1P (- 1)))
(> arg2P 0))
(> arg3P (- 1)))
)
(rule
(f1979_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 1) arg2) (> arg3 0)) (<= (+ arg2P 1) arg1))
(<= (+ arg2P 1) arg2))
(<= arg3P arg1))
(> arg1 0))
(> arg2 0))
(> arg1P (- 1)))
(> arg2P (- 1)))
(> arg3P 0))
(<= (+ arg4 2) arg1))
)
(rule
(f2045_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 1) arg2) (< arg5 arg4)) (<= arg1P arg7))
(<= arg2P arg3))
(<= arg3P arg1))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> arg7 (- 1)))
(> arg1P (- 1)))
(> arg2P 0))
(> arg3P 0))
(<= (+ arg6 2) arg1))
)
(rule
(f1857_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 1) arg1) (> arg2 (- 1))) (<= (+ arg2P 1) arg1))
(<= (- arg3P 1) arg1))
(> arg1 0))
(> arg1P 1))
(> arg2P (- 1)))
(> arg3P 1))
)
(rule
(f1961_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 2) arg1) (>= arg4 arg3)) (<= (- arg1P 4) arg5))
(<= (+ arg2P 1) arg2))
(<= (- arg3P 1) arg1))
(<= (- arg3P 1) arg2))
(<= (- arg3P 2) arg5))
(> arg1 0))
(> arg2 0))
(> arg5 (- 1)))
(> arg1P 2))
(> arg2P (- 1)))
(> arg3P 1))
)
(rule
(f2043_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 1) arg1) (> arg3 (- 1))) (<= (- arg1P 1) arg2))
(<= (+ arg2P 1) arg2))
(<= (- arg3P 2) arg1))
(> arg1 0))
(> arg2 0))
(> arg1P 1))
(> arg2P (- 1)))
(> arg3P 2))
(<= (+ arg4 2) arg1))
)
(rule
(f2045_0_main_LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1508_0_main_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= (- arg1P 2) arg2) (>= arg5 arg4)) (<= (- arg1P 4) arg7))
(<= (+ arg2P 1) arg3))
(<= (- arg3P 2) arg1))
(> arg1 0))
(> arg2 0))
(> arg3 0))
(> arg7 (- 1)))
(> arg1P 2))
(> arg2P (- 1)))
(> arg3P 2))
(<= (+ arg6 2) arg1))
)
(rule
(f1_0_main_New arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f132_0__init__LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (> arg1 0) (> arg2 (- 1))) (= arg2 arg1P)))
(rule
(f92_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f132_0__init__LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (> arg1 0) (> arg2 0)) (= arg3 arg1P)))
(rule
(f97_0__init__Return arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(|f97_0__init__Return'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x631 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (= (- arg4 (* 2 x631)) 0) (> arg4 (- 1))) (> arg1 0))
(> arg2 0))
(> arg3 0))
(<= (+ arg5 2) arg2))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)
)
(rule
(|f97_0__init__Return'| arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f132_0__init__LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(exists
((x637 Int))
(and
(and
(and
(and
(and
(and
(and (and (= (- arg4 (* 2 x637)) 0) (> arg4 (- 1))) (> arg1 0))
(> arg2 0))
(> arg3 0))
(<= (+ arg5 2) arg2))
(< (- arg4 (* 2 x637)) 2))
(>= (- arg4 (* 2 x637)) 0))
(= (* arg4 arg4) arg1P))
)
)
(rule
(f132_0__init__LE arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f132_0__init__LE arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (> arg1 0) (< (- arg1 1) arg1)) (= (- arg1 1) arg1P)))
(rule
(f1518_0_length_NONNULL arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1518_0_length_NONNULL arg1P arg2P arg3P arg4P arg5P arg6P arg7P)
:guard
(and (and (<= (+ arg1P 1) arg1) (> arg1 0)) (> arg1P (- 1))))
(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6 arg7)
(f1_0_main_New arg1P arg2P arg3P arg4P arg5P arg6P arg7P))
