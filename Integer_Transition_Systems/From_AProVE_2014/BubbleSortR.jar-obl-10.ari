(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int Int Int))
(fun f1421_0_sort_GE (-> Int Int Int Int Int Int Int Int Int))
(fun f1445_0_aux_LT (-> Int Int Int Int Int Int Int Int Int))
(fun f1611_0_aux_InvokeMethod (-> Int Int Int Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int Int Int Int))
(fun f795_0_main_GE (-> Int Int Int Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f795_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (<= arg1P arg1) (<= arg2P arg1)) (> arg1 0)) (> arg1P 0))
(> arg2P 0))
(= 0 arg2))
(= 0 arg3P))
(= 0 arg4P))
(= 0 arg5P))
(= 0 arg6P))
(= 0 arg7P))
(= 0 arg8P))
)

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f795_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(exists
((x6 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> x6 (- 1))) (<= arg2P arg1))
(> arg1 0))
(> arg1P 0))
(> arg2P 0))
(= 1 arg2))
(= 0 arg3P))
(= 0 arg4P))
(= 1 arg5P))
(= 1 arg6P))
(= 1 arg7P))
(= 0 arg8P))
)
)

(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f795_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(exists
((x11 Int) (x12 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> x11 (- 1)) (> arg2 1)) (>= (* x11 x12) 0))
(> x12 (- 1)))
(<= arg1P arg1))
(>= arg1 arg2P))
(> arg1 0))
(> arg1P 0))
(> arg2P 0))
(= 0 arg3P))
(= (* x11 x12) arg4P))
(= arg2 arg5P))
(= 2 arg6P))
(= arg2 arg7P))
(= (* x11 x12) arg8P))
)
)

(rule
(f795_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f795_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 arg3) (> arg5 (- 1))) (>= arg6 arg5))
(> arg4 (- 1)))
(<= arg1P arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= arg5 arg7))
(= arg4 arg8))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg5 arg7P))
(= arg4 arg8P))
)

(rule
(f795_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f795_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 arg3) (> arg5 (- 1))) (> arg6 (- 1)))
(< arg6 arg5))
(> arg4 (- 1)))
(<= arg1P arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= arg5 arg7))
(= arg4 arg8))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= (+ arg6 1) arg6P))
(= arg5 arg7P))
(= arg4 arg8P))
)

(rule
(f795_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1421_0_sort_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (<= arg4 arg3)) (<= arg1P arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= arg5 arg7))
(= arg4 arg8))
(= 1 arg3P))
(= arg4 arg4P))
(= arg4 arg5P))
)

(rule
(f1421_0_sort_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1421_0_sort_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (>= (- arg4 arg3) 1) (> arg4 1)) (> arg3 0))
(> arg4 arg3))
(<= arg1P arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f1421_0_sort_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1421_0_sort_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (>= (- arg4 arg3) 1) (> arg4 1)) (> arg3 0))
(> arg4 arg3))
(<= arg1P arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= arg2P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 0))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)

(rule
(f1421_0_sort_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1445_0_aux_LT arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (>= (- arg4 arg3) 1) (> arg4 1)) (> arg3 0))
(> arg4 arg3))
(<= arg3P arg1))
(<= arg3P arg2))
(> arg1 0))
(> arg2 0))
(> arg3P 0))
(= 0 arg1P))
(= 0 arg2P))
(= 0 arg4P))
(= (- arg4 arg3) arg5P))
(= arg5 arg6P))
)

(rule
(f1445_0_aux_LT arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1611_0_aux_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(exists
((x69 Int) (x68 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg6 (+ arg2 1))) (> arg5 arg2))
(<= x69 x68))
(<= arg4P arg3))
(> arg3 0))
(> arg4P 0))
(= arg2 arg4))
(= arg1 arg1P))
(= (+ arg2 1) arg2P))
(= arg5 arg3P))
(= arg6 arg6P))
)
)

(rule
(f1445_0_aux_LT arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1611_0_aux_InvokeMethod arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(exists
((x78 Int) (x77 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg6 (+ arg2 1))) (> arg5 arg2))
(> x78 x77))
(<= arg4P arg3))
(> arg3 0))
(> arg4P 0))
(= arg2 arg4))
(= arg1 arg1P))
(= (+ arg2 1) arg2P))
(= arg5 arg3P))
(= arg6 arg6P))
)
)

(rule
(f1611_0_aux_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1445_0_aux_LT arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg3 0) (> arg2 0)) (>= arg3 arg2)) (>= arg3 arg1))
(<= arg3P arg4))
(> arg4 0))
(> arg3P 0))
(= arg2 arg1P))
(= arg2 arg2P))
(= arg2 arg4P))
(= arg3 arg5P))
(= arg6 arg6P))
)

(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P))

