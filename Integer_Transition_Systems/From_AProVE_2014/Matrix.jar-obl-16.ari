(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int Int Int Int))
(fun f1594_0_main_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f1738_0__init__GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f1782_0__init__GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f1887_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int Int Int))
(fun f1998_0_main_InvokeMethod (-> Int Int Int Int Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int Int Int Int Int))
(fun f2647_0__init__GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f2743_0_determinant_NE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f2825_0_main_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun |f2825_0_main_GE'| (-> Int Int Int Int Int Int Int Int Int Int))
(fun f3834_0_sum_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f401_0_main_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f4961_0_transpose_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f5494_0_product_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f5514_0_sum_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f6845_0_determinant_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun |f6845_0_determinant_GE'| (-> Int Int Int Int Int Int Int Int Int Int))
(fun f6926_0_transpose_GT (-> Int Int Int Int Int Int Int Int Int Int))
(fun
f7078_0_determinant_ArrayAccess
(-> Int Int Int Int Int Int Int Int Int Int))

(fun f7999_0_product_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f810_0__init__GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f8521_0_submatrix_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f8902_0_product_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun f930_0_main_GE (-> Int Int Int Int Int Int Int Int Int Int))
(fun |f930_0_main_GE'| (-> Int Int Int Int Int Int Int Int Int Int))
(fun f9424_0_submatrix_GE (-> Int Int Int Int Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f401_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and (and (and (<= arg1P arg1) (> arg2 (- 1))) (> arg1 0)) (> arg1P 0))
(= 0 arg2P))
(= arg2 arg3P))
)

(rule
(f401_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f930_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 arg2)) (> arg1 0)) (> arg1P 0))
(= arg2 arg2P))
(= 0 arg3P))
(= arg3 arg4P))
)

(rule
(f930_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f401_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and (and (and (>= arg1 arg1P) (>= arg3 arg4)) (> arg1 0)) (> arg1P 0))
(= (+ arg2 1) arg2P))
(= arg4 arg3P))
)

(rule
(f930_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(|f930_0_main_GE'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x352 Int) (x353 Int) (x354 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg3 (- 1))) (> arg4 arg3))
(= (- (+ arg2 arg3) (* 2 x352)) 1))
(> arg4 arg2))
(> x353 arg3))
(> x353 (- 1)))
(<= x354 arg1))
(> arg1 0))
(> x354 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
)
)

(rule
(|f930_0_main_GE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f930_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x360 Int) (x361 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg3 (- 1))) (> arg4 arg3))
(= (- (+ arg2 arg3) (* 2 x360)) 1))
(> arg4 arg2))
(> x361 arg3))
(> x361 (- 1)))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(< (- (+ arg2 arg3) (* 2 x360)) 2))
(>= (- (+ arg2 arg3) (* 2 x360)) 0))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)
)

(rule
(f930_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(|f930_0_main_GE'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x366 Int) (x367 Int) (x368 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg3 (- 1))) (> arg4 arg3))
(= (- (+ arg2 arg3) (* 2 x366)) 0))
(> arg4 0))
(> arg4 arg2))
(> x367 arg3))
(> x367 (- 1)))
(<= x368 arg1))
(> arg1 0))
(> x368 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
)
)

(rule
(|f930_0_main_GE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f930_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x374 Int) (x375 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg3 (- 1))) (> arg4 arg3))
(= (- (+ arg2 arg3) (* 2 x374)) 0))
(> arg4 0))
(> arg4 arg2))
(> x375 arg3))
(> x375 (- 1)))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(< (- (+ arg2 arg3) (* 2 x374)) 2))
(>= (- (+ arg2 arg3) (* 2 x374)) 0))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)
)

(rule
(f401_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1594_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg3 arg2) (> arg3 (- 1))) (<= (- arg1P 2) arg1))
(<= arg2P arg1))
(> arg1 0))
(> arg1P 2))
(> arg2P 0))
(= 0 arg3P))
(= arg3 arg5P))
)

(rule
(f1594_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1887_0_main_InvokeMethod
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg5 arg3) (> arg5 (- 1))) (<= (+ arg1P 2) arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= (- arg2P 2) arg2))
(<= arg3P arg1))
(<= (- arg3P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 0))
(> arg2P 2))
(> arg3P 2))
(= arg5 arg4P))
(= arg4 arg5P))
)

(rule
(f1594_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1887_0_main_InvokeMethod
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg5 arg3) (> arg5 (- 1))) (<= (+ arg1P 2) arg1))
(<= arg1P arg2))
(<= arg2P arg1))
(<= (- arg2P 2) arg2))
(<= arg3P arg1))
(<= (- arg3P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 0))
(> arg2P 2))
(> arg3P 2))
(= arg5 arg4P))
(= arg4 arg5P))
(= arg4 arg6P))
)

(rule
(f1887_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1998_0_main_InvokeMethod
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg4 (- 1))) (<= (+ arg1P 2) arg2))
(<= (+ arg1P 2) arg3))
(<= (- arg2P 2) arg1))
(<= arg2P arg2))
(<= arg2P arg3))
(<= (- arg3P 2) arg1))
(<= arg3P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 0))
(> arg2P 2))
(> arg3P 2))
(= arg4 arg4P))
(= arg6 arg5P))
(= arg5 arg6P))
)

(rule
(f1887_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1998_0_main_InvokeMethod
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg4 (- 1))) (<= (+ arg1P 2) arg2))
(<= (+ arg1P 2) arg3))
(<= (- arg2P 2) arg1))
(<= arg2P arg2))
(<= arg2P arg3))
(<= (- arg3P 2) arg1))
(<= arg3P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 0))
(> arg2P 2))
(> arg3P 2))
(= arg5 arg6))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg5 arg6P))
)

(rule
(f1594_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2825_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg5 arg3)) (<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(= arg3 arg3P))
(= 0 arg4P))
(= arg4 arg5P))
(= arg5 arg6P))
)

(rule
(f2825_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1594_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg6 arg4)) (<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(= (+ arg3 1) arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
)

(rule
(f2825_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(|f2825_0_main_GE'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x382 Int) (x383 Int) (x384 Int) (x385 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 (- 1)) (> arg4 (- 1))) (> arg6 arg4))
(= (- (+ arg3 arg4) (* 3 x382)) 0))
(> arg6 arg3))
(> x383 arg4))
(> x383 (- 1)))
(<= x384 arg1))
(<= (- x384 2) arg2))
(<= (+ x385 2) arg1))
(<= x385 arg2))
(> arg1 2))
(> arg2 0))
(> x384 2))
(> x385 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
)
)

(rule
(|f2825_0_main_GE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2825_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x394 Int) (x395 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 (- 1)) (> arg4 (- 1))) (> arg6 arg4))
(= (- (+ arg3 arg4) (* 3 x394)) 0))
(> arg6 arg3))
(> x395 arg4))
(> x395 (- 1)))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(< (- (+ arg3 arg4) (* 3 x394)) 3))
(>= (- (+ arg3 arg4) (* 3 x394)) 0))
(= arg3 arg3P))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
)
)

(rule
(f2825_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(|f2825_0_main_GE'| arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x402 Int) (x403 Int) (x404 Int) (x405 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 (- 1)) (> arg4 (- 1))) (> arg6 arg4))
(> (- (+ arg3 arg4) (* 3 x402)) 0))
(> arg6 0))
(> arg6 arg3))
(> x403 arg4))
(> x403 (- 1)))
(<= x404 arg1))
(<= (- x404 2) arg2))
(<= (+ x405 2) arg1))
(<= x405 arg2))
(> arg1 2))
(> arg2 0))
(> x404 2))
(> x405 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
)
)

(rule
(|f2825_0_main_GE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2825_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x414 Int) (x415 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (> (- (+ arg3 arg4) (* 3 x414)) 0) (> arg3 (- 1)))
(> arg4 (- 1)))
(> arg6 arg4))
(> arg6 0))
(> arg6 arg3))
(> x415 arg4))
(> x415 (- 1)))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(< (- (+ arg3 arg4) (* 3 x414)) 3))
(= arg3 arg3P))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
)
)

(rule
(f401_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f810_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= arg3 arg2) (> arg3 (- 1))) (>= arg1 (- arg1P 2)))
(>= arg1 arg2P))
(> arg1 0))
(> arg1P 2))
(> arg2P 0))
(= 0 arg3P))
(= arg3 arg4P))
)

(rule
(f1594_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f810_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg5 arg3) (> arg5 (- 1))) (<= arg1P arg1))
(<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(= 0 arg3P))
(= arg5 arg4P))
)

(rule
(f810_0__init__GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1738_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg4 arg3)) (<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(= arg3 arg3P))
(= 0 arg4P))
(= arg4 arg5P))
)

(rule
(f1738_0__init__GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f810_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= arg5 arg4)) (<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(= (+ arg3 1) arg3P))
(= arg5 arg4P))
)

(rule
(f1738_0__init__GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1738_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x129 Int) (x130 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg5 arg4) (> arg5 arg3)) (> x129 (- 1)))
(> x129 arg4))
(> x130 arg4))
(> x130 (- 1)))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(<= (+ arg2P 2) arg1))
(<= arg2P arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg2P 0))
(= arg3 arg3P))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
)
)

(rule
(f1594_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f3834_0_sum_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> arg5 (- 1))) (<= arg5 arg3))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(= 0 arg2P))
(= arg4 arg3P))
)

(rule
(f3834_0_sum_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f5514_0_sum_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg3 arg2) (> arg3 (- 1))) (<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= 0 arg3P))
(= arg3 arg4P))
)

(rule
(f5514_0_sum_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f3834_0_sum_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (<= arg4 arg3)) (<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= (+ arg2 1) arg2P))
(= arg4 arg3P))
)

(rule
(f5514_0_sum_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f5514_0_sum_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x151 Int) (x152 Int) (x153 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 arg3) (> arg4 arg2)) (> x151 (- 1)))
(> x151 arg3))
(> x152 (- 1)))
(> x152 arg3))
(> x153 (- 1)))
(> arg4 (- 1)))
(> x153 arg3))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)
)

(rule
(f1594_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1782_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> arg5 (- 1))) (<= arg5 arg3))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(= 0 arg2P))
(= arg4 arg3P))
)

(rule
(f1782_0__init__GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2647_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 arg2)) (> arg1 2)) (> arg1P 2))
(= arg2 arg2P))
(= 0 arg3P))
(= arg3 arg4P))
)

(rule
(f2647_0__init__GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1782_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and (and (and (<= arg1P arg1) (<= arg4 arg3)) (> arg1 2)) (> arg1P 2))
(= (+ arg2 1) arg2P))
(= arg4 arg3P))
)

(rule
(f2647_0__init__GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2647_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x174 Int))
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 arg3) (> arg4 arg2)) (> x174 arg3))
(> x174 (- 1)))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
)
)

(rule
(f1887_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1782_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg5 (- 1)) (> arg4 (- 1))) (<= (- arg1P 2) arg1))
(<= arg1P arg2))
(<= arg1P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 2))
(= 0 arg2P))
(= arg5 arg3P))
)

(rule
(f1887_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f5494_0_product_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (> arg5 (- 1))) (<= (- arg1P 2) arg1))
(<= arg1P arg2))
(<= arg1P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 2))
(= arg5 arg6))
(= 0 arg2P))
(= arg5 arg3P))
)

(rule
(f5494_0_product_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f7999_0_product_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg3 arg2) (> arg3 (- 1))) (<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= 0 arg3P))
(= arg3 arg4P))
)

(rule
(f7999_0_product_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f5494_0_product_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (<= arg4 arg3)) (<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= (+ arg2 1) arg2P))
(= arg4 arg3P))
)

(rule
(f7999_0_product_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f8902_0_product_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x202 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 arg3) (> arg4 arg2)) (> x202 (- 1)))
(> arg4 (- 1)))
(> x202 arg3))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= arg3 arg3P))
(= 0 arg4P))
(= arg4 arg5P))
)
)

(rule
(f8902_0_product_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f7999_0_product_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg5 (- 1)) (<= arg5 arg4)) (<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= arg5 arg4P))
)

(rule
(f8902_0_product_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f8902_0_product_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x215 Int) (x216 Int) (x217 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg5 arg4) (> arg5 arg2)) (> x215 (- 1)))
(> x215 arg3))
(> x216 (- 1)))
(> x216 arg4))
(> x217 (- 1)))
(> x217 arg3))
(> arg5 (- 1)))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= arg2 arg2P))
(= arg3 arg3P))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
)
)

(rule
(f1998_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1782_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg6 (- 1)) (> arg4 (- 1))) (<= (- arg1P 2) arg1))
(<= arg1P arg2))
(<= arg1P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 2))
(= 0 arg2P))
(= arg6 arg3P))
)

(rule
(f1998_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f4961_0_transpose_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg6 (- 1)) (> arg4 (- 1))) (<= (- arg1P 2) arg1))
(<= arg1P arg2))
(<= arg1P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 2))
(= 0 arg2P))
(= arg6 arg3P))
)

(rule
(f4961_0_transpose_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f6926_0_transpose_GT arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and (and (and (<= arg1P arg1) (> arg3 arg2)) (> arg1 2)) (> arg1P 2))
(= 0 arg2P))
(= arg2 arg3P))
(= arg3 arg4P))
)

(rule
(f6926_0_transpose_GT arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f4961_0_transpose_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and (and (> arg4 (- 1)) (< arg3 arg2)) (<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= (+ arg3 1) arg2P))
(= arg4 arg3P))
)

(rule
(f6926_0_transpose_GT arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f6926_0_transpose_GT arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x246 Int) (x247 Int) (x248 Int) (x249 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (>= arg3 arg2) (> arg4 arg3)) (> arg4 arg2))
(> x246 (- 1)))
(> x246 arg3))
(> x247 (- 1)))
(> x247 arg2))
(> x248 (- 1)))
(> x248 arg2))
(> x249 arg3))
(> x249 (- 1)))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
(= arg4 arg4P))
)
)

(rule
(f1998_0_main_InvokeMethod arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2743_0_determinant_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg5 (- 1)) (> arg4 (- 1))) (<= (- arg1P 2) arg1))
(<= arg1P arg2))
(<= arg1P arg3))
(> arg1 0))
(> arg2 2))
(> arg3 2))
(> arg1P 2))
(= arg5 arg2P))
)

(rule
(f2743_0_determinant_NE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f6845_0_determinant_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and (and (and (<= arg1P arg1) (> arg2 1)) (> arg1 2)) (> arg1P 2))
(= 0 arg2P))
(= arg2 arg3P))
)

(rule
(f6845_0_determinant_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(|f6845_0_determinant_GE'|
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(exists
((x419 Int) (x420 Int) (x421 Int))
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 0) (> arg3 arg2)) (= (- arg2 (* 2 x419)) 1))
(<= x420 arg1))
(> arg1 2))
(> x420 2))
(> x421 (- 1)))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
)
)

(rule
(|f6845_0_determinant_GE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f7078_0_determinant_ArrayAccess
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(exists
((x427 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 0) (> arg3 arg2)) (= (- arg2 (* 2 x427)) 1))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(> arg2P (- 1)))
(< (- arg2 (* 2 x427)) 2))
(>= (- arg2 (* 2 x427)) 0))
(= arg2 arg3P))
(= arg3 arg4P))
)
)

(rule
(f6845_0_determinant_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(|f6845_0_determinant_GE'|
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(exists
((x431 Int) (x432 Int) (x433 Int))
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 0) (> arg3 arg2)) (= (- arg2 (* 2 x431)) 0))
(<= x432 arg1))
(> arg1 2))
(> x432 2))
(> x433 (- 1)))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
)
)

(rule
(|f6845_0_determinant_GE'| arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f7078_0_determinant_ArrayAccess
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P)
:guard
(exists
((x439 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg3 0) (> arg3 arg2)) (= (- arg2 (* 2 x439)) 0))
(<= arg1P arg1))
(> arg1 2))
(> arg1P 2))
(> arg2P (- 1)))
(< (- arg2 (* 2 x439)) 2))
(>= (- arg2 (* 2 x439)) 0))
(= arg2 arg3P))
(= arg3 arg4P))
)
)

(rule
(f7078_0_determinant_ArrayAccess arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f2743_0_determinant_NE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x276 Int))
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 arg3) (> arg2P 0)) (> arg4 1)) (> x276 arg3))
(> x276 (- 1)))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
)
)

(rule
(f7078_0_determinant_ArrayAccess arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f6845_0_determinant_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x282 Int) (x283 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 arg3) (> arg4 1)) (> x282 arg3)) (> x283 0))
(> x282 (- 1)))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(= (+ arg3 1) arg2P))
(= arg4 arg3P))
)
)

(rule
(f7078_0_determinant_ArrayAccess arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1782_0__init__GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x289 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 arg3) (> arg4 1)) (> x289 arg3)) (> x289 (- 1)))
(< (- arg4 1) arg4))
(>= (- arg4 1) arg3))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(= 0 arg2P))
(= (- arg4 1) arg3P))
)
)

(rule
(f7078_0_determinant_ArrayAccess arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f8521_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x296 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg4 arg3) (> arg4 1)) (> x296 arg3)) (> x296 (- 1)))
(< (- arg4 1) arg4))
(>= (- arg4 1) arg3))
(<= arg1P arg1))
(<= (- arg1P 2) arg2))
(<= arg3P arg1))
(<= (- arg3P 2) arg2))
(> arg1 2))
(> arg2 0))
(> arg1P 2))
(> arg3P 2))
(= arg3 arg2P))
(= 0 arg4P))
(= 0 arg5P))
(= arg4 arg6P))
(= (- arg4 1) arg7P))
)
)

(rule
(f8521_0_submatrix_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f8521_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg6 0)) (<= arg1P arg3))
(<= arg3P arg1))
(<= arg3P arg3))
(> arg1 2))
(> arg3 2))
(> arg1P 2))
(> arg3P 2))
(= 0 arg5))
(= arg2 arg2P))
(= arg4 arg4P))
(= 1 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
)

(rule
(f8521_0_submatrix_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f9424_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg6 (- 1)) (> arg6 arg5)) (> arg5 0))
(<= arg1P arg1))
(<= arg1P arg3))
(<= arg3P arg1))
(<= arg3P arg3))
(> arg1 2))
(> arg3 2))
(> arg1P 2))
(> arg3P 2))
(= arg2 arg2P))
(= arg5 arg4P))
(= arg4 arg5P))
(= 0 arg6P))
(= 0 arg7P))
(= arg6 arg8P))
(= arg7 arg9P))
)

(rule
(f9424_0_submatrix_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f8521_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg8 arg7) (> arg8 (- 1))) (<= arg1P arg1))
(<= arg1P arg3))
(<= arg3P arg1))
(<= arg3P arg3))
(> arg1 2))
(> arg3 2))
(> arg1P 2))
(> arg3P 2))
(= arg2 arg2P))
(= (+ arg5 1) arg4P))
(= (+ arg4 1) arg5P))
(= arg8 arg6P))
(= arg9 arg7P))
)

(rule
(f9424_0_submatrix_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f9424_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg8 arg2) (> arg8 (- 1))) (<= arg1P arg1))
(<= arg1P arg3))
(<= arg3P arg1))
(<= arg3P arg3))
(> arg1 2))
(> arg3 2))
(> arg1P 2))
(> arg3P 2))
(= arg2 arg7))
(= arg2 arg2P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
(= (+ arg2 1) arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)

(rule
(f9424_0_submatrix_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f9424_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x346 Int) (x347 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg7 arg2) (> arg8 arg7)) (> arg9 arg5)) (> arg8 arg4))
(> x346 (- 1)))
(> x346 arg7))
(> x347 (- 1)))
(> arg8 (- 1)))
(> x347 arg6))
(<= arg1P arg1))
(<= arg1P arg3))
(<= arg3P arg1))
(<= arg3P arg3))
(> arg1 2))
(> arg3 2))
(> arg1P 2))
(> arg3P 2))
(= arg2 arg2P))
(= arg4 arg4P))
(= arg5 arg5P))
(= (+ arg6 1) arg6P))
(= (+ arg7 1) arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)
)

(rule
(f9424_0_submatrix_GE arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f9424_0_submatrix_GE arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P)
:guard
(exists
((x451 Int) (x452 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 arg2) (> arg8 arg7)) (> arg9 arg5)) (> arg8 arg4))
(> x451 (- 1)))
(> x451 arg7))
(> x452 (- 1)))
(> arg8 (- 1)))
(> x452 arg6))
(<= arg1P arg1))
(<= arg1P arg3))
(<= arg3P arg1))
(<= arg3P arg3))
(> arg1 2))
(> arg3 2))
(> arg1P 2))
(> arg3P 2))
(= arg2 arg2P))
(= arg4 arg4P))
(= arg5 arg5P))
(= (+ arg6 1) arg6P))
(= (+ arg7 1) arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)
)

(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P arg6P arg7P arg8P arg9P))

