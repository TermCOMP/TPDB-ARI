(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f142_0_main_GE (-> Int Int Int))
(fun f181_0_main_Load (-> Int Int Int))
(fun f191_0_main_GE (-> Int Int Int))
(fun f1_0_main_ConstantStackPush (-> Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_ConstantStackPush arg1 arg2)
(f142_0_main_GE arg1P arg2P)
:guard
(= 0 arg1P))

(rule
(f142_0_main_GE arg1 arg2)
(f142_0_main_GE arg1P arg2P)
:guard
(and
(and (and (< arg1 50) (> arg1 9)) (< arg1 100))
(= (+ arg1 1) arg1P))
)

(rule
(f181_0_main_Load arg1 arg2)
(f181_0_main_Load arg1P arg2P)
:guard
(= arg1 arg1P))

(rule
(f142_0_main_GE arg1 arg2)
(f181_0_main_Load arg1P arg2P)
:guard
(and (and (< arg1 100) (> arg1 49)) (= arg1 arg1P)))

(rule
(f142_0_main_GE arg1 arg2)
(f191_0_main_GE arg1P arg2P)
:guard
(and (and (and (< arg1 10) (< arg1 100)) (= arg1 arg1P)) (= 0 arg2P)))

(rule
(f191_0_main_GE arg1 arg2)
(f191_0_main_GE arg1P arg2P)
:guard
(and (and (< arg2 15) (= arg1 arg1P)) (= (+ arg2 1) arg2P)))

(rule
(f191_0_main_GE arg1 arg2)
(f142_0_main_GE arg1P arg2P)
:guard
(and (> arg2 14) (= (+ arg1 1) arg1P)))

(rule (__init arg1 arg2) (f1_0_main_ConstantStackPush arg1P arg2P))
