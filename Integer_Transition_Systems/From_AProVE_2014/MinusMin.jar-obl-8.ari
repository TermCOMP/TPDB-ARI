(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f252_0_min_GE (-> Int Int Int Int))
(fun f261_0_main_NE (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f252_0_min_GE arg1P arg2P arg3P)
:guard
(and
(and
(and (and (> arg1P (- 1)) (> arg2 (- 1))) (> arg3P (- 1)))
(> arg1 0))
(= (- arg1P 1) arg2P))
)

(rule
(f252_0_min_GE arg1 arg2 arg3)
(f261_0_main_NE arg1P arg2P arg3P)
:guard
(and
(and (and (> arg3 arg2) (= arg1 arg1P)) (= arg2 arg2P))
(= arg3 arg3P))
)

(rule
(f252_0_min_GE arg1 arg2 arg3)
(f261_0_main_NE arg1P arg2P arg3P)
:guard
(and
(and (and (<= arg3 arg2) (= arg1 arg1P)) (= arg3 arg2P))
(= arg3 arg3P))
)

(rule
(f261_0_main_NE arg1 arg2 arg3)
(f252_0_min_GE arg1P arg2P arg3P)
:guard
(and
(and
(and (and (> arg1 (- 1)) (= arg2 arg3)) (= arg1 arg1P))
(= (- arg1 1) arg2P))
(= (+ arg2 1) arg3P))
)

(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
