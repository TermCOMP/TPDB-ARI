(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int))
(fun f1870_0_rec_LE (-> Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int))
(fun |f1_0_main_Load'| (-> Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5)
(|f1_0_main_Load'| arg1P arg2P arg3P arg4P arg5P)
:guard
(exists
((x23 Int))
(and
(and
(and (and (> arg2 (- 1)) (<= x23 (* 200 arg2))) (> arg1 0))
(= arg1 arg1P))
(= arg2 arg2P))
)
)

(rule
(|f1_0_main_Load'| arg1 arg2 arg3 arg4 arg5)
(f1870_0_rec_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (<= arg2P (* 200 arg2))) (> arg1 0))
(< (- (* 200 arg2) (* 13 arg2P)) 13))
(>= (- (* 200 arg2) (* 13 arg2P)) 0))
(= (* 100 arg2) arg1P))
(= (+ (* 100 arg2) arg2P) arg3P))
(= arg2 arg4P))
(= 0 arg5P))
)

(rule
(f1870_0_rec_LE arg1 arg2 arg3 arg4 arg5)
(f1870_0_rec_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (> arg3 0) (> arg4 (- 1))) (< (- arg2 1) arg2))
(>= arg5 arg4))
(= arg1 arg1P))
(= (- arg2 1) arg2P))
(= (+ arg1 (- arg2 1)) arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
)

(rule
(f1870_0_rec_LE arg1 arg2 arg3 arg4 arg5)
(f1870_0_rec_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(exists
((x13 Int) (x14 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 1) (< (+ arg5 1) arg4)) (> arg3 0))
(> arg5 (- 1)))
(> x13 (- 1)))
(> x14 (- 1)))
(<= (* x13 x14) 9))
(<= (+ arg5 2) arg4))
(< (- arg2 1) arg2))
(= arg1 arg1P))
(= (- arg2 1) arg2P))
(= (+ arg1 (- arg2 1)) arg3P))
(= arg4 arg4P))
(= (+ arg5 2) arg5P))
)
)

(rule
(f1870_0_rec_LE arg1 arg2 arg3 arg4 arg5)
(f1870_0_rec_LE arg1P arg2P arg3P arg4P arg5P)
:guard
(exists
((x20 Int) (x21 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg4 1) (< (+ arg5 1) arg4)) (> arg3 0))
(> arg5 (- 1)))
(> x20 (- 1)))
(> x21 (- 1)))
(> (* x20 x21) 9))
(<= (+ arg5 2) arg4))
(< (- arg1 1) arg1))
(= (- arg1 1) arg1P))
(= arg2 arg2P))
(= (+ (- arg1 1) arg2) arg3P))
(= arg4 arg4P))
(= (+ arg5 2) arg5P))
)
)

(rule
(__init arg1 arg2 arg3 arg4 arg5)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P))

