(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f1549_0_search_LT (-> Int Int Int Int))
(fun f1876_0_safeMove_GE (-> Int Int Int Int))
(fun f1911_0_search_GE (-> Int Int Int Int))
(fun f1944_0_displayChessboard_GE (-> Int Int Int Int))
(fun f1969_0_safeMove_NE (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f2167_0_displayChessboard_GE (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f1549_0_search_LT arg1P arg2P arg3P)
:guard
(and (and (> arg1 0) (> arg2 (- 1))) (= 0 arg1P)))
(rule
(f1549_0_search_LT arg1 arg2 arg3)
(f1911_0_search_GE arg1P arg2P arg3P)
:guard
(exists ((x2 Int)) (and (and (< arg1 x2) (= arg1 arg1P)) (= 0 arg2P))))
(rule
(f1911_0_search_GE arg1 arg2 arg3)
(f1911_0_search_GE arg1P arg2P arg3P)
:guard
(exists
((x4 Int))
(and
(and (and (< arg2 x4) (> x4 0)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
)
)
(rule
(f1911_0_search_GE arg1 arg2 arg3)
(f1549_0_search_LT arg1P arg2P arg3P)
:guard
(exists
((x7 Int) (x10 Int))
(and
(and
(and
(and (and (and (> x7 0) (< arg2 x7)) (> x10 0)) (> arg1 (- 1)))
(< arg1 x7))
(> (+ arg1 1) arg1))
(= (+ arg1 1) arg1P))
)
)
(rule
(f1911_0_search_GE arg1 arg2 arg3)
(f1911_0_search_GE arg1P arg2P arg3P)
:guard
(exists
((x11 Int) (x14 Int))
(and
(and
(and
(and
(and (and (and (> x11 0) (< arg2 x11)) (> x14 0)) (> arg1 (- 1)))
(< arg1 x11))
(> (+ arg1 1) arg1))
(= arg1 arg1P))
(= (+ arg2 1) arg2P))
)
)
(rule
(f1549_0_search_LT arg1 arg2 arg3)
(f1944_0_displayChessboard_GE arg1P arg2P arg3P)
:guard
(exists ((x15 Int)) (and (>= arg1 x15) (= 0 arg1P))))
(rule
(f1944_0_displayChessboard_GE arg1 arg2 arg3)
(f2167_0_displayChessboard_GE arg1P arg2P arg3P)
:guard
(exists ((x17 Int)) (and (and (< arg1 x17) (= arg1 arg1P)) (= 0 arg2P))))
(rule
(f2167_0_displayChessboard_GE arg1 arg2 arg3)
(f1944_0_displayChessboard_GE arg1P arg2P arg3P)
:guard
(exists ((x19 Int)) (and (>= arg2 x19) (= (+ arg1 1) arg1P))))
(rule
(f2167_0_displayChessboard_GE arg1 arg2 arg3)
(f2167_0_displayChessboard_GE arg1P arg2P arg3P)
:guard
(exists
((x25 Int) (x22 Int))
(and
(and (and (and (< x25 arg2) (< arg2 x22)) (< arg1 x22)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
)
)
(rule
(f2167_0_displayChessboard_GE arg1 arg2 arg3)
(f2167_0_displayChessboard_GE arg1P arg2P arg3P)
:guard
(exists
((x46 Int) (x49 Int))
(and
(and (and (and (> x46 arg2) (< arg2 x49)) (< arg1 x49)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
)
)
(rule
(f2167_0_displayChessboard_GE arg1 arg2 arg3)
(f2167_0_displayChessboard_GE arg1P arg2P arg3P)
:guard
(exists
((x26 Int))
(and
(and (and (< arg2 x26) (< arg1 x26)) (= arg1 arg1P))
(= (+ arg2 1) arg2P))
)
)
(rule
(f1911_0_search_GE arg1 arg2 arg3)
(f1876_0_safeMove_GE arg1P arg2P arg3P)
:guard
(exists
((x29 Int))
(and
(and (and (and (< arg2 x29) (> x29 0)) (= 1 arg1P)) (= 0 arg2P))
(= arg1 arg3P))
)
)
(rule
(f1876_0_safeMove_GE arg1 arg2 arg3)
(f1969_0_safeMove_NE arg1P arg2P arg3P)
:guard
(exists
((x32 Int))
(and
(and
(and
(and
(and (and (and (> arg3 0) (> x32 0)) (> arg1 0)) (< arg2 x32))
(> arg3 arg2))
(= arg3 arg1P))
(= arg2 arg2P))
(= 1 arg3P))
)
)
(rule
(f1876_0_safeMove_GE arg1 arg2 arg3)
(f1969_0_safeMove_NE arg1P arg2P arg3P)
:guard
(exists
((x36 Int))
(and
(and
(and
(and
(and (and (and (> arg3 0) (> x36 0)) (> arg1 0)) (< arg2 x36))
(> arg3 arg2))
(= arg3 arg1P))
(= arg2 arg2P))
(= 0 arg3P))
)
)
(rule
(f1876_0_safeMove_GE arg1 arg2 arg3)
(f1876_0_safeMove_GE arg1P arg2P arg3P)
:guard
(and
(and
(and (and (> arg3 arg2) (= 0 arg1)) (= 0 arg1P))
(= (+ arg2 1) arg2P))
(= arg3 arg3P))
)
(rule
(f1969_0_safeMove_NE arg1 arg2 arg3)
(f1876_0_safeMove_GE arg1P arg2P arg3P)
:guard
(and
(and (and (= 1 arg3) (= 0 arg1P)) (= (+ arg2 1) arg2P))
(= arg1 arg3P))
)
(rule
(f1969_0_safeMove_NE arg1 arg2 arg3)
(f1876_0_safeMove_GE arg1P arg2P arg3P)
:guard
(and
(and (and (= 0 arg3) (= 1 arg1P)) (= (+ arg2 1) arg2P))
(= arg1 arg3P))
)
(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
