(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(fun f84_0_main_LE (-> Int Int Int))
(fun |f84_0_main_LE'| (-> Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2)
(f84_0_main_LE arg1P arg2P)
:guard
(and (and (> arg2 (- 1)) (> arg1P (- 1))) (> arg1 0)))
(rule
(f84_0_main_LE arg1 arg2)
(|f84_0_main_LE'| arg1P arg2P)
:guard
(exists
((x6 Int) (x7 Int))
(and
(and (and (= (- arg1 (* 2 x6)) 0) (> arg1 x7)) (> arg1 1))
(= arg1 arg1P))
)
)
(rule
(|f84_0_main_LE'| arg1 arg2)
(f84_0_main_LE arg1P arg2P)
:guard
(exists
((x10 Int))
(and
(and
(and
(and
(and (and (= (- arg1 (* 2 x10)) 0) (> arg1 1)) (> arg1 arg1P))
(>= (- arg1 (* 2 x10)) 0))
(< (- arg1 (* 2 x10)) 2))
(< (- arg1 (* 2 arg1P)) 2))
(>= (- arg1 (* 2 arg1P)) 0))
)
)
(rule
(f84_0_main_LE arg1 arg2)
(|f84_0_main_LE'| arg1P arg2P)
:guard
(exists
((x12 Int))
(and
(and (and (= (- arg1 (* 2 x12)) 1) (> (* 3 arg1) 0)) (> arg1 1))
(= arg1 arg1P))
)
)
(rule
(|f84_0_main_LE'| arg1 arg2)
(f84_0_main_LE arg1P arg2P)
:guard
(exists
((x14 Int))
(and
(and
(and
(and (and (= (- arg1 (* 2 x14)) 1) (> arg1 1)) (> (* 3 arg1) 0))
(< (- arg1 (* 2 x14)) 2))
(>= (- arg1 (* 2 x14)) 0))
(= (+ (* 3 arg1) 1) arg1P))
)
)
(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
