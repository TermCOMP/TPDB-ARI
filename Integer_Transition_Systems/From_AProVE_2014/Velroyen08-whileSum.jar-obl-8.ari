(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f213_0_increase_LE (-> Int Int Int Int))
(fun |f213_0_increase_LE'| (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f213_0_increase_LE arg1P arg2P arg3P)
:guard
(and
(and (and (and (> arg1P (- 1)) (> arg2 1)) (> arg2P (- 1))) (> arg1 0))
(= (+ arg1P arg2P) arg3P))
)
(rule
(f213_0_increase_LE arg1 arg2 arg3)
(|f213_0_increase_LE'| arg1P arg2P arg3P)
:guard
(exists
((x13 Int))
(and
(and
(and
(and (and (> arg1 (- 2)) (< (- arg2 (* 2 x13)) 0)) (> arg3 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
)
)
(rule
(f213_0_increase_LE arg1 arg2 arg3)
(|f213_0_increase_LE'| arg1P arg2P arg3P)
:guard
(exists
((x17 Int))
(and
(and
(and
(and (and (> arg1 (- 2)) (> (- arg2 (* 2 x17)) 0)) (> arg3 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
)
)
(rule
(|f213_0_increase_LE'| arg1 arg2 arg3)
(f213_0_increase_LE arg1P arg2P arg3P)
:guard
(exists
((x21 Int))
(and
(and
(and
(and
(and
(and (> (- arg2 (* 2 x21)) 0) (> arg1 (- 2)))
(< (- arg2 (* 2 x21)) 2))
(> arg3 0))
(= (+ arg1 1) arg1P))
(= arg2 arg2P))
(= (+ (+ arg1 1) arg2) arg3P))
)
)
(rule
(f213_0_increase_LE arg1 arg2 arg3)
(|f213_0_increase_LE'| arg1P arg2P arg3P)
:guard
(exists
((x25 Int))
(and
(and
(and
(and (and (> arg1 (- 2)) (= (- arg2 (* 2 x25)) 0)) (> arg3 0))
(= arg1 arg1P))
(= arg2 arg2P))
(= arg3 arg3P))
)
)
(rule
(|f213_0_increase_LE'| arg1 arg2 arg3)
(f213_0_increase_LE arg1P arg2P arg3P)
:guard
(exists
((x29 Int))
(and
(and
(and
(and
(and
(and (and (> arg1 (- 2)) (> arg3 0)) (= (- arg2 (* 2 x29)) 0))
(< (- arg2 (* 2 x29)) 2))
(>= (- arg2 (* 2 x29)) 0))
(= (+ arg1 1) arg1P))
(= (- arg2 2) arg2P))
(= (+ (+ arg1 1) (- arg2 2)) arg3P))
)
)
(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
