(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f108_0_add_GT (-> Int Int Int Int))
(fun f1_0_main_ConstantStackPush (-> Int Int Int Int))
(fun f208_0_add_GT (-> Int Int Int Int))
(fun f311_0_add_GT (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_ConstantStackPush arg1 arg2 arg3)
(f108_0_add_GT arg1P arg2P arg3P)
:guard
(and (and (= 0 arg1P) (= 0 arg2P)) (= 0 arg3P)))
(rule
(f108_0_add_GT arg1 arg2 arg3)
(f108_0_add_GT arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg1 (- 1))) (< arg2 1001))
(= arg2 arg3))
(= (+ arg1 arg2) arg1P))
(= (+ arg2 1) arg2P))
(= (+ arg2 1) arg3P))
)
(rule
(f108_0_add_GT arg1 arg2 arg3)
(f208_0_add_GT arg1P arg2P arg3P)
:guard
(and
(and (and (and (> arg2 1000) (= arg2 arg3)) (= 0 arg1P)) (= 0 arg2P))
(= 0 arg3P))
)
(rule
(f208_0_add_GT arg1 arg2 arg3)
(f208_0_add_GT arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg1 (- 1))) (< arg2 1001))
(= arg2 arg3))
(= (+ arg1 arg2) arg1P))
(= (+ arg2 2) arg2P))
(= (+ arg2 2) arg3P))
)
(rule
(f208_0_add_GT arg1 arg2 arg3)
(f311_0_add_GT arg1P arg2P arg3P)
:guard
(and
(and (and (and (> arg2 1000) (= arg2 arg3)) (= 0 arg1P)) (= 0 arg2P))
(= 0 arg3P))
)
(rule
(f311_0_add_GT arg1 arg2 arg3)
(f311_0_add_GT arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and (and (> arg2 (- 1)) (> arg1 (- 1))) (< arg2 1001))
(= arg2 arg3))
(= (+ arg1 arg2) arg1P))
(= (+ arg2 3) arg2P))
(= (+ arg2 3) arg3P))
)
(rule
(__init arg1 arg2 arg3)
(f1_0_main_ConstantStackPush arg1P arg2P arg3P))
