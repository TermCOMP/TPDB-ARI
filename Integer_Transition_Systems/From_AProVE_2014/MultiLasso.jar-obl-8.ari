(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f104_0_main_LE (-> Int Int Int Int))
(fun f157_0_main_LE (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f104_0_main_LE arg1P arg2P arg3P)
:guard
(exists
((x2 Int) (x3 Int))
(and
(and (and (and (> x2 (- 1)) (> arg2 1)) (> x3 (- 1))) (> arg1 0))
(= (- x2 x3) arg1P))
)
)
(rule
(f104_0_main_LE arg1 arg2 arg3)
(f157_0_main_LE arg1P arg2P arg3P)
:guard
(and
(and (and (> arg1 0) (= (+ arg1 1) arg1P)) (= (+ arg1 1) arg2P))
(= (+ arg1 1) arg3P))
)
(rule
(f157_0_main_LE arg1 arg2 arg3)
(f104_0_main_LE arg1P arg2P arg3P)
:guard
(and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)))
(rule
(f157_0_main_LE arg1 arg2 arg3)
(f157_0_main_LE arg1P arg2P arg3P)
:guard
(and
(and
(and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P))
(= (- arg2 1) arg2P))
(= (- arg2 1) arg3P))
)
(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
