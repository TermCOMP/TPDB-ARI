(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f40_0_loop_Inc (-> Int Int Int Int))
(entrypoint __init)
(rule
(f40_0_loop_Inc arg1 arg2 arg3)
(f40_0_loop_Inc arg1P arg2P arg3P)
:guard
(and
(and
(and (and (<= arg1P arg1) (> arg1 0)) (> arg1P 0))
(= (- arg2 1) arg2P))
(= arg3 arg3P))
)

(rule
(f1_0_main_Load arg1 arg2 arg3)
(f40_0_loop_Inc arg1P arg2P arg3P)
:guard
(and
(and
(and (and (and (<= arg1P arg1) (> arg2 (- 1))) (> arg1 0)) (> arg1P 0))
(= (- arg2 1) arg2P))
(= arg2 arg3P))
)

(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
