(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int Int))
(fun f672_0_main_GE (-> Int Int Int Int Int Int Int))
(fun f765_0_insert_GT (-> Int Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5 arg6)
(f672_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (> arg4P (- 1)) (> arg2 1)) (> arg6P (- 1)))
(<= arg1P arg1))
(> arg1 0))
(> arg1P 0))
(> arg2P 1))
(= 0 arg3P))
(= 2 arg5P))
)

(rule
(f672_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6)
(f672_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(exists
((x6 Int) (x16 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg5 (- 1)) (> arg4 arg3)) (> arg4 0)) (> x6 1))
(> x16 (- 1)))
(< arg5 x6))
(>= arg1 arg1P))
(>= arg2 arg1P))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 3))
(>= arg2 (+ arg6 2)))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= (+ arg5 1) arg5P))
)
)

(rule
(f672_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6)
(f672_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(exists
((x17 Int) (x27 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg5 (- 1)) (> arg4 arg3)) (> arg4 0)) (> x17 1))
(> x27 (- 1)))
(< arg5 x17))
(<= arg1P arg1))
(<= arg1P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 3))
(<= (+ arg6 2) arg2))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= (+ arg5 1) arg5P))
)
)

(rule
(f672_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6)
(f672_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(exists
((x28 Int) (x38 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg5 (- 1)) (> arg4 arg3)) (> arg4 0)) (> x28 1))
(> x38 (- 1)))
(< arg5 x28))
(<= arg1P arg1))
(<= arg1P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 2))
(<= (+ arg6 2) arg2))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= (+ arg5 1) arg5P))
)
)

(rule
(f672_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6)
(f672_0_main_GE arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(exists
((x39 Int) (x49 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg5 (- 1)) (> arg4 arg3)) (> arg4 0)) (> x39 1))
(> x49 (- 1)))
(< arg5 x39))
(<= arg1P arg1))
(<= arg1P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(> arg2P 2))
(<= (+ arg6 2) arg2))
(= (+ arg3 1) arg3P))
(= arg4 arg4P))
(= (+ arg5 1) arg5P))
)
)

(rule
(f672_0_main_GE arg1 arg2 arg3 arg4 arg5 arg6)
(f765_0_insert_GT arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(exists
((x50 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg5 (- 1)) (> arg4 arg3)) (> arg4 0)) (> x50 1))
(> arg2P (- 1)))
(< arg5 x50))
(<= arg1P arg2))
(> arg1 0))
(> arg2 0))
(> arg1P 0))
(<= (+ arg6 2) arg2))
(= arg6 arg3P))
)
)

(rule
(f765_0_insert_GT arg1 arg2 arg3 arg4 arg5 arg6)
(f765_0_insert_GT arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and (and (<= (+ arg1P 2) arg1) (< arg3 arg2)) (> arg1 2))
(> arg1P 0))
(<= (+ arg3 2) arg1))
(<= (+ arg3P 4) arg1))
(= arg2 arg2P))
)

(rule
(f765_0_insert_GT arg1 arg2 arg3 arg4 arg5 arg6)
(f765_0_insert_GT arg1P arg2P arg3P arg4P arg5P arg6P)
:guard
(and
(and
(and
(and
(and (and (<= (+ arg1P 2) arg1) (>= arg3 arg2)) (> arg1 2))
(> arg1P 0))
(<= (+ arg3 2) arg1))
(<= (+ arg3P 4) arg1))
(= arg2 arg2P))
)

(rule
(__init arg1 arg2 arg3 arg4 arg5 arg6)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P arg6P))

