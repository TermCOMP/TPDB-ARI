(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int Int Int))
(fun f370_0_div_LT (-> Int Int Int Int Int Int))
(fun f398_0_minus_EQ (-> Int Int Int Int Int Int))
(entrypoint __init)
(rule
(f1_0_main_Load arg1 arg2 arg3 arg4 arg5)
(f370_0_div_LT arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and (and (> arg3P (- 1)) (> arg2 (- 1))) (> arg2P (- 1)))
(> arg1 0))
(= 0 arg1P))
)
(rule
(f370_0_div_LT arg1 arg2 arg3 arg4 arg5)
(f398_0_minus_EQ arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and (and (and (<= arg3 arg2) (> arg3 0)) (= arg3 arg1P)) (= arg1 arg2P))
(= arg2 arg3P))
(= arg3 arg4P))
(= arg3 arg5P))
)
(rule
(f398_0_minus_EQ arg1 arg2 arg3 arg4 arg5)
(f398_0_minus_EQ arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and (and (and (< arg4 0) (< arg4 1)) (= arg4 arg5)) (= arg1 arg1P))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= (+ arg4 1) arg4P))
(= (+ arg4 1) arg5P))
)
(rule
(f398_0_minus_EQ arg1 arg2 arg3 arg4 arg5)
(f398_0_minus_EQ arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and
(and (and (and (> arg4 0) (< arg4 1)) (= arg4 arg5)) (= arg1 arg1P))
(= arg2 arg2P))
(= (+ arg3 1) arg3P))
(= (+ arg4 1) arg4P))
(= (+ arg4 1) arg5P))
)
(rule
(f398_0_minus_EQ arg1 arg2 arg3 arg4 arg5)
(f398_0_minus_EQ arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and (and (and (> arg4 0) (= arg4 arg5)) (= arg1 arg1P)) (= arg2 arg2P))
(= (- arg3 1) arg3P))
(= (- arg4 1) arg4P))
(= (- arg4 1) arg5P))
)
(rule
(f398_0_minus_EQ arg1 arg2 arg3 arg4 arg5)
(f370_0_div_LT arg1P arg2P arg3P arg4P arg5P)
:guard
(and
(and
(and
(and (and (> arg2 (- 1)) (= 0 arg4)) (= 0 arg5))
(= (+ arg2 1) arg1P))
(= arg3 arg2P))
(= arg1 arg3P))
)
(rule
(__init arg1 arg2 arg3 arg4 arg5)
(f1_0_main_Load arg1P arg2P arg3P arg4P arg5P))
