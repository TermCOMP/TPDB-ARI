(format LCTRS)
(theory Ints)
(fun
__init
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f1_0_main_Load
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f2688_0_createList_LE
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f2767_0_random_ArrayAccess
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f3555_0_entry_LE
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f3801_0_entry_GT
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f3914_0_main_CheckCast
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f3920_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f3921_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4015_0_equals_Return
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4022_0_equals_Return
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4029_0_equals_Return
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4036_0_equals_Return
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4449_0_equals_CheckCast
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4565_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4566_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4821_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4822_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4900_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4902_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4904_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f4906_0_indexOf_EQ
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f529_0_createList_Load
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f563_0_createList_Return
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(fun
f998_0_createList_Load
(->
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int
Int)
)

(entrypoint __init)
(rule
(f529_0_createList_Load
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f998_0_createList_Load
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 9) (> arg2P 9)) (<= (+ arg7 3) arg2))
(<= (+ arg6 5) arg2))
(= arg1 arg1P))
(= 0 arg3P))
(= 0 arg4P))
(= arg3 arg5P))
(= arg6P arg7P))
(= 0 arg8P))
(= 0 arg9P))
(= 0 arg10P))
(= arg3 arg15P))
(= arg4 arg16P))
(= arg4 arg17P))
(= arg5 arg19P))
(= arg6 arg22P))
(= arg7 arg23P))
)

(rule
(f1_0_main_Load
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f2767_0_random_ArrayAccess
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x26 Int))
(and
(and (and (and (> x26 (- 1)) (> arg2 0)) (> arg1 0)) (> arg1P 6))
(= arg2 arg4P))
)
)

(rule
(f563_0_createList_Return
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f2767_0_random_ArrayAccess
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg1 0) (> arg2 6)) (> arg1P 6)) (<= (+ arg6 7) arg2))
(<= (+ arg7 7) arg2))
(<= (+ arg9 3) arg2))
(<= (+ arg8 5) arg2))
(= arg3 arg2P))
(= arg4 arg3P))
(= arg8 arg7P))
(= arg9 arg8P))
)

(rule
(f2767_0_random_ArrayAccess
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3555_0_entry_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x41 Int) (x55 Int) (x56 Int) (x57 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< (+ x41 2) arg4) (< (+ x41 1) arg4)) (> x41 (- 1)))
(> x55 (- 1)))
(> x56 (- 1)))
(< x56 42))
(> arg5P (- 1)))
(<= x57 arg5P))
(< arg5P arg7))
(<= (+ arg1P 6) arg1))
(> arg1 6))
(> arg1P 0))
(> arg2P 6))
(> arg3P 1))
(<= (+ arg5 7) arg1))
(<= (+ arg6 7) arg1))
(<= (+ arg8 3) arg1))
(<= (+ arg7 5) arg1))
(= arg7 arg4P))
(= arg3 arg6P))
(= arg2 arg7P))
(= arg3 arg8P))
(= arg3 arg9P))
(= arg3 arg10P))
(= (+ x41 3) arg11P))
(= arg7 arg14P))
(= arg8 arg15P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3555_0_entry_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x82 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg8 0) (> arg6 0)) (> arg10 0)) (> arg6P arg6))
(> arg9 arg6))
(> arg7 0))
(< x82 arg10P))
(< arg8P arg8))
(> arg9 0))
(> x82 (- 1)))
(< x82 arg10))
(< x82 arg8P))
(< arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 2) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 2))
(> arg1P 0))
(> arg2P 6))
(> arg3P 0))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= (- arg4 1) arg4P))
(= arg5 arg5P))
(= arg7 arg7P))
(= arg9 arg9P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3555_0_entry_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x104 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg7 x104) (> arg7 (- 1))) (> arg9 arg8P))
(> arg9 (- 1)))
(< arg5 arg4))
(> arg8P 0))
(> x104 0))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 0))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg9 arg10))
(= (- arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg6P))
(= 0 arg7P))
(= 0 arg9P))
(= 0 arg10P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3555_0_entry_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x126 Int) (x127 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< x126 arg7) (> arg7 (- 1))) (< x127 arg9))
(> arg9 (- 1)))
(> x126 0))
(< arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 2))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg9 arg10))
(= (- arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg6P))
(= 1 arg8P))
(= 1 arg9P))
(= 1 arg10P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3555_0_entry_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x150 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< x150 arg7) (> arg7 (- 1))) (< arg8P arg9))
(> arg9 (- 1)))
(> arg8P 0))
(< arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 0))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg9 arg10))
(= (- arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg6P))
(= 1 arg7P))
(= 0 arg10P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3555_0_entry_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x171 Int) (x172 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< x171 arg7) (> arg7 (- 1))) (< x172 arg9))
(< arg5 arg4))
(> arg9 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(<= (- arg3P 2) arg1))
(<= (+ arg3P 4) arg2))
(<= (- arg3P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 2))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg9 arg10))
(= (- arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg6P))
(= 1 arg7P))
(= 1 arg8P))
(= 1 arg9P))
(= 1 arg10P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3914_0_main_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x194 Int) (x195 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg8 0) (> arg6 0)) (> arg10 0)) (> arg7 0))
(< x194 arg8))
(> arg9 0))
(< x195 arg10))
(> arg9 arg6))
(>= arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 2) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 2))
(> arg1P 0))
(> arg2P 6))
(> arg3P (- 1)))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg7 arg4P))
(= arg9 arg5P))
(= arg11 arg6P))
(= arg14 arg9P))
(= arg15 arg10P))
)
)

(rule
(f3555_0_entry_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3914_0_main_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (>= arg5 arg4)) (<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(<= (+ arg3P 1) arg1))
(<= (+ arg3P 7) arg2))
(<= (+ arg3P 2) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P (- 1)))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg9 arg10))
(= arg7 arg4P))
(= arg9 arg5P))
(= arg11 arg6P))
(= arg14 arg9P))
(= arg15 arg10P))
)

(rule
(f2767_0_random_ArrayAccess
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3801_0_entry_GT
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x217 Int) (x231 Int) (x232 Int) (x233 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< (+ x217 2) arg4) (< (+ x217 1) arg4)) (> x217 (- 1)))
(> x231 (- 1)))
(> x232 (- 1)))
(< x232 42))
(> arg5P (- 1)))
(> x233 arg5P))
(< arg5P arg7))
(<= (+ arg1P 6) arg1))
(> arg1 6))
(> arg1P 0))
(> arg2P 6))
(> arg3P 1))
(<= (+ arg5 7) arg1))
(<= (+ arg6 7) arg1))
(<= (+ arg8 3) arg1))
(<= (+ arg7 5) arg1))
(= 0 arg4P))
(= arg2 arg6P))
(= arg3 arg7P))
(= arg2 arg8P))
(= arg2 arg9P))
(= arg2 arg10P))
(= (+ x217 3) arg11P))
(= arg7 arg14P))
(= arg8 arg15P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3914_0_main_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x255 Int) (x256 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg9 0) (> arg8 0)) (> arg10 0)) (> arg7 0))
(> arg6 0))
(< x255 arg9))
(< x256 arg10))
(< arg8 arg6))
(< arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 2) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 2))
(> arg1P 0))
(> arg2P 6))
(> arg3P (- 1)))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg6 arg4P))
(= arg7 arg5P))
(= arg11 arg6P))
(= arg14 arg9P))
(= arg15 arg10P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3914_0_main_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (< arg5 arg4)) (<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(<= (+ arg3P 1) arg1))
(<= (+ arg3P 7) arg2))
(<= (+ arg3P 2) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P (- 1)))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg6 arg9))
(= arg6 arg4P))
(= arg7 arg5P))
(= arg11 arg6P))
(= arg14 arg9P))
(= arg15 arg10P))
)

(rule
(f2767_0_random_ArrayAccess
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x291 Int) (x278 Int) (x292 Int) (x293 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> x291 41) (< (+ x278 1) arg4)) (> x278 (- 1)))
(> x292 (- 1)))
(> arg2 (- 1)))
(< arg4P arg2))
(< x293 arg3))
(> arg3 (- 1)))
(> x293 0))
(> arg4P 0))
(<= (+ arg1P 6) arg1))
(> arg1 6))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg5 7) arg1))
(<= (+ arg6 7) arg1))
(<= (+ arg8 3) arg1))
(<= (+ arg7 5) arg1))
(= 0 arg5P))
(= arg4P arg6P))
(= 0 arg7P))
(= 0 arg8P))
(= (+ x278 2) arg9P))
(= arg7 arg11P))
(= arg8 arg12P))
)
)

(rule
(f2767_0_random_ArrayAccess
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x307 Int) (x295 Int) (x308 Int) (x309 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> x307 41) (< (+ x295 1) arg4)) (> x295 (- 1)))
(> x308 (- 1)))
(> arg2 (- 1)))
(< arg4P arg2))
(< x309 arg3))
(> arg4P 0))
(> arg3 (- 1)))
(<= (+ arg1P 6) arg1))
(> arg1 6))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg5 7) arg1))
(<= (+ arg6 7) arg1))
(<= (+ arg8 3) arg1))
(<= (+ arg7 5) arg1))
(= 0 arg5P))
(= arg4P arg6P))
(= 0 arg7P))
(= 0 arg8P))
(= (+ x295 2) arg9P))
(= arg7 arg10P))
(= arg8 arg11P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3801_0_entry_GT
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x334 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg9 0) (> arg8 0)) (> arg10 0)) (> arg8P arg8))
(< arg8 arg6))
(> arg7 0))
(> arg6 0))
(< x334 arg9P))
(< x334 arg9))
(> x334 (- 1)))
(< arg10P arg10))
(< x334 arg10P))
(>= arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 2) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 2))
(> arg1P 0))
(> arg2P 6))
(> arg3P 0))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3801_0_entry_GT
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x356 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg10P arg6) (> arg6 (- 1))) (< x356 arg7))
(> arg7 (- 1)))
(>= arg5 arg4))
(> x356 0))
(> arg10P 0))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 0))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg6 arg9))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= 0 arg6P))
(= 0 arg7P))
(= 1 arg8P))
(= 0 arg9P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3801_0_entry_GT
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x379 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg10P arg6) (> arg6 (- 1))) (< x379 arg7))
(> arg7 (- 1)))
(> arg10P 0))
(>= arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 0))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg6 arg9))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg7P))
(= 1 arg8P))
(= 0 arg9P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3801_0_entry_GT
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x401 Int) (x402 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< x401 arg6) (> arg6 (- 1))) (< x402 arg7))
(> arg7 (- 1)))
(> x402 0))
(>= arg5 arg4))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 2))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg6 arg9))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg6P))
(= 1 arg8P))
(= 1 arg9P))
(= 1 arg10P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3801_0_entry_GT
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3801_0_entry_GT
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x423 Int) (x424 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< x423 arg6) (> arg6 (- 1))) (< x424 arg7))
(>= arg5 arg4))
(> arg7 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= (+ arg1P 1) arg3))
(<= (- arg3P 2) arg1))
(<= (+ arg3P 4) arg2))
(<= (- arg3P 1) arg3))
(> arg1 0))
(> arg2 6))
(> arg3 1))
(> arg1P 0))
(> arg2P 6))
(> arg3P 2))
(<= (+ arg12 7) arg2))
(<= (+ arg13 7) arg2))
(<= (+ arg14 5) arg2))
(<= (+ arg15 3) arg2))
(= arg6 arg9))
(= (+ arg4 1) arg4P))
(= arg5 arg5P))
(= 1 arg6P))
(= 1 arg7P))
(= 1 arg8P))
(= 1 arg9P))
(= 1 arg10P))
(= arg11 arg11P))
(= arg14 arg14P))
(= arg15 arg15P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4015_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x425 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg6 0) (> arg7 0)) (< arg7P arg6)) (> arg5 0))
(< arg8P arg7))
(> arg8 0))
(> arg9 1))
(> x425 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= 0 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg8 arg6P))
(= arg9 arg9P))
(= arg10 arg11P))
(= arg11 arg12P))
(= arg12 arg13P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4015_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x443 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg6 0) (> arg7 0)) (< arg7P arg6)) (> arg5 0))
(< arg8P arg7))
(> arg8 0))
(> arg9 1))
(> x443 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= 1 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg8 arg6P))
(= arg9 arg9P))
(= arg10 arg11P))
(= arg11 arg12P))
(= arg12 arg13P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4022_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x461 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg4P arg4) (> arg4 0)) (< arg5P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x461 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg8P 4) arg3))
(= arg4 arg6))
(= 0 arg3P))
(= arg9 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4022_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x480 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg4P arg4) (> arg4 0)) (< arg5P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x480 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg8P 4) arg3))
(= arg4 arg6))
(= 1 arg3P))
(= arg9 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4029_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x499 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg6 0) (> arg7 0)) (< arg7P arg6)) (> arg5 0))
(< arg8P arg7))
(> arg8 0))
(> arg9 1))
(> x499 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= 0 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg8 arg6P))
(= arg9 arg9P))
(= arg10 arg11P))
(= arg11 arg12P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4029_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x516 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg6 0) (> arg7 0)) (< arg7P arg6)) (> arg5 0))
(< arg8P arg7))
(> arg8 0))
(> arg9 1))
(> x516 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= 1 arg3P))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg8 arg6P))
(= arg9 arg9P))
(= arg10 arg11P))
(= arg11 arg12P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4036_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x533 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg4P arg4) (> arg4 0)) (< arg5P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x533 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(<= (+ arg8P 4) arg3))
(= arg4 arg6))
(= 0 arg3P))
(= arg9 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4036_0_equals_Return
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x551 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg4P arg4) (> arg4 0)) (< arg5P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x551 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(<= (+ arg8P 4) arg3))
(= arg4 arg6))
(= 1 arg3P))
(= arg9 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x584 Int) (x585 Int) (x569 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg6 0) (> arg7 0)) (< x584 arg6)) (> arg5 0))
(< x585 arg7))
(> arg8 0))
(> arg9 1))
(> x569 0))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x600 Int) (x601 Int) (x586 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< x600 arg4) (> arg4 0)) (< x601 arg5)) (> arg5 (- 1)))
(> arg9 1))
(> x586 0))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg4 arg6))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x616 Int) (x617 Int) (x602 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg6 0) (> arg7 0)) (< x616 arg6)) (> arg5 0))
(< x617 arg7))
(> arg8 0))
(> arg9 1))
(> x602 0))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x631 Int) (x632 Int) (x618 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< x631 arg4) (> arg4 0)) (< x632 arg5)) (> arg5 (- 1)))
(> arg9 1))
(> x618 0))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= arg4 arg6))
)
)

(rule
(f4015_0_equals_Return
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg8P arg6) (> arg6 (- 1))) (< arg6 arg4))
(< arg6 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 8) arg2))
(<= (+ arg13 3) arg2))
(<= (+ arg12 5) arg2))
(= 0 arg3))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg7 arg6P))
(= arg8 arg7P))
(= arg9 arg9P))
(= arg11 arg10P))
(= arg12 arg11P))
(= arg13 arg12P))
)

(rule
(f4022_0_equals_Return
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (+ arg1P 9) arg2)) (<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(<= (+ arg7 10) arg2))
(<= (+ arg8 11) arg2))
(<= (+ arg9 9) arg2))
(<= (+ arg10 8) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg11 5) arg2))
(= 0 arg3))
(= 0 arg5P))
(= arg4 arg6P))
(= arg5 arg7P))
(= 1 arg8P))
(= arg6 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)

(rule
(f4029_0_equals_Return
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg8P arg6) (> arg6 (- 1))) (< arg6 arg4))
(< arg6 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg11 5) arg2))
(= 0 arg3))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg7 arg6P))
(= arg8 arg7P))
(= arg9 arg9P))
(= arg11 arg10P))
(= arg12 arg11P))
)

(rule
(f4036_0_equals_Return
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (+ arg1P 9) arg2)) (<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(<= (+ arg7 10) arg2))
(<= (+ arg8 11) arg2))
(<= (+ arg9 9) arg2))
(<= (+ arg11 3) arg2))
(<= (+ arg10 5) arg2))
(= 0 arg3))
(= 0 arg5P))
(= arg4 arg6P))
(= arg5 arg7P))
(= 1 arg8P))
(= arg6 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x697 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg8 0) (> arg7 0)) (> arg6 0)) (> arg8P arg8))
(< arg6P arg6))
(> arg5 0))
(< arg8 arg4))
(< arg7P arg7))
(< arg8 arg5))
(> arg9 1))
(> x697 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x716 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg8 0) (> arg7 0)) (> arg6 0)) (> arg8P arg8))
(< arg6P arg6))
(> arg5 0))
(< arg8 arg4))
(< arg7P arg7))
(< arg8 arg5))
(> arg9 1))
(> x716 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x735 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg6P arg4) (> arg4 0)) (< arg7P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x735 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg4 arg6))
(= 0 arg5P))
(= 1 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f3920_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3920_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x753 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg6P arg4) (> arg4 0)) (< arg7P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x753 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg4 arg6))
(= 0 arg5P))
(= 1 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x771 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg8 0) (> arg7 0)) (> arg6 0)) (> arg8P arg8))
(< arg6P arg6))
(> arg5 0))
(< arg8 arg4))
(< arg7P arg7))
(< arg8 arg5))
(> arg9 1))
(> x771 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x789 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg8 0) (> arg7 0)) (> arg6 0)) (> arg8P arg8))
(< arg6P arg6))
(> arg5 0))
(< arg8 arg4))
(< arg7P arg7))
(< arg8 arg5))
(> arg9 1))
(> x789 0))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= arg4 arg4P))
(= arg5 arg5P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x807 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg6P arg4) (> arg4 0)) (< arg7P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x807 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= arg4 arg6))
(= 0 arg5P))
(= 1 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
)
)

(rule
(f3921_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f3921_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x824 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg6P arg4) (> arg4 0)) (< arg7P arg5))
(> arg5 (- 1)))
(> arg9 1))
(> x824 0))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= (+ arg1P 2) arg3))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(<= (+ arg10 5) arg2))
(<= (+ arg11 3) arg2))
(= arg4 arg6))
(= 0 arg5P))
(= 1 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
)
)

(rule
(f3914_0_main_CheckCast
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4565_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x856 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg3P arg4) (> arg4 (- 1))) (< x856 arg5))
(> arg5 (- 1)))
(> x856 0))
(> arg3P 0))
(> arg1 0))
(> arg2 6))
(> arg3 (- 1)))
(> arg1P 7))
(> arg2P 0))
(<= (+ arg7 7) arg2))
(<= (+ arg8 7) arg2))
(<= (+ arg9 5) arg2))
(<= (+ arg10 3) arg2))
(= 0 arg4P))
(= arg3P arg5P))
(= 0 arg6P))
(= 0 arg7P))
(= arg9 arg9P))
(= arg10 arg10P))
)
)

(rule
(f3914_0_main_CheckCast
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4566_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x871 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg3P arg4) (> arg4 (- 1))) (< x871 arg5))
(> arg3P 0))
(> arg5 (- 1)))
(> arg1 0))
(> arg2 6))
(> arg3 (- 1)))
(> arg1P 7))
(> arg2P 0))
(<= (+ arg7 7) arg2))
(<= (+ arg8 7) arg2))
(<= (+ arg9 5) arg2))
(<= (+ arg10 3) arg2))
(= 0 arg4P))
(= arg3P arg5P))
(= 0 arg6P))
(= 0 arg7P))
(= arg9 arg8P))
(= arg10 arg9P))
)
)

(rule
(f4565_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4565_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg6 0)) (> arg5 0)) (> arg7P arg7))
(< arg7 arg3))
(< arg5P arg5))
(> arg4 0))
(< arg7 arg4))
(< arg6P arg6))
(<= arg1P arg1))
(> arg1 7))
(> arg2 2))
(> arg1P 7))
(> arg2P 0))
(<= (+ arg8 8) arg1))
(<= (+ arg9 5) arg1))
(<= (+ arg10 3) arg1))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg8 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
)

(rule
(f4565_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4565_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg5P arg3) (> arg3 0)) (> arg4 (- 1)))
(< arg6P arg4))
(<= arg1P arg1))
(> arg1 9))
(> arg2 2))
(> arg1P 9))
(> arg2P 0))
(<= (+ arg8 8) arg1))
(<= (+ arg9 5) arg1))
(<= (+ arg10 3) arg1))
(= arg3 arg5))
(= 0 arg4P))
(= 1 arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
(= arg10 arg10P))
)

(rule
(f4566_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4566_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg6 0)) (> arg5 0)) (> arg7P arg7))
(< arg7 arg3))
(< arg5P arg5))
(> arg4 0))
(< arg7 arg4))
(< arg6P arg6))
(<= arg1P arg1))
(> arg1 7))
(> arg2 2))
(> arg1P 7))
(> arg2P 0))
(<= (+ arg8 5) arg1))
(<= (+ arg9 3) arg1))
(= arg3 arg3P))
(= arg4 arg4P))
(= arg8 arg8P))
(= arg9 arg9P))
)

(rule
(f4566_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4566_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg5P arg3) (> arg3 0)) (> arg4 (- 1)))
(< arg6P arg4))
(<= arg1P arg1))
(> arg1 9))
(> arg2 2))
(> arg1P 9))
(> arg2P 0))
(<= (+ arg8 5) arg1))
(<= (+ arg9 3) arg1))
(= arg3 arg5))
(= 0 arg4P))
(= 1 arg7P))
(= arg8 arg8P))
(= arg9 arg9P))
)

(rule
(f3914_0_main_CheckCast
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1559 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg5P arg4) (> arg4 (- 1))) (< x1559 arg5))
(> arg5 (- 1)))
(> x1559 0))
(> arg5P 0))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= arg1P arg3))
(<= arg3P arg3))
(> arg1 0))
(> arg2 6))
(> arg3 0))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg7 7) arg2))
(<= (+ arg8 7) arg2))
(<= (+ arg9 5) arg2))
(<= (+ arg10 3) arg2))
(= 0 arg6P))
(= arg5P arg7P))
(= 0 arg8P))
(= 0 arg9P))
(= arg6 arg10P))
(= arg9 arg12P))
(= arg10 arg13P))
)
)

(rule
(f3914_0_main_CheckCast
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x962 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (< arg5P arg4) (> arg4 (- 1))) (< x962 arg5))
(> arg5P 0))
(> arg5 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 6) arg2))
(<= arg1P arg3))
(<= arg3P arg3))
(> arg1 0))
(> arg2 6))
(> arg3 0))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg7 7) arg2))
(<= (+ arg8 7) arg2))
(<= (+ arg9 5) arg2))
(<= (+ arg10 3) arg2))
(= 0 arg6P))
(= arg5P arg7P))
(= 0 arg8P))
(= 0 arg9P))
(= arg6 arg10P))
(= arg9 arg11P))
(= arg10 arg12P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x979 Int) (x980 Int) (x963 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg8 0)) (< x979 arg7)) (> arg6 0))
(< x980 arg8))
(> arg9 0))
(> arg12 0))
(> x963 0))
(> arg10 1))
(<= arg1P arg3))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x996 Int) (x997 Int) (x981 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< x996 arg5) (> arg5 0)) (< x997 arg6)) (> arg12 0))
(> arg10 1))
(> x981 0))
(> arg6 (- 1)))
(<= arg1P arg3))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= arg5 arg7))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1013 Int) (x1014 Int) (x998 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg8 0)) (< x1013 arg7)) (> arg6 0))
(< x1014 arg8))
(> arg9 0))
(> arg11 0))
(> x998 0))
(> arg10 1))
(<= arg1P arg3))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4449_0_equals_CheckCast
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1029 Int) (x1030 Int) (x1015 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< x1029 arg5) (> arg5 0)) (< x1030 arg6)) (> arg11 0))
(> arg10 1))
(> x1015 0))
(> arg6 (- 1)))
(<= arg1P arg3))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg5 arg7))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4900_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1031 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg8 0)) (< arg7P arg7)) (> arg6 0))
(< arg8P arg8))
(> arg9 0))
(> arg12 0))
(> x1031 0))
(> arg10 1))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= 0 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
(= arg9 arg6P))
(= arg10 arg9P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4900_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1050 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg8 0)) (< arg7P arg7)) (> arg6 0))
(< arg8P arg8))
(> arg9 0))
(> arg12 0))
(> x1050 0))
(> arg10 1))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= 1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
(= arg9 arg6P))
(= arg10 arg9P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4902_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1069 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg4P arg5) (> arg5 0)) (< arg5P arg6)) (> arg12 0))
(> arg10 1))
(> x1069 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(<= (+ arg8P 4) arg4))
(= arg5 arg7))
(= 0 arg3P))
(= arg10 arg6P))
(= arg11 arg10P))
(= arg12 arg11P))
(= arg13 arg12P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4902_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1089 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg4P arg5) (> arg5 0)) (< arg5P arg6)) (> arg12 0))
(> arg10 1))
(> x1089 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(<= (+ arg8P 2) arg3))
(<= (+ arg8P 4) arg4))
(= arg5 arg7))
(= 1 arg3P))
(= arg10 arg6P))
(= arg11 arg10P))
(= arg12 arg11P))
(= arg13 arg12P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4904_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1109 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg8 0)) (< arg7P arg7)) (> arg6 0))
(< arg8P arg8))
(> arg9 0))
(> arg11 0))
(> x1109 0))
(> arg10 1))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= 0 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
(= arg9 arg6P))
(= arg10 arg9P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4904_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1127 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg7 0) (> arg8 0)) (< arg7P arg7)) (> arg6 0))
(< arg8P arg8))
(> arg9 0))
(> arg11 0))
(> x1127 0))
(> arg10 1))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(<= (+ arg10P 8) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= 1 arg3P))
(= arg5 arg4P))
(= arg6 arg5P))
(= arg9 arg6P))
(= arg10 arg9P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4906_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1579 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg4P arg5) (> arg5 0)) (< arg5P arg6)) (> arg11 0))
(> arg10 1))
(> x1579 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg8P 4) arg4))
(= arg5 arg7))
(= 0 arg3P))
(= arg10 arg6P))
(= arg11 arg10P))
(= arg12 arg11P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4906_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1164 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg4P arg5) (> arg5 0)) (< arg5P arg6)) (> arg11 0))
(> arg10 1))
(> x1164 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(<= (+ arg7P 10) arg2))
(<= (+ arg8P 11) arg2))
(<= (+ arg9P 9) arg2))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg8P 2) arg3))
(<= (+ arg8P 4) arg4))
(= arg5 arg7))
(= 1 arg3P))
(= arg10 arg6P))
(= arg11 arg10P))
(= arg12 arg11P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1183 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg9 0) (> arg8 0)) (> arg7 0)) (< arg7P arg7))
(> arg6 0))
(< arg8P arg8))
(> arg12 0))
(> arg10 1))
(> arg9P arg9))
(> x1183 0))
(< arg9 arg6))
(< arg9 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1204 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg9 0) (> arg8 0)) (> arg7 0)) (< arg7P arg7))
(> arg6 0))
(< arg8P arg8))
(> arg12 0))
(> arg10 1))
(> arg9P arg9))
(> x1204 0))
(< arg9 arg6))
(< arg9 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1225 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg7P arg5) (> arg5 0)) (< arg8P arg6)) (> arg12 0))
(> arg10 1))
(> x1225 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= arg5 arg7))
(= 0 arg6P))
(= 1 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)
)

(rule
(f4821_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1245 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg7P arg5) (> arg5 0)) (< arg8P arg6)) (> arg12 0))
(> arg10 1))
(> x1245 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 8) arg2))
(<= (+ arg12 5) arg2))
(<= (+ arg13 3) arg2))
(= arg5 arg7))
(= 0 arg6P))
(= 1 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1265 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg9 0) (> arg8 0)) (> arg7 0)) (< arg7P arg7))
(> arg6 0))
(< arg8P arg8))
(> arg11 0))
(> arg10 1))
(> arg9P arg9))
(> x1265 0))
(< arg9 arg6))
(< arg9 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1285 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (> arg9 0) (> arg8 0)) (> arg7 0)) (< arg7P arg7))
(> arg6 0))
(< arg8P arg8))
(> arg11 0))
(> arg10 1))
(> arg9P arg9))
(> x1285 0))
(< arg9 arg6))
(< arg9 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 7))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg5 arg5P))
(= arg6 arg6P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1305 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg7P arg5) (> arg5 0)) (< arg8P arg6)) (> arg11 0))
(> arg10 1))
(> x1305 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg5 arg7))
(= 0 arg6P))
(= 1 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f4822_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1324 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (and (< arg7P arg5) (> arg5 0)) (< arg8P arg6)) (> arg11 0))
(> arg10 1))
(> x1324 0))
(> arg6 (- 1)))
(<= arg1P arg1))
(<= (+ arg1P 9) arg2))
(<= arg1P arg3))
(<= (+ arg1P 2) arg4))
(<= arg2P arg2))
(<= arg3P arg3))
(> arg1 0))
(> arg2 9))
(> arg3 0))
(> arg4 2))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg11 5) arg2))
(<= (+ arg12 3) arg2))
(= arg5 arg7))
(= 0 arg6P))
(= 1 arg9P))
(= arg10 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)
)

(rule
(f4900_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg9P arg6) (> arg6 (- 1))) (< arg6 arg4))
(< arg6 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg11 8) arg2))
(<= (+ arg13 3) arg2))
(<= (+ arg12 5) arg2))
(= 0 arg3))
(= arg4 arg5P))
(= arg5 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg9 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
(= arg13 arg13P))
)

(rule
(f4902_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4821_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (+ arg1P 9) arg2)) (<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg7 10) arg2))
(<= (+ arg8 11) arg2))
(<= (+ arg9 9) arg2))
(<= (+ arg10 8) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg11 5) arg2))
(= 0 arg3))
(= 0 arg6P))
(= arg4 arg7P))
(= arg5 arg8P))
(= 1 arg9P))
(= arg6 arg10P))
(= arg10 arg11P))
(= arg11 arg12P))
(= arg12 arg13P))
)

(rule
(f4904_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg9P arg6) (> arg6 (- 1))) (< arg6 arg4))
(< arg6 arg5))
(<= arg1P arg1))
(<= (+ arg1P 7) arg2))
(<= arg2P arg2))
(> arg1 0))
(> arg2 7))
(> arg1P 0))
(> arg2P 7))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg10 8) arg2))
(<= (+ arg12 3) arg2))
(<= (+ arg11 5) arg2))
(= 0 arg3))
(= arg4 arg5P))
(= arg5 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg9 arg10P))
(= arg11 arg11P))
(= arg12 arg12P))
)

(rule
(f4906_0_indexOf_EQ
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f4822_0_indexOf_EQ
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (<= (+ arg1P 9) arg2)) (<= arg2P arg2))
(> arg1 0))
(> arg2 9))
(> arg1P 0))
(> arg2P 9))
(> arg3P 0))
(> arg4P 0))
(<= (+ arg7 10) arg2))
(<= (+ arg8 11) arg2))
(<= (+ arg9 9) arg2))
(<= (+ arg11 3) arg2))
(<= (+ arg10 5) arg2))
(= 0 arg3))
(= 0 arg6P))
(= arg4 arg7P))
(= arg5 arg8P))
(= 1 arg9P))
(= arg6 arg10P))
(= arg10 arg11P))
(= arg11 arg12P))
)

(rule
(f1_0_main_Load
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f529_0_createList_Load
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and (and (> arg1P (- 1)) (> arg2 0)) (<= (- arg2P 7) arg1))
(> arg1 0))
(> arg2P 7))
(= 1 arg5P))
(= 0 arg6P))
(= 0 arg7P))
)

(rule
(f998_0_createList_Load
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f2688_0_createList_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> arg2 11) (> arg1P 11)) (<= (+ arg20 9) arg2))
(<= (+ arg21 9) arg2))
(<= (+ arg23 3) arg2))
(<= (+ arg22 5) arg2))
(= arg1 arg2P))
(= arg13 arg3P))
(= arg11 arg4P))
(= arg7 arg5P))
(= arg12 arg6P))
(= arg6 arg7P))
(= arg3 arg9P))
(= arg14 arg10P))
(= arg5 arg11P))
(= 0 arg12P))
(= arg4 arg13P))
(= arg8 arg14P))
(= arg9 arg15P))
(= arg10 arg16P))
(= arg15 arg17P))
(= arg16 arg18P))
(= arg17 arg19P))
(= arg19 arg20P))
(= arg22 arg24P))
(= arg23 arg25P))
)

(rule
(f2688_0_createList_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f2688_0_createList_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1445 Int) (x1486 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> x1445 (- 1)) (> arg2 0)) (< arg20 x1445))
(> arg20 (- 1)))
(> x1486 (- 1)))
(> arg6 0))
(> arg3 0))
(> arg10 0))
(> arg4 0))
(> arg13 0))
(> arg11 0))
(> arg12 0))
(> arg9 0))
(> arg5 0))
(> arg19 0))
(> arg14 0))
(> arg18 0))
(> arg17 0))
(> arg15 0))
(> arg16 0))
(> arg25 (- 1)))
(> arg24 (- 1)))
(> arg1 9))
(> arg1P 9))
(<= (+ arg21 9) arg1))
(<= (+ arg22 9) arg1))
(<= (+ arg23 9) arg1))
(<= (+ arg25 3) arg1))
(<= (+ arg24 5) arg1))
(= (- arg2 1) arg2P))
(= arg3 arg3P))
(= arg6 arg6P))
(= arg7 arg7P))
(= arg8 arg8P))
(= arg10 arg10P))
(= arg12 arg12P))
(= (+ arg20 1) arg20P))
(= (+ arg24 1) arg24P))
(= (+ arg25 1) arg25P))
)
)

(rule
(f2688_0_createList_LE
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f2688_0_createList_LE
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
:guard
(exists
((x1487 Int) (x1522 Int))
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and
(and (and (> x1487 (- 1)) (> arg2 0)) (< arg20 x1487))
(> arg20 (- 1)))
(> x1522 (- 1)))
(> arg6 0))
(> arg3 0))
(> arg10 0))
(> arg12 0))
(> arg19 0))
(> arg18 0))
(> arg17 0))
(> arg8 0))
(> arg25 (- 1)))
(> arg24 (- 1)))
(> arg1 11))
(> arg1P 13))
(<= (+ arg21 9) arg1))
(<= (+ arg22 9) arg1))
(<= (+ arg23 9) arg1))
(<= (+ arg25 3) arg1))
(<= (+ arg24 5) arg1))
(= arg8 arg9))
(= arg10 arg11))
(= arg12 arg13))
(= arg7 arg16))
(= (- arg2 1) arg2P))
(= 0 arg3P))
(= 1 arg4P))
(= 1 arg5P))
(= arg8 arg8P))
(= arg10 arg10P))
(= arg12 arg12P))
(= 0 arg13P))
(= 2 arg15P))
(= (+ arg20 1) arg20P))
(= (+ arg24 1) arg24P))
(= (+ arg25 1) arg25P))
)
)

(rule
(__init
arg1
arg2
arg3
arg4
arg5
arg6
arg7
arg8
arg9
arg10
arg11
arg12
arg13
arg14
arg15
arg16
arg17
arg18
arg19
arg20
arg21
arg22
arg23
arg24
arg25)
(f1_0_main_Load
arg1P
arg2P
arg3P
arg4P
arg5P
arg6P
arg7P
arg8P
arg9P
arg10P
arg11P
arg12P
arg13P
arg14P
arg15P
arg16P
arg17P
arg18P
arg19P
arg20P
arg21P
arg22P
arg23P
arg24P
arg25P)
)

