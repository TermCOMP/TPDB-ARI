(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int Int))
(fun f169_0_createList_Return (-> Int Int Int Int))
(fun f194_0_createList_LE (-> Int Int Int Int))
(fun f1_0_main_Load (-> Int Int Int Int))
(fun f229_0_random_ArrayAccess (-> Int Int Int Int))
(fun f298_0_appE_NONNULL (-> Int Int Int Int))
(entrypoint __init)
(rule
(f169_0_createList_Return arg1 arg2 arg3)
(f229_0_random_ArrayAccess arg1P arg2P arg3P)
:guard
(and
(and (and (<= arg1P arg2) (> arg1 0)) (> arg2 (- 1)))
(> arg1P (- 1)))
)
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f229_0_random_ArrayAccess arg1P arg2P arg3P)
:guard
(and (and (> arg1 0) (> arg1P (- 1))) (= arg2 arg2P)))
(rule
(f1_0_main_Load arg1 arg2 arg3)
(f194_0_createList_LE arg1P arg2P arg3P)
:guard
(and (and (> arg2 (- 1)) (> arg1P (- 1))) (> arg1 0)))
(rule
(f194_0_createList_LE arg1 arg2 arg3)
(f194_0_createList_LE arg1P arg2P arg3P)
:guard
(and (> arg1 0) (= (- arg1 1) arg1P)))
(rule
(f229_0_random_ArrayAccess arg1 arg2 arg3)
(f298_0_appE_NONNULL arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and (and (> arg2P (- 1)) (> arg2 1)) (<= arg1P arg1))
(<= (+ arg3P 1) arg1))
(> arg1 0))
(> arg1P 0))
(> arg3P (- 1)))
)
(rule
(f298_0_appE_NONNULL arg1 arg2 arg3)
(f298_0_appE_NONNULL arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and
(and
(and (and (<= (+ arg1P 2) arg1) (<= arg1P arg3)) (<= (+ arg3P 3) arg1))
(<= (+ arg3P 1) arg3))
(> arg1 2))
(> arg3 0))
(> arg1P 0))
(> arg3P (- 1)))
(= arg2 arg2P))
)
(rule
(f298_0_appE_NONNULL arg1 arg2 arg3)
(f298_0_appE_NONNULL arg1P arg2P arg3P)
:guard
(and
(and
(and
(and
(and
(and
(and
(and (and (<= arg1P arg1) (> arg2 0)) (<= (- arg1P 2) arg3))
(<= (+ arg3P 2) arg1))
(<= arg3P arg3))
(> arg1 1))
(> arg3 (- 1)))
(> arg1P 1))
(> arg3P (- 1)))
(= (- arg2 1) arg2P))
)
(rule (__init arg1 arg2 arg3) (f1_0_main_Load arg1P arg2P arg3P))
