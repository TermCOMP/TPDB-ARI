(format LCTRS)
(theory Ints)
(fun __init (-> Int Int Int))
(fun f167_0_createList_Return (-> Int Int Int))
(fun f190_0_createList_LE (-> Int Int Int))
(fun f1_0_main_Load (-> Int Int Int))
(fun f276_0_main_NULL (-> Int Int Int))
(entrypoint __init)
(rule
(f167_0_createList_Return arg1 arg2)
(f276_0_main_NULL arg1P arg2P)
:guard
(and
(and
(and (and (<= arg2P arg1) (> arg1 0)) (> arg2P 0))
(<= (+ arg2 2) arg1))
(= 0 arg1P))
)

(rule
(f1_0_main_Load arg1 arg2)
(f276_0_main_NULL arg1P arg2P)
:guard
(exists
((x6 Int))
(and
(and (and (and (> x6 (- 1)) (> arg2 0)) (> arg1 0)) (> arg2P 0))
(= 0 arg1P))
)
)

(rule
(f276_0_main_NULL arg1 arg2)
(f276_0_main_NULL arg1P arg2P)
:guard
(and
(and
(and (and (<= (+ arg2P 1) arg2) (> arg2 0)) (> arg2P (- 1)))
(= 0 arg1))
(= 1 arg1P))
)

(rule
(f276_0_main_NULL arg1 arg2)
(f276_0_main_NULL arg1P arg2P)
:guard
(and
(and
(and (and (>= arg2 (+ arg2P 1)) (> arg2 0)) (> arg2P (- 1)))
(= 2 arg1))
(= 0 arg1P))
)

(rule
(f276_0_main_NULL arg1 arg2)
(f276_0_main_NULL arg1P arg2P)
:guard
(and
(and
(and (and (<= (- arg2P 2) arg2) (> arg2 0)) (> arg2P 2))
(= 1 arg1))
(= 2 arg1P))
)

(rule
(f1_0_main_Load arg1 arg2)
(f190_0_createList_LE arg1P arg2P)
:guard
(and (and (> arg1P (- 1)) (> arg2 0)) (> arg1 0)))

(rule
(f190_0_createList_LE arg1 arg2)
(f190_0_createList_LE arg1P arg2P)
:guard
(and (> arg1 0) (= (- arg1 1) arg1P)))

(rule (__init arg1 arg2) (f1_0_main_Load arg1P arg2P))
