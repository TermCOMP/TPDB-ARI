; @origtpdbfilename ./TRS/CimeAC/rationals.trs
; @xtcfilename "./TRS_Equational/Mixed_AC_and_C/rationals.xml"
(format ETRS)
(fun |0| 1)
(fun |#| 0)
(fun + 2 :theory AC)
(fun |1| 1)
(fun j 1)
(fun opp 1)
(fun - 2)
(fun * 2 :theory AC)
(fun abs 1)
(fun test_abs_pos 2)
(fun test_abs_neg 2)
(fun signe 1)
(fun test_signe_pos 1)
(fun test_signe_neg 1)
(fun min 2)
(fun test_min_pos 3)
(fun |min'| 2)
(fun |min''| 2)
(fun test_min_neg 3)
(fun f 2)
(fun rat 2)
(fun irred 2)
(fun +_Q 2 :theory C)
(fun *_Q 2 :theory C)
(rule (|0| |#|) |#|)
(rule (+ |#| x) x)
(rule (+ (|0| x) (|0| y)) (|0| (+ x y)))
(rule (+ (|0| x) (|1| y)) (|1| (+ x y)))
(rule (+ (|0| x) (j y)) (j (+ x y)))
(rule (+ (|1| x) (|1| y)) (j (+ (|1| |#|) (+ x y))))
(rule (+ (j x) (j y)) (|1| (+ (j |#|) (+ x y))))
(rule (+ (|1| x) (j y)) (|0| (+ x y)))
(rule (opp |#|) |#|)
(rule (opp (|0| x)) (|0| (opp x)))
(rule (opp (|1| x)) (j (opp x)))
(rule (opp (j x)) (|1| (opp x)))
(rule (- x y) (+ (opp y) x))
(rule (* |#| x) |#|)
(rule (* (|0| x) y) (|0| (* x y)))
(rule (* (|1| x) y) (+ (|0| (* x y)) y))
(rule (* (j x) y) (- (|0| (* x y)) y))
(rule (abs x) (test_abs_pos x x))
(rule (test_abs_pos |#| x) x)
(rule (test_abs_pos (|0| x) y) (test_abs_pos x y))
(rule (test_abs_pos (|1| x) y) (test_abs_pos x y))
(rule (test_abs_pos (j x) y) (test_abs_neg x y))
(rule (test_abs_neg |#| x) (opp x))
(rule (test_abs_neg (|0| x) y) (test_abs_neg x y))
(rule (test_abs_neg (|1| x) y) (test_abs_pos x y))
(rule (test_abs_neg (j x) y) (test_abs_neg x y))
(rule (signe |#|) |#|)
(rule (signe (|0| x)) (signe x))
(rule (signe (|1| x)) (test_signe_pos x))
(rule (signe (j x)) (test_signe_neg x))
(rule (test_signe_pos |#|) (|1| |#|))
(rule (test_signe_pos (|0| x)) (test_signe_pos x))
(rule (test_signe_pos (|1| x)) (test_signe_pos x))
(rule (test_signe_pos (j x)) (test_signe_neg x))
(rule (test_signe_neg |#|) (j |#|))
(rule (test_signe_neg (|0| x)) (test_signe_neg x))
(rule (test_signe_neg (|1| x)) (test_signe_pos x))
(rule (test_signe_neg (j x)) (test_signe_neg x))
(rule (min x y) (test_min_pos (- (abs y) (abs x)) x y))
(rule (|min'| x y) (test_min_pos (- (abs (|1| y)) (abs (|1| x))) x y))
(rule (|min''| x y) (test_min_pos (- (abs (j y)) (abs (j x))) x y))
(rule (test_min_pos |#| x y) x)
(rule (test_min_pos (|0| x) y z) (test_min_pos x y z))
(rule (test_min_pos (|1| x) y z) (test_min_pos x y z))
(rule (test_min_pos (j x) y z) (test_min_neg x y z))
(rule (test_min_neg |#| x y) y)
(rule (test_min_neg (|0| x) y z) (test_min_neg x y z))
(rule (test_min_neg (|1| x) y z) (test_min_pos x y z))
(rule (test_min_neg (j x) y z) (test_min_neg x y z))
(rule (f |#| x) |#|)
(rule (f x |#|) (signe x))
(rule (f (|0| x) (|0| y)) (f x y))
(rule (f (|0| x) (|1| y)) (|0| (f x (|1| y))))
(rule (f (|0| x) (j y)) (|0| (f x (j y))))
(rule (f (|1| x) (|0| y)) (f (|1| x) y))
(rule (f (|1| x) (|1| y)) (+ (|0| (f (- x (|min'| x y)) (|1| y))) (f (min (|1| x) (|1| y)) (- x y))))
(rule (f (|1| x) (j y)) (+ (|0| (f (+ (|min''| (opp x) y) x) (j y))) (f (min (|1| x) (|1| (opp y))) (+ x y))))
(rule (f (j x) (|0| y)) (f (j x) y))
(rule (f (j x) (|1| y)) (+ (|0| (f (+ (|min'| (opp x) y) x) (|1| y))) (f (min (j x) (j (opp y))) (+ x y))))
(rule (f (j x) (j y)) (+ (|0| (f (- x (|min''| x y)) (j y))) (f (min (j x) (j y)) (- x y))))
(rule (rat x y) (irred (* (signe y) (f x y)) (* (signe y) (f y x))))
(rule (+_Q (irred x y) (irred u v)) (irred (+ (* x v) (* y u)) (* y v)))
(rule (*_Q (irred x y) (irred u v)) (rat (* x u) (* y v)))
