(format higher-order)
(sort list)
(sort nat)
(fun cons (-> nat list list))
(fun emap (-> (-> nat nat) list list))
(fun nil list)
(fun twice (-> (-> nat nat) nat nat))
(rule (emap F nil) nil)
(rule (emap Z (cons U V)) (cons (Z U) (emap (lambda ((%X nat)) (twice Z %X) V)))
(rule (twice I P) (I (I P)))
