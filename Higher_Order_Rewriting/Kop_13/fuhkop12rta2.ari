(format higher-order)
(sort list)
(sort nat)
(fun O nat)
(fun build (-> nat list))
(fun collapse (-> list nat))
(fun cons (-> (-> nat nat) list list))
(fun diff (-> nat nat nat))
(fun gcd (-> nat nat nat))
(fun min (-> nat nat nat))
(fun nil list)
(fun s (-> nat nat))
(rule (min X O) O)
(rule (min O Y) O)
(rule (min (s U) (s V)) (s (min U V)))
(rule (diff W O) W)
(rule (diff O P) P)
(rule (diff (s X1) (s Y1)) (diff X1 Y1))
(rule (gcd (s U1) O) (s U1))
(rule (gcd O (s V1)) (s V1))
(rule (gcd (s W1) (s P1)) (gcd (diff W1 P1) (s (min W1 P1))))
(rule (collapse nil) O)
(rule (collapse (cons F2 Y2)) (F2 (collapse Y2)))
(rule (build O) nil)
(rule (build (s U2)) (cons (lambda ((%X nat)) (gcd %X U2) (build U2)))
