(format higher-order)
(sort a)
(sort b)
(fun O b)
(fun cons (-> b b b))
(fun del (-> b b b))
(fun eq (-> b b a))
(fun false a)
(fun filter (-> (-> b a) b b))
(fun filter2 (-> a (-> b a) b b b))
(fun if (-> a b b b))
(fun le (-> b b a))
(fun map (-> (-> b b) b b))
(fun min (-> b b b))
(fun minsort (-> b b))
(fun nil b)
(fun s (-> b b))
(fun true a)
(rule (le O X) true)
(rule (le (s Y) O) false)
(rule (le (s U) (s V)) (le U V))
(rule (eq O O) true)
(rule (eq O (s W)) false)
(rule (eq (s P) O) false)
(rule (eq (s X1) (s Y1)) (eq X1 Y1))
(rule (if true U1 V1) U1)
(rule (if false W1 P1) P1)
(rule (minsort nil) nil)
(rule (minsort (cons X2 Y2)) (cons (min X2 Y2) (minsort (del (min X2 Y2) (cons X2 Y2)))))
(rule (min U2 nil) U2)
(rule (min V2 (cons W2 P2)) (if (le V2 W2) (min V2 P2) (min W2 P2)))
(rule (del X3 nil) nil)
(rule (del Y3 (cons U3 V3)) (if (eq Y3 U3) V3 (cons U3 (del Y3 V3))))
(rule (map I3 nil) nil)
(rule (map J3 (cons X4 Y4)) (cons (J3 X4) (map J3 Y4)))
(rule (filter G4 nil) nil)
(rule (filter H4 (cons W4 P4)) (filter2 (H4 W4) H4 W4 P4))
(rule (filter2 true F5 Y5 U5) (cons Y5 (filter F5 U5)))
(rule (filter2 false H5 W5 P5) (filter H5 P5))
(format higher-order)
(sort a)
(sort b)
(fun O b)
(fun cons (-> b b b))
(fun del (-> b b b))
(fun eq (-> b b a))
(fun false a)
(fun filter (-> (-> b a) b b))
(fun filter2 (-> a (-> b a) b b b))
(fun if (-> a b b b))
(fun le (-> b b a))
(fun map (-> (-> b b) b b))
(fun min (-> b b b))
(fun minsort (-> b b))
(fun nil b)
(fun s (-> b b))
(fun true a)
(rule (le O X) true)
(rule (le (s Y) O) false)
(rule (le (s U) (s V)) (le U V))
(rule (eq O O) true)
(rule (eq O (s W)) false)
(rule (eq (s P) O) false)
(rule (eq (s X1) (s Y1)) (eq X1 Y1))
(rule (if true U1 V1) U1)
(rule (if false W1 P1) P1)
(rule (minsort nil) nil)
(rule (minsort (cons X2 Y2)) (cons (min X2 Y2) (minsort (del (min X2 Y2) (cons X2 Y2)))))
(rule (min U2 nil) U2)
(rule (min V2 (cons W2 P2)) (if (le V2 W2) (min V2 P2) (min W2 P2)))
(rule (del X3 nil) nil)
(rule (del Y3 (cons U3 V3)) (if (eq Y3 U3) V3 (cons U3 (del Y3 V3))))
(rule (map I3 nil) nil)
(rule (map J3 (cons X4 Y4)) (cons (J3 X4) (map J3 Y4)))
(rule (filter G4 nil) nil)
(rule (filter H4 (cons W4 P4)) (filter2 (H4 W4) H4 W4 P4))
(rule (filter2 true F5 Y5 U5) (cons Y5 (filter F5 U5)))
(rule (filter2 false H5 W5 P5) (filter H5 P5))
(format higher-order)
(sort a)
(sort b)
(fun O b)
(fun cons (-> b b b))
(fun del (-> b b b))
(fun eq (-> b b a))
(fun false a)
(fun filter (-> (-> b a) b b))
(fun filter2 (-> a (-> b a) b b b))
(fun if (-> a b b b))
(fun le (-> b b a))
(fun map (-> (-> b b) b b))
(fun min (-> b b b))
(fun minsort (-> b b))
(fun nil b)
(fun s (-> b b))
(fun true a)
(rule (le O X) true)
(rule (le (s Y) O) false)
(rule (le (s U) (s V)) (le U V))
(rule (eq O O) true)
(rule (eq O (s W)) false)
(rule (eq (s P) O) false)
(rule (eq (s X1) (s Y1)) (eq X1 Y1))
(rule (if true U1 V1) U1)
(rule (if false W1 P1) P1)
(rule (minsort nil) nil)
(rule (minsort (cons X2 Y2)) (cons (min X2 Y2) (minsort (del (min X2 Y2) (cons X2 Y2)))))
(rule (min U2 nil) U2)
(rule (min V2 (cons W2 P2)) (if (le V2 W2) (min V2 P2) (min W2 P2)))
(rule (del X3 nil) nil)
(rule (del Y3 (cons U3 V3)) (if (eq Y3 U3) V3 (cons U3 (del Y3 V3))))
(rule (map I3 nil) nil)
(rule (map J3 (cons X4 Y4)) (cons (J3 X4) (map J3 Y4)))
(rule (filter G4 nil) nil)
(rule (filter H4 (cons W4 P4)) (filter2 (H4 W4) H4 W4 P4))
(rule (filter2 true F5 Y5 U5) (cons Y5 (filter F5 U5)))
(rule (filter2 false H5 W5 P5) (filter H5 P5))
