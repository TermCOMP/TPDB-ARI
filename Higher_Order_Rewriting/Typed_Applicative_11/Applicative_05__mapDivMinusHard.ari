(format higher-order)
(sort a)
(sort b)
(sort c)
(fun O c)
(fun cons (-> a b b))
(fun div (-> c c c))
(fun map (-> (-> a a) b b))
(fun minus (-> c c c))
(fun nil b)
(fun p (-> c c))
(fun s (-> c c))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (minus W O) W)
(rule (minus (s P) (s X1)) (minus (p (s P)) (p (s X1))))
(rule (p (s Y1)) Y1)
(rule (div O (s U1)) O)
(rule (div (s V1) (s W1)) (s (div (minus V1 W1) (s W1))))
(format higher-order)
(sort a)
(sort b)
(sort c)
(fun O c)
(fun cons (-> a b b))
(fun div (-> c c c))
(fun map (-> (-> a a) b b))
(fun minus (-> c c c))
(fun nil b)
(fun p (-> c c))
(fun s (-> c c))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (minus W O) W)
(rule (minus (s P) (s X1)) (minus (p (s P)) (p (s X1))))
(rule (p (s Y1)) Y1)
(rule (div O (s U1)) O)
(rule (div (s V1) (s W1)) (s (div (minus V1 W1) (s W1))))
(format higher-order)
(sort a)
(sort b)
(sort c)
(fun O c)
(fun cons (-> a b b))
(fun div (-> c c c))
(fun map (-> (-> a a) b b))
(fun minus (-> c c c))
(fun nil b)
(fun p (-> c c))
(fun s (-> c c))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (minus W O) W)
(rule (minus (s P) (s X1)) (minus (p (s P)) (p (s X1))))
(rule (p (s Y1)) Y1)
(rule (div O (s U1)) O)
(rule (div (s V1) (s W1)) (s (div (minus V1 W1) (s W1))))
