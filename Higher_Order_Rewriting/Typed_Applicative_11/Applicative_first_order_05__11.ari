(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun * (-> a a a))
(fun + (-> a a a))
(fun - (-> a a a))
(fun D (-> a a))
(fun cons (-> c d d))
(fun constant a)
(fun div (-> a a a))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun ln (-> a a))
(fun map (-> (-> c c) d d))
(fun minus (-> a a))
(fun nil d)
(fun one a)
(fun pow (-> a a a))
(fun t a)
(fun true b)
(fun two a)
(fun zero a)
(rule (D t) one)
(rule (D constant) zero)
(rule (D (+ X Y)) (+ (D X) (D Y)))
(rule (D (* U V)) (+ (* V (D U)) (* U (D V))))
(rule (D (- W P)) (- (D W) (D P)))
(rule (D (minus X)) (minus (D X)))
(rule (D (div Y U1)) (- (div (D Y) U1) (div (* Y (D U1)) (pow U1 two))))
(rule (D (ln V)) (div (D V) V))
(rule (D (pow W1 P1)) (+ (* (* P1 (pow W1 (- P1 one))) (D W1)) (* (* (pow W1 P1) (ln W1)) (D P1))))
(rule (map F2 nil) nil)
(rule (map Z2 (cons U2 V2)) (cons (Z2 U2) (map Z2 V2)))
(rule (filter I2 nil) nil)
(rule (filter J2 (cons X3 Y3)) (filter2 (J2 X3) J2 X3 Y3))
(rule (filter2 true G3 V3 W3) (cons V3 (filter G3 W3)))
(rule (filter2 false J3 X4 Y4) (filter J3 Y4))
