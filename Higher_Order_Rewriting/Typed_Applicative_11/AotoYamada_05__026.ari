(format higher-order)
(sort a)
(sort b)
(sort c)
(fun comp (-> (-> c c) (-> c c) c c))
(fun cons (-> a b b))
(fun map (-> (-> a a) b b))
(fun nil b)
(fun twice (-> (-> c c) c c))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (comp I J X1) (I (J X1)))
(rule (twice Z1) (comp Z1 Z1))
(format higher-order)
(sort a)
(sort b)
(sort c)
(fun comp (-> (-> c c) (-> c c) c c))
(fun cons (-> a b b))
(fun map (-> (-> a a) b b))
(fun nil b)
(fun twice (-> (-> c c) c c))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (comp I J X1) (I (J X1)))
(rule (twice Z1) (comp Z1 Z1))
(format higher-order)
(sort a)
(sort b)
(sort c)
(fun comp (-> (-> c c) (-> c c) c c))
(fun cons (-> a b b))
(fun map (-> (-> a a) b b))
(fun nil b)
(fun twice (-> (-> c c) c c))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (comp I J X1) (I (J X1)))
(rule (twice Z1) (comp Z1 Z1))
