(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun / (-> a a a))
(fun C a)
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun nil d)
(fun true b)
(rule (/ (/ (/ (/ C Y) U) V) X) (/ (/ Y V) (/ (/ (/ Y U) V) X)))
(rule (map I nil) nil)
(rule (map J (cons X1 Y1)) (cons (J X1) (map J Y1)))
(rule (filter G1 nil) nil)
(rule (filter H1 (cons W1 P1)) (filter2 (H1 W1) H1 W1 P1))
(rule (filter2 true F2 Y2 U2) (cons Y2 (filter F2 U2)))
(rule (filter2 false H2 W2 P2) (filter H2 P2))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun / (-> a a a))
(fun C a)
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun nil d)
(fun true b)
(rule (/ (/ (/ (/ C Y) U) V) X) (/ (/ Y V) (/ (/ (/ Y U) V) X)))
(rule (map I nil) nil)
(rule (map J (cons X1 Y1)) (cons (J X1) (map J Y1)))
(rule (filter G1 nil) nil)
(rule (filter H1 (cons W1 P1)) (filter2 (H1 W1) H1 W1 P1))
(rule (filter2 true F2 Y2 U2) (cons Y2 (filter F2 U2)))
(rule (filter2 false H2 W2 P2) (filter H2 P2))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun / (-> a a a))
(fun C a)
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun nil d)
(fun true b)
(rule (/ (/ (/ (/ C Y) U) V) X) (/ (/ Y V) (/ (/ (/ Y U) V) X)))
(rule (map I nil) nil)
(rule (map J (cons X1 Y1)) (cons (J X1) (map J Y1)))
(rule (filter G1 nil) nil)
(rule (filter H1 (cons W1 P1)) (filter2 (H1 W1) H1 W1 P1))
(rule (filter2 true F2 Y2 U2) (cons Y2 (filter F2 U2)))
(rule (filter2 false H2 W2 P2) (filter H2 P2))
