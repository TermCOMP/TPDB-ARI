(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(sort e)
(fun * (-> a b b))
(fun + (-> b b b))
(fun cons (-> d e e))
(fun false c)
(fun filter (-> (-> d c) e e))
(fun filter2 (-> c (-> d c) d e e))
(fun map (-> (-> d d) e e))
(fun nil e)
(fun true c)
(rule (* X (+ Y U)) (+ (* X Y) (* X U)))
(rule (map H nil) nil)
(rule (map I (cons P X1)) (cons (I P) (map I X1)))
(rule (filter Z1 nil) nil)
(rule (filter G1 (cons V1 W1)) (filter2 (G1 V1) G1 V1 W1))
(rule (filter2 true J1 X2 Y2) (cons X2 (filter J1 Y2)))
(rule (filter2 false G2 V2 W2) (filter G2 W2))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(sort e)
(fun * (-> a b b))
(fun + (-> b b b))
(fun cons (-> d e e))
(fun false c)
(fun filter (-> (-> d c) e e))
(fun filter2 (-> c (-> d c) d e e))
(fun map (-> (-> d d) e e))
(fun nil e)
(fun true c)
(rule (* X (+ Y U)) (+ (* X Y) (* X U)))
(rule (map H nil) nil)
(rule (map I (cons P X1)) (cons (I P) (map I X1)))
(rule (filter Z1 nil) nil)
(rule (filter G1 (cons V1 W1)) (filter2 (G1 V1) G1 V1 W1))
(rule (filter2 true J1 X2 Y2) (cons X2 (filter J1 Y2)))
(rule (filter2 false G2 V2 W2) (filter G2 W2))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(sort e)
(fun * (-> a b b))
(fun + (-> b b b))
(fun cons (-> d e e))
(fun false c)
(fun filter (-> (-> d c) e e))
(fun filter2 (-> c (-> d c) d e e))
(fun map (-> (-> d d) e e))
(fun nil e)
(fun true c)
(rule (* X (+ Y U)) (+ (* X Y) (* X U)))
(rule (map H nil) nil)
(rule (map I (cons P X1)) (cons (I P) (map I X1)))
(rule (filter Z1 nil) nil)
(rule (filter G1 (cons V1 W1)) (filter2 (G1 V1) G1 V1 W1))
(rule (filter2 true J1 X2 Y2) (cons X2 (filter J1 Y2)))
(rule (filter2 false G2 V2 W2) (filter G2 W2))
