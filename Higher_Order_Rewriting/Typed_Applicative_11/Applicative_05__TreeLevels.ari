(format higher-order)
(sort a)
(fun append (-> a a a))
(fun combine (-> a a a))
(fun cons (-> a a a))
(fun levels (-> a a))
(fun map (-> (-> a a) a a))
(fun nil a)
(fun node (-> a a a))
(fun zip (-> a a a))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (append W nil) W)
(rule (append nil P) P)
(rule (append (cons X1 Y1) U1) (cons X1 (append Y1 U1)))
(rule (zip nil V1) V1)
(rule (zip W1 nil) W1)
(rule (zip (cons P1 X2) (cons Y2 U2)) (cons (append P1 Y2) (zip X2 U2)))
(rule (combine V2 nil) V2)
(rule (combine W2 (cons P2 X3)) (combine (zip W2 P2) X3))
(rule (levels (node Y3 U3)) (cons (cons Y3 nil) (combine nil (map levels U3))))
(format higher-order)
(sort a)
(fun append (-> a a a))
(fun combine (-> a a a))
(fun cons (-> a a a))
(fun levels (-> a a))
(fun map (-> (-> a a) a a))
(fun nil a)
(fun node (-> a a a))
(fun zip (-> a a a))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (append W nil) W)
(rule (append nil P) P)
(rule (append (cons X1 Y1) U1) (cons X1 (append Y1 U1)))
(rule (zip nil V1) V1)
(rule (zip W1 nil) W1)
(rule (zip (cons P1 X2) (cons Y2 U2)) (cons (append P1 Y2) (zip X2 U2)))
(rule (combine V2 nil) V2)
(rule (combine W2 (cons P2 X3)) (combine (zip W2 P2) X3))
(rule (levels (node Y3 U3)) (cons (cons Y3 nil) (combine nil (map levels U3))))
(format higher-order)
(sort a)
(fun append (-> a a a))
(fun combine (-> a a a))
(fun cons (-> a a a))
(fun levels (-> a a))
(fun map (-> (-> a a) a a))
(fun nil a)
(fun node (-> a a a))
(fun zip (-> a a a))
(rule (map F nil) nil)
(rule (map Z (cons U V)) (cons (Z U) (map Z V)))
(rule (append W nil) W)
(rule (append nil P) P)
(rule (append (cons X1 Y1) U1) (cons X1 (append Y1 U1)))
(rule (zip nil V1) V1)
(rule (zip W1 nil) W1)
(rule (zip (cons P1 X2) (cons Y2 U2)) (cons (append P1 Y2) (zip X2 U2)))
(rule (combine V2 nil) V2)
(rule (combine W2 (cons P2 X3)) (combine (zip W2 P2) X3))
(rule (levels (node Y3 U3)) (cons (cons Y3 nil) (combine nil (map levels U3))))
