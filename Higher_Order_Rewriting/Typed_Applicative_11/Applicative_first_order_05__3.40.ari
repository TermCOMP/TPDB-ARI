(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun O a)
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun minus (-> a a a))
(fun nil d)
(fun plus (-> a a a))
(fun quot (-> a a a))
(fun s (-> a a))
(fun true b)
(rule (minus X O) X)
(rule (minus (s Y) (s U)) (minus Y U))
(rule (quot O (s V)) O)
(rule (quot (s W) (s P)) (s (quot (minus W P) (s P))))
(rule (plus O X1) X1)
(rule (plus (s Y1) U1) (s (plus Y1 U1)))
(rule (plus (minus V1 (s O)) (minus W1 (s (s P1)))) (plus (minus W1 (s (s P1))) (minus V1 (s O))))
(rule (plus (plus X2 (s O)) (plus Y2 (s (s U2)))) (plus (plus Y2 (s (s U2))) (plus X2 (s O))))
(rule (map H2 nil) nil)
(rule (map I2 (cons P2 X3)) (cons (I2 P2) (map I2 X3)))
(rule (filter Z3 nil) nil)
(rule (filter G3 (cons V3 W3)) (filter2 (G3 V3) G3 V3 W3))
(rule (filter2 true J3 X4 Y4) (cons X4 (filter J3 Y4)))
(rule (filter2 false G4 V4 W4) (filter G4 W4))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun O a)
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun minus (-> a a a))
(fun nil d)
(fun plus (-> a a a))
(fun quot (-> a a a))
(fun s (-> a a))
(fun true b)
(rule (minus X O) X)
(rule (minus (s Y) (s U)) (minus Y U))
(rule (quot O (s V)) O)
(rule (quot (s W) (s P)) (s (quot (minus W P) (s P))))
(rule (plus O X1) X1)
(rule (plus (s Y1) U1) (s (plus Y1 U1)))
(rule (plus (minus V1 (s O)) (minus W1 (s (s P1)))) (plus (minus W1 (s (s P1))) (minus V1 (s O))))
(rule (plus (plus X2 (s O)) (plus Y2 (s (s U2)))) (plus (plus Y2 (s (s U2))) (plus X2 (s O))))
(rule (map H2 nil) nil)
(rule (map I2 (cons P2 X3)) (cons (I2 P2) (map I2 X3)))
(rule (filter Z3 nil) nil)
(rule (filter G3 (cons V3 W3)) (filter2 (G3 V3) G3 V3 W3))
(rule (filter2 true J3 X4 Y4) (cons X4 (filter J3 Y4)))
(rule (filter2 false G4 V4 W4) (filter G4 W4))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun O a)
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun minus (-> a a a))
(fun nil d)
(fun plus (-> a a a))
(fun quot (-> a a a))
(fun s (-> a a))
(fun true b)
(rule (minus X O) X)
(rule (minus (s Y) (s U)) (minus Y U))
(rule (quot O (s V)) O)
(rule (quot (s W) (s P)) (s (quot (minus W P) (s P))))
(rule (plus O X1) X1)
(rule (plus (s Y1) U1) (s (plus Y1 U1)))
(rule (plus (minus V1 (s O)) (minus W1 (s (s P1)))) (plus (minus W1 (s (s P1))) (minus V1 (s O))))
(rule (plus (plus X2 (s O)) (plus Y2 (s (s U2)))) (plus (plus Y2 (s (s U2))) (plus X2 (s O))))
(rule (map H2 nil) nil)
(rule (map I2 (cons P2 X3)) (cons (I2 P2) (map I2 X3)))
(rule (filter Z3 nil) nil)
(rule (filter G3 (cons V3 W3)) (filter2 (G3 V3) G3 V3 W3))
(rule (filter2 true J3 X4 Y4) (cons X4 (filter J3 Y4)))
(rule (filter2 false G4 V4 W4) (filter G4 W4))
