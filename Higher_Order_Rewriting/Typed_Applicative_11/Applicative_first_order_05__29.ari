(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun O a)
(fun ack (-> a a a))
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun nil d)
(fun succ (-> a a))
(fun true b)
(rule (ack O X) (succ X))
(rule (ack (succ Y) U) (ack Y (succ O)))
(rule (ack (succ V) (succ W)) (ack V (ack (succ V) W)))
(rule (map J nil) nil)
(rule (map F1 (cons Y1 U1)) (cons (F1 Y1) (map F1 U1)))
(rule (filter H1 nil) nil)
(rule (filter I1 (cons P1 X2)) (filter2 (I1 P1) I1 P1 X2))
(rule (filter2 true Z2 U2 V2) (cons U2 (filter Z2 V2)))
(rule (filter2 false I2 P2 X3) (filter I2 X3))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun O a)
(fun ack (-> a a a))
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun nil d)
(fun succ (-> a a))
(fun true b)
(rule (ack O X) (succ X))
(rule (ack (succ Y) U) (ack Y (succ O)))
(rule (ack (succ V) (succ W)) (ack V (ack (succ V) W)))
(rule (map J nil) nil)
(rule (map F1 (cons Y1 U1)) (cons (F1 Y1) (map F1 U1)))
(rule (filter H1 nil) nil)
(rule (filter I1 (cons P1 X2)) (filter2 (I1 P1) I1 P1 X2))
(rule (filter2 true Z2 U2 V2) (cons U2 (filter Z2 V2)))
(rule (filter2 false I2 P2 X3) (filter I2 X3))
(format higher-order)
(sort a)
(sort b)
(sort c)
(sort d)
(fun O a)
(fun ack (-> a a a))
(fun cons (-> c d d))
(fun false b)
(fun filter (-> (-> c b) d d))
(fun filter2 (-> b (-> c b) c d d))
(fun map (-> (-> c c) d d))
(fun nil d)
(fun succ (-> a a))
(fun true b)
(rule (ack O X) (succ X))
(rule (ack (succ Y) U) (ack Y (succ O)))
(rule (ack (succ V) (succ W)) (ack V (ack (succ V) W)))
(rule (map J nil) nil)
(rule (map F1 (cons Y1 U1)) (cons (F1 Y1) (map F1 U1)))
(rule (filter H1 nil) nil)
(rule (filter I1 (cons P1 X2)) (filter2 (I1 P1) I1 P1 X2))
(rule (filter2 true Z2 U2 V2) (cons U2 (filter Z2 V2)))
(rule (filter2 false I2 P2 X3) (filter I2 X3))
