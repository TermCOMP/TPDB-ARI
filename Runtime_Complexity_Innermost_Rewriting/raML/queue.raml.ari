; @origtpdbfilename tct_complexity/raML/queue.raml.trs
; @xtcfilename "./Runtime_Complexity_Innermost_Rewriting/raML/queue.raml.xml"
(format TRS)
(fun breadth 2)
(fun |breadth#1| 1)
(fun dequeue 2)
(fun |tuple#2| 2)
(fun |breadth#2| 2)
(fun |::| 2)
(fun |breadth#3| 2)
(fun |breadth#4| 1)
(fun nil 0)
(fun |breadth#5| 1)
(fun enqueues 2)
(fun |tuple#4| 4)
(fun children 4)
(fun |children#1| 3)
(fun |children#3| 4)
(fun |children#2| 2)
(fun copyover 2)
(fun |copyover#1| 1)
(fun |copyover#2| 2)
(fun |dequeue#1| 1)
(fun |dequeue#2| 2)
(fun |dequeue#3| 1)
(fun |dequeue#4| 1)
(fun empty 1)
(fun enqueue 2)
(fun |enqueue#1| 2)
(fun |enqueues#1| 2)
(fun startBreadth 1)
(fun |startBreadth#1| 1)
(fun |startBreadth#2| 1)
(fun |#unit| 0)
(rule (breadth @breadth@1 @breadth@2) (|breadth#1| (dequeue @breadth@1 @breadth@2)))
(rule (|breadth#1| (|tuple#2| |@queue'| @elem)) (|breadth#2| @elem |@queue'|))
(rule (|breadth#2| (|::| @z @_@9) |@queue'|) (|breadth#3| (|breadth#4| @z) |@queue'|))
(rule (|breadth#2| nil |@queue'|) nil)
(rule (|breadth#3| (|tuple#2| @x @ys) |@queue'|) (|::| @x (|breadth#5| (enqueues @ys |@queue'|))))
(rule (|breadth#4| (|tuple#4| @children@3 @children@4 @children@5 @children@6)) (children @children@3 @children@4 @children@5 @children@6))
(rule (|breadth#5| (|tuple#2| @breadth@7 @breadth@8)) (breadth @breadth@7 @breadth@8))
(rule (children @a @b @l1 @l2) (|tuple#2| (|tuple#2| @a @b) (|children#1| @l1 @b @l2)))
(rule (|children#1| (|::| @x @xs) @b @l2) (|children#3| @l2 @b @x @xs))
(rule (|children#1| nil @b @l2) (|children#2| @l2 @b))
(rule (|children#2| (|::| @y @ys) @b) (|::| (|tuple#4| @y @b nil @ys) nil))
(rule (|children#2| nil @b) nil)
(rule (|children#3| (|::| @y @ys) @b @x @xs) (|::| (|tuple#4| @x @b nil @xs) (|::| (|tuple#4| @x @y @xs @ys) nil)))
(rule (|children#3| nil @b @x @xs) nil)
(rule (copyover @copyover@1 @copyover@2) (|copyover#1| (|tuple#2| @copyover@1 @copyover@2)))
(rule (|copyover#1| (|tuple#2| @inq @outq)) (|copyover#2| @inq @outq))
(rule (|copyover#2| (|::| @x @xs) @outq) (copyover @xs (|::| @x @outq)))
(rule (|copyover#2| nil @outq) (|tuple#2| nil @outq))
(rule (dequeue @dequeue@1 @dequeue@2) (|dequeue#1| (|tuple#2| @dequeue@1 @dequeue@2)))
(rule (|dequeue#1| (|tuple#2| @inq @outq)) (|dequeue#2| @outq @inq))
(rule (|dequeue#2| (|::| @y @ys) @inq) (|tuple#2| (|tuple#2| @inq @ys) (|::| @y nil)))
(rule (|dequeue#2| nil @inq) (|dequeue#3| @inq))
(rule (|dequeue#3| (|::| @x @xs)) (|dequeue#4| (copyover (|::| @x @xs) nil)))
(rule (|dequeue#3| nil) (|tuple#2| (|tuple#2| nil nil) nil))
(rule (|dequeue#4| (|tuple#2| @dequeue@3 @dequeue@4)) (dequeue @dequeue@3 @dequeue@4))
(rule (empty @x) (|tuple#2| nil nil))
(rule (enqueue @x @queue) (|enqueue#1| @queue @x))
(rule (|enqueue#1| (|tuple#2| @inq @outq) @x) (|tuple#2| (|::| @x @inq) @outq))
(rule (enqueues @l @queue) (|enqueues#1| @l @queue))
(rule (|enqueues#1| (|::| @x @xs) @queue) (enqueues @xs (enqueue @x @queue)))
(rule (|enqueues#1| nil @queue) @queue)
(rule (startBreadth @xs) (|startBreadth#1| @xs))
(rule (|startBreadth#1| (|::| @x @xs)) (|startBreadth#2| (enqueue (|tuple#4| @x @x @xs @xs) (empty |#unit|))))
(rule (|startBreadth#1| nil) nil)
(rule (|startBreadth#2| (|tuple#2| @breadth@1 @breadth@2)) (breadth @breadth@1 @breadth@2))
