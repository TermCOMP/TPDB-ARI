; @origtpdbfilename tct_complexity/raML/flatten.raml.trs
; @xtcfilename "./Runtime_Complexity_Innermost_Rewriting/raML/flatten.raml.xml"
(format TRS)
(fun flattensort 1)
(fun |insertionsort#1| 1)
(fun |#true| 0)
(fun leaf 0)
(fun append 2)
(fun |#cklt| 1)
(fun insert 2)
(fun |#pos| 1)
(fun node 3)
(fun |#EQ| 0)
(fun |insert#2| 4)
(fun |#compare| 2)
(fun nil 0)
(fun |append#1| 2)
(fun |#false| 0)
(fun |flatten#1| 1)
(fun |::| 2)
(fun |#LT| 0)
(fun |insert#1| 2)
(fun |#0| 0)
(fun |#neg| 1)
(fun |#less| 2)
(fun flatten 1)
(fun |#s| 1)
(fun |#GT| 0)
(fun insertionsort 1)
(rule (|#less| @x @y) (|#cklt| (|#compare| @x @y)))
(rule (append @l1 @l2) (|append#1| @l1 @l2))
(rule (|append#1| (|::| @x @xs) @l2) (|::| @x (append @xs @l2)))
(rule (|append#1| nil @l2) @l2)
(rule (flatten @t) (|flatten#1| @t))
(rule (|flatten#1| leaf) nil)
(rule (|flatten#1| (node @l @t1 @t2)) (append @l (append (flatten @t1) (flatten @t2))))
(rule (flattensort @t) (insertionsort (flatten @t)))
(rule (insert @x @l) (|insert#1| @l @x))
(rule (|insert#1| (|::| @y @ys) @x) (|insert#2| (|#less| @y @x) @x @y @ys))
(rule (|insert#1| nil @x) (|::| @x nil))
(rule (|insert#2| |#false| @x @y @ys) (|::| @x (|::| @y @ys)))
(rule (|insert#2| |#true| @x @y @ys) (|::| @y (insert @x @ys)))
(rule (insertionsort @l) (|insertionsort#1| @l))
(rule (|insertionsort#1| (|::| @x @xs)) (insert @x (insertionsort @xs)))
(rule (|insertionsort#1| nil) nil)
(rule (|#cklt| |#EQ|) |#false| :cost 0)
(rule (|#cklt| |#GT|) |#false| :cost 0)
(rule (|#cklt| |#LT|) |#true| :cost 0)
(rule (|#compare| |#0| |#0|) |#EQ| :cost 0)
(rule (|#compare| |#0| (|#neg| @y)) |#GT| :cost 0)
(rule (|#compare| |#0| (|#pos| @y)) |#LT| :cost 0)
(rule (|#compare| |#0| (|#s| @y)) |#LT| :cost 0)
(rule (|#compare| (|#neg| @x) |#0|) |#LT| :cost 0)
(rule (|#compare| (|#neg| @x) (|#neg| @y)) (|#compare| @y @x) :cost 0)
(rule (|#compare| (|#neg| @x) (|#pos| @y)) |#LT| :cost 0)
(rule (|#compare| (|#pos| @x) |#0|) |#GT| :cost 0)
(rule (|#compare| (|#pos| @x) (|#neg| @y)) |#GT| :cost 0)
(rule (|#compare| (|#pos| @x) (|#pos| @y)) (|#compare| @x @y) :cost 0)
(rule (|#compare| (|#s| @x) |#0|) |#GT| :cost 0)
(rule (|#compare| (|#s| @x) (|#s| @y)) (|#compare| @x @y) :cost 0)
