; @origtpdbfilename tct_complexity/raML/clevermmult.raml.trs
; @xtcfilename "./Runtime_Complexity_Innermost_Rewriting/raML/clevermmult.raml.xml"
(format TRS)
(fun |#natmult| 2)
(fun computeLine 3)
(fun |computeLine#1| 3)
(fun |matrixMult#1| 2)
(fun lineMult 3)
(fun |::| 2)
(fun |#mult| 2)
(fun + 2)
(fun |#succ| 1)
(fun |lineMult#2| 4)
(fun |#pos| 1)
(fun |#add| 2)
(fun |#0| 0)
(fun |#neg| 1)
(fun matrixMult 2)
(fun * 2)
(fun |#pred| 1)
(fun |lineMult#1| 3)
(fun |#s| 1)
(fun nil 0)
(fun |computeLine#2| 4)
(rule (* @x @y) (|#mult| @x @y))
(rule (+ @x @y) (|#add| @x @y))
(rule (computeLine @line @m @acc) (|computeLine#1| @line @acc @m))
(rule (|computeLine#1| (|::| @x @xs) @acc @m) (|computeLine#2| @m @acc @x @xs))
(rule (|computeLine#1| nil @acc @m) @acc)
(rule (|computeLine#2| (|::| @l @ls) @acc @x @xs) (computeLine @xs @ls (lineMult @x @l @acc)))
(rule (|computeLine#2| nil @acc @x @xs) nil)
(rule (lineMult @n @l1 @l2) (|lineMult#1| @l1 @l2 @n))
(rule (|lineMult#1| (|::| @x @xs) @l2 @n) (|lineMult#2| @l2 @n @x @xs))
(rule (|lineMult#1| nil @l2 @n) nil)
(rule (|lineMult#2| (|::| @y @ys) @n @x @xs) (|::| (+ (* @x @n) @y) (lineMult @n @xs @ys)))
(rule (|lineMult#2| nil @n @x @xs) (|::| (* @x @n) (lineMult @n @xs nil)))
(rule (matrixMult @m1 @m2) (|matrixMult#1| @m1 @m2))
(rule (|matrixMult#1| (|::| @l @ls) @m2) (|::| (computeLine @l @m2 nil) (matrixMult @ls @m2)))
(rule (|matrixMult#1| nil @m2) nil)
(rule (|#add| |#0| @y) @y :cost 0)
(rule (|#add| (|#neg| (|#s| |#0|)) @y) (|#pred| @y) :cost 0)
(rule (|#add| (|#neg| (|#s| (|#s| @x))) @y) (|#pred| (|#add| (|#pos| (|#s| @x)) @y)) :cost 0)
(rule (|#add| (|#pos| (|#s| |#0|)) @y) (|#succ| @y) :cost 0)
(rule (|#add| (|#pos| (|#s| (|#s| @x))) @y) (|#succ| (|#add| (|#pos| (|#s| @x)) @y)) :cost 0)
(rule (|#mult| |#0| |#0|) |#0| :cost 0)
(rule (|#mult| |#0| (|#neg| @y)) |#0| :cost 0)
(rule (|#mult| |#0| (|#pos| @y)) |#0| :cost 0)
(rule (|#mult| (|#neg| @x) |#0|) |#0| :cost 0)
(rule (|#mult| (|#neg| @x) (|#neg| @y)) (|#pos| (|#natmult| @x @y)) :cost 0)
(rule (|#mult| (|#neg| @x) (|#pos| @y)) (|#neg| (|#natmult| @x @y)) :cost 0)
(rule (|#mult| (|#pos| @x) |#0|) |#0| :cost 0)
(rule (|#mult| (|#pos| @x) (|#neg| @y)) (|#neg| (|#natmult| @x @y)) :cost 0)
(rule (|#mult| (|#pos| @x) (|#pos| @y)) (|#pos| (|#natmult| @x @y)) :cost 0)
(rule (|#natmult| |#0| @y) |#0| :cost 0)
(rule (|#natmult| (|#s| @x) @y) (|#add| (|#pos| @y) (|#natmult| @x @y)) :cost 0)
(rule (|#pred| |#0|) (|#neg| (|#s| |#0|)) :cost 0)
(rule (|#pred| (|#neg| (|#s| @x))) (|#neg| (|#s| (|#s| @x))) :cost 0)
(rule (|#pred| (|#pos| (|#s| |#0|))) |#0| :cost 0)
(rule (|#pred| (|#pos| (|#s| (|#s| @x)))) (|#pos| (|#s| @x)) :cost 0)
(rule (|#succ| |#0|) (|#pos| (|#s| |#0|)) :cost 0)
(rule (|#succ| (|#neg| (|#s| |#0|))) |#0| :cost 0)
(rule (|#succ| (|#neg| (|#s| (|#s| @x)))) (|#neg| (|#s| @x)) :cost 0)
(rule (|#succ| (|#pos| (|#s| @x))) (|#pos| (|#s| (|#s| @x))) :cost 0)
