; @origtpdbfilename tct_complexity/raML/dyade.raml.trs
; @xtcfilename "./Runtime_Complexity_Innermost_Rewriting/raML/dyade.raml.xml"
(format TRS)
(fun #natmult 2)
(fun mult 2)
(fun mult#1 2)
(fun :: 2)
(fun #mult 2)
(fun #succ 1)
(fun #pos 1)
(fun #add 2)
(fun #0 0)
(fun * 2)
(fun #neg 1)
(fun dyade#1 2)
(fun #pred 1)
(fun #s 1)
(fun dyade 2)
(fun nil 0)
(rule (* @x @y) (#mult @x @y))
(rule (dyade @l1 @l2) (dyade#1 @l1 @l2))
(rule (dyade#1 (:: @x @xs) @l2) (:: (mult @x @l2) (dyade @xs @l2)))
(rule (dyade#1 nil @l2) nil)
(rule (mult @n @l) (mult#1 @l @n))
(rule (mult#1 (:: @x @xs) @n) (:: (* @n @x) (mult @n @xs)))
(rule (mult#1 nil @n) nil)
(rule (#add #0 @y) @y :cost 0)
(rule (#add (#neg (#s #0)) @y) (#pred @y) :cost 0)
(rule (#add (#neg (#s (#s @x))) @y) (#pred (#add (#pos (#s @x)) @y)) :cost 0)
(rule (#add (#pos (#s #0)) @y) (#succ @y) :cost 0)
(rule (#add (#pos (#s (#s @x))) @y) (#succ (#add (#pos (#s @x)) @y)) :cost 0)
(rule (#mult #0 #0) #0 :cost 0)
(rule (#mult #0 (#neg @y)) #0 :cost 0)
(rule (#mult #0 (#pos @y)) #0 :cost 0)
(rule (#mult (#neg @x) #0) #0 :cost 0)
(rule (#mult (#neg @x) (#neg @y)) (#pos (#natmult @x @y)) :cost 0)
(rule (#mult (#neg @x) (#pos @y)) (#neg (#natmult @x @y)) :cost 0)
(rule (#mult (#pos @x) #0) #0 :cost 0)
(rule (#mult (#pos @x) (#neg @y)) (#neg (#natmult @x @y)) :cost 0)
(rule (#mult (#pos @x) (#pos @y)) (#pos (#natmult @x @y)) :cost 0)
(rule (#natmult #0 @y) #0 :cost 0)
(rule (#natmult (#s @x) @y) (#add (#pos @y) (#natmult @x @y)) :cost 0)
(rule (#pred #0) (#neg (#s #0)) :cost 0)
(rule (#pred (#neg (#s @x))) (#neg (#s (#s @x))) :cost 0)
(rule (#pred (#pos (#s #0))) #0 :cost 0)
(rule (#pred (#pos (#s (#s @x)))) (#pos (#s @x)) :cost 0)
(rule (#succ #0) (#pos (#s #0)) :cost 0)
(rule (#succ (#neg (#s #0))) #0 :cost 0)
(rule (#succ (#neg (#s (#s @x)))) (#neg (#s @x)) :cost 0)
(rule (#succ (#pos (#s @x))) (#pos (#s (#s @x))) :cost 0)
