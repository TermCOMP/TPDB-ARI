; @origtpdbfilename ./TRS/currying/AG01/#4.36.trs
; @xtcfilename "./TRS_Innermost/Applicative_AG01_innermost/#4.36.xml"
(format TRS)
(fun app 2)
(fun eq 0)
(fun 0 0)
(fun true 0)
(fun s 0)
(fun false 0)
(fun le 0)
(fun min 0)
(fun cons 0)
(fun nil 0)
(fun if_min 0)
(fun replace 0)
(fun if_replace 0)
(fun sort 0)
(fun map 0)
(fun filter 0)
(fun filter2 0)
(rule (app (app eq 0) 0) true)
(rule (app (app eq 0) (app s m)) false)
(rule (app (app eq (app s n)) 0) false)
(rule (app (app eq (app s n)) (app s m)) (app (app eq n) m))
(rule (app (app le 0) m) true)
(rule (app (app le (app s n)) 0) false)
(rule (app (app le (app s n)) (app s m)) (app (app le n) m))
(rule (app min (app (app cons 0) nil)) 0)
(rule (app min (app (app cons (app s n)) nil)) (app s n))
(rule (app min (app (app cons n) (app (app cons m) x))) (app (app if_min (app (app le n) m)) (app (app cons n) (app (app cons m) x))))
(rule (app (app if_min true) (app (app cons n) (app (app cons m) x))) (app min (app (app cons n) x)))
(rule (app (app if_min false) (app (app cons n) (app (app cons m) x))) (app min (app (app cons m) x)))
(rule (app (app (app replace n) m) nil) nil)
(rule (app (app (app replace n) m) (app (app cons k) x)) (app (app (app (app if_replace (app (app eq n) k)) n) m) (app (app cons k) x)))
(rule (app (app (app (app if_replace true) n) m) (app (app cons k) x)) (app (app cons m) x))
(rule (app (app (app (app if_replace false) n) m) (app (app cons k) x)) (app (app cons k) (app (app (app replace n) m) x)))
(rule (app sort nil) nil)
(rule (app sort (app (app cons n) x)) (app (app cons (app min (app (app cons n) x))) (app sort (app (app (app replace (app min (app (app cons n) x))) n) x))))
(rule (app (app map f) nil) nil)
(rule (app (app map f) (app (app cons x) xs)) (app (app cons (app f x)) (app (app map f) xs)))
(rule (app (app filter f) nil) nil)
(rule (app (app filter f) (app (app cons x) xs)) (app (app (app (app filter2 (app f x)) f) x) xs))
(rule (app (app (app (app filter2 true) f) x) xs) (app (app cons x) (app (app filter f) xs)))
(rule (app (app (app (app filter2 false) f) x) xs) (app (app filter f) xs))
