; @origtpdbfilename ./TRS/TRCSR/Ex6_15_AEL02_Z.trs
; @xtcfilename "./Runtime_Complexity_Full_Rewriting/Transformed_CSR_04/Ex6_15_AEL02_Z.xml"
(format TRS)
(fun sel 2)
(fun s 1)
(fun cons 2)
(fun activate 1)
(fun 0 0)
(fun first 2)
(fun nil 0)
(fun n__first 2)
(fun from 1)
(fun n__from 1)
(fun sel1 2)
(fun quote 1)
(fun first1 2)
(fun nil1 0)
(fun cons1 2)
(fun n__0 0)
(fun 01 0)
(fun quote1 1)
(fun n__cons 2)
(fun n__nil 0)
(fun n__s 1)
(fun s1 1)
(fun n__sel 2)
(fun unquote 1)
(fun unquote1 1)
(fun fcons 2)
(rule (sel (s X) (cons Y Z)) (sel X (activate Z)))
(rule (sel 0 (cons X Z)) X)
(rule (first 0 Z) nil)
(rule (first (s X) (cons Y Z)) (cons Y (n__first X (activate Z))))
(rule (from X) (cons X (n__from (s X))))
(rule (sel1 (s X) (cons Y Z)) (sel1 X (activate Z)))
(rule (sel1 0 (cons X Z)) (quote X))
(rule (first1 0 Z) nil1)
(rule (first1 (s X) (cons Y Z)) (cons1 (quote Y) (first1 X (activate Z))))
(rule (quote n__0) 01)
(rule (quote1 (n__cons X Z)) (cons1 (quote (activate X)) (quote1 (activate Z))))
(rule (quote1 n__nil) nil1)
(rule (quote (n__s X)) (s1 (quote (activate X))))
(rule (quote (n__sel X Z)) (sel1 (activate X) (activate Z)))
(rule (quote1 (n__first X Z)) (first1 (activate X) (activate Z)))
(rule (unquote 01) 0)
(rule (unquote (s1 X)) (s (unquote X)))
(rule (unquote1 nil1) nil)
(rule (unquote1 (cons1 X Z)) (fcons (unquote X) (unquote1 Z)))
(rule (fcons X Z) (cons X Z))
(rule (first X1 X2) (n__first X1 X2))
(rule (from X) (n__from X))
(rule 0 n__0)
(rule (cons X1 X2) (n__cons X1 X2))
(rule nil n__nil)
(rule (s X) (n__s X))
(rule (sel X1 X2) (n__sel X1 X2))
(rule (activate (n__first X1 X2)) (first X1 X2))
(rule (activate (n__from X)) (from X))
(rule (activate n__0) 0)
(rule (activate (n__cons X1 X2)) (cons X1 X2))
(rule (activate n__nil) nil)
(rule (activate (n__s X)) (s X))
(rule (activate (n__sel X1 X2)) (sel X1 X2))
(rule (activate X) X)
