; @origtpdbfilename ./TRS/TRCSR/Ex6_15_AEL02_GM.trs
; @xtcfilename "./Runtime_Complexity_Full_Rewriting/Transformed_CSR_04/Ex6_15_AEL02_GM.xml"
(format TRS)
(fun a__sel 2)
(fun s 1)
(fun cons 2)
(fun mark 1)
(fun 0 0)
(fun a__first 2)
(fun nil 0)
(fun first 2)
(fun a__from 1)
(fun from 1)
(fun a__sel1 2)
(fun a__quote 1)
(fun a__first1 2)
(fun nil1 0)
(fun cons1 2)
(fun 01 0)
(fun a__quote1 1)
(fun s1 1)
(fun sel 2)
(fun a__unquote 1)
(fun a__unquote1 1)
(fun a__fcons 2)
(fun sel1 2)
(fun quote 1)
(fun first1 2)
(fun quote1 1)
(fun unquote 1)
(fun unquote1 1)
(fun fcons 2)
(rule (a__sel (s X) (cons Y Z)) (a__sel (mark X) (mark Z)))
(rule (a__sel 0 (cons X Z)) (mark X))
(rule (a__first 0 Z) nil)
(rule (a__first (s X) (cons Y Z)) (cons (mark Y) (first X Z)))
(rule (a__from X) (cons (mark X) (from (s X))))
(rule (a__sel1 (s X) (cons Y Z)) (a__sel1 (mark X) (mark Z)))
(rule (a__sel1 0 (cons X Z)) (a__quote X))
(rule (a__first1 0 Z) nil1)
(rule (a__first1 (s X) (cons Y Z)) (cons1 (a__quote Y) (a__first1 (mark X) (mark Z))))
(rule (a__quote 0) 01)
(rule (a__quote1 (cons X Z)) (cons1 (a__quote X) (a__quote1 Z)))
(rule (a__quote1 nil) nil1)
(rule (a__quote (s X)) (s1 (a__quote X)))
(rule (a__quote (sel X Z)) (a__sel1 (mark X) (mark Z)))
(rule (a__quote1 (first X Z)) (a__first1 (mark X) (mark Z)))
(rule (a__unquote 01) 0)
(rule (a__unquote (s1 X)) (s (a__unquote (mark X))))
(rule (a__unquote1 nil1) nil)
(rule (a__unquote1 (cons1 X Z)) (a__fcons (a__unquote (mark X)) (a__unquote1 (mark Z))))
(rule (a__fcons X Z) (cons (mark X) Z))
(rule (mark (sel X1 X2)) (a__sel (mark X1) (mark X2)))
(rule (mark (first X1 X2)) (a__first (mark X1) (mark X2)))
(rule (mark (from X)) (a__from (mark X)))
(rule (mark (sel1 X1 X2)) (a__sel1 (mark X1) (mark X2)))
(rule (mark (quote X)) (a__quote X))
(rule (mark (first1 X1 X2)) (a__first1 (mark X1) (mark X2)))
(rule (mark (quote1 X)) (a__quote1 X))
(rule (mark (unquote X)) (a__unquote (mark X)))
(rule (mark (unquote1 X)) (a__unquote1 (mark X)))
(rule (mark (fcons X1 X2)) (a__fcons (mark X1) (mark X2)))
(rule (mark (s X)) (s (mark X)))
(rule (mark (cons X1 X2)) (cons (mark X1) X2))
(rule (mark 0) 0)
(rule (mark nil) nil)
(rule (mark nil1) nil1)
(rule (mark (cons1 X1 X2)) (cons1 (mark X1) (mark X2)))
(rule (mark 01) 01)
(rule (mark (s1 X)) (s1 (mark X)))
(rule (a__sel X1 X2) (sel X1 X2))
(rule (a__first X1 X2) (first X1 X2))
(rule (a__from X) (from X))
(rule (a__sel1 X1 X2) (sel1 X1 X2))
(rule (a__quote X) (quote X))
(rule (a__first1 X1 X2) (first1 X1 X2))
(rule (a__quote1 X) (quote1 X))
(rule (a__unquote X) (unquote X))
(rule (a__unquote1 X) (unquote1 X))
(rule (a__fcons X1 X2) (fcons X1 X2))
