; @origtpdbfilename ./TRS/TRCSR/OvConsOS_nokinds-noand_Z.trs
; @xtcfilename "./Derivational_Complexity_Innermost_Rewriting/Transformed_CSR_04/OvConsOS_nokinds-noand_Z.xml"
(format TRS)
(fun zeros 0)
(fun cons 2)
(fun |0| 0)
(fun n__zeros 0)
(fun U11 1)
(fun tt 0)
(fun U21 1)
(fun U31 1)
(fun U41 2)
(fun U42 1)
(fun isNatIList 1)
(fun activate 1)
(fun U51 2)
(fun U52 1)
(fun isNatList 1)
(fun U61 2)
(fun U62 1)
(fun U71 3)
(fun U72 2)
(fun isNat 1)
(fun s 1)
(fun length 1)
(fun U81 1)
(fun nil 0)
(fun U91 4)
(fun U92 4)
(fun U93 4)
(fun n__take 2)
(fun n__0 0)
(fun n__length 1)
(fun n__s 1)
(fun n__cons 2)
(fun n__nil 0)
(fun take 2)
(rule zeros (cons |0| n__zeros))
(rule (U11 tt) tt)
(rule (U21 tt) tt)
(rule (U31 tt) tt)
(rule (U41 tt V2) (U42 (isNatIList (activate V2))))
(rule (U42 tt) tt)
(rule (U51 tt V2) (U52 (isNatList (activate V2))))
(rule (U52 tt) tt)
(rule (U61 tt V2) (U62 (isNatIList (activate V2))))
(rule (U62 tt) tt)
(rule (U71 tt L N) (U72 (isNat (activate N)) (activate L)))
(rule (U72 tt L) (s (length (activate L))))
(rule (U81 tt) nil)
(rule (U91 tt IL M N) (U92 (isNat (activate M)) (activate IL) (activate M) (activate N)))
(rule (U92 tt IL M N) (U93 (isNat (activate N)) (activate IL) (activate M) (activate N)))
(rule (U93 tt IL M N) (cons (activate N) (n__take (activate M) (activate IL))))
(rule (isNat n__0) tt)
(rule (isNat (n__length V1)) (U11 (isNatList (activate V1))))
(rule (isNat (n__s V1)) (U21 (isNat (activate V1))))
(rule (isNatIList V) (U31 (isNatList (activate V))))
(rule (isNatIList n__zeros) tt)
(rule (isNatIList (n__cons V1 V2)) (U41 (isNat (activate V1)) (activate V2)))
(rule (isNatList n__nil) tt)
(rule (isNatList (n__cons V1 V2)) (U51 (isNat (activate V1)) (activate V2)))
(rule (isNatList (n__take V1 V2)) (U61 (isNat (activate V1)) (activate V2)))
(rule (length nil) |0|)
(rule (length (cons N L)) (U71 (isNatList (activate L)) (activate L) N))
(rule (take |0| IL) (U81 (isNatIList IL)))
(rule (take (s M) (cons N IL)) (U91 (isNatIList (activate IL)) (activate IL) M N))
(rule zeros n__zeros)
(rule (take X1 X2) (n__take X1 X2))
(rule |0| n__0)
(rule (length X) (n__length X))
(rule (s X) (n__s X))
(rule (cons X1 X2) (n__cons X1 X2))
(rule nil n__nil)
(rule (activate n__zeros) zeros)
(rule (activate (n__take X1 X2)) (take X1 X2))
(rule (activate n__0) |0|)
(rule (activate (n__length X)) (length X))
(rule (activate (n__s X)) (s X))
(rule (activate (n__cons X1 X2)) (cons X1 X2))
(rule (activate n__nil) nil)
(rule (activate X) X)
