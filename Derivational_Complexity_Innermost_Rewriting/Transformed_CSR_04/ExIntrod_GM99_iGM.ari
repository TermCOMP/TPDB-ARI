; @origtpdbfilename ./TRS/TRCSR/ExIntrod_GM99_iGM.trs
; @xtcfilename "./Derivational_Complexity_Innermost_Rewriting/Transformed_CSR_04/ExIntrod_GM99_iGM.xml"
(format TRS)
(fun active 1)
(fun primes 0)
(fun mark 1)
(fun sieve 1)
(fun from 1)
(fun s 1)
(fun |0| 0)
(fun cons 2)
(fun head 1)
(fun tail 1)
(fun if 3)
(fun true 0)
(fun false 0)
(fun filter 2)
(fun divides 2)
(rule (active primes) (mark (sieve (from (s (s |0|))))))
(rule (active (from X)) (mark (cons X (from (s X)))))
(rule (active (head (cons X Y))) (mark X))
(rule (active (tail (cons X Y))) (mark Y))
(rule (active (if true X Y)) (mark X))
(rule (active (if false X Y)) (mark Y))
(rule (active (filter (s (s X)) (cons Y Z))) (mark (if (divides (s (s X)) Y) (filter (s (s X)) Z) (cons Y (filter X (sieve Y))))))
(rule (active (sieve (cons X Y))) (mark (cons X (filter X (sieve Y)))))
(rule (mark primes) (active primes))
(rule (mark (sieve X)) (active (sieve (mark X))))
(rule (mark (from X)) (active (from (mark X))))
(rule (mark (s X)) (active (s (mark X))))
(rule (mark |0|) (active |0|))
(rule (mark (cons X1 X2)) (active (cons (mark X1) X2)))
(rule (mark (head X)) (active (head (mark X))))
(rule (mark (tail X)) (active (tail (mark X))))
(rule (mark (if X1 X2 X3)) (active (if (mark X1) X2 X3)))
(rule (mark true) (active true))
(rule (mark false) (active false))
(rule (mark (filter X1 X2)) (active (filter (mark X1) (mark X2))))
(rule (mark (divides X1 X2)) (active (divides (mark X1) (mark X2))))
(rule (sieve (mark X)) (sieve X))
(rule (sieve (active X)) (sieve X))
(rule (from (mark X)) (from X))
(rule (from (active X)) (from X))
(rule (s (mark X)) (s X))
(rule (s (active X)) (s X))
(rule (cons (mark X1) X2) (cons X1 X2))
(rule (cons X1 (mark X2)) (cons X1 X2))
(rule (cons (active X1) X2) (cons X1 X2))
(rule (cons X1 (active X2)) (cons X1 X2))
(rule (head (mark X)) (head X))
(rule (head (active X)) (head X))
(rule (tail (mark X)) (tail X))
(rule (tail (active X)) (tail X))
(rule (if (mark X1) X2 X3) (if X1 X2 X3))
(rule (if X1 (mark X2) X3) (if X1 X2 X3))
(rule (if X1 X2 (mark X3)) (if X1 X2 X3))
(rule (if (active X1) X2 X3) (if X1 X2 X3))
(rule (if X1 (active X2) X3) (if X1 X2 X3))
(rule (if X1 X2 (active X3)) (if X1 X2 X3))
(rule (filter (mark X1) X2) (filter X1 X2))
(rule (filter X1 (mark X2)) (filter X1 X2))
(rule (filter (active X1) X2) (filter X1 X2))
(rule (filter X1 (active X2)) (filter X1 X2))
(rule (divides (mark X1) X2) (divides X1 X2))
(rule (divides X1 (mark X2)) (divides X1 X2))
(rule (divides (active X1) X2) (divides X1 X2))
(rule (divides X1 (active X2)) (divides X1 X2))
