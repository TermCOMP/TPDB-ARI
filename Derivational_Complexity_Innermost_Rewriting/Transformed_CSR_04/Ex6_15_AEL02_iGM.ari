; @origtpdbfilename ./TRS/TRCSR/Ex6_15_AEL02_iGM.trs
; @xtcfilename "./Derivational_Complexity_Innermost_Rewriting/Transformed_CSR_04/Ex6_15_AEL02_iGM.xml"
(format TRS)
(fun active 1)
(fun sel 2)
(fun s 1)
(fun cons 2)
(fun mark 1)
(fun |0| 0)
(fun first 2)
(fun nil 0)
(fun from 1)
(fun sel1 2)
(fun quote 1)
(fun first1 2)
(fun nil1 0)
(fun cons1 2)
(fun |01| 0)
(fun quote1 1)
(fun s1 1)
(fun unquote 1)
(fun unquote1 1)
(fun fcons 2)
(rule (active (sel (s X) (cons Y Z))) (mark (sel X Z)))
(rule (active (sel |0| (cons X Z))) (mark X))
(rule (active (first |0| Z)) (mark nil))
(rule (active (first (s X) (cons Y Z))) (mark (cons Y (first X Z))))
(rule (active (from X)) (mark (cons X (from (s X)))))
(rule (active (sel1 (s X) (cons Y Z))) (mark (sel1 X Z)))
(rule (active (sel1 |0| (cons X Z))) (mark (quote X)))
(rule (active (first1 |0| Z)) (mark nil1))
(rule (active (first1 (s X) (cons Y Z))) (mark (cons1 (quote Y) (first1 X Z))))
(rule (active (quote |0|)) (mark |01|))
(rule (active (quote1 (cons X Z))) (mark (cons1 (quote X) (quote1 Z))))
(rule (active (quote1 nil)) (mark nil1))
(rule (active (quote (s X))) (mark (s1 (quote X))))
(rule (active (quote (sel X Z))) (mark (sel1 X Z)))
(rule (active (quote1 (first X Z))) (mark (first1 X Z)))
(rule (active (unquote |01|)) (mark |0|))
(rule (active (unquote (s1 X))) (mark (s (unquote X))))
(rule (active (unquote1 nil1)) (mark nil))
(rule (active (unquote1 (cons1 X Z))) (mark (fcons (unquote X) (unquote1 Z))))
(rule (active (fcons X Z)) (mark (cons X Z)))
(rule (mark (sel X1 X2)) (active (sel (mark X1) (mark X2))))
(rule (mark (s X)) (active (s (mark X))))
(rule (mark (cons X1 X2)) (active (cons (mark X1) X2)))
(rule (mark |0|) (active |0|))
(rule (mark (first X1 X2)) (active (first (mark X1) (mark X2))))
(rule (mark nil) (active nil))
(rule (mark (from X)) (active (from (mark X))))
(rule (mark (sel1 X1 X2)) (active (sel1 (mark X1) (mark X2))))
(rule (mark (quote X)) (active (quote X)))
(rule (mark (first1 X1 X2)) (active (first1 (mark X1) (mark X2))))
(rule (mark nil1) (active nil1))
(rule (mark (cons1 X1 X2)) (active (cons1 (mark X1) (mark X2))))
(rule (mark |01|) (active |01|))
(rule (mark (quote1 X)) (active (quote1 X)))
(rule (mark (s1 X)) (active (s1 (mark X))))
(rule (mark (unquote X)) (active (unquote (mark X))))
(rule (mark (unquote1 X)) (active (unquote1 (mark X))))
(rule (mark (fcons X1 X2)) (active (fcons (mark X1) (mark X2))))
(rule (sel (mark X1) X2) (sel X1 X2))
(rule (sel X1 (mark X2)) (sel X1 X2))
(rule (sel (active X1) X2) (sel X1 X2))
(rule (sel X1 (active X2)) (sel X1 X2))
(rule (s (mark X)) (s X))
(rule (s (active X)) (s X))
(rule (cons (mark X1) X2) (cons X1 X2))
(rule (cons X1 (mark X2)) (cons X1 X2))
(rule (cons (active X1) X2) (cons X1 X2))
(rule (cons X1 (active X2)) (cons X1 X2))
(rule (first (mark X1) X2) (first X1 X2))
(rule (first X1 (mark X2)) (first X1 X2))
(rule (first (active X1) X2) (first X1 X2))
(rule (first X1 (active X2)) (first X1 X2))
(rule (from (mark X)) (from X))
(rule (from (active X)) (from X))
(rule (sel1 (mark X1) X2) (sel1 X1 X2))
(rule (sel1 X1 (mark X2)) (sel1 X1 X2))
(rule (sel1 (active X1) X2) (sel1 X1 X2))
(rule (sel1 X1 (active X2)) (sel1 X1 X2))
(rule (quote (mark X)) (quote X))
(rule (quote (active X)) (quote X))
(rule (first1 (mark X1) X2) (first1 X1 X2))
(rule (first1 X1 (mark X2)) (first1 X1 X2))
(rule (first1 (active X1) X2) (first1 X1 X2))
(rule (first1 X1 (active X2)) (first1 X1 X2))
(rule (cons1 (mark X1) X2) (cons1 X1 X2))
(rule (cons1 X1 (mark X2)) (cons1 X1 X2))
(rule (cons1 (active X1) X2) (cons1 X1 X2))
(rule (cons1 X1 (active X2)) (cons1 X1 X2))
(rule (quote1 (mark X)) (quote1 X))
(rule (quote1 (active X)) (quote1 X))
(rule (s1 (mark X)) (s1 X))
(rule (s1 (active X)) (s1 X))
(rule (unquote (mark X)) (unquote X))
(rule (unquote (active X)) (unquote X))
(rule (unquote1 (mark X)) (unquote1 X))
(rule (unquote1 (active X)) (unquote1 X))
(rule (fcons (mark X1) X2) (fcons X1 X2))
(rule (fcons X1 (mark X2)) (fcons X1 X2))
(rule (fcons (active X1) X2) (fcons X1 X2))
(rule (fcons X1 (active X2)) (fcons X1 X2))
