(format PTRS)
(fun rotate 1)
(fun cons 2)
(fun app 2)
(fun nil 0)
(fun if_high 3)
(fun true 0)
(fun high 2)
(fun quicksort 1)
(fun if 4)
(fun empty 1)
(fun low 2)
(fun head 1)
(fun tail 1)
(fun false 0)
(fun leq 2)
(fun 0 0)
(fun if_low 3)
(fun s 1)
(prule (rotate (cons x xs)) (((cons x xs) :prob 1 ) ((rotate (app xs (cons x nil))) :prob 1 )))
(prule (if_high true x (cons y ys)) (((cons y (high x ys)) :prob 1 )))
(prule (quicksort xs) (((if (empty xs) (low (head xs) (tail xs)) (head xs) (high (head xs) (tail xs))) :prob 1 )))
(prule (head (cons x xs)) ((x :prob 1 )))
(prule (if_high false x (cons y ys)) (((high x ys) :prob 1 )))
(prule (leq 0 x) ((true :prob 1 )))
(prule (low x nil) ((nil :prob 1 )))
(prule (empty (cons x xs)) ((false :prob 1 )))
(prule (if_low false x (cons y ys)) (((cons y (low x ys)) :prob 1 )))
(prule (high x nil) ((nil :prob 1 )))
(prule (leq (s x) 0) ((false :prob 1 )))
(prule (if true xs x ys) ((nil :prob 1 )))
(prule (if false xs x ys) (((app (quicksort (rotate xs)) (cons x (quicksort (rotate ys)))) :prob 1 )))
(prule (app (cons x xs) ys) (((cons x (app xs ys)) :prob 1 )))
(prule (app nil ys) ((ys :prob 1 )))
(prule (rotate nil) ((nil :prob 1 )))
(prule (leq (s x) (s y)) (((leq x y) :prob 1 )))
(prule (tail (cons x xs)) ((xs :prob 1 )))
(prule (if_low true x (cons y ys)) (((low x ys) :prob 1 )))
(prule (low x (cons y ys)) (((if_low (leq y x) x (cons y ys)) :prob 1 )))
(prule (empty nil) ((true :prob 1 )))
(prule (high x (cons y ys)) (((if_high (leq y x) x (cons y ys)) :prob 1 )))
