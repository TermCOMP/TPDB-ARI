(format PTRS)
(fun head 1)
(fun cons 2)
(fun pickR 1)
(fun pair 2)
(fun app 2)
(fun nil 0)
(fun isempty 1)
(fun false 0)
(fun fst 1)
(fun ifNoneEmptyZip 3)
(fun true 0)
(fun tail 1)
(fun or 2)
(fun zip 2)
(fun n 0)
(fun help 2)
(fun snd 1)
(fun and 2)
(prule (head (cons x xs)) ((x :prob 1 )))
(prule (pickR (cons x xs)) (((pair x xs) :prob 1 ) ((pickR (app xs (cons x nil))) :prob 1 )))
(prule (isempty (cons x xs)) ((false :prob 1 )))
(prule (fst (pair x y)) ((x :prob 1 )))
(prule (app nil y) ((y :prob 1 )))
(prule (ifNoneEmptyZip true xs ys) ((nil :prob 1 )))
(prule (tail (cons x xs)) ((xs :prob 1 )))
(prule (or true x) ((true :prob 1 )))
(prule (or x true) ((true :prob 1 )))
(prule (zip xs ys) (((ifNoneEmptyZip (or (isempty xs) (isempty ys)) xs ys) :prob 1 )))
(prule (app (cons n x) y) (((cons n (app x y)) :prob 1 )))
(prule (help xs ys) (((cons (pair (head xs) (fst ys)) (zip (tail xs) (snd ys))) :prob 1 )))
(prule (and false x) ((false :prob 1 )))
(prule (and x false) ((false :prob 1 )))
(prule (isempty nil) ((true :prob 1 )))
(prule (snd (pair x y)) ((y :prob 1 )))
(prule (and true true) ((true :prob 1 )))
(prule (ifNoneEmptyZip false xs ys) (((help xs (pickR ys)) :prob 1 )))
(prule (or false false) ((false :prob 1 )))
