(format PTRS)
(fun leq 2)
(fun 0 0)
(fun true 0)
(fun low 2)
(fun nil 0)
(fun s 1)
(fun false 0)
(fun qsHelp 2)
(fun app 2)
(fun qs 1)
(fun remove 2)
(fun cons 2)
(fun high 2)
(fun ifEq 4)
(fun ifLow 3)
(fun eq 2)
(fun pickR 1)
(fun ifHigh 3)
(prule (leq 0 x) ((true :prob 1 )))
(prule (low x nil) ((nil :prob 1 )))
(prule (leq (s x) 0) ((false :prob 1 )))
(prule (qsHelp x xs) (((app (qs (low x (remove x xs))) (cons x (qs (high x (remove x xs))))) :prob 1 )))
(prule (ifEq true x y ys) (((remove x ys) :prob 1 )))
(prule (ifEq false x y ys) (((cons y (remove x ys)) :prob 1 )))
(prule (low x (cons y ys)) (((ifLow (leq x y) x (cons y ys)) :prob 1 )))
(prule (leq (s x) (s y)) (((leq x y) :prob 1 )))
(prule (eq (s x) 0) ((false :prob 1 )))
(prule (eq 0 (s x)) ((false :prob 1 )))
(prule (qs (cons x xs)) (((qsHelp (pickR (cons x xs)) (cons x xs)) :prob 1 )))
(prule (remove x (cons y ys)) (((ifEq (eq x y) x y ys) :prob 1 )))
(prule (pickR (cons x nil)) ((x :prob 1 )))
(prule (pickR (cons x xs)) ((x :prob 1 ) ((pickR xs) :prob 1 )))
(prule (remove x nil) ((nil :prob 1 )))
(prule (ifLow true x (cons y ys)) (((low x ys) :prob 1 )))
(prule (high x nil) ((nil :prob 1 )))
(prule (app nil ys) ((ys :prob 1 )))
(prule (eq (s x) (s y)) (((eq x y) :prob 1 )))
(prule (eq 0 0) ((true :prob 1 )))
(prule (app (cons x xs) ys) (((cons x (app xs ys)) :prob 1 )))
(prule (qs nil) ((nil :prob 1 )))
(prule (high x (cons y ys)) (((ifHigh (leq x y) x (cons y ys)) :prob 1 )))
(prule (ifLow false x (cons y ys)) (((cons y (low x ys)) :prob 1 )))
(prule (ifHigh false x (cons y ys)) (((high x ys) :prob 1 )))
(prule (ifHigh true x (cons y ys)) (((cons y (high x ys)) :prob 1 )))
