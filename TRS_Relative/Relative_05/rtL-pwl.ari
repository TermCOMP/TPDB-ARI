; @origtpdbfilename ./TRS/relative/rtL-pwl.trs
; @xtcfilename "./TRS_Relative/Relative_05/rtL-pwl.xml"
(format TRS)
(fun new 1)
(fun old 1)
(fun bot 0)
(fun ok 1)
(fun check 1)
(fun top 1)
(fun queue 2)
(rule (top (ok (queue (old x) bot))) (top (check (queue x bot))))
(rule (top (ok (queue (new x) bot))) (top (check (queue x bot))))
(rule (top (ok (queue bot (old x)))) (top (check (queue bot x))))
(rule (top (ok (queue bot (new x)))) (top (check (queue bot x))))
(rule (top (ok (queue (old x) (old y)))) (top (check (queue x y))))
(rule (top (ok (queue (old x) (new y)))) (top (check (queue x y))))
(rule (top (ok (queue (new x) (old y)))) (top (check (queue x y))))
(rule (top (ok (queue (new x) (new y)))) (top (check (queue x y))))
(rule (top (ok (queue (old x) y))) (top (check (queue x y))) :cost 0)
(rule (top (ok (queue (new x) y))) (top (check (queue x y))) :cost 0)
(rule bot (new bot) :cost 0)
(rule (check (old x)) (ok (old x)) :cost 0)
(rule (check (new x)) (new (check x)) :cost 0)
(rule (check (queue x y)) (queue (check x) y) :cost 0)
(rule (check (queue x y)) (queue x (check y)) :cost 0)
(rule (old (ok x)) (ok (old x)) :cost 0)
(rule (new (ok x)) (ok (new x)) :cost 0)
(rule (queue (ok x) y) (ok (queue x y)) :cost 0)
(rule (queue x (ok y)) (ok (queue x y)) :cost 0)
