; @origtpdbfilename longhlnb.trs
; @xtcfilename "./TRS_Standard/Kaliszyk_19/longhlnb.xml"
(format TRS)
(fun s 2)
(fun real 0)
(fun i 2)
(fun fun 2)
(fun realu_div 0)
(fun realu_abs 0)
(fun realu_add 0)
(fun realu_mul 0)
(fun realu_sub 0)
(fun num 0)
(fun cart 2)
(fun n3 0)
(fun d_ 0)
(fun NUMERAL 0)
(fun BIT1 0)
(fun u_0 0)
(fun BIT0 0)
(fun realu_ofu_num 0)
(fun bool 0)
(fun measure 0)
(fun hull 0)
(fun convex 0)
(fun INSERT 0)
(fun EMPTY 0)
(fun det 0)
(fun COND 0)
(fun s_b_ 0)
(fun realu_lt 0)
(fun volu_rect 0)
(fun realu_pow 0)
(fun prod 2)
(fun distance 0)
(fun c_ 0)
(fun cos 0)
(fun angle 0)
(fun list 1)
(fun vector 0)
(fun CONS 0)
(fun NIL 0)
(fun cross 0)
(fun openu_interval 0)
(fun closedu_interval 0)
(fun realu_le 0)
(fun a_ 0)
(fun DIFF 0)
(fun frontier 0)
(fun b_s_ 0)
(fun sqrt 0)
(fun dot 0)
(fun vectoru_sub 0)
(fun vectoru_norm 0)
(fun sin 0)
(fun INTER 0)
(fun ball 0)
(fun vec 0)
(fun affu_gt 0)
(fun vectoru_neg 0)
(fun affine 0)
(fun r_ 0)
(fun realu_inv 0)
(fun vectoru_add 0)
(fun openu_segment 0)
(fun cball 0)
(fun closedu_segment 0)
(fun realu_neg 0)
(fun deltau_x 0)
(fun FINITE 0)
(fun support 0)
(fun iterate 0)
(fun neutral 0)
(fun n2 0)
(fun Im 0)
(fun Re 0)
(fun complex 0)
(fun csqrt 0)
(fun vectoru_angle 0)
(fun n1 0)
(fun matrixu_mul 0)
(fun rowvector 0)
(fun transp 0)
(fun columnvector 0)
(fun matrixu_vectoru_mul 0)
(fun pi 0)
(fun acs 0)
(fun arcV 0)
(fun o 0)
(fun swap 0)
(fun I0 0)
(fun scale 0)
(fun closure 0)
(fun dihV 0)
(fun UNION 0)
(fun rotate2d 0)
(fun finite_sum 2)
(fun pastecart 0)
(fun complexu_inv 0)
(fun HD 0)
(fun ZIP 0)
(fun TL 0)
(fun FST 0)
(fun SND 0)
(fun ASSOC 0)
(fun relativeu_interior 0)
(fun integral 0)
(fun l_a_ 0)
(fun SUC 0)
(fun vsum 0)
(fun o_o_ 0)
(fun content 0)
(fun IN 0)
(fun DELETE 0)
(fun p_ 0)
(fun binom 0)
(fun fstcart 0)
(fun sndcart 0)
(fun FILTER 0)
(fun azim 0)
(fun volu_frusttu_wedge 0)
(fun asn 0)
(fun dimindex 0)
(fun UNIV 0)
(fun interior 0)
(fun matrixu_add 0)
(fun r_r_ 0)
(fun matrixu_sub 0)
(fun complexu_mul 0)
(fun Cx 0)
(fun csin 0)
(fun complexu_div 0)
(fun ccos 0)
(fun l_ 0)
(fun LENGTH 0)
(fun EL 0)
(fun m_ 0)
(fun APPEND 0)
(fun ii 0)
(fun clog 0)
(fun catn 0)
(fun matrixu_neg 0)
(fun int 0)
(fun affu_dim 0)
(fun intu_add 0)
(fun intu_ofu_num 0)
(fun pathu_image 0)
(fun linepath 0)
(fun setdist 0)
(fun BUTLAST 0)
(fun INJP 0)
(fun INJN 0)
(fun INJA 0)
(fun INJF 0)
(fun ZCONSTR 0)
(fun realu_max 0)
(fun realu_min 0)
(fun conic 0)
(fun convexu_cone 0)
(fun frac 0)
(fun floor 0)
(fun IMAGE 0)
(fun span 0)
(fun rank 0)
(fun inverse 0)
(fun REPu_prod 0)
(fun ABSu_prod 0)
(fun mku_pair 0)
(fun volu_conicu_capu_wedge 0)
(fun realu_sgn 0)
(fun intu_lt 0)
(fun intu_neg 0)
(fun intu_sgn 0)
(fun RC 0)
(fun TC 0)
(fun SC 0)
(fun RSTC 0)
(fun dim 0)
(fun LAST 0)
(fun volu_ballu_wedge 0)
(fun affu_ge 0)
(fun ITER 0)
(fun SDIFF 0)
(fun mku_finiteu_sum 0)
(fun UNCURRY 0)
(fun UNIONS 0)
(fun normball 0)
(fun rconeu_gt 0)
(fun conicu_cap 0)
(fun complexu_pow 0)
(fun cacs 0)
(fun casn 0)
(fun ITLIST2 0)
(fun matrix 0)
(fun shiftpath 0)
(fun cone0 0)
(fun solidu_triangle 0)
(fun inside 0)
(fun outside 0)
(fun pathfinish 0)
(fun pathstart 0)
(fun FACT 0)
(fun subpath 0)
(fun reversepath 0)
(fun net 1)
(fun frechetu_derivative 0)
(fun jacobian 0)
(fun REVERSE 0)
(fun INTERS 0)
(fun mat 0)
(fun t_ 0)
(fun bernstein 0)
(fun product 0)
(fun nsum 0)
(fun sum0 0)
(fun cexp 0)
(fun slice 0)
(fun exp 0)
(fun drop 0)
(fun vectoru_matrixu_mul 0)
(fun atn 0)
(fun STC 0)
(fun RTC 0)
(fun RSC 0)
(fun EXP 0)
(fun NUMPAIR 0)
(fun setu_ofu_list 0)
(fun affsign 0)
(fun sgnu_ge 0)
(fun cone 0)
(fun sgnu_gt 0)
(fun FCONS 0)
(fun INV 0)
(fun finite_image 1)
(fun mku_cart 0)
(fun destu_cart 0)
(fun ITLIST 0)
(fun evenperm 0)
(fun sign 0)
(fun MAP2 0)
(fun cpow 0)
(fun closedu_realu_interval 0)
(fun closedu_realu_segment 0)
(fun DIV 0)
(fun connectedu_component 0)
(fun pathu_component 0)
(fun unwinding 0)
(fun midpoint 0)
(fun option 1)
(fun lifted 0)
(fun NONE 0)
(fun lift 0)
(fun columns 0)
(fun rows 0)
(fun indicator 0)
(fun NUMSUM 0)
(fun hreal 0)
(fun hrealu_add 0)
(fun hrealu_mul 0)
(fun trealu_mul 0)
(fun cnj 0)
(fun Arg 0)
(fun dropout 0)
(fun basis 0)
(fun infnorm 0)
(fun REPLICATE 0)
(fun finiteu_index 0)
(fun frustum 0)
(fun frustt 0)
(fun sum 2)
(fun OUTR 0)
(fun INR 0)
(fun topology 1)
(fun subtopology 0)
(fun topspace 0)
(fun m_m_m_g_ 0)
(fun m_m_g_ 0)
(fun within 0)
(fun at 0)
(fun OUTL 0)
(fun INL 0)
(fun p_p_ 0)
(fun MAP 0)
(fun mku_net 0)
(fun netord 0)
(fun euclidean 0)
(fun CHOICE 0)
(fun REST 0)
(fun rpow 0)
(fun nadd 0)
(fun naddu_eq 0)
(fun naddu_ofu_num 0)
(fun mku_nadd 0)
(fun naddu_rinv 0)
(fun naddu_inv 0)
(fun openu_realu_segment 0)
(fun openu_realu_interval 0)
(fun intu_pow 0)
(fun diameter 0)
(fun LET 0)
(fun trace 0)
(fun destu_finiteu_sum 0)
(fun conv0 0)
(fun volu_conv 0)
(fun tan 0)
(fun EVEN 0)
(fun topology0 0)
(fun openu_in 0)
(fun netlimit 0)
(fun components 0)
(fun from 0)
(fun subspace 0)
(fun closed 0)
(fun vectoru_variation 0)
(fun realu_variation 0)
(fun intu_le 0)
(fun intu_abs 0)
(fun rconesgn 0)
(fun rconeu_eq 0)
(fun realu_ge 0)
(fun rconeu_ge 0)
(fun realu_gt 0)
(fun PRE 0)
(fun realu_integral 0)
(fun ellipsoid 0)
(fun sgnu_lt 0)
(fun affu_lt 0)
(fun sgnu_le 0)
(fun affu_le 0)
(fun dist 0)
(fun mku_hreal 0)
(fun naddu_add 0)
(fun naddu_mul 0)
(fun intu_mul 0)
(fun numu_ofu_int 0)
(fun intu_gcd 0)
(fun numu_gcd 0)
(fun realu_measure 0)
(fun CARD 0)
(fun destu_finiteu_image 0)
(fun mku_real 0)
(fun trealu_eq 0)
(fun trealu_add 0)
(fun intu_sub 0)
(fun MOD 0)
(fun recspace 1)
(fun u_mku_rec 0)
(fun ZBOT 0)
(fun BOTTOM 0)
(fun cproduct 0)
(fun hrealu_ofu_num 0)
(fun inf 0)
(fun sup 0)
(fun intu_ofu_real 0)
(fun realu_ofu_int 0)
(fun intu_max 0)
(fun intu_min 0)
(fun MAX 0)
(fun MIN 0)
(fun higheru_complexu_derivative 0)
(fun complexu_derivative 0)
(fun GSPEC 0)
(fun open 0)
(fun LETu_END 0)
(fun root 0)
(fun trealu_ofu_num 0)
(fun sums 0)
(fun realu_sums 0)
(fun reduced 0)
(fun DECIMAL 0)
(fun ctan 0)
(fun log 0)
(fun ind0 0)
(fun mku_num 0)
(fun INDu_SUC 0)
(fun destu_num 0)
(fun rect 0)
(fun trealu_neg 0)
(fun euclideanreal 0)
(fun hrealu_inv 0)
(fun atreal 0)
(fun higheru_realu_derivative 0)
(fun destu_nadd 0)
(fun pad2d3d 0)
(fun oneu_ABS 0)
(fun oneu_REP 0)
(fun INDu_0 0)
(fun realu_open 0)
(fun blabla 0)
(fun blublu 0)
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) d))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) d))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) d))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) d))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) d))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) d))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (fun (fun (cart real n3) bool) bool) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) hull) (s (fun (fun (cart real n3) bool) bool) convex))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) a))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) b))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) c))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) d))) (s (fun (cart real n3) bool) EMPTY))))))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) (i (s (fun num (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun num (cart real n3))) d_) (s (cart (cart real n3) n3) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) A0))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real Q733856) (fun num real)) d_) (s (cart real Q733856) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real Q733860) (fun num real)) d_) (s (cart real Q733860) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real Q733856) (fun num real)) d_) (s (cart real Q733856) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real Q733860) (fun num real)) d_) (s (cart real Q733860) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real Q733856) (fun num real)) d_) (s (cart real Q733856) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real Q733860) (fun num real)) d_) (s (cart real Q733860) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real Q733860) (fun num real)) d_) (s (cart real Q733860) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real Q733856) (fun num real)) d_) (s (cart real Q733856) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real Q733860) (fun num real)) d_) (s (cart real Q733860) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real Q733856) (fun num real)) d_) (s (cart real Q733856) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real Q733860) (fun num real)) d_) (s (cart real Q733860) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real Q733856) (fun num real)) d_) (s (cart real Q733856) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (cart real Q733860) real) (i (s (fun (cart real Q733856) (fun (cart real Q733860) real)) volu_rect) (s (cart real Q733856) a))) (s (cart real Q733860) b))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real N) (cart real N)) real) distance) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) A0))) (s (cart real N) B0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real N) (cart real N)) real) distance) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) A0))) (s (cart real N) C0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (prod (cart real N) (cart real N)) real) distance) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) A0))) (s (cart real N) B0))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (prod (cart real N) (cart real N)) real) distance) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) A0))) (s (cart real N) C0))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (prod (cart real N) (prod (cart real N) (cart real N))) real) angle) (s (prod (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (prod (cart real N) (cart real N)) (prod (cart real N) (prod (cart real N) (cart real N)))) (i (s (fun (cart real N) (fun (prod (cart real N) (cart real N)) (prod (cart real N) (prod (cart real N) (cart real N))))) c_) (s (cart real N) B0))) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) A0))) (s (cart real N) C0))))))))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real N) (cart real N)) real) distance) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) B0))) (s (cart real N) C0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n3) (i (s (fun (list real) (cart real n3)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (list real) NIL))))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) a))) (s (cart real n3) b))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (prod (cart real n3) (cart real n3)) (fun (cart real n3) bool)) openu_interval) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) a))) (s (cart real n3) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (list (prod (cart real n3) (cart real n3))) (fun (cart real n3) bool)) closedu_interval) (s (list (prod (cart real n3) (cart real n3))) (i (s (fun (list (prod (cart real n3) (cart real n3))) (list (prod (cart real n3) (cart real n3)))) (i (s (fun (prod (cart real n3) (cart real n3)) (fun (list (prod (cart real n3) (cart real n3))) (list (prod (cart real n3) (cart real n3))))) CONS) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) a))) (s (cart real n3) b))))) (s (list (prod (cart real n3) (cart real n3))) NIL))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (prod (cart real n3) (cart real n3)) (fun (cart real n3) bool)) openu_interval) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) a))) (s (cart real n3) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (list (prod (cart real n3) (cart real n3))) (fun (cart real n3) bool)) closedu_interval) (s (list (prod (cart real n3) (cart real n3))) (i (s (fun (list (prod (cart real n3) (cart real n3))) (list (prod (cart real n3) (cart real n3)))) (i (s (fun (prod (cart real n3) (cart real n3)) (fun (list (prod (cart real n3) (cart real n3))) (list (prod (cart real n3) (cart real n3))))) CONS) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) a))) (s (cart real n3) b))))) (s (list (prod (cart real n3) (cart real n3))) NIL))))))))
(rule (s (fun (cart real Q211366) bool) (i (s (fun (fun (cart real Q211366) bool) (fun (cart real Q211366) bool)) (i (s (fun (fun (cart real Q211366) bool) (fun (fun (cart real Q211366) bool) (fun (cart real Q211366) bool))) (i (s (fun bool (fun (fun (cart real Q211366) bool) (fun (fun (cart real Q211366) bool) (fun (cart real Q211366) bool)))) COND) (s bool (i (s (fun (fun (cart real Q211366) bool) bool) (i (s (fun (fun (cart real Q211366) bool) (fun (fun (cart real Q211366) bool) bool)) a_) (s (fun (cart real Q211366) bool) (i (s (fun (prod (cart real Q211366) (cart real Q211366)) (fun (cart real Q211366) bool)) openu_interval) (s (prod (cart real Q211366) (cart real Q211366)) (i (s (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366))) (i (s (fun (cart real Q211366) (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366)))) c_) (s (cart real Q211366) a))) (s (cart real Q211366) b))))))) (s (fun (cart real Q211366) bool) EMPTY))))) (s (fun (cart real Q211366) bool) EMPTY))) (s (fun (cart real Q211366) bool) (i (s (fun (fun (cart real Q211366) bool) (fun (cart real Q211366) bool)) (i (s (fun (fun (cart real Q211366) bool) (fun (fun (cart real Q211366) bool) (fun (cart real Q211366) bool))) DIFF) (s (fun (cart real Q211366) bool) (i (s (fun (list (prod (cart real Q211366) (cart real Q211366))) (fun (cart real Q211366) bool)) closedu_interval) (s (list (prod (cart real Q211366) (cart real Q211366))) (i (s (fun (list (prod (cart real Q211366) (cart real Q211366))) (list (prod (cart real Q211366) (cart real Q211366)))) (i (s (fun (prod (cart real Q211366) (cart real Q211366)) (fun (list (prod (cart real Q211366) (cart real Q211366))) (list (prod (cart real Q211366) (cart real Q211366))))) CONS) (s (prod (cart real Q211366) (cart real Q211366)) (i (s (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366))) (i (s (fun (cart real Q211366) (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366)))) c_) (s (cart real Q211366) a))) (s (cart real Q211366) b))))) (s (list (prod (cart real Q211366) (cart real Q211366))) NIL))))))) (s (fun (cart real Q211366) bool) (i (s (fun (prod (cart real Q211366) (cart real Q211366)) (fun (cart real Q211366) bool)) openu_interval) (s (prod (cart real Q211366) (cart real Q211366)) (i (s (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366))) (i (s (fun (cart real Q211366) (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366)))) c_) (s (cart real Q211366) a))) (s (cart real Q211366) b))))))))) (s (fun (cart real Q211366) bool) (i (s (fun (fun (cart real Q211366) bool) (fun (cart real Q211366) bool)) frontier) (s (fun (cart real Q211366) bool) (i (s (fun (prod (cart real Q211366) (cart real Q211366)) (fun (cart real Q211366) bool)) openu_interval) (s (prod (cart real Q211366) (cart real Q211366)) (i (s (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366))) (i (s (fun (cart real Q211366) (fun (cart real Q211366) (prod (cart real Q211366) (cart real Q211366)))) c_) (s (cart real Q211366) a))) (s (cart real Q211366) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real Q693719) bool) (i (s (fun (cart real Q693719) (fun (cart real Q693719) bool)) a_) (s (cart real Q693719) a))) (s (cart real Q693719) b))))) (s bool (i (s (fun (cart real Q693719) bool) (i (s (fun (cart real Q693719) (fun (cart real Q693719) bool)) a_) (s (cart real Q693719) c))) (s (cart real Q693719) b))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real Q693719) real) (i (s (fun (cart real Q693719) (fun (cart real Q693719) real)) dot) (s (cart real Q693719) (i (s (fun (cart real Q693719) (cart real Q693719)) (i (s (fun (cart real Q693719) (fun (cart real Q693719) (cart real Q693719))) vectoru_sub) (s (cart real Q693719) a))) (s (cart real Q693719) b))))) (s (cart real Q693719) (i (s (fun (cart real Q693719) (cart real Q693719)) (i (s (fun (cart real Q693719) (fun (cart real Q693719) (cart real Q693719))) vectoru_sub) (s (cart real Q693719) c))) (s (cart real Q693719) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real Q693719) real) vectoru_norm) (s (cart real Q693719) (i (s (fun (cart real Q693719) (cart real Q693719)) (i (s (fun (cart real Q693719) (fun (cart real Q693719) (cart real Q693719))) vectoru_sub) (s (cart real Q693719) a))) (s (cart real Q693719) b))))))) (s real (i (s (fun (cart real Q693719) real) vectoru_norm) (s (cart real Q693719) (i (s (fun (cart real Q693719) (cart real Q693719)) (i (s (fun (cart real Q693719) (fun (cart real Q693719) (cart real Q693719))) vectoru_sub) (s (cart real Q693719) c))) (s (cart real Q693719) b))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun (prod (cart real Q693719) (prod (cart real Q693719) (cart real Q693719))) real) angle) (s (prod (cart real Q693719) (prod (cart real Q693719) (cart real Q693719))) (i (s (fun (prod (cart real Q693719) (cart real Q693719)) (prod (cart real Q693719) (prod (cart real Q693719) (cart real Q693719)))) (i (s (fun (cart real Q693719) (fun (prod (cart real Q693719) (cart real Q693719)) (prod (cart real Q693719) (prod (cart real Q693719) (cart real Q693719))))) c_) (s (cart real Q693719) a))) (s (prod (cart real Q693719) (cart real Q693719)) (i (s (fun (cart real Q693719) (prod (cart real Q693719) (cart real Q693719))) (i (s (fun (cart real Q693719) (fun (cart real Q693719) (prod (cart real Q693719) (cart real Q693719)))) c_) (s (cart real Q693719) b))) (s (cart real Q693719) c))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real Q693810) bool) (i (s (fun (cart real Q693810) (fun (cart real Q693810) bool)) a_) (s (cart real Q693810) a))) (s (cart real Q693810) b))))) (s bool (i (s (fun (cart real Q693810) bool) (i (s (fun (cart real Q693810) (fun (cart real Q693810) bool)) a_) (s (cart real Q693810) c))) (s (cart real Q693810) b))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real Q693810) real) (i (s (fun (cart real Q693810) (fun (cart real Q693810) real)) dot) (s (cart real Q693810) (i (s (fun (cart real Q693810) (cart real Q693810)) (i (s (fun (cart real Q693810) (fun (cart real Q693810) (cart real Q693810))) vectoru_sub) (s (cart real Q693810) a))) (s (cart real Q693810) b))))) (s (cart real Q693810) (i (s (fun (cart real Q693810) (cart real Q693810)) (i (s (fun (cart real Q693810) (fun (cart real Q693810) (cart real Q693810))) vectoru_sub) (s (cart real Q693810) c))) (s (cart real Q693810) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real Q693810) real) vectoru_norm) (s (cart real Q693810) (i (s (fun (cart real Q693810) (cart real Q693810)) (i (s (fun (cart real Q693810) (fun (cart real Q693810) (cart real Q693810))) vectoru_sub) (s (cart real Q693810) a))) (s (cart real Q693810) b))))))) (s real (i (s (fun (cart real Q693810) real) vectoru_norm) (s (cart real Q693810) (i (s (fun (cart real Q693810) (cart real Q693810)) (i (s (fun (cart real Q693810) (fun (cart real Q693810) (cart real Q693810))) vectoru_sub) (s (cart real Q693810) c))) (s (cart real Q693810) b))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) sin) (s real (i (s (fun (prod (cart real Q693810) (prod (cart real Q693810) (cart real Q693810))) real) angle) (s (prod (cart real Q693810) (prod (cart real Q693810) (cart real Q693810))) (i (s (fun (prod (cart real Q693810) (cart real Q693810)) (prod (cart real Q693810) (prod (cart real Q693810) (cart real Q693810)))) (i (s (fun (cart real Q693810) (fun (prod (cart real Q693810) (cart real Q693810)) (prod (cart real Q693810) (prod (cart real Q693810) (cart real Q693810))))) c_) (s (cart real Q693810) a))) (s (prod (cart real Q693810) (cart real Q693810)) (i (s (fun (cart real Q693810) (prod (cart real Q693810) (cart real Q693810))) (i (s (fun (cart real Q693810) (fun (cart real Q693810) (prod (cart real Q693810) (cart real Q693810)))) c_) (s (cart real Q693810) b))) (s (cart real Q693810) c))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s real (i (s (fun (fun (cart real N) bool) real) measure) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) real) (fun (cart real N) bool)) ball) (s (prod (cart real N) real) (i (s (fun real (prod (cart real N) real)) (i (s (fun (cart real N) (fun real (prod (cart real N) real))) c_) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real r))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) affu_gt) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real N) bool) EMPTY))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) v1))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) v2))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) v3))))) (s (fun (cart real N) bool) EMPTY))))))))))))) (s real (i (s (fun (fun (cart real N) bool) real) measure) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) real) (fun (cart real N) bool)) ball) (s (prod (cart real N) real) (i (s (fun real (prod (cart real N) real)) (i (s (fun (cart real N) (fun real (prod (cart real N) real))) c_) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real r))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) affu_gt) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real N) bool) EMPTY))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) v1))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) v2))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) v3))) (s (fun (cart real N) bool) EMPTY))))))))))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) b))) (s (fun (cart real N) bool) EMPTY))))))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) real) (fun (cart real N) bool)) ball) (s (prod (cart real N) real) (i (s (fun real (prod (cart real N) real)) (i (s (fun (cart real N) (fun real (prod (cart real N) real))) c_) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real (i (s (fun real real) realu_inv) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) a))) (s (cart real N) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) b))) (s (cart real N) a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) b))) (s (fun (cart real N) bool) EMPTY))))))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) real) (fun (cart real N) bool)) cball) (s (prod (cart real N) real) (i (s (fun real (prod (cart real N) real)) (i (s (fun (cart real N) (fun real (prod (cart real N) real))) c_) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real (i (s (fun real real) realu_inv) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) a))) (s (cart real N) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) b))) (s (cart real N) a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_segment) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x1))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x4))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) realu_neg) (s real x1))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x2))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x3))) (s real x4))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x5))) (s real x6))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x2))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x5))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x1))) (s real x2))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x3))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x4))) (s real x5))))) (s real x6))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x3))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x6))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x1))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x2))) (s real x3))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x4))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x5))) (s real x6))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x2))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x3))) (s real x4))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x1))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x3))) (s real x5))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x1))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x2))) (s real x6))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x4))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x5))) (s real x6))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun real (fun real (fun real real))) (i (s (fun real (fun real (fun real (fun real real)))) (i (s (fun real (fun real (fun real (fun real (fun real real))))) (i (s (fun real (fun real (fun real (fun real (fun real (fun real real)))))) deltau_x) (s real x1))) (s real x2))) (s real x3))) (s real x4))) (s real x5))) (s real x6))))
(rule (s Q64549 (i (s (fun Q64549 Q64549) (i (s (fun Q64549 (fun Q64549 Q64549)) (i (s (fun bool (fun Q64549 (fun Q64549 Q64549))) COND) (s bool (i (s (fun (fun Q64555 bool) bool) FINITE) (s (fun Q64555 bool) (i (s (fun (fun Q64555 bool) (fun Q64555 bool)) (i (s (fun (fun Q64555 Q64549) (fun (fun Q64555 bool) (fun Q64555 bool))) (i (s (fun (fun Q64549 (fun Q64549 Q64549)) (fun (fun Q64555 Q64549) (fun (fun Q64555 bool) (fun Q64555 bool)))) support) (s (fun Q64549 (fun Q64549 Q64549)) op))) (s (fun Q64555 Q64549) f))) (s (fun Q64555 bool) s0))))))) (s Q64549 (i (s (fun (fun Q64555 Q64549) Q64549) (i (s (fun (fun Q64555 bool) (fun (fun Q64555 Q64549) Q64549)) (i (s (fun (fun Q64549 (fun Q64549 Q64549)) (fun (fun Q64555 bool) (fun (fun Q64555 Q64549) Q64549))) iterate) (s (fun Q64549 (fun Q64549 Q64549)) op))) (s (fun Q64555 bool) (i (s (fun (fun Q64555 bool) (fun Q64555 bool)) (i (s (fun (fun Q64555 Q64549) (fun (fun Q64555 bool) (fun Q64555 bool))) (i (s (fun (fun Q64549 (fun Q64549 Q64549)) (fun (fun Q64555 Q64549) (fun (fun Q64555 bool) (fun Q64555 bool)))) support) (s (fun Q64549 (fun Q64549 Q64549)) op))) (s (fun Q64555 Q64549) f))) (s (fun Q64555 bool) s0))))) (s (fun Q64555 Q64549) f))))) (s Q64549 (i (s (fun (fun Q64549 (fun Q64549 Q64549)) Q64549) neutral) (s (fun Q64549 (fun Q64549 Q64549)) op))))) (s Q64549 (i (s (fun (fun Q64555 Q64549) Q64549) (i (s (fun (fun Q64555 bool) (fun (fun Q64555 Q64549) Q64549)) (i (s (fun (fun Q64549 (fun Q64549 Q64549)) (fun (fun Q64555 bool) (fun (fun Q64555 Q64549) Q64549))) iterate) (s (fun Q64549 (fun Q64549 Q64549)) op))) (s (fun Q64555 bool) s0))) (s (fun Q64555 Q64549) f))))
(rule (s (fun Q64233 bool) (i (s (fun (fun Q64233 bool) (fun Q64233 bool)) (i (s (fun (fun Q64233 bool) (fun (fun Q64233 bool) (fun Q64233 bool))) (i (s (fun bool (fun (fun Q64233 bool) (fun (fun Q64233 bool) (fun Q64233 bool)))) COND) (s bool (i (s (fun Q64418 bool) (i (s (fun Q64418 (fun Q64418 bool)) a_) (s Q64418 (i (s (fun Q64233 Q64418) f) (s Q64233 x))))) (s Q64418 (i (s (fun (fun Q64418 (fun Q64418 Q64418)) Q64418) neutral) (s (fun Q64418 (fun Q64418 Q64418)) op))))))) (s (fun Q64233 bool) (i (s (fun (fun Q64233 bool) (fun Q64233 bool)) (i (s (fun (fun Q64233 Q64418) (fun (fun Q64233 bool) (fun Q64233 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64233 Q64418) (fun (fun Q64233 bool) (fun Q64233 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64233 Q64418) f))) (s (fun Q64233 bool) s0))))) (s (fun Q64233 bool) (i (s (fun (fun Q64233 bool) (fun Q64233 bool)) (i (s (fun Q64233 (fun (fun Q64233 bool) (fun Q64233 bool))) INSERT) (s Q64233 x))) (s (fun Q64233 bool) (i (s (fun (fun Q64233 bool) (fun Q64233 bool)) (i (s (fun (fun Q64233 Q64418) (fun (fun Q64233 bool) (fun Q64233 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64233 Q64418) (fun (fun Q64233 bool) (fun Q64233 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64233 Q64418) f))) (s (fun Q64233 bool) s0))))))) (s (fun Q64233 bool) (i (s (fun (fun Q64233 bool) (fun Q64233 bool)) (i (s (fun (fun Q64233 Q64418) (fun (fun Q64233 bool) (fun Q64233 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64233 Q64418) (fun (fun Q64233 bool) (fun Q64233 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64233 Q64418) f))) (s (fun Q64233 bool) (i (s (fun (fun Q64233 bool) (fun Q64233 bool)) (i (s (fun Q64233 (fun (fun Q64233 bool) (fun Q64233 bool))) INSERT) (s Q64233 x))) (s (fun Q64233 bool) s0))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) (i (s (fun bool (fun (cart real n2) (fun (cart real n2) (cart real n2)))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) a_) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) (i (s (fun bool (fun (cart real n2) (fun (cart real n2) (cart real n2)))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) sqrt) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))))))))))) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) z))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun real (fun real (fun real real))) (i (s (fun real (fun real (fun real (fun real real)))) (i (s (fun real (fun real (fun real (fun real (fun real real))))) (i (s (fun real (fun real (fun real (fun real (fun real (fun real real)))))) deltau_x) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real n3) (cart real n3)) real) distance) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) x1))) (s (cart real n3) x2))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real n3) (cart real n3)) real) distance) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) x1))) (s (cart real n3) x3))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real n3) (cart real n3)) real) distance) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) x1))) (s (cart real n3) x4))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real n3) (cart real n3)) real) distance) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) x3))) (s (cart real n3) x4))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real n3) (cart real n3)) real) distance) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) x2))) (s (cart real n3) x4))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (prod (cart real n3) (cart real n3)) real) distance) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) x2))) (s (cart real n3) x3))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (fun (fun (cart real n3) bool) bool) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) hull) (s (fun (fun (cart real n3) bool) bool) convex))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) x1))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) x2))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) x3))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) x4))) (s (fun (cart real n3) bool) EMPTY))))))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real Q693631) bool) (i (s (fun (cart real Q693631) (fun (cart real Q693631) bool)) a_) (s (cart real Q693631) a))) (s (cart real Q693631) b))))) (s bool (i (s (fun (cart real Q693631) bool) (i (s (fun (cart real Q693631) (fun (cart real Q693631) bool)) a_) (s (cart real Q693631) c))) (s (cart real Q693631) b))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real Q693631) real) (i (s (fun (cart real Q693631) (fun (cart real Q693631) real)) dot) (s (cart real Q693631) (i (s (fun (cart real Q693631) (cart real Q693631)) (i (s (fun (cart real Q693631) (fun (cart real Q693631) (cart real Q693631))) vectoru_sub) (s (cart real Q693631) a))) (s (cart real Q693631) b))))) (s (cart real Q693631) (i (s (fun (cart real Q693631) (cart real Q693631)) (i (s (fun (cart real Q693631) (fun (cart real Q693631) (cart real Q693631))) vectoru_sub) (s (cart real Q693631) c))) (s (cart real Q693631) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real Q693631) real) vectoru_norm) (s (cart real Q693631) (i (s (fun (cart real Q693631) (cart real Q693631)) (i (s (fun (cart real Q693631) (fun (cart real Q693631) (cart real Q693631))) vectoru_sub) (s (cart real Q693631) a))) (s (cart real Q693631) b))))))) (s real (i (s (fun (cart real Q693631) real) vectoru_norm) (s (cart real Q693631) (i (s (fun (cart real Q693631) (cart real Q693631)) (i (s (fun (cart real Q693631) (fun (cart real Q693631) (cart real Q693631))) vectoru_sub) (s (cart real Q693631) c))) (s (cart real Q693631) b))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (prod (cart real Q693631) (prod (cart real Q693631) (cart real Q693631))) real) angle) (s (prod (cart real Q693631) (prod (cart real Q693631) (cart real Q693631))) (i (s (fun (prod (cart real Q693631) (cart real Q693631)) (prod (cart real Q693631) (prod (cart real Q693631) (cart real Q693631)))) (i (s (fun (cart real Q693631) (fun (prod (cart real Q693631) (cart real Q693631)) (prod (cart real Q693631) (prod (cart real Q693631) (cart real Q693631))))) c_) (s (cart real Q693631) a))) (s (prod (cart real Q693631) (cart real Q693631)) (i (s (fun (cart real Q693631) (prod (cart real Q693631) (cart real Q693631))) (i (s (fun (cart real Q693631) (fun (cart real Q693631) (prod (cart real Q693631) (cart real Q693631)))) c_) (s (cart real Q693631) b))) (s (cart real Q693631) c))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x3))) (s (list (cart real n3)) NIL))))))))))))) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y3))) (s (list (cart real n3)) NIL))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x3))) (s (list (cart real n3)) NIL))))))))))))) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y3))) (s (list (cart real n3)) NIL))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y3))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x3))) (s (list (cart real n3)) NIL))))))))))))) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x1))) (s (list (cart real n3)) NIL))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x3))) (s (list (cart real n3)) NIL))))))))))))) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y1))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y2))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y3))) (s (list (cart real n3)) NIL))))))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) c))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (fun (cart real n2) bool) real) measure) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (fun (cart real n2) bool) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) hull) (s (fun (fun (cart real n2) bool) bool) convex))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) a))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) b))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) c))) (s (fun (cart real n2) bool) EMPTY))))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (prod (cart real Q692608) (cart real Q692608)) real) distance) (s (prod (cart real Q692608) (cart real Q692608)) (i (s (fun (cart real Q692608) (prod (cart real Q692608) (cart real Q692608))) (i (s (fun (cart real Q692608) (fun (cart real Q692608) (prod (cart real Q692608) (cart real Q692608)))) c_) (s (cart real Q692608) A0))) (s (cart real Q692608) C0))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (prod (cart real Q692608) (cart real Q692608)) real) distance) (s (prod (cart real Q692608) (cart real Q692608)) (i (s (fun (cart real Q692608) (prod (cart real Q692608) (cart real Q692608))) (i (s (fun (cart real Q692608) (fun (cart real Q692608) (prod (cart real Q692608) (cart real Q692608)))) c_) (s (cart real Q692608) B0))) (s (cart real Q692608) C0))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (prod (cart real Q692608) (prod (cart real Q692608) (cart real Q692608))) real) angle) (s (prod (cart real Q692608) (prod (cart real Q692608) (cart real Q692608))) (i (s (fun (prod (cart real Q692608) (cart real Q692608)) (prod (cart real Q692608) (prod (cart real Q692608) (cart real Q692608)))) (i (s (fun (cart real Q692608) (fun (prod (cart real Q692608) (cart real Q692608)) (prod (cart real Q692608) (prod (cart real Q692608) (cart real Q692608))))) c_) (s (cart real Q692608) A0))) (s (prod (cart real Q692608) (cart real Q692608)) (i (s (fun (cart real Q692608) (prod (cart real Q692608) (cart real Q692608))) (i (s (fun (cart real Q692608) (fun (cart real Q692608) (prod (cart real Q692608) (cart real Q692608)))) c_) (s (cart real Q692608) C0))) (s (cart real Q692608) B0))))))))))))) (s real (i (s (fun (cart real Q692608) real) (i (s (fun (cart real Q692608) (fun (cart real Q692608) real)) dot) (s (cart real Q692608) (i (s (fun (cart real Q692608) (cart real Q692608)) (i (s (fun (cart real Q692608) (fun (cart real Q692608) (cart real Q692608))) vectoru_sub) (s (cart real Q692608) A0))) (s (cart real Q692608) C0))))) (s (cart real Q692608) (i (s (fun (cart real Q692608) (cart real Q692608)) (i (s (fun (cart real Q692608) (fun (cart real Q692608) (cart real Q692608))) vectoru_sub) (s (cart real Q692608) B0))) (s (cart real Q692608) C0))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) x))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) y))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) x))))) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) y))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n2) bool) real) measure) (s (fun (cart real n2) bool) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (cart real n2) bool)) openu_interval) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n2) bool) real) measure) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_interval) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n2) bool) real) measure) (s (fun (cart real n2) bool) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (cart real n2) bool)) openu_interval) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) s_b_) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) b))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) a))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n2) bool) real) measure) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_interval) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) x))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) y))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) x))))) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) y))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) (i (s (fun num (cart real n1)) (i (s (fun (cart (cart real n1) n1) (fun num (cart real n1))) d_) (s (cart (cart real n1) n1) (i (s (fun (cart (cart real n1) N) (cart (cart real n1) n1)) (i (s (fun (cart (cart real N) n1) (fun (cart (cart real n1) N) (cart (cart real n1) n1))) matrixu_mul) (s (cart (cart real N) n1) (i (s (fun (cart real N) (cart (cart real N) n1)) rowvector) (s (cart real N) x))))) (s (cart (cart real n1) N) (i (s (fun (cart (cart real n1) N) (cart (cart real n1) N)) (i (s (fun (cart (cart real N) N) (fun (cart (cart real n1) N) (cart (cart real n1) N))) matrixu_mul) (s (cart (cart real N) N) (i (s (fun (cart (cart real N) N) (cart (cart real N) N)) (i (s (fun (cart (cart real N) N) (fun (cart (cart real N) N) (cart (cart real N) N))) matrixu_mul) (s (cart (cart real N) N) (i (s (fun (cart (cart real N) N) (cart (cart real N) N)) transp) (s (cart (cart real N) N) A0))))) (s (cart (cart real N) N) B0))))) (s (cart (cart real n1) N) (i (s (fun (cart real N) (cart (cart real n1) N)) columnvector) (s (cart real N) y))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart (cart real N) N) (fun (cart real N) (cart real N))) matrixu_vectoru_mul) (s (cart (cart real N) N) A0))) (s (cart real N) x))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart (cart real N) N) (fun (cart real N) (cart real N))) matrixu_vectoru_mul) (s (cart (cart real N) N) B0))) (s (cart real N) y))))))
(rule (s (fun (cart real Q215346) bool) (i (s (fun (fun (cart real Q215346) bool) (fun (cart real Q215346) bool)) (i (s (fun (fun (cart real Q215346) bool) (fun (fun (cart real Q215346) bool) (fun (cart real Q215346) bool))) DIFF) (s (fun (cart real Q215346) bool) (i (s (fun (list (prod (cart real Q215346) (cart real Q215346))) (fun (cart real Q215346) bool)) closedu_segment) (s (list (prod (cart real Q215346) (cart real Q215346))) (i (s (fun (list (prod (cart real Q215346) (cart real Q215346))) (list (prod (cart real Q215346) (cart real Q215346)))) (i (s (fun (prod (cart real Q215346) (cart real Q215346)) (fun (list (prod (cart real Q215346) (cart real Q215346))) (list (prod (cart real Q215346) (cart real Q215346))))) CONS) (s (prod (cart real Q215346) (cart real Q215346)) (i (s (fun (cart real Q215346) (prod (cart real Q215346) (cart real Q215346))) (i (s (fun (cart real Q215346) (fun (cart real Q215346) (prod (cart real Q215346) (cart real Q215346)))) c_) (s (cart real Q215346) a))) (s (cart real Q215346) b))))) (s (list (prod (cart real Q215346) (cart real Q215346))) NIL))))))) (s (fun (cart real Q215346) bool) (i (s (fun (fun (cart real Q215346) bool) (fun (cart real Q215346) bool)) (i (s (fun (cart real Q215346) (fun (fun (cart real Q215346) bool) (fun (cart real Q215346) bool))) INSERT) (s (cart real Q215346) a))) (s (fun (cart real Q215346) bool) (i (s (fun (fun (cart real Q215346) bool) (fun (cart real Q215346) bool)) (i (s (fun (cart real Q215346) (fun (fun (cart real Q215346) bool) (fun (cart real Q215346) bool))) INSERT) (s (cart real Q215346) b))) (s (fun (cart real Q215346) bool) EMPTY))))))) (s (fun (cart real Q215346) bool) (i (s (fun (prod (cart real Q215346) (cart real Q215346)) (fun (cart real Q215346) bool)) openu_segment) (s (prod (cart real Q215346) (cart real Q215346)) (i (s (fun (cart real Q215346) (prod (cart real Q215346) (cart real Q215346))) (i (s (fun (cart real Q215346) (fun (cart real Q215346) (prod (cart real Q215346) (cart real Q215346)))) c_) (s (cart real Q215346) a))) (s (cart real Q215346) b))))))
(rule (s (fun (cart real Q211301) bool) (i (s (fun (fun (cart real Q211301) bool) (fun (cart real Q211301) bool)) (i (s (fun (fun (cart real Q211301) bool) (fun (fun (cart real Q211301) bool) (fun (cart real Q211301) bool))) DIFF) (s (fun (cart real Q211301) bool) (i (s (fun (list (prod (cart real Q211301) (cart real Q211301))) (fun (cart real Q211301) bool)) closedu_interval) (s (list (prod (cart real Q211301) (cart real Q211301))) (i (s (fun (list (prod (cart real Q211301) (cart real Q211301))) (list (prod (cart real Q211301) (cart real Q211301)))) (i (s (fun (prod (cart real Q211301) (cart real Q211301)) (fun (list (prod (cart real Q211301) (cart real Q211301))) (list (prod (cart real Q211301) (cart real Q211301))))) CONS) (s (prod (cart real Q211301) (cart real Q211301)) (i (s (fun (cart real Q211301) (prod (cart real Q211301) (cart real Q211301))) (i (s (fun (cart real Q211301) (fun (cart real Q211301) (prod (cart real Q211301) (cart real Q211301)))) c_) (s (cart real Q211301) a))) (s (cart real Q211301) b))))) (s (list (prod (cart real Q211301) (cart real Q211301))) NIL))))))) (s (fun (cart real Q211301) bool) (i (s (fun (prod (cart real Q211301) (cart real Q211301)) (fun (cart real Q211301) bool)) openu_interval) (s (prod (cart real Q211301) (cart real Q211301)) (i (s (fun (cart real Q211301) (prod (cart real Q211301) (cart real Q211301))) (i (s (fun (cart real Q211301) (fun (cart real Q211301) (prod (cart real Q211301) (cart real Q211301)))) c_) (s (cart real Q211301) a))) (s (cart real Q211301) b))))))) (s (fun (cart real Q211301) bool) (i (s (fun (fun (cart real Q211301) bool) (fun (cart real Q211301) bool)) frontier) (s (fun (cart real Q211301) bool) (i (s (fun (list (prod (cart real Q211301) (cart real Q211301))) (fun (cart real Q211301) bool)) closedu_interval) (s (list (prod (cart real Q211301) (cart real Q211301))) (i (s (fun (list (prod (cart real Q211301) (cart real Q211301))) (list (prod (cart real Q211301) (cart real Q211301)))) (i (s (fun (prod (cart real Q211301) (cart real Q211301)) (fun (list (prod (cart real Q211301) (cart real Q211301))) (list (prod (cart real Q211301) (cart real Q211301))))) CONS) (s (prod (cart real Q211301) (cart real Q211301)) (i (s (fun (cart real Q211301) (prod (cart real Q211301) (cart real Q211301))) (i (s (fun (cart real Q211301) (fun (cart real Q211301) (prod (cart real Q211301) (cart real Q211301)))) c_) (s (cart real Q211301) a))) (s (cart real Q211301) b))))) (s (list (prod (cart real Q211301) (cart real Q211301))) NIL))))))))
(rule (s real (i (s (fun (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))) real) angle) (s (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))) (i (s (fun (prod (cart real Q692429) (cart real Q692429)) (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429)))) (i (s (fun (cart real Q692429) (fun (prod (cart real Q692429) (cart real Q692429)) (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))))) c_) (s (cart real Q692429) (i (s (fun (cart real Q692429) (cart real Q692429)) (i (s (fun (cart real Q692429) (fun (cart real Q692429) (cart real Q692429))) vectoru_add) (s (cart real Q692429) a))) (s (cart real Q692429) b))))) (s (prod (cart real Q692429) (cart real Q692429)) (i (s (fun (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))) (i (s (fun (cart real Q692429) (fun (cart real Q692429) (prod (cart real Q692429) (cart real Q692429)))) c_) (s (cart real Q692429) (i (s (fun (cart real Q692429) (cart real Q692429)) (i (s (fun (cart real Q692429) (fun (cart real Q692429) (cart real Q692429))) vectoru_add) (s (cart real Q692429) a))) (s (cart real Q692429) c))))) (s (cart real Q692429) (i (s (fun (cart real Q692429) (cart real Q692429)) (i (s (fun (cart real Q692429) (fun (cart real Q692429) (cart real Q692429))) vectoru_add) (s (cart real Q692429) a))) (s (cart real Q692429) d))))))))) (s real (i (s (fun (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))) real) angle) (s (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))) (i (s (fun (prod (cart real Q692429) (cart real Q692429)) (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429)))) (i (s (fun (cart real Q692429) (fun (prod (cart real Q692429) (cart real Q692429)) (prod (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))))) c_) (s (cart real Q692429) b))) (s (prod (cart real Q692429) (cart real Q692429)) (i (s (fun (cart real Q692429) (prod (cart real Q692429) (cart real Q692429))) (i (s (fun (cart real Q692429) (fun (cart real Q692429) (prod (cart real Q692429) (cart real Q692429)))) c_) (s (cart real Q692429) c))) (s (cart real Q692429) d))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real Q690093) bool) (i (s (fun (cart real Q690093) (fun (cart real Q690093) bool)) a_) (s (cart real Q690093) x))) (s (cart real Q690093) (i (s (fun num (cart real Q690093)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s bool (i (s (fun (cart real Q690093) bool) (i (s (fun (cart real Q690093) (fun (cart real Q690093) bool)) a_) (s (cart real Q690093) y))) (s (cart real Q690093) (i (s (fun num (cart real Q690093)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) acs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real Q690093) real) (i (s (fun (cart real Q690093) (fun (cart real Q690093) real)) dot) (s (cart real Q690093) x))) (s (cart real Q690093) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real Q690093) real) vectoru_norm) (s (cart real Q690093) x))))) (s real (i (s (fun (cart real Q690093) real) vectoru_norm) (s (cart real Q690093) y))))))))))) (s real (i (s (fun (cart real Q690093) real) (i (s (fun (cart real Q690093) (fun (cart real Q690093) real)) vectoru_angle) (s (cart real Q690093) x))) (s (cart real Q690093) y))))
(rule (s real (i (s (fun real real) acs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real Q709357) real) (i (s (fun (cart real Q709357) (fun (cart real Q709357) real)) dot) (s (cart real Q709357) (i (s (fun (cart real Q709357) (cart real Q709357)) (i (s (fun (cart real Q709357) (fun (cart real Q709357) (cart real Q709357))) vectoru_sub) (s (cart real Q709357) v))) (s (cart real Q709357) u))))) (s (cart real Q709357) (i (s (fun (cart real Q709357) (cart real Q709357)) (i (s (fun (cart real Q709357) (fun (cart real Q709357) (cart real Q709357))) vectoru_sub) (s (cart real Q709357) w))) (s (cart real Q709357) u))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real Q709357) real) vectoru_norm) (s (cart real Q709357) (i (s (fun (cart real Q709357) (cart real Q709357)) (i (s (fun (cart real Q709357) (fun (cart real Q709357) (cart real Q709357))) vectoru_sub) (s (cart real Q709357) v))) (s (cart real Q709357) u))))))) (s real (i (s (fun (cart real Q709357) real) vectoru_norm) (s (cart real Q709357) (i (s (fun (cart real Q709357) (cart real Q709357)) (i (s (fun (cart real Q709357) (fun (cart real Q709357) (cart real Q709357))) vectoru_sub) (s (cart real Q709357) w))) (s (cart real Q709357) u))))))))))) (s real (i (s (fun (cart real Q709357) real) (i (s (fun (cart real Q709357) (fun (cart real Q709357) real)) (i (s (fun (cart real Q709357) (fun (cart real Q709357) (fun (cart real Q709357) real))) arcV) (s (cart real Q709357) u))) (s (cart real Q709357) v))) (s (cart real Q709357) w))))
(rule (s (fun Q144946 Q144946) (i (s (fun (fun Q144946 Q144946) (fun Q144946 Q144946)) (i (s (fun (fun Q144946 Q144946) (fun (fun Q144946 Q144946) (fun Q144946 Q144946))) o) (s (fun Q144946 Q144946) (i (s (fun (prod Q144946 Q144946) (fun Q144946 Q144946)) swap) (s (prod Q144946 Q144946) (i (s (fun Q144946 (prod Q144946 Q144946)) (i (s (fun Q144946 (fun Q144946 (prod Q144946 Q144946))) c_) (s Q144946 a))) (s Q144946 b))))))) (s (fun Q144946 Q144946) (i (s (fun (prod Q144946 Q144946) (fun Q144946 Q144946)) swap) (s (prod Q144946 Q144946) (i (s (fun Q144946 (prod Q144946 Q144946)) (i (s (fun Q144946 (fun Q144946 (prod Q144946 Q144946))) c_) (s Q144946 a))) (s Q144946 b))))))) (s (fun Q144946 Q144946) I0))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart (cart real n2) n2) (fun num (cart real n2))) d_) (s (cart (cart real n2) n2) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart (cart real n2) n2) (fun num (cart real n2))) d_) (s (cart (cart real n2) n2) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart (cart real n2) n2) (fun num (cart real n2))) d_) (s (cart (cart real n2) n2) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart (cart real n2) n2) (fun num (cart real n2))) d_) (s (cart (cart real n2) n2) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) A0))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real Q103417) real) vectoru_norm) (s (cart real Q103417) x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real Q103417) real) vectoru_norm) (s (cart real Q103417) y))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real Q103417) real) vectoru_norm) (s (cart real Q103417) (i (s (fun (cart real Q103417) (cart real Q103417)) (i (s (fun (cart real Q103417) (fun (cart real Q103417) (cart real Q103417))) vectoru_sub) (s (cart real Q103417) x))) (s (cart real Q103417) y))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (cart real Q103417) real) (i (s (fun (cart real Q103417) (fun (cart real Q103417) real)) dot) (s (cart real Q103417) x))) (s (cart real Q103417) y))))
(rule (s (cart real n3) (i (s (fun (list real) (cart real n3)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) t))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) u))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) t))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) u))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) t))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) u))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (list real) NIL))))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) scale) (s (cart real n3) t))) (s (cart real n3) u))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real Q103364) real) vectoru_norm) (s (cart real Q103364) (i (s (fun (cart real Q103364) (cart real Q103364)) (i (s (fun (cart real Q103364) (fun (cart real Q103364) (cart real Q103364))) vectoru_add) (s (cart real Q103364) x))) (s (cart real Q103364) y))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real Q103364) real) vectoru_norm) (s (cart real Q103364) x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real Q103364) real) vectoru_norm) (s (cart real Q103364) y))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (cart real Q103364) real) (i (s (fun (cart real Q103364) (fun (cart real Q103364) real)) dot) (s (cart real Q103364) x))) (s (cart real Q103364) y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun bool bool) (i (s (fun bool (fun bool bool)) b_s_) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) x))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) y))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) x))))) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) y))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun bool (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool)))) COND) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) a))) (s (cart real N) b))))) (s (fun (cart real N) bool) EMPTY))) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_segment) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))))
(rule (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) (i (s (fun (cart real N) (fun (cart real N) (fun (cart real N) real))) (i (s (fun (cart real N) (fun (cart real N) (fun (cart real N) (fun (cart real N) real)))) dihV) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) a))) (s (cart real N) w0))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) a))) (s (cart real N) w1))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) a))) (s (cart real N) w2))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) a))) (s (cart real N) w3))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) (i (s (fun (cart real N) (fun (cart real N) (fun (cart real N) real))) (i (s (fun (cart real N) (fun (cart real N) (fun (cart real N) (fun (cart real N) real)))) dihV) (s (cart real N) w0))) (s (cart real N) w1))) (s (cart real N) w2))) (s (cart real N) w3))))
(rule (s (fun Q64380 bool) (i (s (fun (fun Q64380 bool) (fun Q64380 bool)) (i (s (fun (fun Q64380 bool) (fun (fun Q64380 bool) (fun Q64380 bool))) DIFF) (s (fun Q64380 bool) (i (s (fun (fun Q64380 bool) (fun Q64380 bool)) (i (s (fun (fun Q64380 Q64418) (fun (fun Q64380 bool) (fun Q64380 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64380 Q64418) (fun (fun Q64380 bool) (fun Q64380 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64380 Q64418) f))) (s (fun Q64380 bool) s0))))) (s (fun Q64380 bool) (i (s (fun (fun Q64380 bool) (fun Q64380 bool)) (i (s (fun (fun Q64380 Q64418) (fun (fun Q64380 bool) (fun Q64380 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64380 Q64418) (fun (fun Q64380 bool) (fun Q64380 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64380 Q64418) f))) (s (fun Q64380 bool) t))))) (s (fun Q64380 bool) (i (s (fun (fun Q64380 bool) (fun Q64380 bool)) (i (s (fun (fun Q64380 Q64418) (fun (fun Q64380 bool) (fun Q64380 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64380 Q64418) (fun (fun Q64380 bool) (fun Q64380 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64380 Q64418) f))) (s (fun Q64380 bool) (i (s (fun (fun Q64380 bool) (fun Q64380 bool)) (i (s (fun (fun Q64380 bool) (fun (fun Q64380 bool) (fun Q64380 bool))) DIFF) (s (fun Q64380 bool) s0))) (s (fun Q64380 bool) t))))))
(rule (s (fun Q64342 bool) (i (s (fun (fun Q64342 bool) (fun Q64342 bool)) (i (s (fun (fun Q64342 bool) (fun (fun Q64342 bool) (fun Q64342 bool))) INTER) (s (fun Q64342 bool) (i (s (fun (fun Q64342 bool) (fun Q64342 bool)) (i (s (fun (fun Q64342 Q64418) (fun (fun Q64342 bool) (fun Q64342 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64342 Q64418) (fun (fun Q64342 bool) (fun Q64342 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64342 Q64418) f))) (s (fun Q64342 bool) s0))))) (s (fun Q64342 bool) (i (s (fun (fun Q64342 bool) (fun Q64342 bool)) (i (s (fun (fun Q64342 Q64418) (fun (fun Q64342 bool) (fun Q64342 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64342 Q64418) (fun (fun Q64342 bool) (fun Q64342 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64342 Q64418) f))) (s (fun Q64342 bool) t))))) (s (fun Q64342 bool) (i (s (fun (fun Q64342 bool) (fun Q64342 bool)) (i (s (fun (fun Q64342 Q64418) (fun (fun Q64342 bool) (fun Q64342 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64342 Q64418) (fun (fun Q64342 bool) (fun Q64342 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64342 Q64418) f))) (s (fun Q64342 bool) (i (s (fun (fun Q64342 bool) (fun Q64342 bool)) (i (s (fun (fun Q64342 bool) (fun (fun Q64342 bool) (fun Q64342 bool))) INTER) (s (fun Q64342 bool) s0))) (s (fun Q64342 bool) t))))))
(rule (s (fun Q64304 bool) (i (s (fun (fun Q64304 bool) (fun Q64304 bool)) (i (s (fun (fun Q64304 bool) (fun (fun Q64304 bool) (fun Q64304 bool))) UNION) (s (fun Q64304 bool) (i (s (fun (fun Q64304 bool) (fun Q64304 bool)) (i (s (fun (fun Q64304 Q64418) (fun (fun Q64304 bool) (fun Q64304 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64304 Q64418) (fun (fun Q64304 bool) (fun Q64304 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64304 Q64418) f))) (s (fun Q64304 bool) s0))))) (s (fun Q64304 bool) (i (s (fun (fun Q64304 bool) (fun Q64304 bool)) (i (s (fun (fun Q64304 Q64418) (fun (fun Q64304 bool) (fun Q64304 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64304 Q64418) (fun (fun Q64304 bool) (fun Q64304 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64304 Q64418) f))) (s (fun Q64304 bool) t))))) (s (fun Q64304 bool) (i (s (fun (fun Q64304 bool) (fun Q64304 bool)) (i (s (fun (fun Q64304 Q64418) (fun (fun Q64304 bool) (fun Q64304 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64304 Q64418) (fun (fun Q64304 bool) (fun Q64304 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64304 Q64418) f))) (s (fun Q64304 bool) (i (s (fun (fun Q64304 bool) (fun Q64304 bool)) (i (s (fun (fun Q64304 bool) (fun (fun Q64304 bool) (fun Q64304 bool))) UNION) (s (fun Q64304 bool) s0))) (s (fun Q64304 bool) t))))))
(rule (s (cart real n2) (i (s (fun (list real) (cart real n2)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) cos) (s real t))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) sin) (s real t))))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) sin) (s real t))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) cos) (s real t))))))))) (s (list real) NIL))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) x))))
(rule (s real (i (s (fun (prod (cart real (finite_sum Q119776 Q119777)) (cart real (finite_sum Q119776 Q119777))) real) distance) (s (prod (cart real (finite_sum Q119776 Q119777)) (cart real (finite_sum Q119776 Q119777))) (i (s (fun (cart real (finite_sum Q119776 Q119777)) (prod (cart real (finite_sum Q119776 Q119777)) (cart real (finite_sum Q119776 Q119777)))) (i (s (fun (cart real (finite_sum Q119776 Q119777)) (fun (cart real (finite_sum Q119776 Q119777)) (prod (cart real (finite_sum Q119776 Q119777)) (cart real (finite_sum Q119776 Q119777))))) c_) (s (cart real (finite_sum Q119776 Q119777)) (i (s (fun (cart real Q119777) (cart real (finite_sum Q119776 Q119777))) (i (s (fun (cart real Q119776) (fun (cart real Q119777) (cart real (finite_sum Q119776 Q119777)))) pastecart) (s (cart real Q119776) x))) (s (cart real Q119777) y))))) (s (cart real (finite_sum Q119776 Q119777)) (i (s (fun (cart real Q119777) (cart real (finite_sum Q119776 Q119777))) (i (s (fun (cart real Q119776) (fun (cart real Q119777) (cart real (finite_sum Q119776 Q119777)))) pastecart) (s (cart real Q119776) x))) (s (cart real Q119777) yi_))))))) (s real (i (s (fun (prod (cart real Q119777) (cart real Q119777)) real) distance) (s (prod (cart real Q119777) (cart real Q119777)) (i (s (fun (cart real Q119777) (prod (cart real Q119777) (cart real Q119777))) (i (s (fun (cart real Q119777) (fun (cart real Q119777) (prod (cart real Q119777) (cart real Q119777)))) c_) (s (cart real Q119777) y))) (s (cart real Q119777) yi_))))))
(rule (s real (i (s (fun (prod (cart real (finite_sum Q119739 Q119740)) (cart real (finite_sum Q119739 Q119740))) real) distance) (s (prod (cart real (finite_sum Q119739 Q119740)) (cart real (finite_sum Q119739 Q119740))) (i (s (fun (cart real (finite_sum Q119739 Q119740)) (prod (cart real (finite_sum Q119739 Q119740)) (cart real (finite_sum Q119739 Q119740)))) (i (s (fun (cart real (finite_sum Q119739 Q119740)) (fun (cart real (finite_sum Q119739 Q119740)) (prod (cart real (finite_sum Q119739 Q119740)) (cart real (finite_sum Q119739 Q119740))))) c_) (s (cart real (finite_sum Q119739 Q119740)) (i (s (fun (cart real Q119740) (cart real (finite_sum Q119739 Q119740))) (i (s (fun (cart real Q119739) (fun (cart real Q119740) (cart real (finite_sum Q119739 Q119740)))) pastecart) (s (cart real Q119739) x))) (s (cart real Q119740) y))))) (s (cart real (finite_sum Q119739 Q119740)) (i (s (fun (cart real Q119740) (cart real (finite_sum Q119739 Q119740))) (i (s (fun (cart real Q119739) (fun (cart real Q119740) (cart real (finite_sum Q119739 Q119740)))) pastecart) (s (cart real Q119739) xi_))) (s (cart real Q119740) y))))))) (s real (i (s (fun (prod (cart real Q119739) (cart real Q119739)) real) distance) (s (prod (cart real Q119739) (cart real Q119739)) (i (s (fun (cart real Q119739) (prod (cart real Q119739) (cart real Q119739))) (i (s (fun (cart real Q119739) (fun (cart real Q119739) (prod (cart real Q119739) (cart real Q119739)))) c_) (s (cart real Q119739) x))) (s (cart real Q119739) xi_))))))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) z))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n3) (fun num real)) d_) (s (cart real n3) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) y))))
(rule (s (list (prod Q18805 Q18813)) (i (s (fun (list (prod Q18805 Q18813)) (list (prod Q18805 Q18813))) (i (s (fun (prod Q18805 Q18813) (fun (list (prod Q18805 Q18813)) (list (prod Q18805 Q18813)))) CONS) (s (prod Q18805 Q18813) (i (s (fun Q18813 (prod Q18805 Q18813)) (i (s (fun Q18805 (fun Q18813 (prod Q18805 Q18813))) c_) (s Q18805 h1))) (s Q18813 (i (s (fun (list Q18813) Q18813) HD) (s (list Q18813) l2))))))) (s (list (prod Q18805 Q18813)) (i (s (fun (list Q18813) (list (prod Q18805 Q18813))) (i (s (fun (list Q18805) (fun (list Q18813) (list (prod Q18805 Q18813)))) ZIP) (s (list Q18805) t1))) (s (list Q18813) (i (s (fun (list Q18813) (list Q18813)) TL) (s (list Q18813) l2))))))) (s (list (prod Q18805 Q18813)) (i (s (fun (list Q18813) (list (prod Q18805 Q18813))) (i (s (fun (list Q18805) (fun (list Q18813) (list (prod Q18805 Q18813)))) ZIP) (s (list Q18805) (i (s (fun (list Q18805) (list Q18805)) (i (s (fun Q18805 (fun (list Q18805) (list Q18805))) CONS) (s Q18805 h1))) (s (list Q18805) t1))))) (s (list Q18813) l2))))
(rule (s Q18703 (i (s (fun Q18703 Q18703) (i (s (fun Q18703 (fun Q18703 Q18703)) (i (s (fun bool (fun Q18703 (fun Q18703 Q18703))) COND) (s bool (i (s (fun Q18709 bool) (i (s (fun Q18709 (fun Q18709 bool)) a_) (s Q18709 (i (s (fun (prod Q18709 Q18703) Q18709) FST) (s (prod Q18709 Q18703) h))))) (s Q18709 a))))) (s Q18703 (i (s (fun (prod Q18709 Q18703) Q18703) SND) (s (prod Q18709 Q18703) h))))) (s Q18703 (i (s (fun (list (prod Q18709 Q18703)) Q18703) (i (s (fun Q18709 (fun (list (prod Q18709 Q18703)) Q18703)) ASSOC) (s Q18709 a))) (s (list (prod Q18709 Q18703)) t))))) (s Q18703 (i (s (fun (list (prod Q18709 Q18703)) Q18703) (i (s (fun Q18709 (fun (list (prod Q18709 Q18703)) Q18703)) ASSOC) (s Q18709 a))) (s (list (prod Q18709 Q18703)) (i (s (fun (list (prod Q18709 Q18703)) (list (prod Q18709 Q18703))) (i (s (fun (prod Q18709 Q18703) (fun (list (prod Q18709 Q18703)) (list (prod Q18709 Q18703)))) CONS) (s (prod Q18709 Q18703) h))) (s (list (prod Q18709 Q18703)) t))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun bool (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool)))) COND) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) a))) (s (cart real N) b))))) (s (fun (cart real N) bool) EMPTY))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) b))) (s (fun (cart real N) bool) EMPTY))))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))))
(rule (s (fun (cart real Q216100) bool) (i (s (fun (fun (cart real Q216100) bool) (fun (cart real Q216100) bool)) (i (s (fun (fun (cart real Q216100) bool) (fun (fun (cart real Q216100) bool) (fun (cart real Q216100) bool))) UNION) (s (fun (cart real Q216100) bool) (i (s (fun (prod (cart real Q216100) (cart real Q216100)) (fun (cart real Q216100) bool)) openu_segment) (s (prod (cart real Q216100) (cart real Q216100)) (i (s (fun (cart real Q216100) (prod (cart real Q216100) (cart real Q216100))) (i (s (fun (cart real Q216100) (fun (cart real Q216100) (prod (cart real Q216100) (cart real Q216100)))) c_) (s (cart real Q216100) a))) (s (cart real Q216100) b))))))) (s (fun (cart real Q216100) bool) (i (s (fun (fun (cart real Q216100) bool) (fun (cart real Q216100) bool)) (i (s (fun (cart real Q216100) (fun (fun (cart real Q216100) bool) (fun (cart real Q216100) bool))) INSERT) (s (cart real Q216100) a))) (s (fun (cart real Q216100) bool) (i (s (fun (fun (cart real Q216100) bool) (fun (cart real Q216100) bool)) (i (s (fun (cart real Q216100) (fun (fun (cart real Q216100) bool) (fun (cart real Q216100) bool))) INSERT) (s (cart real Q216100) b))) (s (fun (cart real Q216100) bool) EMPTY))))))) (s (fun (cart real Q216100) bool) (i (s (fun (list (prod (cart real Q216100) (cart real Q216100))) (fun (cart real Q216100) bool)) closedu_segment) (s (list (prod (cart real Q216100) (cart real Q216100))) (i (s (fun (list (prod (cart real Q216100) (cart real Q216100))) (list (prod (cart real Q216100) (cart real Q216100)))) (i (s (fun (prod (cart real Q216100) (cart real Q216100)) (fun (list (prod (cart real Q216100) (cart real Q216100))) (list (prod (cart real Q216100) (cart real Q216100))))) CONS) (s (prod (cart real Q216100) (cart real Q216100)) (i (s (fun (cart real Q216100) (prod (cart real Q216100) (cart real Q216100))) (i (s (fun (cart real Q216100) (fun (cart real Q216100) (prod (cart real Q216100) (cart real Q216100)))) c_) (s (cart real Q216100) a))) (s (cart real Q216100) b))))) (s (list (prod (cart real Q216100) (cart real Q216100))) NIL))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun bool (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool)))) COND) (s bool (i (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) a_) (s (cart real N) a))) (s (cart real N) b))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) EMPTY))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) relativeu_interior) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_segment) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))))
(rule (s (cart real Q440967) (i (s (fun (fun (cart real Q440968) (cart real Q440967)) (cart real Q440967)) (i (s (fun (fun (cart real Q440968) bool) (fun (fun (cart real Q440968) (cart real Q440967)) (cart real Q440967))) integral) (s (fun (cart real Q440968) bool) (i (s (fun (list (prod (cart real Q440968) (cart real Q440968))) (fun (cart real Q440968) bool)) closedu_interval) (s (list (prod (cart real Q440968) (cart real Q440968))) (i (s (fun (list (prod (cart real Q440968) (cart real Q440968))) (list (prod (cart real Q440968) (cart real Q440968)))) (i (s (fun (prod (cart real Q440968) (cart real Q440968)) (fun (list (prod (cart real Q440968) (cart real Q440968))) (list (prod (cart real Q440968) (cart real Q440968))))) CONS) (s (prod (cart real Q440968) (cart real Q440968)) (i (s (fun (cart real Q440968) (prod (cart real Q440968) (cart real Q440968))) (i (s (fun (cart real Q440968) (fun (cart real Q440968) (prod (cart real Q440968) (cart real Q440968)))) c_) (s (cart real Q440968) a))) (s (cart real Q440968) a))))) (s (list (prod (cart real Q440968) (cart real Q440968))) NIL))))))) (s (fun (cart real Q440968) (cart real Q440967)) f))) (s (cart real Q440967) (i (s (fun num (cart real Q440967)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real Q105737) (i (s (fun (cart real Q105737) (cart real Q105737)) (i (s (fun (cart real Q105737) (fun (cart real Q105737) (cart real Q105737))) (i (s (fun bool (fun (cart real Q105737) (fun (cart real Q105737) (cart real Q105737)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s (cart real Q105737) (i (s (fun (cart real Q105737) (cart real Q105737)) (i (s (fun (cart real Q105737) (fun (cart real Q105737) (cart real Q105737))) vectoru_add) (s (cart real Q105737) (i (s (fun (fun num (cart real Q105737)) (cart real Q105737)) (i (s (fun (fun num bool) (fun (fun num (cart real Q105737)) (cart real Q105737))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num (cart real Q105737)) f))))) (s (cart real Q105737) (i (s (fun num (cart real Q105737)) f) (s num (i (s (fun num num) SUC) (s num n))))))))) (s (cart real Q105737) (i (s (fun (fun num (cart real Q105737)) (cart real Q105737)) (i (s (fun (fun num bool) (fun (fun num (cart real Q105737)) (cart real Q105737))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num (cart real Q105737)) f))))) (s (cart real Q105737) (i (s (fun (fun num (cart real Q105737)) (cart real Q105737)) (i (s (fun (fun num bool) (fun (fun num (cart real Q105737)) (cart real Q105737))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s (fun num (cart real Q105737)) f))))
(rule (s real (i (s (fun (fun (cart real N) bool) real) content) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_interval) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (list (prod (cart real N) (cart real N))) NIL))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) (i (s (fun bool (fun (fun A bool) (fun (fun A bool) (fun A bool)))) COND) (s bool (i (s (fun (fun A bool) bool) (i (s (fun A (fun (fun A bool) bool)) IN) (s A x))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) t))))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) s0))))) (s (fun A bool) t))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) (i (s (fun bool (fun (fun A bool) (fun (fun A bool) (fun A bool)))) COND) (s bool (i (s (fun (fun A bool) bool) (i (s (fun A (fun (fun A bool) bool)) IN) (s A x))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) t))))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) s0))))) (s (fun A bool) t))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) (i (s (fun bool (fun (fun A bool) (fun (fun A bool) (fun A bool)))) COND) (s bool (i (s (fun (fun A bool) bool) (i (s (fun A (fun (fun A bool) bool)) IN) (s A x))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) t))))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) s0))))) (s (fun A bool) t))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) (i (s (fun bool (fun (fun A bool) (fun (fun A bool) (fun A bool)))) COND) (s bool (i (s (fun A bool) (i (s (fun A (fun A bool)) a_) (s A x))) (s A y))))) (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) s0))) (s A y))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) s0))) (s A y))))))) (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) s0))))) (s A y))))
(rule (s (cart real Q531086) (i (s (fun (fun (cart real Q531099) (cart real Q531086)) (cart real Q531086)) (i (s (fun (fun (cart real Q531099) bool) (fun (fun (cart real Q531099) (cart real Q531086)) (cart real Q531086))) integral) (s (fun (cart real Q531099) bool) (i (s (fun (list (prod (cart real Q531099) (cart real Q531099))) (fun (cart real Q531099) bool)) closedu_interval) (s (list (prod (cart real Q531099) (cart real Q531099))) (i (s (fun (list (prod (cart real Q531099) (cart real Q531099))) (list (prod (cart real Q531099) (cart real Q531099)))) (i (s (fun (prod (cart real Q531099) (cart real Q531099)) (fun (list (prod (cart real Q531099) (cart real Q531099))) (list (prod (cart real Q531099) (cart real Q531099))))) CONS) (s (prod (cart real Q531099) (cart real Q531099)) (i (s (fun (cart real Q531099) (prod (cart real Q531099) (cart real Q531099))) (i (s (fun (cart real Q531099) (fun (cart real Q531099) (prod (cart real Q531099) (cart real Q531099)))) c_) (s (cart real Q531099) a))) (s (cart real Q531099) b))))) (s (list (prod (cart real Q531099) (cart real Q531099))) NIL))))))) (s (fun (cart real Q531099) (cart real Q531086)) f))) (s (cart real Q531086) (i (s (fun (fun (cart real Q531099) (cart real Q531086)) (cart real Q531086)) (i (s (fun (fun (cart real Q531099) bool) (fun (fun (cart real Q531099) (cart real Q531086)) (cart real Q531086))) integral) (s (fun (cart real Q531099) bool) (i (s (fun (prod (cart real Q531099) (cart real Q531099)) (fun (cart real Q531099) bool)) openu_interval) (s (prod (cart real Q531099) (cart real Q531099)) (i (s (fun (cart real Q531099) (prod (cart real Q531099) (cart real Q531099))) (i (s (fun (cart real Q531099) (fun (cart real Q531099) (prod (cart real Q531099) (cart real Q531099)))) c_) (s (cart real Q531099) a))) (s (cart real Q531099) b))))))) (s (fun (cart real Q531099) (cart real Q531086)) f))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num k))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num k))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num k))))))))
(rule (s A (i (s (fun num A) (i (s (fun (cart A n3) (fun num A)) d_) (s (cart A n3) (i (s (fun (list A) (cart A n3)) vector) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A y))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A z))) (s (list A) NIL))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s A z))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_segment) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) b))) (s (fun (cart real N) bool) EMPTY))))))))
(rule (s (fun (cart real Q211629) bool) (i (s (fun (list (prod (cart real Q211629) (cart real Q211629))) (fun (cart real Q211629) bool)) closedu_interval) (s (list (prod (cart real Q211629) (cart real Q211629))) (i (s (fun (list (prod (cart real Q211629) (cart real Q211629))) (list (prod (cart real Q211629) (cart real Q211629)))) (i (s (fun (prod (cart real Q211629) (cart real Q211629)) (fun (list (prod (cart real Q211629) (cart real Q211629))) (list (prod (cart real Q211629) (cart real Q211629))))) CONS) (s (prod (cart real Q211629) (cart real Q211629)) (i (s (fun (cart real Q211629) (prod (cart real Q211629) (cart real Q211629))) (i (s (fun (cart real Q211629) (fun (cart real Q211629) (prod (cart real Q211629) (cart real Q211629)))) c_) (s (cart real Q211629) (i (s (fun num (cart real Q211629)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real Q211629) (i (s (fun num (cart real Q211629)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (list (prod (cart real Q211629) (cart real Q211629))) NIL))))) (s (fun (cart real Q211629) bool) EMPTY))
(rule (s A (i (s (fun num A) (i (s (fun (cart A n3) (fun num A)) d_) (s (cart A n3) (i (s (fun (list A) (cart A n3)) vector) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A y))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A z))) (s (list A) NIL))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s A y))
(rule (s (cart Q78976 (finite_sum Q78973 Q78971)) (i (s (fun (cart Q78976 Q78971) (cart Q78976 (finite_sum Q78973 Q78971))) (i (s (fun (cart Q78976 Q78973) (fun (cart Q78976 Q78971) (cart Q78976 (finite_sum Q78973 Q78971)))) pastecart) (s (cart Q78976 Q78973) (i (s (fun (cart Q78976 (finite_sum Q78973 Q78971)) (cart Q78976 Q78973)) fstcart) (s (cart Q78976 (finite_sum Q78973 Q78971)) z))))) (s (cart Q78976 Q78971) (i (s (fun (cart Q78976 (finite_sum Q78973 Q78971)) (cart Q78976 Q78971)) sndcart) (s (cart Q78976 (finite_sum Q78973 Q78971)) z))))) (s (cart Q78976 (finite_sum Q78973 Q78971)) z))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) a_) (s real a))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real a))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real pi))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real a))) (s (cart real N) x))))) (s (cart real N) y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) a_) (s real a))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real a))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real pi))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real a))) (s (cart real N) y))))))
(rule (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun (list Q18680) (fun (list Q18680) (list Q18680))) (i (s (fun bool (fun (list Q18680) (fun (list Q18680) (list Q18680)))) COND) (s bool (i (s (fun Q18680 bool) P) (s Q18680 h))))) (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun Q18680 (fun (list Q18680) (list Q18680))) CONS) (s Q18680 h))) (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun (fun Q18680 bool) (fun (list Q18680) (list Q18680))) FILTER) (s (fun Q18680 bool) P))) (s (list Q18680) t))))))) (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun (fun Q18680 bool) (fun (list Q18680) (list Q18680))) FILTER) (s (fun Q18680 bool) P))) (s (list Q18680) t))))) (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun (fun Q18680 bool) (fun (list Q18680) (list Q18680))) FILTER) (s (fun Q18680 bool) P))) (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun Q18680 (fun (list Q18680) (list Q18680))) CONS) (s Q18680 h))) (s (list Q18680) t))))))
(rule (s A (i (s (fun num A) (i (s (fun (cart A n3) (fun num A)) d_) (s (cart A n3) (i (s (fun (list A) (cart A n3)) vector) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A y))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A z))) (s (list A) NIL))))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s A x))
(rule (s (fun Q64084 bool) (i (s (fun (fun Q64084 bool) (fun Q64084 bool)) (i (s (fun (fun Q64084 Q64073) (fun (fun Q64084 bool) (fun Q64084 bool))) (i (s (fun (fun Q64073 (fun Q64073 Q64073)) (fun (fun Q64084 Q64073) (fun (fun Q64084 bool) (fun Q64084 bool)))) support) (s (fun Q64073 (fun Q64073 Q64073)) op))) (s (fun Q64084 Q64073) f))) (s (fun Q64084 bool) (i (s (fun (fun Q64084 bool) (fun Q64084 bool)) (i (s (fun (fun Q64084 Q64073) (fun (fun Q64084 bool) (fun Q64084 bool))) (i (s (fun (fun Q64073 (fun Q64073 Q64073)) (fun (fun Q64084 Q64073) (fun (fun Q64084 bool) (fun Q64084 bool)))) support) (s (fun Q64073 (fun Q64073 Q64073)) op))) (s (fun Q64084 Q64073) f))) (s (fun Q64084 bool) s0))))) (s (fun Q64084 bool) (i (s (fun (fun Q64084 bool) (fun Q64084 bool)) (i (s (fun (fun Q64084 Q64073) (fun (fun Q64084 bool) (fun Q64084 bool))) (i (s (fun (fun Q64073 (fun Q64073 Q64073)) (fun (fun Q64084 Q64073) (fun (fun Q64084 bool) (fun Q64084 bool)))) support) (s (fun Q64073 (fun Q64073 Q64073)) op))) (s (fun Q64084 Q64073) f))) (s (fun Q64084 bool) s0))))
(rule (s Q64518 (i (s (fun (fun Q64530 Q64518) Q64518) (i (s (fun (fun Q64530 bool) (fun (fun Q64530 Q64518) Q64518)) (i (s (fun (fun Q64518 (fun Q64518 Q64518)) (fun (fun Q64530 bool) (fun (fun Q64530 Q64518) Q64518))) iterate) (s (fun Q64518 (fun Q64518 Q64518)) op))) (s (fun Q64530 bool) (i (s (fun (fun Q64530 bool) (fun Q64530 bool)) (i (s (fun (fun Q64530 Q64518) (fun (fun Q64530 bool) (fun Q64530 bool))) (i (s (fun (fun Q64518 (fun Q64518 Q64518)) (fun (fun Q64530 Q64518) (fun (fun Q64530 bool) (fun Q64530 bool)))) support) (s (fun Q64518 (fun Q64518 Q64518)) op))) (s (fun Q64530 Q64518) f))) (s (fun Q64530 bool) s0))))) (s (fun Q64530 Q64518) f))) (s Q64518 (i (s (fun (fun Q64530 Q64518) Q64518) (i (s (fun (fun Q64530 bool) (fun (fun Q64530 Q64518) Q64518)) (i (s (fun (fun Q64518 (fun Q64518 Q64518)) (fun (fun Q64530 bool) (fun (fun Q64530 Q64518) Q64518))) iterate) (s (fun Q64518 (fun Q64518 Q64518)) op))) (s (fun Q64530 bool) s0))) (s (fun Q64530 Q64518) f))))
(rule (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) b))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) x))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) b))) (s (cart real N) x))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) b))) (s (cart real N) b))))))) (s (cart real N) b))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) azim) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real h))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real a))) (s real a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun (cart real n3) (fun real (fun real real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun real (fun real real)))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun real (fun real real))))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun real (fun real real)))))) volu_frusttu_wedge) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))) (s real h))) (s real a))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real pi))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))) (s real (i (s (fun real real) asn) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun bool (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun (fun N bool) num) dimindex) (s (fun N bool) UNIV))))))) (s (fun (cart real N) bool) EMPTY))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_segment) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_segment) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_interval) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_interval) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) frontier) (s (fun (cart real N) bool) s0))))
(rule (s (list (prod Q18849 Q18850)) (i (s (fun (list (prod Q18849 Q18850)) (list (prod Q18849 Q18850))) (i (s (fun (prod Q18849 Q18850) (fun (list (prod Q18849 Q18850)) (list (prod Q18849 Q18850)))) CONS) (s (prod Q18849 Q18850) (i (s (fun Q18850 (prod Q18849 Q18850)) (i (s (fun Q18849 (fun Q18850 (prod Q18849 Q18850))) c_) (s Q18849 h1))) (s Q18850 h2))))) (s (list (prod Q18849 Q18850)) (i (s (fun (list Q18850) (list (prod Q18849 Q18850))) (i (s (fun (list Q18849) (fun (list Q18850) (list (prod Q18849 Q18850)))) ZIP) (s (list Q18849) t1))) (s (list Q18850) t2))))) (s (list (prod Q18849 Q18850)) (i (s (fun (list Q18850) (list (prod Q18849 Q18850))) (i (s (fun (list Q18849) (fun (list Q18850) (list (prod Q18849 Q18850)))) ZIP) (s (list Q18849) (i (s (fun (list Q18849) (list Q18849)) (i (s (fun Q18849 (fun (list Q18849) (list Q18849))) CONS) (s Q18849 h1))) (s (list Q18849) t1))))) (s (list Q18850) (i (s (fun (list Q18850) (list Q18850)) (i (s (fun Q18850 (fun (list Q18850) (list Q18850))) CONS) (s Q18850 h2))) (s (list Q18850) t2))))))
(rule (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) (i (s (fun (cart real (finite_sum M N)) (fun (cart real (finite_sum M N)) (cart real (finite_sum M N)))) vectoru_sub) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) x1))) (s (cart real N) y1))))) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) x2))) (s (cart real N) y2))))) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) (i (s (fun (cart real M) (cart real M)) (i (s (fun (cart real M) (fun (cart real M) (cart real M))) vectoru_sub) (s (cart real M) x1))) (s (cart real M) x2))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) y1))) (s (cart real N) y2))))))
(rule (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) (i (s (fun (cart real (finite_sum M N)) (fun (cart real (finite_sum M N)) (cart real (finite_sum M N)))) vectoru_add) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) x1))) (s (cart real N) y1))))) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) x2))) (s (cart real N) y2))))) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) (i (s (fun (cart real M) (cart real M)) (i (s (fun (cart real M) (fun (cart real M) (cart real M))) vectoru_add) (s (cart real M) x1))) (s (cart real M) x2))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) y1))) (s (cart real N) y2))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) y1))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) x2))) (s (list (cart real n2)) NIL))))))))))) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) x1))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) y2))) (s (list (cart real n2)) NIL))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) y2))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) x2))) (s (list (cart real n2)) NIL))))))))))) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) y1))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) x1))) (s (list (cart real n2)) NIL))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) x1))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) x2))) (s (list (cart real n2)) NIL))))))))))) (s real (i (s (fun (cart (cart real n2) n2) real) det) (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) y1))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) y2))) (s (list (cart real n2)) NIL))))))))))))
(rule (s real (i (s (fun (cart real Q709495) real) (i (s (fun (cart real Q709495) (fun (cart real Q709495) real)) (i (s (fun (cart real Q709495) (fun (cart real Q709495) (fun (cart real Q709495) real))) arcV) (s (cart real Q709495) (i (s (fun (cart real Q709495) (cart real Q709495)) (i (s (fun (cart real Q709495) (fun (cart real Q709495) (cart real Q709495))) vectoru_add) (s (cart real Q709495) a))) (s (cart real Q709495) b))))) (s (cart real Q709495) (i (s (fun (cart real Q709495) (cart real Q709495)) (i (s (fun (cart real Q709495) (fun (cart real Q709495) (cart real Q709495))) vectoru_add) (s (cart real Q709495) a))) (s (cart real Q709495) c))))) (s (cart real Q709495) (i (s (fun (cart real Q709495) (cart real Q709495)) (i (s (fun (cart real Q709495) (fun (cart real Q709495) (cart real Q709495))) vectoru_add) (s (cart real Q709495) a))) (s (cart real Q709495) d))))) (s real (i (s (fun (cart real Q709495) real) (i (s (fun (cart real Q709495) (fun (cart real Q709495) real)) (i (s (fun (cart real Q709495) (fun (cart real Q709495) (fun (cart real Q709495) real))) arcV) (s (cart real Q709495) b))) (s (cart real Q709495) c))) (s (cart real Q709495) d))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) B0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) B0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real b))) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real b))) (s real c))))) (s (cart (cart real N) M) A0))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real b))) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real b))) (s real c))))) (s (cart (cart real N) M) A0))))
(rule (s (cart real Q108508) (i (s (fun (cart real Q108508) (cart real Q108508)) (i (s (fun (cart real Q108508) (fun (cart real Q108508) (cart real Q108508))) vectoru_add) (s (cart real Q108508) (i (s (fun num (cart real Q108508)) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real Q108508) (i (s (fun (cart real Q108508) (cart real Q108508)) (i (s (fun (cart real Q108508) (fun (cart real Q108508) (cart real Q108508))) vectoru_add) (s (cart real Q108508) (i (s (fun num (cart real Q108508)) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real Q108508) (i (s (fun num (cart real Q108508)) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real Q108508) (i (s (fun (fun num (cart real Q108508)) (cart real Q108508)) (i (s (fun (fun num bool) (fun (fun num (cart real Q108508)) (cart real Q108508))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (fun num (cart real Q108508)) t))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) z))) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))
(rule (s real (i (s (fun (fun (cart real N) bool) real) content) (s (fun (cart real N) bool) (i (s (fun (list (prod (cart real N) (cart real N))) (fun (cart real N) bool)) closedu_interval) (s (list (prod (cart real N) (cart real N))) (i (s (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N)))) (i (s (fun (prod (cart real N) (cart real N)) (fun (list (prod (cart real N) (cart real N))) (list (prod (cart real N) (cart real N))))) CONS) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))) (s (list (prod (cart real N) (cart real N))) NIL))))))) (s real (i (s (fun (fun (cart real N) bool) real) measure) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_interval) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))))
(rule (s real (i (s (fun (prod (cart real Q692451) (prod (cart real Q692451) (cart real Q692451))) real) angle) (s (prod (cart real Q692451) (prod (cart real Q692451) (cart real Q692451))) (i (s (fun (prod (cart real Q692451) (cart real Q692451)) (prod (cart real Q692451) (prod (cart real Q692451) (cart real Q692451)))) (i (s (fun (cart real Q692451) (fun (prod (cart real Q692451) (cart real Q692451)) (prod (cart real Q692451) (prod (cart real Q692451) (cart real Q692451))))) c_) (s (cart real Q692451) x))) (s (prod (cart real Q692451) (cart real Q692451)) (i (s (fun (cart real Q692451) (prod (cart real Q692451) (cart real Q692451))) (i (s (fun (cart real Q692451) (fun (cart real Q692451) (prod (cart real Q692451) (cart real Q692451)))) c_) (s (cart real Q692451) (i (s (fun num (cart real Q692451)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q692451) y))))))) (s real (i (s (fun (cart real Q692451) real) (i (s (fun (cart real Q692451) (fun (cart real Q692451) real)) vectoru_angle) (s (cart real Q692451) x))) (s (cart real Q692451) y))))
(rule (s Q20594 (i (s (fun Q20594 Q20594) (i (s (fun Q20594 (fun Q20594 Q20594)) (i (s (fun bool (fun Q20594 (fun Q20594 Q20594))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_) (s num k))) (s num (i (s (fun (list Q20594) num) LENGTH) (s (list Q20594) l))))))) (s Q20594 (i (s (fun (list Q20594) Q20594) (i (s (fun num (fun (list Q20594) Q20594)) EL) (s num k))) (s (list Q20594) l))))) (s Q20594 (i (s (fun (list Q20594) Q20594) (i (s (fun num (fun (list Q20594) Q20594)) EL) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num k))) (s num (i (s (fun (list Q20594) num) LENGTH) (s (list Q20594) l))))))) (s (list Q20594) m))))) (s Q20594 (i (s (fun (list Q20594) Q20594) (i (s (fun num (fun (list Q20594) Q20594)) EL) (s num k))) (s (list Q20594) (i (s (fun (list Q20594) (list Q20594)) (i (s (fun (list Q20594) (fun (list Q20594) (list Q20594))) APPEND) (s (list Q20594) l))) (s (list Q20594) m))))))
(rule (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) DIFF) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (fun (cart real n2) bool) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) hull) (s (fun (fun (cart real n2) bool) bool) convex))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) a))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) b))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) c))) (s (fun (cart real n2) bool) EMPTY))))))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) UNION) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) UNION) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) b))) (s (cart real n2) c))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) c))) (s (cart real n2) a))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) interior) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (fun (cart real n2) bool) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) hull) (s (fun (fun (cart real n2) bool) bool) convex))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) a))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) b))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) c))) (s (fun (cart real n2) bool) EMPTY))))))))))))
(rule (s Q144875 (i (s (fun Q144875 Q144875) (i (s (fun Q144875 (fun Q144875 Q144875)) (i (s (fun bool (fun Q144875 (fun Q144875 Q144875))) COND) (s bool (i (s (fun Q144875 bool) (i (s (fun Q144875 (fun Q144875 bool)) a_) (s Q144875 k))) (s Q144875 i0))))) (s Q144875 j))) (s Q144875 (i (s (fun Q144875 Q144875) (i (s (fun Q144875 (fun Q144875 Q144875)) (i (s (fun bool (fun Q144875 (fun Q144875 Q144875))) COND) (s bool (i (s (fun Q144875 bool) (i (s (fun Q144875 (fun Q144875 bool)) a_) (s Q144875 k))) (s Q144875 j))))) (s Q144875 i0))) (s Q144875 k))))) (s Q144875 (i (s (fun Q144875 Q144875) (i (s (fun (prod Q144875 Q144875) (fun Q144875 Q144875)) swap) (s (prod Q144875 Q144875) (i (s (fun Q144875 (prod Q144875 Q144875)) (i (s (fun Q144875 (fun Q144875 (prod Q144875 Q144875))) c_) (s Q144875 i0))) (s Q144875 j))))) (s Q144875 k))))
(rule (s (fun Q96102 bool) (i (s (fun (fun Q96102 bool) (fun Q96102 bool)) (i (s (fun (fun (fun Q96102 bool) bool) (fun (fun Q96102 bool) (fun Q96102 bool))) hull) (s (fun (fun Q96102 bool) bool) P))) (s (fun Q96102 bool) (i (s (fun (fun Q96102 bool) (fun Q96102 bool)) (i (s (fun (fun Q96102 bool) (fun (fun Q96102 bool) (fun Q96102 bool))) UNION) (s (fun Q96102 bool) (i (s (fun (fun Q96102 bool) (fun Q96102 bool)) (i (s (fun (fun (fun Q96102 bool) bool) (fun (fun Q96102 bool) (fun Q96102 bool))) hull) (s (fun (fun Q96102 bool) bool) P))) (s (fun Q96102 bool) s0))))) (s (fun Q96102 bool) (i (s (fun (fun Q96102 bool) (fun Q96102 bool)) (i (s (fun (fun (fun Q96102 bool) bool) (fun (fun Q96102 bool) (fun Q96102 bool))) hull) (s (fun (fun Q96102 bool) bool) P))) (s (fun Q96102 bool) t))))))) (s (fun Q96102 bool) (i (s (fun (fun Q96102 bool) (fun Q96102 bool)) (i (s (fun (fun (fun Q96102 bool) bool) (fun (fun Q96102 bool) (fun Q96102 bool))) hull) (s (fun (fun Q96102 bool) bool) P))) (s (fun Q96102 bool) (i (s (fun (fun Q96102 bool) (fun Q96102 bool)) (i (s (fun (fun Q96102 bool) (fun (fun Q96102 bool) (fun Q96102 bool))) UNION) (s (fun Q96102 bool) s0))) (s (fun Q96102 bool) t))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) catn) (s (cart real n2) z))))
(rule (s (cart (cart real M) N) (i (s (fun (cart (cart real M) N) (cart (cart real M) N)) (i (s (fun (cart (cart real M) N) (fun (cart (cart real M) N) (cart (cart real M) N))) matrixu_add) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) A0))))) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) B0))))) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) B0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))))
(rule (s (cart (cart real M) N) (i (s (fun (cart (cart real M) N) (cart (cart real M) N)) (i (s (fun (cart (cart real M) N) (fun (cart (cart real M) N) (cart (cart real M) N))) matrixu_sub) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) A0))))) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) B0))))) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))))
(rule (s (cart (cart real Q115204) Q115205) (i (s (fun (cart (cart real Q115204) Q115203) (cart (cart real Q115204) Q115205)) (i (s (fun (cart (cart real Q115203) Q115205) (fun (cart (cart real Q115204) Q115203) (cart (cart real Q115204) Q115205))) matrixu_mul) (s (cart (cart real Q115203) Q115205) (i (s (fun (cart (cart real Q115205) Q115203) (cart (cart real Q115203) Q115205)) transp) (s (cart (cart real Q115205) Q115203) B0))))) (s (cart (cart real Q115204) Q115203) (i (s (fun (cart (cart real Q115203) Q115204) (cart (cart real Q115204) Q115203)) transp) (s (cart (cart real Q115203) Q115204) A0))))) (s (cart (cart real Q115204) Q115205) (i (s (fun (cart (cart real Q115205) Q115204) (cart (cart real Q115204) Q115205)) transp) (s (cart (cart real Q115205) Q115204) (i (s (fun (cart (cart real Q115205) Q115203) (cart (cart real Q115205) Q115204)) (i (s (fun (cart (cart real Q115203) Q115204) (fun (cart (cart real Q115205) Q115203) (cart (cart real Q115205) Q115204))) matrixu_mul) (s (cart (cart real Q115203) Q115204) A0))) (s (cart (cart real Q115205) Q115203) B0))))))
(rule (s real (i (s (fun (cart real Q715898) real) (i (s (fun (cart real Q715898) (fun (cart real Q715898) real)) (i (s (fun (cart real Q715898) (fun (cart real Q715898) (fun (cart real Q715898) real))) (i (s (fun (cart real Q715898) (fun (cart real Q715898) (fun (cart real Q715898) (fun (cart real Q715898) real)))) dihV) (s (cart real Q715898) (i (s (fun (cart real Q715898) (cart real Q715898)) vectoru_neg) (s (cart real Q715898) v0))))) (s (cart real Q715898) (i (s (fun (cart real Q715898) (cart real Q715898)) vectoru_neg) (s (cart real Q715898) v1))))) (s (cart real Q715898) (i (s (fun (cart real Q715898) (cart real Q715898)) vectoru_neg) (s (cart real Q715898) v2))))) (s (cart real Q715898) (i (s (fun (cart real Q715898) (cart real Q715898)) vectoru_neg) (s (cart real Q715898) v3))))) (s real (i (s (fun (cart real Q715898) real) (i (s (fun (cart real Q715898) (fun (cart real Q715898) real)) (i (s (fun (cart real Q715898) (fun (cart real Q715898) (fun (cart real Q715898) real))) (i (s (fun (cart real Q715898) (fun (cart real Q715898) (fun (cart real Q715898) (fun (cart real Q715898) real)))) dihV) (s (cart real Q715898) v0))) (s (cart real Q715898) v1))) (s (cart real Q715898) v2))) (s (cart real Q715898) v3))))
(rule (s (fun (cart real Q215710) bool) (i (s (fun (list (prod (cart real Q215710) (cart real Q215710))) (fun (cart real Q215710) bool)) closedu_segment) (s (list (prod (cart real Q215710) (cart real Q215710))) (i (s (fun (list (prod (cart real Q215710) (cart real Q215710))) (list (prod (cart real Q215710) (cart real Q215710)))) (i (s (fun (prod (cart real Q215710) (cart real Q215710)) (fun (list (prod (cart real Q215710) (cart real Q215710))) (list (prod (cart real Q215710) (cart real Q215710))))) CONS) (s (prod (cart real Q215710) (cart real Q215710)) (i (s (fun (cart real Q215710) (prod (cart real Q215710) (cart real Q215710))) (i (s (fun (cart real Q215710) (fun (cart real Q215710) (prod (cart real Q215710) (cart real Q215710)))) c_) (s (cart real Q215710) a))) (s (cart real Q215710) a))))) (s (list (prod (cart real Q215710) (cart real Q215710))) NIL))))) (s (fun (cart real Q215710) bool) (i (s (fun (fun (cart real Q215710) bool) (fun (cart real Q215710) bool)) (i (s (fun (cart real Q215710) (fun (fun (cart real Q215710) bool) (fun (cart real Q215710) bool))) INSERT) (s (cart real Q215710) a))) (s (fun (cart real Q215710) bool) EMPTY))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun (fun (cart real N) bool) bool) (i (s (fun (cart real N) (fun (fun (cart real N) bool) bool)) IN) (s (cart real N) a))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) s0))))))) (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) s0))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) s0))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) s0))))))
(rule (s (fun (cart real Q310427) bool) (i (s (fun (list (prod (cart real Q310427) (cart real Q310427))) (fun (cart real Q310427) bool)) closedu_segment) (s (list (prod (cart real Q310427) (cart real Q310427))) (i (s (fun (list (prod (cart real Q310427) (cart real Q310427))) (list (prod (cart real Q310427) (cart real Q310427)))) (i (s (fun (prod (cart real Q310427) (cart real Q310427)) (fun (list (prod (cart real Q310427) (cart real Q310427))) (list (prod (cart real Q310427) (cart real Q310427))))) CONS) (s (prod (cart real Q310427) (cart real Q310427)) (i (s (fun (cart real Q310427) (prod (cart real Q310427) (cart real Q310427))) (i (s (fun (cart real Q310427) (fun (cart real Q310427) (prod (cart real Q310427) (cart real Q310427)))) c_) (s (cart real Q310427) a))) (s (cart real Q310427) b))))) (s (list (prod (cart real Q310427) (cart real Q310427))) NIL))))) (s (fun (cart real Q310427) bool) (i (s (fun (fun (cart real n1) (cart real Q310427)) (fun (cart real Q310427) bool)) pathu_image) (s (fun (cart real n1) (cart real Q310427)) (i (s (fun (prod (cart real Q310427) (cart real Q310427)) (fun (cart real n1) (cart real Q310427))) linepath) (s (prod (cart real Q310427) (cart real Q310427)) (i (s (fun (cart real Q310427) (prod (cart real Q310427) (cart real Q310427))) (i (s (fun (cart real Q310427) (fun (cart real Q310427) (prod (cart real Q310427) (cart real Q310427)))) c_) (s (cart real Q310427) a))) (s (cart real Q310427) b))))))))
(rule (s real (i (s (fun (prod (fun (cart real Q239348) bool) (fun (cart real Q239348) bool)) real) setdist) (s (prod (fun (cart real Q239348) bool) (fun (cart real Q239348) bool)) (i (s (fun (fun (cart real Q239348) bool) (prod (fun (cart real Q239348) bool) (fun (cart real Q239348) bool))) (i (s (fun (fun (cart real Q239348) bool) (fun (fun (cart real Q239348) bool) (prod (fun (cart real Q239348) bool) (fun (cart real Q239348) bool)))) c_) (s (fun (cart real Q239348) bool) (i (s (fun (fun (cart real Q239348) bool) (fun (cart real Q239348) bool)) (i (s (fun (cart real Q239348) (fun (fun (cart real Q239348) bool) (fun (cart real Q239348) bool))) INSERT) (s (cart real Q239348) x))) (s (fun (cart real Q239348) bool) EMPTY))))) (s (fun (cart real Q239348) bool) (i (s (fun (fun (cart real Q239348) bool) (fun (cart real Q239348) bool)) (i (s (fun (cart real Q239348) (fun (fun (cart real Q239348) bool) (fun (cart real Q239348) bool))) INSERT) (s (cart real Q239348) y))) (s (fun (cart real Q239348) bool) EMPTY))))))) (s real (i (s (fun (prod (cart real Q239348) (cart real Q239348)) real) distance) (s (prod (cart real Q239348) (cart real Q239348)) (i (s (fun (cart real Q239348) (prod (cart real Q239348) (cart real Q239348))) (i (s (fun (cart real Q239348) (fun (cart real Q239348) (prod (cart real Q239348) (cart real Q239348)))) c_) (s (cart real Q239348) x))) (s (cart real Q239348) y))))))
(rule (s A (i (s (fun num A) (i (s (fun (cart A n2) (fun num A)) d_) (s (cart A n2) (i (s (fun (list A) (cart A n2)) vector) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A y))) (s (list A) NIL))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s A y))
(rule (s (fun (cart real Q208555) bool) (i (s (fun (list (prod (cart real Q208555) (cart real Q208555))) (fun (cart real Q208555) bool)) closedu_interval) (s (list (prod (cart real Q208555) (cart real Q208555))) (i (s (fun (list (prod (cart real Q208555) (cart real Q208555))) (list (prod (cart real Q208555) (cart real Q208555)))) (i (s (fun (prod (cart real Q208555) (cart real Q208555)) (fun (list (prod (cart real Q208555) (cart real Q208555))) (list (prod (cart real Q208555) (cart real Q208555))))) CONS) (s (prod (cart real Q208555) (cart real Q208555)) (i (s (fun (cart real Q208555) (prod (cart real Q208555) (cart real Q208555))) (i (s (fun (cart real Q208555) (fun (cart real Q208555) (prod (cart real Q208555) (cart real Q208555)))) c_) (s (cart real Q208555) a))) (s (cart real Q208555) a))))) (s (list (prod (cart real Q208555) (cart real Q208555))) NIL))))) (s (fun (cart real Q208555) bool) (i (s (fun (fun (cart real Q208555) bool) (fun (cart real Q208555) bool)) (i (s (fun (cart real Q208555) (fun (fun (cart real Q208555) bool) (fun (cart real Q208555) bool))) INSERT) (s (cart real Q208555) a))) (s (fun (cart real Q208555) bool) EMPTY))))
(rule (s real (i (s (fun (cart real Q715941) real) (i (s (fun (cart real Q715941) (fun (cart real Q715941) real)) (i (s (fun (cart real Q715941) (fun (cart real Q715941) (fun (cart real Q715941) real))) (i (s (fun (cart real Q715941) (fun (cart real Q715941) (fun (cart real Q715941) (fun (cart real Q715941) real)))) dihV) (s (cart real Q715941) (i (s (fun num (cart real Q715941)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q715941) (i (s (fun (cart real Q715941) (cart real Q715941)) vectoru_neg) (s (cart real Q715941) v1))))) (s (cart real Q715941) (i (s (fun (cart real Q715941) (cart real Q715941)) vectoru_neg) (s (cart real Q715941) v2))))) (s (cart real Q715941) (i (s (fun (cart real Q715941) (cart real Q715941)) vectoru_neg) (s (cart real Q715941) v3))))) (s real (i (s (fun (cart real Q715941) real) (i (s (fun (cart real Q715941) (fun (cart real Q715941) real)) (i (s (fun (cart real Q715941) (fun (cart real Q715941) (fun (cart real Q715941) real))) (i (s (fun (cart real Q715941) (fun (cart real Q715941) (fun (cart real Q715941) (fun (cart real Q715941) real)))) dihV) (s (cart real Q715941) (i (s (fun num (cart real Q715941)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q715941) v1))) (s (cart real Q715941) v2))) (s (cart real Q715941) v3))))
(rule (s A (i (s (fun num A) (i (s (fun (cart A n2) (fun num A)) d_) (s (cart A n2) (i (s (fun (list A) (cart A n2)) vector) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A y))) (s (list A) NIL))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s A x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) sin) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) sin) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) cos) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real y))) (s real x))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) cos) (s real y))))))
(rule (s (list Q18337) (i (s (fun (list Q18337) (list Q18337)) (i (s (fun (list Q18337) (fun (list Q18337) (list Q18337))) (i (s (fun bool (fun (list Q18337) (fun (list Q18337) (list Q18337)))) COND) (s bool (i (s (fun (list Q18337) bool) (i (s (fun (list Q18337) (fun (list Q18337) bool)) a_) (s (list Q18337) t))) (s (list Q18337) NIL))))) (s (list Q18337) NIL))) (s (list Q18337) (i (s (fun (list Q18337) (list Q18337)) (i (s (fun Q18337 (fun (list Q18337) (list Q18337))) CONS) (s Q18337 h))) (s (list Q18337) (i (s (fun (list Q18337) (list Q18337)) BUTLAST) (s (list Q18337) t))))))) (s (list Q18337) (i (s (fun (list Q18337) (list Q18337)) BUTLAST) (s (list Q18337) (i (s (fun (list Q18337) (list Q18337)) (i (s (fun Q18337 (fun (list Q18337) (list Q18337))) CONS) (s Q18337 h))) (s (list Q18337) t))))))
(rule (s real (i (s (fun (cart real (finite_sum Q119535 Q119536)) real) (i (s (fun (cart real (finite_sum Q119535 Q119536)) (fun (cart real (finite_sum Q119535 Q119536)) real)) dot) (s (cart real (finite_sum Q119535 Q119536)) (i (s (fun (cart real Q119536) (cart real (finite_sum Q119535 Q119536))) (i (s (fun (cart real Q119535) (fun (cart real Q119536) (cart real (finite_sum Q119535 Q119536)))) pastecart) (s (cart real Q119535) x1))) (s (cart real Q119536) x2))))) (s (cart real (finite_sum Q119535 Q119536)) (i (s (fun (cart real Q119536) (cart real (finite_sum Q119535 Q119536))) (i (s (fun (cart real Q119535) (fun (cart real Q119536) (cart real (finite_sum Q119535 Q119536)))) pastecart) (s (cart real Q119535) y1))) (s (cart real Q119536) y2))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real Q119535) real) (i (s (fun (cart real Q119535) (fun (cart real Q119535) real)) dot) (s (cart real Q119535) x1))) (s (cart real Q119535) y1))))) (s real (i (s (fun (cart real Q119536) real) (i (s (fun (cart real Q119536) (fun (cart real Q119536) real)) dot) (s (cart real Q119536) x2))) (s (cart real Q119536) y2))))))
(rule (s (fun num (fun A bool)) (i (s (fun (fun num (fun A bool)) (fun num (fun A bool))) (i (s (fun (fun num (fun A bool)) (fun (fun num (fun A bool)) (fun num (fun A bool)))) INJP) (s (fun num (fun A bool)) (i (s (fun num (fun num (fun A bool))) INJN) (s num (i (s (fun num num) SUC) (s num c))))))) (s (fun num (fun A bool)) (i (s (fun (fun num (fun A bool)) (fun num (fun A bool))) (i (s (fun (fun num (fun A bool)) (fun (fun num (fun A bool)) (fun num (fun A bool)))) INJP) (s (fun num (fun A bool)) (i (s (fun A (fun num (fun A bool))) INJA) (s A i0))))) (s (fun num (fun A bool)) (i (s (fun (fun num (fun num (fun A bool))) (fun num (fun A bool))) INJF) (s (fun num (fun num (fun A bool))) r))))))) (s (fun num (fun A bool)) (i (s (fun (fun num (fun num (fun A bool))) (fun num (fun A bool))) (i (s (fun A (fun (fun num (fun num (fun A bool))) (fun num (fun A bool)))) (i (s (fun num (fun A (fun (fun num (fun num (fun A bool))) (fun num (fun A bool))))) ZCONSTR) (s num c))) (s A i0))) (s (fun num (fun num (fun A bool))) r))))
(rule (s (fun (cart real Q170010) bool) (i (s (fun (fun (cart real Q170010) bool) (fun (cart real Q170010) bool)) (i (s (fun (fun (cart real Q170010) bool) (fun (fun (cart real Q170010) bool) (fun (cart real Q170010) bool))) UNION) (s (fun (cart real Q170010) bool) (i (s (fun (prod (cart real Q170010) real) (fun (cart real Q170010) bool)) ball) (s (prod (cart real Q170010) real) (i (s (fun real (prod (cart real Q170010) real)) (i (s (fun (cart real Q170010) (fun real (prod (cart real Q170010) real))) c_) (s (cart real Q170010) a))) (s real r))))))) (s (fun (cart real Q170010) bool) (i (s (fun (prod (cart real Q170010) real) (fun (cart real Q170010) bool)) ball) (s (prod (cart real Q170010) real) (i (s (fun real (prod (cart real Q170010) real)) (i (s (fun (cart real Q170010) (fun real (prod (cart real Q170010) real))) c_) (s (cart real Q170010) a))) (s real s0))))))) (s (fun (cart real Q170010) bool) (i (s (fun (prod (cart real Q170010) real) (fun (cart real Q170010) bool)) ball) (s (prod (cart real Q170010) real) (i (s (fun real (prod (cart real Q170010) real)) (i (s (fun (cart real Q170010) (fun real (prod (cart real Q170010) real))) c_) (s (cart real Q170010) a))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real r))) (s real s0))))))))
(rule (s (fun (cart real Q170050) bool) (i (s (fun (fun (cart real Q170050) bool) (fun (cart real Q170050) bool)) (i (s (fun (fun (cart real Q170050) bool) (fun (fun (cart real Q170050) bool) (fun (cart real Q170050) bool))) INTER) (s (fun (cart real Q170050) bool) (i (s (fun (prod (cart real Q170050) real) (fun (cart real Q170050) bool)) ball) (s (prod (cart real Q170050) real) (i (s (fun real (prod (cart real Q170050) real)) (i (s (fun (cart real Q170050) (fun real (prod (cart real Q170050) real))) c_) (s (cart real Q170050) a))) (s real r))))))) (s (fun (cart real Q170050) bool) (i (s (fun (prod (cart real Q170050) real) (fun (cart real Q170050) bool)) ball) (s (prod (cart real Q170050) real) (i (s (fun real (prod (cart real Q170050) real)) (i (s (fun (cart real Q170050) (fun real (prod (cart real Q170050) real))) c_) (s (cart real Q170050) a))) (s real s0))))))) (s (fun (cart real Q170050) bool) (i (s (fun (prod (cart real Q170050) real) (fun (cart real Q170050) bool)) ball) (s (prod (cart real Q170050) real) (i (s (fun real (prod (cart real Q170050) real)) (i (s (fun (cart real Q170050) (fun real (prod (cart real Q170050) real))) c_) (s (cart real Q170050) a))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real r))) (s real s0))))))))
(rule (s real (i (s (fun (prod (cart real N) (prod (cart real N) (cart real N))) real) angle) (s (prod (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (prod (cart real N) (cart real N)) (prod (cart real N) (prod (cart real N) (cart real N)))) (i (s (fun (cart real N) (fun (prod (cart real N) (cart real N)) (prod (cart real N) (prod (cart real N) (cart real N))))) c_) (s (cart real N) v))) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) u))) (s (cart real N) w))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) (i (s (fun (cart real N) (fun (cart real N) (fun (cart real N) real))) arcV) (s (cart real N) u))) (s (cart real N) v))) (s (cart real N) w))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) conic))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) convex))) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) convexu_cone))) (s (fun (cart real N) bool) s0))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) frac) (s real x))))) (s real (i (s (fun real real) frac) (s real y))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) frac) (s real x))))) (s real (i (s (fun real real) frac) (s real y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) frac) (s real x))))) (s real (i (s (fun real real) frac) (s real y))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) frac) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) frac) (s real x))))) (s real (i (s (fun real real) frac) (s real y))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) floor) (s real x))))) (s real (i (s (fun real real) floor) (s real y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) floor) (s real x))))) (s real (i (s (fun real real) floor) (s real y))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) floor) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) convexu_cone))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) UNION) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) (cart real N)) (fun (fun (cart real N) bool) (fun (cart real N) bool))) IMAGE) (s (fun (cart real N) (cart real N)) vectoru_neg))) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) span) (s (fun (cart real N) bool) s0))))
(rule (s (cart A M) (i (s (fun (cart A (finite_sum M N)) (cart A M)) fstcart) (s (cart A (finite_sum M N)) (i (s (fun (cart A N) (cart A (finite_sum M N))) (i (s (fun (cart A M) (fun (cart A N) (cart A (finite_sum M N)))) pastecart) (s (cart A M) x))) (s (cart A N) y))))) (s (cart A M) x))
(rule (s (cart A N) (i (s (fun (cart A (finite_sum M N)) (cart A N)) sndcart) (s (cart A (finite_sum M N)) (i (s (fun (cart A N) (cart A (finite_sum M N))) (i (s (fun (cart A M) (fun (cart A N) (cart A (finite_sum M N)))) pastecart) (s (cart A M) x))) (s (cart A N) y))))) (s (cart A N) y))
(rule (s num (i (s (fun (cart (cart real M) M) num) rank) (s (cart (cart real M) M) (i (s (fun (cart (cart real M) N) (cart (cart real M) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real M) N) (cart (cart real M) M))) matrixu_mul) (s (cart (cart real N) M) (i (s (fun (cart (cart real M) N) (cart (cart real N) M)) transp) (s (cart (cart real M) N) A0))))) (s (cart (cart real M) N) A0))))) (s num (i (s (fun (cart (cart real M) N) num) rank) (s (cart (cart real M) N) A0))))
(rule (s (fun Q144970 Q144970) (i (s (fun (fun Q144970 Q144970) (fun Q144970 Q144970)) inverse) (s (fun Q144970 Q144970) (i (s (fun (prod Q144970 Q144970) (fun Q144970 Q144970)) swap) (s (prod Q144970 Q144970) (i (s (fun Q144970 (prod Q144970 Q144970)) (i (s (fun Q144970 (fun Q144970 (prod Q144970 Q144970))) c_) (s Q144970 a))) (s Q144970 b))))))) (s (fun Q144970 Q144970) (i (s (fun (prod Q144970 Q144970) (fun Q144970 Q144970)) swap) (s (prod Q144970 Q144970) (i (s (fun Q144970 (prod Q144970 Q144970)) (i (s (fun Q144970 (fun Q144970 (prod Q144970 Q144970))) c_) (s Q144970 a))) (s Q144970 b))))))
(rule (s (fun A (fun B bool)) (i (s (fun (prod A B) (fun A (fun B bool))) REPu_prod) (s (prod A B) (i (s (fun (fun A (fun B bool)) (prod A B)) ABSu_prod) (s (fun A (fun B bool)) (i (s (fun B (fun A (fun B bool))) (i (s (fun A (fun B (fun A (fun B bool)))) mku_pair) (s A x))) (s B y))))))) (s (fun A (fun B bool)) (i (s (fun B (fun A (fun B bool))) (i (s (fun A (fun B (fun A (fun B bool)))) mku_pair) (s A x))) (s B y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun (cart real n2) real) (i (s (fun (cart real n2) (fun (cart real n2) real)) dot) (s (cart real n2) x))) (s (cart real n2) y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) azim) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real c))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real r))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun (cart real n3) (fun real (fun real real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun real (fun real real)))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun real (fun real real))))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun real (fun real real)))))) volu_conicu_capu_wedge) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))) (s real r))) (s real c))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun real real) realu_sgn) (s real x))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun int bool) (i (s (fun int (fun int bool)) intu_lt) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun int bool) (i (s (fun int (fun int bool)) intu_lt) (s int x))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s int (i (s (fun int int) intu_neg) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s int (i (s (fun int int) intu_sgn) (s int x))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) frontier) (s (fun (cart real N) bool) s0))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) TC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) SC) (s (fun A (fun A bool)) R))))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSTC) (s (fun A (fun A bool)) R))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun (fun (cart real N) bool) bool) (i (s (fun (cart real N) (fun (fun (cart real N) bool) bool)) IN) (s (cart real N) x))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) span) (s (fun (cart real N) bool) s0))))))) (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) s0))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) s0))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) x))) (s (fun (cart real N) bool) s0))))))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) w))) (s (cart real n2) z))))
(rule (s A (i (s (fun A A) (i (s (fun A (fun A A)) (i (s (fun bool (fun A (fun A A))) COND) (s bool (i (s (fun (list A) bool) (i (s (fun (list A) (fun (list A) bool)) a_) (s (list A) l))) (s (list A) NIL))))) (s A (i (s (fun (list A) A) HD) (s (list A) m))))) (s A (i (s (fun (list A) A) HD) (s (list A) l))))) (s A (i (s (fun (list A) A) HD) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun (list A) (fun (list A) (list A))) APPEND) (s (list A) l))) (s (list A) m))))))
(rule (s Q20545 (i (s (fun Q20545 Q20545) (i (s (fun Q20545 (fun Q20545 Q20545)) (i (s (fun bool (fun Q20545 (fun Q20545 Q20545))) COND) (s bool (i (s (fun (list Q20545) bool) (i (s (fun (list Q20545) (fun (list Q20545) bool)) a_) (s (list Q20545) q))) (s (list Q20545) NIL))))) (s Q20545 (i (s (fun (list Q20545) Q20545) LAST) (s (list Q20545) p))))) (s Q20545 (i (s (fun (list Q20545) Q20545) LAST) (s (list Q20545) q))))) (s Q20545 (i (s (fun (list Q20545) Q20545) LAST) (s (list Q20545) (i (s (fun (list Q20545) (list Q20545)) (i (s (fun (list Q20545) (fun (list Q20545) (list Q20545))) APPEND) (s (list Q20545) p))) (s (list Q20545) q))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) azim) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real r))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) (i (s (fun (cart real n3) (fun real real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun real real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun real real)))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun real real))))) volu_ballu_wedge) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))) (s real r))))
(rule (s real (i (s (fun (prod (cart real Q104048) (cart real Q104048)) real) distance) (s (prod (cart real Q104048) (cart real Q104048)) (i (s (fun (cart real Q104048) (prod (cart real Q104048) (cart real Q104048))) (i (s (fun (cart real Q104048) (fun (cart real Q104048) (prod (cart real Q104048) (cart real Q104048)))) c_) (s (cart real Q104048) (i (s (fun (cart real Q104048) (cart real Q104048)) (i (s (fun real (fun (cart real Q104048) (cart real Q104048))) r_) (s real c))) (s (cart real Q104048) x))))) (s (cart real Q104048) (i (s (fun (cart real Q104048) (cart real Q104048)) (i (s (fun real (fun (cart real Q104048) (cart real Q104048))) r_) (s real c))) (s (cart real Q104048) y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_abs) (s real c))))) (s real (i (s (fun (prod (cart real Q104048) (cart real Q104048)) real) distance) (s (prod (cart real Q104048) (cart real Q104048)) (i (s (fun (cart real Q104048) (prod (cart real Q104048) (cart real Q104048))) (i (s (fun (cart real Q104048) (fun (cart real Q104048) (prod (cart real Q104048) (cart real Q104048)))) c_) (s (cart real Q104048) x))) (s (cart real Q104048) y))))))))
(rule (s (fun (cart real Q707409) bool) (i (s (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool)) (i (s (fun (fun (cart real Q707409) bool) (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool))) affu_ge) (s (fun (cart real Q707409) bool) (i (s (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool)) (i (s (fun (cart real Q707409) (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool))) INSERT) (s (cart real Q707409) x))) (s (fun (cart real Q707409) bool) EMPTY))))) (s (fun (cart real Q707409) bool) (i (s (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool)) (i (s (fun (cart real Q707409) (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool))) INSERT) (s (cart real Q707409) x))) (s (fun (cart real Q707409) bool) EMPTY))))) (s (fun (cart real Q707409) bool) (i (s (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool)) (i (s (fun (cart real Q707409) (fun (fun (cart real Q707409) bool) (fun (cart real Q707409) bool))) INSERT) (s (cart real Q707409) x))) (s (fun (cart real Q707409) bool) EMPTY))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) cos) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) cos) (s real x))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real x))))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) (i (s (fun num (cart real n1)) (i (s (fun (cart (cart real n1) n1) (fun num (cart real n1))) d_) (s (cart (cart real n1) n1) (i (s (fun (cart (cart real n1) N) (cart (cart real n1) n1)) (i (s (fun (cart (cart real N) n1) (fun (cart (cart real n1) N) (cart (cart real n1) n1))) matrixu_mul) (s (cart (cart real N) n1) (i (s (fun (cart real N) (cart (cart real N) n1)) rowvector) (s (cart real N) x))))) (s (cart (cart real n1) N) (i (s (fun (cart real N) (cart (cart real n1) N)) columnvector) (s (cart real N) y))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) x))) (s (cart real N) y))))
(rule (s (fun Q560259 Q560259) (i (s (fun (fun Q560259 Q560259) (fun Q560259 Q560259)) (i (s (fun (fun Q560259 Q560259) (fun (fun Q560259 Q560259) (fun Q560259 Q560259))) o) (s (fun Q560259 Q560259) f))) (s (fun Q560259 Q560259) (i (s (fun (fun Q560259 Q560259) (fun Q560259 Q560259)) (i (s (fun num (fun (fun Q560259 Q560259) (fun Q560259 Q560259))) ITER) (s num n))) (s (fun Q560259 Q560259) f))))) (s (fun Q560259 Q560259) (i (s (fun (fun Q560259 Q560259) (fun Q560259 Q560259)) (i (s (fun num (fun (fun Q560259 Q560259) (fun Q560259 Q560259))) ITER) (s num (i (s (fun num num) SUC) (s num n))))) (s (fun Q560259 Q560259) f))))
(rule (s (fun Q733976 bool) (i (s (fun (fun Q733976 bool) (fun Q733976 bool)) (i (s (fun (fun Q733976 bool) (fun (fun Q733976 bool) (fun Q733976 bool))) UNION) (s (fun Q733976 bool) (i (s (fun (fun Q733976 bool) (fun Q733976 bool)) (i (s (fun (fun Q733976 bool) (fun (fun Q733976 bool) (fun Q733976 bool))) DIFF) (s (fun Q733976 bool) X))) (s (fun Q733976 bool) Y))))) (s (fun Q733976 bool) (i (s (fun (fun Q733976 bool) (fun Q733976 bool)) (i (s (fun (fun Q733976 bool) (fun (fun Q733976 bool) (fun Q733976 bool))) DIFF) (s (fun Q733976 bool) Y))) (s (fun Q733976 bool) X))))) (s (fun Q733976 bool) (i (s (fun (fun Q733976 bool) (fun Q733976 bool)) (i (s (fun (fun Q733976 bool) (fun (fun Q733976 bool) (fun Q733976 bool))) SDIFF) (s (fun Q733976 bool) X))) (s (fun Q733976 bool) Y))))
(rule (s (fun Q560339 Q560339) (i (s (fun (fun Q560339 Q560339) (fun Q560339 Q560339)) (i (s (fun (fun Q560339 Q560339) (fun (fun Q560339 Q560339) (fun Q560339 Q560339))) o) (s (fun Q560339 Q560339) (i (s (fun (fun Q560339 Q560339) (fun Q560339 Q560339)) (i (s (fun num (fun (fun Q560339 Q560339) (fun Q560339 Q560339))) ITER) (s num n))) (s (fun Q560339 Q560339) f))))) (s (fun Q560339 Q560339) f))) (s (fun Q560339 Q560339) (i (s (fun (fun Q560339 Q560339) (fun Q560339 Q560339)) (i (s (fun num (fun (fun Q560339 Q560339) (fun Q560339 Q560339))) ITER) (s num (i (s (fun num num) SUC) (s num n))))) (s (fun Q560339 Q560339) f))))
(rule (s (prod A B) (i (s (fun B (prod A B)) (i (s (fun A (fun B (prod A B))) c_) (s A (i (s (fun (prod A B) A) FST) (s (prod A B) x))))) (s B (i (s (fun (prod A B) B) SND) (s (prod A B) x))))) (s (prod A B) x))
(rule (s (fun (finite_sum A B) bool) (i (s (fun (fun num bool) (fun (finite_sum A B) bool)) (i (s (fun (fun num (finite_sum A B)) (fun (fun num bool) (fun (finite_sum A B) bool))) IMAGE) (s (fun num (finite_sum A B)) mku_finiteu_sum))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun (fun A bool) num) dimindex) (s (fun A bool) UNIV))))) (s num (i (s (fun (fun B bool) num) dimindex) (s (fun B bool) UNIV))))))))) (s (fun (finite_sum A B) bool) UNIV))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_sub) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun real (fun (cart real n3) (cart real n3))) r_) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) w))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) z))) (s (list (cart real n3)) NIL))))))))))))) (s (cart real n3) y))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun real (fun (cart real n3) (cart real n3))) r_) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) w))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y))) (s (list (cart real n3)) NIL))))))))))))) (s (cart real n3) z))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) w))) (s (cart real n3) x))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) z))))))
(rule (s (list Q19873) (i (s (fun (list Q19873) (list Q19873)) (i (s (fun (list Q19873) (fun (list Q19873) (list Q19873))) APPEND) (s (list Q19873) (i (s (fun (list Q19873) (list Q19873)) (i (s (fun (fun Q19873 bool) (fun (list Q19873) (list Q19873))) FILTER) (s (fun Q19873 bool) P))) (s (list Q19873) l1))))) (s (list Q19873) (i (s (fun (list Q19873) (list Q19873)) (i (s (fun (fun Q19873 bool) (fun (list Q19873) (list Q19873))) FILTER) (s (fun Q19873 bool) P))) (s (list Q19873) l2))))) (s (list Q19873) (i (s (fun (list Q19873) (list Q19873)) (i (s (fun (fun Q19873 bool) (fun (list Q19873) (list Q19873))) FILTER) (s (fun Q19873 bool) P))) (s (list Q19873) (i (s (fun (list Q19873) (list Q19873)) (i (s (fun (list Q19873) (fun (list Q19873) (list Q19873))) APPEND) (s (list Q19873) l1))) (s (list Q19873) l2))))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun (fun A bool) bool) (fun (fun A bool) (fun A bool))) hull) (s (fun (fun A bool) bool) P))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun (fun A bool) bool) (fun (fun A bool) (fun A bool))) hull) (s (fun (fun A bool) bool) P))) (s (fun A bool) s0))))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun (fun A bool) bool) (fun (fun A bool) (fun A bool))) hull) (s (fun (fun A bool) bool) P))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) t))))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) u))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) t))) (s (fun A bool) u))))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun (fun A bool) bool) (fun (fun A bool) (fun A bool))) hull) (s (fun (fun A bool) bool) P))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun (fun A bool) bool) (fun (fun A bool) (fun A bool))) hull) (s (fun (fun A bool) bool) P))) (s (fun A bool) t))))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun (fun A bool) bool) (fun (fun A bool) (fun A bool))) hull) (s (fun (fun A bool) bool) P))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) t))))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) t))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) u))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) t))) (s (fun A bool) u))))))
(rule (s C (i (s (fun (prod A B) C) (i (s (fun (fun A (fun B C)) (fun (prod A B) C)) UNCURRY) (s (fun A (fun B C)) f))) (s (prod A B) (i (s (fun B (prod A B)) (i (s (fun A (fun B (prod A B))) c_) (s A x))) (s B y))))) (s C (i (s (fun B C) (i (s (fun A (fun B C)) f) (s A x))) (s B y))))
(rule (s (fun Q49179 bool) (i (s (fun (fun (fun Q49179 bool) bool) (fun Q49179 bool)) UNIONS) (s (fun (fun Q49179 bool) bool) (i (s (fun (fun (fun Q49170 bool) bool) (fun (fun Q49179 bool) bool)) (i (s (fun (fun (fun Q49170 bool) (fun Q49179 bool)) (fun (fun (fun Q49170 bool) bool) (fun (fun Q49179 bool) bool))) IMAGE) (s (fun (fun Q49170 bool) (fun Q49179 bool)) (i (s (fun (fun Q49170 Q49179) (fun (fun Q49170 bool) (fun Q49179 bool))) IMAGE) (s (fun Q49170 Q49179) f))))) (s (fun (fun Q49170 bool) bool) s0))))) (s (fun Q49179 bool) (i (s (fun (fun Q49170 bool) (fun Q49179 bool)) (i (s (fun (fun Q49170 Q49179) (fun (fun Q49170 bool) (fun Q49179 bool))) IMAGE) (s (fun Q49170 Q49179) f))) (s (fun Q49170 bool) (i (s (fun (fun (fun Q49170 bool) bool) (fun Q49170 bool)) UNIONS) (s (fun (fun Q49170 bool) bool) s0))))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_add) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) B0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) B0))))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) B0))) (s (cart (cart real N) M) A0))))
(rule (s Q560357 (i (s (fun Q560357 Q560357) (i (s (fun (fun Q560357 Q560357) (fun Q560357 Q560357)) (i (s (fun num (fun (fun Q560357 Q560357) (fun Q560357 Q560357))) ITER) (s num n))) (s (fun Q560357 Q560357) f))) (s Q560357 (i (s (fun Q560357 Q560357) (i (s (fun (fun Q560357 Q560357) (fun Q560357 Q560357)) (i (s (fun num (fun (fun Q560357 Q560357) (fun Q560357 Q560357))) ITER) (s num m))) (s (fun Q560357 Q560357) f))) (s Q560357 x))))) (s Q560357 (i (s (fun Q560357 Q560357) (i (s (fun (fun Q560357 Q560357) (fun Q560357 Q560357)) (i (s (fun num (fun (fun Q560357 Q560357) (fun Q560357 Q560357))) ITER) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num m))))) (s (fun Q560357 Q560357) f))) (s Q560357 x))))
(rule (s (fun (cart real Q722849) bool) (i (s (fun (fun (cart real Q722849) bool) (fun (cart real Q722849) bool)) (i (s (fun (fun (cart real Q722849) bool) (fun (fun (cart real Q722849) bool) (fun (cart real Q722849) bool))) INTER) (s (fun (cart real Q722849) bool) (i (s (fun real (fun (cart real Q722849) bool)) (i (s (fun (cart real Q722849) (fun real (fun (cart real Q722849) bool))) normball) (s (cart real Q722849) v0))) (s real r))))) (s (fun (cart real Q722849) bool) (i (s (fun real (fun (cart real Q722849) bool)) (i (s (fun (cart real Q722849) (fun real (fun (cart real Q722849) bool))) (i (s (fun (cart real Q722849) (fun (cart real Q722849) (fun real (fun (cart real Q722849) bool)))) rconeu_gt) (s (cart real Q722849) v0))) (s (cart real Q722849) v1))) (s real a))))) (s (fun (cart real Q722849) bool) (i (s (fun real (fun (cart real Q722849) bool)) (i (s (fun real (fun real (fun (cart real Q722849) bool))) (i (s (fun (cart real Q722849) (fun real (fun real (fun (cart real Q722849) bool)))) (i (s (fun (cart real Q722849) (fun (cart real Q722849) (fun real (fun real (fun (cart real Q722849) bool))))) conicu_cap) (s (cart real Q722849) v0))) (s (cart real Q722849) v1))) (s real r))) (s real a))))
(rule (s Q20651 (i (s (fun Q20651 Q20651) (i (s (fun Q20651 (fun Q20651 Q20651)) (i (s (fun bool (fun Q20651 (fun Q20651 Q20651))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s Q20651 h))) (s Q20651 (i (s (fun (list Q20651) Q20651) (i (s (fun num (fun (list Q20651) Q20651)) EL) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (list Q20651) t))))) (s Q20651 (i (s (fun (list Q20651) Q20651) (i (s (fun num (fun (list Q20651) Q20651)) EL) (s num n))) (s (list Q20651) (i (s (fun (list Q20651) (list Q20651)) (i (s (fun Q20651 (fun (list Q20651) (list Q20651))) CONS) (s Q20651 h))) (s (list Q20651) t))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) z))))
(rule (s Q18731 (i (s (fun Q18731 Q18731) (i (s (fun (list Q18741) (fun Q18731 Q18731)) (i (s (fun (list Q18733) (fun (list Q18741) (fun Q18731 Q18731))) (i (s (fun (fun Q18733 (fun Q18741 (fun Q18731 Q18731))) (fun (list Q18733) (fun (list Q18741) (fun Q18731 Q18731)))) ITLIST2) (s (fun Q18733 (fun Q18741 (fun Q18731 Q18731))) f))) (s (list Q18733) NIL))) (s (list Q18741) l2))) (s Q18731 b))) (s Q18731 b))
(rule (s (cart (cart real n2) n2) (i (s (fun (list (cart real n2)) (cart (cart real n2) n2)) vector) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) (i (s (fun (list real) (cart real n2)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) cos) (s real t))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) sin) (s real t))))))) (s (list real) NIL))))))))) (s (list (cart real n2)) (i (s (fun (list (cart real n2)) (list (cart real n2))) (i (s (fun (cart real n2) (fun (list (cart real n2)) (list (cart real n2)))) CONS) (s (cart real n2) (i (s (fun (list real) (cart real n2)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) sin) (s real t))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) cos) (s real t))))) (s (list real) NIL))))))))) (s (list (cart real n2)) NIL))))))) (s (cart (cart real n2) n2) (i (s (fun (fun (cart real n2) (cart real n2)) (cart (cart real n2) n2)) matrix) (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))))))
(rule (s Q18773 (i (s (fun Q18773 Q18773) (i (s (fun (list Q18774) (fun Q18773 Q18773)) (i (s (fun (list Q18775) (fun (list Q18774) (fun Q18773 Q18773))) (i (s (fun (fun Q18775 (fun Q18774 (fun Q18773 Q18773))) (fun (list Q18775) (fun (list Q18774) (fun Q18773 Q18773)))) ITLIST2) (s (fun Q18775 (fun Q18774 (fun Q18773 Q18773))) f))) (s (list Q18775) NIL))) (s (list Q18774) NIL))) (s Q18773 b))) (s Q18773 b))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num p))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num k))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num p))) (s num k))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num p))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num k))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))
(rule (s (fun (cart real n1) (cart real Q310687)) (i (s (fun (fun (cart real n1) (cart real Q310687)) (fun (cart real n1) (cart real Q310687))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real Q310687)) (fun (cart real n1) (cart real Q310687)))) shiftpath) (s (cart real n1) t))) (s (fun (cart real n1) (cart real Q310687)) (i (s (fun (prod (cart real Q310687) (cart real Q310687)) (fun (cart real n1) (cart real Q310687))) linepath) (s (prod (cart real Q310687) (cart real Q310687)) (i (s (fun (cart real Q310687) (prod (cart real Q310687) (cart real Q310687))) (i (s (fun (cart real Q310687) (fun (cart real Q310687) (prod (cart real Q310687) (cart real Q310687)))) c_) (s (cart real Q310687) a))) (s (cart real Q310687) a))))))) (s (fun (cart real n1) (cart real Q310687)) (i (s (fun (prod (cart real Q310687) (cart real Q310687)) (fun (cart real n1) (cart real Q310687))) linepath) (s (prod (cart real Q310687) (cart real Q310687)) (i (s (fun (cart real Q310687) (prod (cart real Q310687) (cart real Q310687))) (i (s (fun (cart real Q310687) (fun (cart real Q310687) (prod (cart real Q310687) (cart real Q310687)))) c_) (s (cart real Q310687) a))) (s (cart real Q310687) a))))))
(rule (s (fun (cart real Q732721) bool) (i (s (fun (fun (cart real Q732721) bool) (fun (cart real Q732721) bool)) (i (s (fun (fun (cart real Q732721) bool) (fun (fun (cart real Q732721) bool) (fun (cart real Q732721) bool))) INTER) (s (fun (cart real Q732721) bool) (i (s (fun real (fun (cart real Q732721) bool)) (i (s (fun (cart real Q732721) (fun real (fun (cart real Q732721) bool))) normball) (s (cart real Q732721) v0))) (s real r))))) (s (fun (cart real Q732721) bool) (i (s (fun (fun (cart real Q732721) bool) (fun (cart real Q732721) bool)) (i (s (fun (cart real Q732721) (fun (fun (cart real Q732721) bool) (fun (cart real Q732721) bool))) cone0) (s (cart real Q732721) v0))) (s (fun (cart real Q732721) bool) S))))) (s (fun (cart real Q732721) bool) (i (s (fun real (fun (cart real Q732721) bool)) (i (s (fun (fun (cart real Q732721) bool) (fun real (fun (cart real Q732721) bool))) (i (s (fun (cart real Q732721) (fun (fun (cart real Q732721) bool) (fun real (fun (cart real Q732721) bool)))) solidu_triangle) (s (cart real Q732721) v0))) (s (fun (cart real Q732721) bool) S))) (s real r))))
(rule (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) inside) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) UNION) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) UNION) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) b))) (s (cart real n2) c))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) c))) (s (cart real n2) a))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) interior) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (fun (cart real n2) bool) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) hull) (s (fun (fun (cart real n2) bool) bool) convex))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) a))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) b))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) c))) (s (fun (cart real n2) bool) EMPTY))))))))))))
(rule (s (cart real (finite_sum Q119049 Q119050)) (i (s (fun (cart real Q119050) (cart real (finite_sum Q119049 Q119050))) (i (s (fun (cart real Q119049) (fun (cart real Q119050) (cart real (finite_sum Q119049 Q119050)))) pastecart) (s (cart real Q119049) (i (s (fun (cart real Q119049) (cart real Q119049)) (i (s (fun real (fun (cart real Q119049) (cart real Q119049))) r_) (s real c))) (s (cart real Q119049) x1))))) (s (cart real Q119050) (i (s (fun (cart real Q119050) (cart real Q119050)) (i (s (fun real (fun (cart real Q119050) (cart real Q119050))) r_) (s real c))) (s (cart real Q119050) y1))))) (s (cart real (finite_sum Q119049 Q119050)) (i (s (fun (cart real (finite_sum Q119049 Q119050)) (cart real (finite_sum Q119049 Q119050))) (i (s (fun real (fun (cart real (finite_sum Q119049 Q119050)) (cart real (finite_sum Q119049 Q119050)))) r_) (s real c))) (s (cart real (finite_sum Q119049 Q119050)) (i (s (fun (cart real Q119050) (cart real (finite_sum Q119049 Q119050))) (i (s (fun (cart real Q119049) (fun (cart real Q119050) (cart real (finite_sum Q119049 Q119050)))) pastecart) (s (cart real Q119049) x1))) (s (cart real Q119050) y1))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) s0))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) UNION) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) outside) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) inside) (s (fun (cart real N) bool) s0))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) UNION) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) inside) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) outside) (s (fun (cart real N) bool) s0))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) s0))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) s0))))
(rule (s (cart real Q310277) (i (s (fun (fun (cart real n1) (cart real Q310277)) (cart real Q310277)) pathfinish) (s (fun (cart real n1) (cart real Q310277)) (i (s (fun (prod (cart real Q310277) (cart real Q310277)) (fun (cart real n1) (cart real Q310277))) linepath) (s (prod (cart real Q310277) (cart real Q310277)) (i (s (fun (cart real Q310277) (prod (cart real Q310277) (cart real Q310277))) (i (s (fun (cart real Q310277) (fun (cart real Q310277) (prod (cart real Q310277) (cart real Q310277)))) c_) (s (cart real Q310277) a))) (s (cart real Q310277) b))))))) (s (cart real Q310277) b))
(rule (s (cart real Q310257) (i (s (fun (fun (cart real n1) (cart real Q310257)) (cart real Q310257)) pathstart) (s (fun (cart real n1) (cart real Q310257)) (i (s (fun (prod (cart real Q310257) (cart real Q310257)) (fun (cart real n1) (cart real Q310257))) linepath) (s (prod (cart real Q310257) (cart real Q310257)) (i (s (fun (cart real Q310257) (prod (cart real Q310257) (cart real Q310257))) (i (s (fun (cart real Q310257) (fun (cart real Q310257) (prod (cart real Q310257) (cart real Q310257)))) c_) (s (cart real Q310257) a))) (s (cart real Q310257) b))))))) (s (cart real Q310257) a))
(rule (s A (i (s (fun A A) (i (s (fun A (fun A A)) (i (s (fun bool (fun A (fun A A))) COND) (s bool (i (s (fun (list A) bool) (i (s (fun (list A) (fun (list A) bool)) a_) (s (list A) t))) (s (list A) NIL))))) (s A h))) (s A (i (s (fun (list A) A) LAST) (s (list A) t))))) (s A (i (s (fun (list A) A) LAST) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A h))) (s (list A) t))))))
(rule (s A (i (s (fun (list A) A) LAST) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A h))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A k))) (s (list A) t))))))) (s A (i (s (fun (list A) A) LAST) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A k))) (s (list A) t))))))
(rule (s A (i (s (fun num A) (i (s (fun (cart A n1) (fun num A)) d_) (s (cart A n1) (i (s (fun (list A) (cart A n1)) vector) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) NIL))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s A x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num k))) (s num n))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) FACT) (s num n))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) FACT) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num k))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) FACT) (s num k))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))))
(rule (s (fun (cart real n1) (cart real Q310709)) (i (s (fun (prod (cart real Q310709) (cart real Q310709)) (fun (cart real n1) (cart real Q310709))) linepath) (s (prod (cart real Q310709) (cart real Q310709)) (i (s (fun (cart real Q310709) (prod (cart real Q310709) (cart real Q310709))) (i (s (fun (cart real Q310709) (fun (cart real Q310709) (prod (cart real Q310709) (cart real Q310709)))) c_) (s (cart real Q310709) (i (s (fun (cart real n1) (cart real Q310709)) g) (s (cart real n1) a))))) (s (cart real Q310709) (i (s (fun (cart real n1) (cart real Q310709)) g) (s (cart real n1) a))))))) (s (fun (cart real n1) (cart real Q310709)) (i (s (fun (fun (cart real n1) (cart real Q310709)) (fun (cart real n1) (cart real Q310709))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real Q310709)) (fun (cart real n1) (cart real Q310709)))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) (cart real Q310709)) (fun (cart real n1) (cart real Q310709))))) subpath) (s (cart real n1) a))) (s (cart real n1) a))) (s (fun (cart real n1) (cart real Q310709)) g))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) relativeu_interior) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) (cart real N)) (fun (cart real N) bool)) openu_segment) (s (prod (cart real N) (cart real N)) (i (s (fun (cart real N) (prod (cart real N) (cart real N))) (i (s (fun (cart real N) (fun (cart real N) (prod (cart real N) (cart real N)))) c_) (s (cart real N) a))) (s (cart real N) b))))))
(rule (s (fun (cart real n1) (cart real Q310450)) (i (s (fun (fun (cart real n1) (cart real Q310450)) (fun (cart real n1) (cart real Q310450))) reversepath) (s (fun (cart real n1) (cart real Q310450)) (i (s (fun (prod (cart real Q310450) (cart real Q310450)) (fun (cart real n1) (cart real Q310450))) linepath) (s (prod (cart real Q310450) (cart real Q310450)) (i (s (fun (cart real Q310450) (prod (cart real Q310450) (cart real Q310450))) (i (s (fun (cart real Q310450) (fun (cart real Q310450) (prod (cart real Q310450) (cart real Q310450)))) c_) (s (cart real Q310450) a))) (s (cart real Q310450) b))))))) (s (fun (cart real n1) (cart real Q310450)) (i (s (fun (prod (cart real Q310450) (cart real Q310450)) (fun (cart real n1) (cart real Q310450))) linepath) (s (prod (cart real Q310450) (cart real Q310450)) (i (s (fun (cart real Q310450) (prod (cart real Q310450) (cart real Q310450))) (i (s (fun (cart real Q310450) (fun (cart real Q310450) (prod (cart real Q310450) (cart real Q310450)))) c_) (s (cart real Q310450) b))) (s (cart real Q310450) a))))))
(rule (s (cart (cart real Q412528) Q412529) (i (s (fun (fun (cart real Q412528) (cart real Q412529)) (cart (cart real Q412528) Q412529)) matrix) (s (fun (cart real Q412528) (cart real Q412529)) (i (s (fun (net (cart real Q412528)) (fun (cart real Q412528) (cart real Q412529))) (i (s (fun (fun (cart real Q412528) (cart real Q412529)) (fun (net (cart real Q412528)) (fun (cart real Q412528) (cart real Q412529)))) frechetu_derivative) (s (fun (cart real Q412528) (cart real Q412529)) f))) (s (net (cart real Q412528)) net0))))) (s (cart (cart real Q412528) Q412529) (i (s (fun (net (cart real Q412528)) (cart (cart real Q412528) Q412529)) (i (s (fun (fun (cart real Q412528) (cart real Q412529)) (fun (net (cart real Q412528)) (cart (cart real Q412528) Q412529))) jacobian) (s (fun (cart real Q412528) (cart real Q412529)) f))) (s (net (cart real Q412528)) net0))))
(rule (s (list A) (i (s (fun (list A) (list A)) (i (s (fun (list A) (fun (list A) (list A))) APPEND) (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) l))))) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) NIL))))) (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A x))) (s (list A) l))))))
(rule (s (fun Q48153 bool) (i (s (fun (fun (fun Q48153 bool) bool) (fun Q48153 bool)) UNIONS) (s (fun (fun Q48153 bool) bool) (i (s (fun (fun (fun Q48153 bool) bool) (fun (fun Q48153 bool) bool)) (i (s (fun (fun Q48153 bool) (fun (fun (fun Q48153 bool) bool) (fun (fun Q48153 bool) bool))) INSERT) (s (fun Q48153 bool) s0))) (s (fun (fun Q48153 bool) bool) (i (s (fun (fun (fun Q48153 bool) bool) (fun (fun Q48153 bool) bool)) (i (s (fun (fun Q48153 bool) (fun (fun (fun Q48153 bool) bool) (fun (fun Q48153 bool) bool))) INSERT) (s (fun Q48153 bool) t))) (s (fun (fun Q48153 bool) bool) EMPTY))))))) (s (fun Q48153 bool) (i (s (fun (fun Q48153 bool) (fun Q48153 bool)) (i (s (fun (fun Q48153 bool) (fun (fun Q48153 bool) (fun Q48153 bool))) UNION) (s (fun Q48153 bool) s0))) (s (fun Q48153 bool) t))))
(rule (s (fun Q48483 bool) (i (s (fun (fun (fun Q48483 bool) bool) (fun Q48483 bool)) INTERS) (s (fun (fun Q48483 bool) bool) (i (s (fun (fun (fun Q48483 bool) bool) (fun (fun Q48483 bool) bool)) (i (s (fun (fun Q48483 bool) (fun (fun (fun Q48483 bool) bool) (fun (fun Q48483 bool) bool))) INSERT) (s (fun Q48483 bool) s0))) (s (fun (fun Q48483 bool) bool) (i (s (fun (fun (fun Q48483 bool) bool) (fun (fun Q48483 bool) bool)) (i (s (fun (fun Q48483 bool) (fun (fun (fun Q48483 bool) bool) (fun (fun Q48483 bool) bool))) INSERT) (s (fun Q48483 bool) t))) (s (fun (fun Q48483 bool) bool) EMPTY))))))) (s (fun Q48483 bool) (i (s (fun (fun Q48483 bool) (fun Q48483 bool)) (i (s (fun (fun Q48483 bool) (fun (fun Q48483 bool) (fun Q48483 bool))) INTER) (s (fun Q48483 bool) s0))) (s (fun Q48483 bool) t))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real M) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_mul) (s (cart (cart real M) M) (i (s (fun num (cart (cart real M) M)) mat) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) A0))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) N) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) N) (cart (cart real N) M))) matrixu_mul) (s (cart (cart real N) M) A0))) (s (cart (cart real N) N) (i (s (fun num (cart (cart real N) N)) mat) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart (cart real N) M) A0))
(rule (s Q560401 (i (s (fun Q560401 Q560401) (i (s (fun (fun Q560401 Q560401) (fun Q560401 Q560401)) (i (s (fun num (fun (fun Q560401 Q560401) (fun Q560401 Q560401))) ITER) (s num n))) (s (fun Q560401 Q560401) (i (s (fun (fun Q560401 Q560401) (fun Q560401 Q560401)) (i (s (fun num (fun (fun Q560401 Q560401) (fun Q560401 Q560401))) ITER) (s num m))) (s (fun Q560401 Q560401) f))))) (s Q560401 x))) (s Q560401 (i (s (fun Q560401 Q560401) (i (s (fun (fun Q560401 Q560401) (fun Q560401 Q560401)) (i (s (fun num (fun (fun Q560401 Q560401) (fun Q560401 Q560401))) ITER) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num n))) (s num m))))) (s (fun Q560401 Q560401) f))) (s Q560401 x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num k))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real x))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num k))))))))) (s real (i (s (fun real real) (i (s (fun num (fun real real)) (i (s (fun num (fun num (fun real real))) bernstein) (s num n))) (s num k))) (s real x))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun num (cart real N)) (i (s (fun (cart (cart real N) M) (fun num (cart real N))) d_) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real c))) (s (cart (cart real N) M) A0))))) (s num i0))))) (s num j))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real c))) (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun num (cart real N)) (i (s (fun (cart (cart real N) M) (fun num (cart real N))) d_) (s (cart (cart real N) M) A0))) (s num i0))))) (s num j))))))
(rule (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) UNION) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) a))) (s (cart real n2) b))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (cart real n2) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) UNION) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) b))) (s (cart real n2) c))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))) (s (fun (cart real n2) bool) (i (s (fun (list (prod (cart real n2) (cart real n2))) (fun (cart real n2) bool)) closedu_segment) (s (list (prod (cart real n2) (cart real n2))) (i (s (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2)))) (i (s (fun (prod (cart real n2) (cart real n2)) (fun (list (prod (cart real n2) (cart real n2))) (list (prod (cart real n2) (cart real n2))))) CONS) (s (prod (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (prod (cart real n2) (cart real n2))) (i (s (fun (cart real n2) (fun (cart real n2) (prod (cart real n2) (cart real n2)))) c_) (s (cart real n2) c))) (s (cart real n2) a))))) (s (list (prod (cart real n2) (cart real n2))) NIL))))))))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) frontier) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (fun (fun (cart real n2) bool) bool) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) hull) (s (fun (fun (cart real n2) bool) bool) convex))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) a))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) b))) (s (fun (cart real n2) bool) (i (s (fun (fun (cart real n2) bool) (fun (cart real n2) bool)) (i (s (fun (cart real n2) (fun (fun (cart real n2) bool) (fun (cart real n2) bool))) INSERT) (s (cart real n2) c))) (s (fun (cart real n2) bool) EMPTY))))))))))))
(rule (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) z))))))
(rule (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) z))))))
(rule (s (cart real Q98770) (i (s (fun (cart real Q98770) (cart real Q98770)) (i (s (fun (cart real Q98770) (fun (cart real Q98770) (cart real Q98770))) vectoru_sub) (s (cart real Q98770) (i (s (fun (cart real Q98770) (cart real Q98770)) (i (s (fun real (fun (cart real Q98770) (cart real Q98770))) r_) (s real a))) (s (cart real Q98770) x))))) (s (cart real Q98770) (i (s (fun (cart real Q98770) (cart real Q98770)) (i (s (fun real (fun (cart real Q98770) (cart real Q98770))) r_) (s real b))) (s (cart real Q98770) x))))) (s (cart real Q98770) (i (s (fun (cart real Q98770) (cart real Q98770)) (i (s (fun real (fun (cart real Q98770) (cart real Q98770))) r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real a))) (s real b))))) (s (cart real Q98770) x))))
(rule (s (cart real Q98704) (i (s (fun (cart real Q98704) (cart real Q98704)) (i (s (fun (cart real Q98704) (fun (cart real Q98704) (cart real Q98704))) vectoru_add) (s (cart real Q98704) (i (s (fun (cart real Q98704) (cart real Q98704)) (i (s (fun real (fun (cart real Q98704) (cart real Q98704))) r_) (s real c))) (s (cart real Q98704) x))))) (s (cart real Q98704) (i (s (fun (cart real Q98704) (cart real Q98704)) (i (s (fun real (fun (cart real Q98704) (cart real Q98704))) r_) (s real c))) (s (cart real Q98704) y))))) (s (cart real Q98704) (i (s (fun (cart real Q98704) (cart real Q98704)) (i (s (fun real (fun (cart real Q98704) (cart real Q98704))) r_) (s real c))) (s (cart real Q98704) (i (s (fun (cart real Q98704) (cart real Q98704)) (i (s (fun (cart real Q98704) (fun (cart real Q98704) (cart real Q98704))) vectoru_add) (s (cart real Q98704) x))) (s (cart real Q98704) y))))))
(rule (s (cart real Q98727) (i (s (fun (cart real Q98727) (cart real Q98727)) (i (s (fun (cart real Q98727) (fun (cart real Q98727) (cart real Q98727))) vectoru_sub) (s (cart real Q98727) (i (s (fun (cart real Q98727) (cart real Q98727)) (i (s (fun real (fun (cart real Q98727) (cart real Q98727))) r_) (s real c))) (s (cart real Q98727) x))))) (s (cart real Q98727) (i (s (fun (cart real Q98727) (cart real Q98727)) (i (s (fun real (fun (cart real Q98727) (cart real Q98727))) r_) (s real c))) (s (cart real Q98727) y))))) (s (cart real Q98727) (i (s (fun (cart real Q98727) (cart real Q98727)) (i (s (fun real (fun (cart real Q98727) (cart real Q98727))) r_) (s real c))) (s (cart real Q98727) (i (s (fun (cart real Q98727) (cart real Q98727)) (i (s (fun (cart real Q98727) (fun (cart real Q98727) (cart real Q98727))) vectoru_sub) (s (cart real Q98727) x))) (s (cart real Q98727) y))))))
(rule (s (cart real Q98749) (i (s (fun (cart real Q98749) (cart real Q98749)) (i (s (fun (cart real Q98749) (fun (cart real Q98749) (cart real Q98749))) vectoru_add) (s (cart real Q98749) (i (s (fun (cart real Q98749) (cart real Q98749)) (i (s (fun real (fun (cart real Q98749) (cart real Q98749))) r_) (s real a))) (s (cart real Q98749) x))))) (s (cart real Q98749) (i (s (fun (cart real Q98749) (cart real Q98749)) (i (s (fun real (fun (cart real Q98749) (cart real Q98749))) r_) (s real b))) (s (cart real Q98749) x))))) (s (cart real Q98749) (i (s (fun (cart real Q98749) (cart real Q98749)) (i (s (fun real (fun (cart real Q98749) (cart real Q98749))) r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real a))) (s real b))))) (s (cart real Q98749) x))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) (i (s (fun num (cart (cart real N) M)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) A0))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num k))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num k))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num k))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num real) f))))) (s real (i (s (fun num real) f) (s num (i (s (fun num num) SUC) (s num n))))))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num real) f))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s (fun num real) f))))
(rule (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) (i (s (fun (cart real M) (cart real M)) vectoru_neg) (s (cart real M) x))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) y))))) (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) vectoru_neg) (s (cart real (finite_sum M N)) (i (s (fun (cart real N) (cart real (finite_sum M N))) (i (s (fun (cart real M) (fun (cart real N) (cart real (finite_sum M N)))) pastecart) (s (cart real M) x))) (s (cart real N) y))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun (fun num num) num) (i (s (fun (fun num bool) (fun (fun num num) num)) nsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num num) f))))) (s num (i (s (fun num num) f) (s num (i (s (fun num num) SUC) (s num n))))))))) (s num (i (s (fun (fun num num) num) (i (s (fun (fun num bool) (fun (fun num num) num)) nsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num num) f))))) (s num (i (s (fun (fun num num) num) (i (s (fun (fun num bool) (fun (fun num num) num)) nsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s (fun num num) f))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num real) f))))) (s real (i (s (fun num real) f) (s num (i (s (fun num num) SUC) (s num n))))))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num real) f))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s (fun num real) f))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) ii))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))
(rule (s (cart (cart real P0) M) (i (s (fun (cart (cart real P0) N) (cart (cart real P0) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real P0) N) (cart (cart real P0) M))) matrixu_mul) (s (cart (cart real N) M) (i (s (fun num (cart (cart real N) M)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real P0) N) A0))) (s (cart (cart real P0) M) (i (s (fun num (cart (cart real P0) M)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart (cart real P0) M) (i (s (fun (cart (cart real P0) N) (cart (cart real P0) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real P0) N) (cart (cart real P0) M))) matrixu_mul) (s (cart (cart real N) M) A0))) (s (cart (cart real P0) N) (i (s (fun num (cart (cart real P0) N)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real P0) M) (i (s (fun num (cart (cart real P0) M)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart (cart real Q113383) Q113384) (i (s (fun (cart (cart real Q113383) Q113384) (cart (cart real Q113383) Q113384)) (i (s (fun (cart (cart real Q113383) Q113384) (fun (cart (cart real Q113383) Q113384) (cart (cart real Q113383) Q113384))) matrixu_add) (s (cart (cart real Q113383) Q113384) (i (s (fun num (cart (cart real Q113383) Q113384)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real Q113383) Q113384) A0))) (s (cart (cart real Q113383) Q113384) A0))
(rule (s (cart (cart real Q113401) Q113402) (i (s (fun (cart (cart real Q113401) Q113402) (cart (cart real Q113401) Q113402)) (i (s (fun (cart (cart real Q113401) Q113402) (fun (cart (cart real Q113401) Q113402) (cart (cart real Q113401) Q113402))) matrixu_add) (s (cart (cart real Q113401) Q113402) A0))) (s (cart (cart real Q113401) Q113402) (i (s (fun num (cart (cart real Q113401) Q113402)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real Q113401) Q113402) A0))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun (cart (cart real N) M) (fun (cart (cart real N) M) (cart (cart real N) M))) matrixu_sub) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) (i (s (fun num (cart (cart real N) M)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real N) M) A0))
(rule (s (cart real Q105737) (i (s (fun (cart real Q105737) (cart real Q105737)) (i (s (fun (cart real Q105737) (fun (cart real Q105737) (cart real Q105737))) (i (s (fun bool (fun (cart real Q105737) (fun (cart real Q105737) (cart real Q105737)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q105737) (i (s (fun num (cart real Q105737)) f) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q105737) (i (s (fun num (cart real Q105737)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q105737) (i (s (fun (fun num (cart real Q105737)) (cart real Q105737)) (i (s (fun (fun num bool) (fun (fun num (cart real Q105737)) (cart real Q105737))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun num (cart real Q105737)) f))))
(rule (s (fun (cart real Q665142) bool) (i (s (fun (fun (fun (cart real Q665142) bool) bool) (fun (cart real Q665142) bool)) UNIONS) (s (fun (fun (cart real Q665142) bool) bool) (i (s (fun (fun (fun (cart real Q665141) bool) bool) (fun (fun (cart real Q665142) bool) bool)) (i (s (fun (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool)) (fun (fun (fun (cart real Q665141) bool) bool) (fun (fun (cart real Q665142) bool) bool))) IMAGE) (s (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool)) (i (s (fun real (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool))) (i (s (fun num (fun real (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool)))) slice) (s num k))) (s real a))))) (s (fun (fun (cart real Q665141) bool) bool) s0))))) (s (fun (cart real Q665142) bool) (i (s (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool)) (i (s (fun real (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool))) (i (s (fun num (fun real (fun (fun (cart real Q665141) bool) (fun (cart real Q665142) bool)))) slice) (s num k))) (s real a))) (s (fun (cart real Q665141) bool) (i (s (fun (fun (fun (cart real Q665141) bool) bool) (fun (cart real Q665141) bool)) UNIONS) (s (fun (fun (cart real Q665141) bool) bool) s0))))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun num (cart real N)) (i (s (fun (cart (cart real N) M) (fun num (cart real N))) d_) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) A0))))) (s num i0))))) (s num j))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun num (cart real N)) (i (s (fun (cart (cart real N) M) (fun num (cart real N))) d_) (s (cart (cart real N) M) A0))) (s num i0))))) (s num j))))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real M) (fun num real)) d_) (s (cart real M) (i (s (fun num (cart real M)) (i (s (fun (cart (cart real M) N) (fun num (cart real M))) d_) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) A0))))) (s num i0))))) (s num j))) (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun num (cart real N)) (i (s (fun (cart (cart real N) M) (fun num (cart real N))) d_) (s (cart (cart real N) M) A0))) (s num j))))) (s num i0))))
(rule (s (cart (cart real M) N) (i (s (fun (cart (cart real M) N) (cart (cart real M) N)) (i (s (fun real (fun (cart (cart real M) N) (cart (cart real M) N))) r_r_) (s real a))) (s (cart (cart real M) N) (i (s (fun (cart (cart real M) N) (cart (cart real M) N)) (i (s (fun real (fun (cart (cart real M) N) (cart (cart real M) N))) r_r_) (s real b))) (s (cart (cart real M) N) X))))) (s (cart (cart real M) N) (i (s (fun (cart (cart real M) N) (cart (cart real M) N)) (i (s (fun real (fun (cart (cart real M) N) (cart (cart real M) N))) r_r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real a))) (s real b))))) (s (cart (cart real M) N) X))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) cos) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real x))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))
(rule (s (cart real Q105463) (i (s (fun (fun Q105468 (cart real Q105463)) (cart real Q105463)) (i (s (fun (fun Q105468 bool) (fun (fun Q105468 (cart real Q105463)) (cart real Q105463))) vsum) (s (fun Q105468 bool) (i (s (fun (fun Q105468 bool) (fun Q105468 bool)) (i (s (fun Q105468 (fun (fun Q105468 bool) (fun Q105468 bool))) INSERT) (s Q105468 x))) (s (fun Q105468 bool) EMPTY))))) (s (fun Q105468 (cart real Q105463)) f))) (s (cart real Q105463) (i (s (fun Q105468 (cart real Q105463)) f) (s Q105468 x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) x))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real N) real) vectoru_norm) (s (cart real N) y))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) vectoru_angle) (s (cart real N) x))) (s (cart real N) y))))))))) (s real (i (s (fun (cart real N) real) (i (s (fun (cart real N) (fun (cart real N) real)) dot) (s (cart real N) x))) (s (cart real N) y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) y))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) y))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) x))))) (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) y))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (fun (cart real n1) bool) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) (i (s (fun bool (fun (fun (cart real n1) bool) (fun (fun (cart real n1) bool) (fun (cart real n1) bool)))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) b))) (s (cart real n1) a))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_segment) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))
(rule (s (cart real N) (i (s (fun (cart (cart real N) M) (cart real N)) (i (s (fun (cart real M) (fun (cart (cart real N) M) (cart real N))) vectoru_matrixu_mul) (s (cart real M) x))) (s (cart (cart real N) M) (i (s (fun (cart (cart real M) N) (cart (cart real N) M)) transp) (s (cart (cart real M) N) A0))))) (s (cart real N) (i (s (fun (cart real M) (cart real N)) (i (s (fun (cart (cart real M) N) (fun (cart real M) (cart real N))) matrixu_vectoru_mul) (s (cart (cart real M) N) A0))) (s (cart real M) x))))
(rule (s real (i (s (fun (prod (fun (cart real N) bool) (fun (cart real N) bool)) real) setdist) (s (prod (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool)))) c_) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) t))))))) (s real (i (s (fun (prod (fun (cart real N) bool) (fun (cart real N) bool)) real) setdist) (s (prod (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool)))) c_) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) t))))))
(rule (s real (i (s (fun (prod (fun (cart real N) bool) (fun (cart real N) bool)) real) setdist) (s (prod (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool)))) c_) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) t))))) (s real (i (s (fun (prod (fun (cart real N) bool) (fun (cart real N) bool)) real) setdist) (s (prod (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool))) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (prod (fun (cart real N) bool) (fun (cart real N) bool)))) c_) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) t))))))
(rule (s (prod A B) (i (s (fun (fun A (fun B bool)) (prod A B)) ABSu_prod) (s (fun A (fun B bool)) (i (s (fun B (fun A (fun B bool))) (i (s (fun A (fun B (fun A (fun B bool)))) mku_pair) (s A x))) (s B y))))) (s (prod A B) (i (s (fun B (prod A B)) (i (s (fun A (fun B (prod A B))) c_) (s A x))) (s B y))))
(rule (s (cart real M) (i (s (fun (cart real N) (cart real M)) (i (s (fun (cart (cart real N) M) (fun (cart real N) (cart real M))) matrixu_vectoru_mul) (s (cart (cart real N) M) (i (s (fun (cart (cart real M) N) (cart (cart real N) M)) transp) (s (cart (cart real M) N) A0))))) (s (cart real N) x))) (s (cart real M) (i (s (fun (cart (cart real M) N) (cart real M)) (i (s (fun (cart real N) (fun (cart (cart real M) N) (cart real M))) vectoru_matrixu_mul) (s (cart real N) x))) (s (cart (cart real M) N) A0))))
(rule (s (fun Q64185 bool) (i (s (fun (fun Q64185 bool) (fun Q64185 bool)) (i (s (fun (fun Q64185 Q64418) (fun (fun Q64185 bool) (fun Q64185 bool))) (i (s (fun (fun Q64418 (fun Q64418 Q64418)) (fun (fun Q64185 Q64418) (fun (fun Q64185 bool) (fun Q64185 bool)))) support) (s (fun Q64418 (fun Q64418 Q64418)) op))) (s (fun Q64185 Q64418) f))) (s (fun Q64185 bool) EMPTY))) (s (fun Q64185 bool) EMPTY))
(rule (s (fun Q144892 Q144892) (i (s (fun (prod Q144892 Q144892) (fun Q144892 Q144892)) swap) (s (prod Q144892 Q144892) (i (s (fun Q144892 (prod Q144892 Q144892)) (i (s (fun Q144892 (fun Q144892 (prod Q144892 Q144892))) c_) (s Q144892 a))) (s Q144892 a))))) (s (fun Q144892 Q144892) I0))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) atn) (s real x))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real n1) (cart real N)) (fun (fun (cart real n1) bool) (fun (cart real N) bool))) IMAGE) (s (fun (cart real n1) (cart real N)) g))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real N) bool)) pathu_image) (s (fun (cart real n1) (cart real N)) g))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSTC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSTC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSTC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) TC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) TC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) TC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) STC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) STC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) STC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) SC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) SC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) SC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RTC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RTC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RTC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RC) (s (fun A (fun A bool)) R))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) UNION) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) inside) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) outside) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) DIFF) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) s0))))
(rule (s real (i (s (fun (cart real (finite_sum Q119696 Q119694)) real) vectoru_norm) (s (cart real (finite_sum Q119696 Q119694)) (i (s (fun (cart real Q119694) (cart real (finite_sum Q119696 Q119694))) (i (s (fun (cart real Q119696) (fun (cart real Q119694) (cart real (finite_sum Q119696 Q119694)))) pastecart) (s (cart real Q119696) (i (s (fun num (cart real Q119696)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q119694) y))))) (s real (i (s (fun (cart real Q119694) real) vectoru_norm) (s (cart real Q119694) y))))
(rule (s real (i (s (fun (cart real (finite_sum Q119675 Q119678)) real) vectoru_norm) (s (cart real (finite_sum Q119675 Q119678)) (i (s (fun (cart real Q119678) (cart real (finite_sum Q119675 Q119678))) (i (s (fun (cart real Q119675) (fun (cart real Q119678) (cart real (finite_sum Q119675 Q119678)))) pastecart) (s (cart real Q119675) x))) (s (cart real Q119678) (i (s (fun num (cart real Q119678)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun (cart real Q119675) real) vectoru_norm) (s (cart real Q119675) x))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSC) (s (fun A (fun A bool)) R))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num x))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num y))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) NUMPAIR) (s num x))) (s num y))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) UNION) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) t))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) UNION) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) t))))))
(rule (s (fun (cart real Q174640) bool) (i (s (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool)) (i (s (fun (fun (cart real Q174640) bool) (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool))) DIFF) (s (fun (cart real Q174640) bool) (i (s (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool)) interior) (s (fun (cart real Q174640) bool) s0))))) (s (fun (cart real Q174640) bool) (i (s (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool)) closure) (s (fun (cart real Q174640) bool) t))))) (s (fun (cart real Q174640) bool) (i (s (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool)) interior) (s (fun (cart real Q174640) bool) (i (s (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool)) (i (s (fun (fun (cart real Q174640) bool) (fun (fun (cart real Q174640) bool) (fun (cart real Q174640) bool))) DIFF) (s (fun (cart real Q174640) bool) s0))) (s (fun (cart real Q174640) bool) t))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) t))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INTER) (s (fun (cart real N) bool) s0))) (s (fun (cart real N) bool) t))))))
(rule (s (fun Q48425 bool) (i (s (fun (fun Q48425 bool) (fun Q48425 bool)) (i (s (fun (fun Q48425 bool) (fun (fun Q48425 bool) (fun Q48425 bool))) UNION) (s (fun Q48425 bool) (i (s (fun (fun (fun Q48425 bool) bool) (fun Q48425 bool)) UNIONS) (s (fun (fun Q48425 bool) bool) s0))))) (s (fun Q48425 bool) (i (s (fun (fun (fun Q48425 bool) bool) (fun Q48425 bool)) UNIONS) (s (fun (fun Q48425 bool) bool) t))))) (s (fun Q48425 bool) (i (s (fun (fun (fun Q48425 bool) bool) (fun Q48425 bool)) UNIONS) (s (fun (fun Q48425 bool) bool) (i (s (fun (fun (fun Q48425 bool) bool) (fun (fun Q48425 bool) bool)) (i (s (fun (fun (fun Q48425 bool) bool) (fun (fun (fun Q48425 bool) bool) (fun (fun Q48425 bool) bool))) UNION) (s (fun (fun Q48425 bool) bool) s0))) (s (fun (fun Q48425 bool) bool) t))))))
(rule (s (fun Q48449 bool) (i (s (fun (fun Q48449 bool) (fun Q48449 bool)) (i (s (fun (fun Q48449 bool) (fun (fun Q48449 bool) (fun Q48449 bool))) INTER) (s (fun Q48449 bool) (i (s (fun (fun (fun Q48449 bool) bool) (fun Q48449 bool)) INTERS) (s (fun (fun Q48449 bool) bool) s0))))) (s (fun Q48449 bool) (i (s (fun (fun (fun Q48449 bool) bool) (fun Q48449 bool)) INTERS) (s (fun (fun Q48449 bool) bool) t))))) (s (fun Q48449 bool) (i (s (fun (fun (fun Q48449 bool) bool) (fun Q48449 bool)) INTERS) (s (fun (fun Q48449 bool) bool) (i (s (fun (fun (fun Q48449 bool) bool) (fun (fun Q48449 bool) bool)) (i (s (fun (fun (fun Q48449 bool) bool) (fun (fun (fun Q48449 bool) bool) (fun (fun Q48449 bool) bool))) UNION) (s (fun (fun Q48449 bool) bool) s0))) (s (fun (fun Q48449 bool) bool) t))))))
(rule (s (list A) (i (s (fun (list A) (list A)) (i (s (fun (list A) (fun (list A) (list A))) APPEND) (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) m))))) (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) l))))) (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun (list A) (fun (list A) (list A))) APPEND) (s (list A) l))) (s (list A) m))))))
(rule (s (fun Q57967 bool) (i (s (fun (fun Q57967 bool) (fun Q57967 bool)) (i (s (fun (fun Q57967 bool) (fun (fun Q57967 bool) (fun Q57967 bool))) UNION) (s (fun Q57967 bool) (i (s (fun (list Q57967) (fun Q57967 bool)) setu_ofu_list) (s (list Q57967) l1))))) (s (fun Q57967 bool) (i (s (fun (list Q57967) (fun Q57967 bool)) setu_ofu_list) (s (list Q57967) l2))))) (s (fun Q57967 bool) (i (s (fun (list Q57967) (fun Q57967 bool)) setu_ofu_list) (s (list Q57967) (i (s (fun (list Q57967) (list Q57967)) (i (s (fun (list Q57967) (fun (list Q57967) (list Q57967))) APPEND) (s (list Q57967) l1))) (s (list Q57967) l2))))))
(rule (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (fun (cart real A) bool) (fun (fun (cart real A) bool) (fun (cart real A) bool))) (i (s (fun (fun real bool) (fun (fun (cart real A) bool) (fun (fun (cart real A) bool) (fun (cart real A) bool)))) affsign) (s (fun real bool) sgnu_ge))) (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (cart real A) (fun (fun (cart real A) bool) (fun (cart real A) bool))) INSERT) (s (cart real A) v))) (s (fun (cart real A) bool) EMPTY))))) (s (fun (cart real A) bool) S))) (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (cart real A) (fun (fun (cart real A) bool) (fun (cart real A) bool))) cone) (s (cart real A) v))) (s (fun (cart real A) bool) S))))
(rule (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (fun (cart real A) bool) (fun (fun (cart real A) bool) (fun (cart real A) bool))) (i (s (fun (fun real bool) (fun (fun (cart real A) bool) (fun (fun (cart real A) bool) (fun (cart real A) bool)))) affsign) (s (fun real bool) sgnu_gt))) (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (cart real A) (fun (fun (cart real A) bool) (fun (cart real A) bool))) INSERT) (s (cart real A) v))) (s (fun (cart real A) bool) EMPTY))))) (s (fun (cart real A) bool) S))) (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (cart real A) (fun (fun (cart real A) bool) (fun (cart real A) bool))) cone0) (s (cart real A) v))) (s (fun (cart real A) bool) S))))
(rule (s (fun (cart real Q702749) bool) (i (s (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool)) (i (s (fun (fun (cart real Q702749) bool) (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q702749) bool) (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool)))) affsign) (s (fun real bool) sgn))) (s (fun (cart real Q702749) bool) (i (s (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool)) (i (s (fun (fun (cart real Q702749) bool) (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool))) DIFF) (s (fun (cart real Q702749) bool) s0))) (s (fun (cart real Q702749) bool) t))))) (s (fun (cart real Q702749) bool) t))) (s (fun (cart real Q702749) bool) (i (s (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool)) (i (s (fun (fun (cart real Q702749) bool) (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q702749) bool) (fun (fun (cart real Q702749) bool) (fun (cart real Q702749) bool)))) affsign) (s (fun real bool) sgn))) (s (fun (cart real Q702749) bool) s0))) (s (fun (cart real Q702749) bool) t))))
(rule (s (fun num A) (i (s (fun (fun num A) (fun num A)) (i (s (fun A (fun (fun num A) (fun num A))) FCONS) (s A (i (s (fun num A) f) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun num A) (i (s (fun (fun num num) (fun num A)) (i (s (fun (fun num A) (fun (fun num num) (fun num A))) o) (s (fun num A) f))) (s (fun num num) SUC))))) (s (fun num A) f))
(rule (s (fun Q1176884 (fun Q1176884 bool)) (i (s (fun (fun Q1176884 (fun Q1176884 bool)) (fun Q1176884 (fun Q1176884 bool))) SC) (s (fun Q1176884 (fun Q1176884 bool)) (i (s (fun (fun Q1176884 (fun Q1176884 bool)) (fun Q1176884 (fun Q1176884 bool))) INV) (s (fun Q1176884 (fun Q1176884 bool)) R))))) (s (fun Q1176884 (fun Q1176884 bool)) (i (s (fun (fun Q1176884 (fun Q1176884 bool)) (fun Q1176884 (fun Q1176884 bool))) SC) (s (fun Q1176884 (fun Q1176884 bool)) R))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real M) N) (cart (cart real N) M)) transp) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) A0))))) (s (cart (cart real N) M) A0))
(rule (s (cart A B) (i (s (fun (fun (finite_image B) A) (cart A B)) mku_cart) (s (fun (finite_image B) A) (i (s (fun (cart A B) (fun (finite_image B) A)) destu_cart) (s (cart A B) a))))) (s (cart A B) a))
(rule (s (prod A B) (i (s (fun (fun A (fun B bool)) (prod A B)) ABSu_prod) (s (fun A (fun B bool)) (i (s (fun (prod A B) (fun A (fun B bool))) REPu_prod) (s (prod A B) a))))) (s (prod A B) a))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) SC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RSC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) TC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) RTC) (s (fun A (fun A bool)) R))))
(rule (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) TC) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) SC) (s (fun A (fun A bool)) R))))) (s (fun A (fun A bool)) (i (s (fun (fun A (fun A bool)) (fun A (fun A bool))) STC) (s (fun A (fun A bool)) R))))
(rule (s (fun (cart real Q174652) bool) (i (s (fun (fun (cart real Q174652) bool) (fun (cart real Q174652) bool)) (i (s (fun (fun (cart real Q174652) bool) (fun (fun (cart real Q174652) bool) (fun (cart real Q174652) bool))) DIFF) (s (fun (cart real Q174652) bool) (i (s (fun (fun (cart real Q174652) bool) (fun (cart real Q174652) bool)) closure) (s (fun (cart real Q174652) bool) s0))))) (s (fun (cart real Q174652) bool) (i (s (fun (fun (cart real Q174652) bool) (fun (cart real Q174652) bool)) interior) (s (fun (cart real Q174652) bool) s0))))) (s (fun (cart real Q174652) bool) (i (s (fun (fun (cart real Q174652) bool) (fun (cart real Q174652) bool)) frontier) (s (fun (cart real Q174652) bool) s0))))
(rule (s (fun (cart real Q336393) bool) (i (s (fun (fun (cart real Q336393) bool) (fun (cart real Q336393) bool)) (i (s (fun (fun (cart real Q336393) bool) (fun (fun (cart real Q336393) bool) (fun (cart real Q336393) bool))) INTER) (s (fun (cart real Q336393) bool) (i (s (fun (fun (cart real Q336393) bool) (fun (cart real Q336393) bool)) inside) (s (fun (cart real Q336393) bool) s0))))) (s (fun (cart real Q336393) bool) (i (s (fun (fun (cart real Q336393) bool) (fun (cart real Q336393) bool)) outside) (s (fun (cart real Q336393) bool) s0))))) (s (fun (cart real Q336393) bool) EMPTY))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) z))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) z))) (s (cart real n3) x))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) z))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) y))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s Q18436 (i (s (fun Q18436 Q18436) (i (s (fun (list Q18437) (fun Q18436 Q18436)) (i (s (fun (fun Q18437 (fun Q18436 Q18436)) (fun (list Q18437) (fun Q18436 Q18436))) ITLIST) (s (fun Q18437 (fun Q18436 Q18436)) f))) (s (list Q18437) NIL))) (s Q18436 b))) (s Q18436 b))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) x))) (s (cart real N) y))))) (s (cart real N) x))) (s (cart real N) y))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) y))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) x))) (s (cart real N) y))))) (s (cart real N) x))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) x))) (s (cart real N) y))))) (s (cart real N) y))) (s (cart real N) x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) cos) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) z))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (fun num real) t))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) t) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (fun num real) t))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun (fun Q147956 Q147956) bool) evenperm) (s (fun Q147956 Q147956) p))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (fun Q147956 Q147956) real) sign) (s (fun Q147956 Q147956) p))))
(rule (s (fun (cart real Q262361) bool) (i (s (fun (fun (cart real Q262361) bool) (fun (cart real Q262361) bool)) (i (s (fun (fun (fun (cart real Q262361) bool) bool) (fun (fun (cart real Q262361) bool) (fun (cart real Q262361) bool))) hull) (s (fun (fun (cart real Q262361) bool) bool) convex))) (s (fun (cart real Q262361) bool) (i (s (fun (fun (cart real Q262361) bool) (fun (cart real Q262361) bool)) (i (s (fun (cart real Q262361) (fun (fun (cart real Q262361) bool) (fun (cart real Q262361) bool))) INSERT) (s (cart real Q262361) a))) (s (fun (cart real Q262361) bool) EMPTY))))) (s (fun (cart real Q262361) bool) (i (s (fun (fun (cart real Q262361) bool) (fun (cart real Q262361) bool)) (i (s (fun (cart real Q262361) (fun (fun (cart real Q262361) bool) (fun (cart real Q262361) bool))) INSERT) (s (cart real Q262361) a))) (s (fun (cart real Q262361) bool) EMPTY))))
(rule (s (fun (cart real Q253923) bool) (i (s (fun (fun (cart real Q253923) bool) (fun (cart real Q253923) bool)) (i (s (fun (fun (fun (cart real Q253923) bool) bool) (fun (fun (cart real Q253923) bool) (fun (cart real Q253923) bool))) hull) (s (fun (fun (cart real Q253923) bool) bool) affine))) (s (fun (cart real Q253923) bool) (i (s (fun (fun (cart real Q253923) bool) (fun (cart real Q253923) bool)) (i (s (fun (cart real Q253923) (fun (fun (cart real Q253923) bool) (fun (cart real Q253923) bool))) INSERT) (s (cart real Q253923) a))) (s (fun (cart real Q253923) bool) EMPTY))))) (s (fun (cart real Q253923) bool) (i (s (fun (fun (cart real Q253923) bool) (fun (cart real Q253923) bool)) (i (s (fun (cart real Q253923) (fun (fun (cart real Q253923) bool) (fun (cart real Q253923) bool))) INSERT) (s (cart real Q253923) a))) (s (fun (cart real Q253923) bool) EMPTY))))
(rule (s B (i (s (fun (prod A B) B) SND) (s (prod A B) (i (s (fun B (prod A B)) (i (s (fun A (fun B (prod A B))) c_) (s A x))) (s B y))))) (s B y))
(rule (s A (i (s (fun (prod A B) A) FST) (s (prod A B) (i (s (fun B (prod A B)) (i (s (fun A (fun B (prod A B))) c_) (s A x))) (s B y))))) (s A x))
(rule (s (list Q18635) (i (s (fun (list Q18628) (list Q18635)) (i (s (fun (list Q18629) (fun (list Q18628) (list Q18635))) (i (s (fun (fun Q18629 (fun Q18628 Q18635)) (fun (list Q18629) (fun (list Q18628) (list Q18635)))) MAP2) (s (fun Q18629 (fun Q18628 Q18635)) f))) (s (list Q18629) NIL))) (s (list Q18628) NIL))) (s (list Q18635) NIL))
(rule (s (fun (cart real Q122083) bool) (i (s (fun (fun (cart real Q122083) bool) (fun (cart real Q122083) bool)) span) (s (fun (cart real Q122083) bool) (i (s (fun (fun (cart real Q122083) bool) (fun (cart real Q122083) bool)) (i (s (fun (cart real Q122083) (fun (fun (cart real Q122083) bool) (fun (cart real Q122083) bool))) INSERT) (s (cart real Q122083) (i (s (fun num (cart real Q122083)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real Q122083) bool) s0))))) (s (fun (cart real Q122083) bool) (i (s (fun (fun (cart real Q122083) bool) (fun (cart real Q122083) bool)) span) (s (fun (cart real Q122083) bool) s0))))
(rule (s (fun (cart real Q293255) bool) (i (s (fun (fun (cart real Q293255) bool) (fun (cart real Q293255) bool)) (i (s (fun (fun (fun (cart real Q293255) bool) bool) (fun (fun (cart real Q293255) bool) (fun (cart real Q293255) bool))) hull) (s (fun (fun (cart real Q293255) bool) bool) affine))) (s (fun (cart real Q293255) bool) (i (s (fun (fun (cart real Q293255) bool) (fun (cart real Q293255) bool)) (i (s (fun (fun (fun (cart real Q293255) bool) bool) (fun (fun (cart real Q293255) bool) (fun (cart real Q293255) bool))) hull) (s (fun (fun (cart real Q293255) bool) bool) convex))) (s (fun (cart real Q293255) bool) s0))))) (s (fun (cart real Q293255) bool) (i (s (fun (fun (cart real Q293255) bool) (fun (cart real Q293255) bool)) (i (s (fun (fun (fun (cart real Q293255) bool) bool) (fun (fun (cart real Q293255) bool) (fun (cart real Q293255) bool))) hull) (s (fun (fun (cart real Q293255) bool) bool) affine))) (s (fun (cart real Q293255) bool) s0))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) span) (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) DELETE) (s (fun (cart real N) bool) s0))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) span) (s (fun (cart real N) bool) s0))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) (i (s (fun bool (fun (cart real n2) (fun (cart real n2) (cart real n2)))) COND) (s bool (i (s (fun (cart real n2) bool) (i (s (fun (cart real n2) (fun (cart real n2) bool)) a_) (s (cart real n2) w))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) w))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))
(rule (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun (fun real bool) (fun (fun real bool) (fun real bool))) (i (s (fun bool (fun (fun real bool) (fun (fun real bool) (fun real bool)))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real a))) (s real b))))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real b))) (s real a))))) (s (list (prod real real)) NIL))))))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_segment) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num k))))) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num k))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num k))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) DIV) (s num (i (s (fun num num) FACT) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) FACT) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num k))))))) (s num (i (s (fun num num) FACT) (s num k))))))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))
(rule (s (cart real N) (i (s (fun (cart real (finite_sum M N)) (cart real N)) sndcart) (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) (i (s (fun real (fun (cart real (finite_sum M N)) (cart real (finite_sum M N)))) r_) (s real c))) (s (cart real (finite_sum M N)) x))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real c))) (s (cart real N) (i (s (fun (cart real (finite_sum M N)) (cart real N)) sndcart) (s (cart real (finite_sum M N)) x))))))
(rule (s (cart real M) (i (s (fun (cart real (finite_sum M N)) (cart real M)) fstcart) (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) (i (s (fun real (fun (cart real (finite_sum M N)) (cart real (finite_sum M N)))) r_) (s real c))) (s (cart real (finite_sum M N)) x))))) (s (cart real M) (i (s (fun (cart real M) (cart real M)) (i (s (fun real (fun (cart real M) (cart real M))) r_) (s real c))) (s (cart real M) (i (s (fun (cart real (finite_sum M N)) (cart real M)) fstcart) (s (cart real (finite_sum M N)) x))))))
(rule (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) s0))) (s A x))))) (s A x))) (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) s0))) (s A x))))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) x))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) x))) (s (cart real N) y))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) y))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) s0))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) s0))))
(rule (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) connectedu_component) (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) connectedu_component) (s (fun (cart real N) bool) s0))) (s (cart real N) x))))) (s (cart real N) x))) (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) connectedu_component) (s (fun (cart real N) bool) s0))) (s (cart real N) x))))
(rule (s (fun (cart real Q702770) bool) (i (s (fun (fun (cart real Q702770) bool) (fun (cart real Q702770) bool)) (i (s (fun (fun (cart real Q702770) bool) (fun (fun (cart real Q702770) bool) (fun (cart real Q702770) bool))) affu_ge) (s (fun (cart real Q702770) bool) (i (s (fun (fun (cart real Q702770) bool) (fun (cart real Q702770) bool)) (i (s (fun (fun (cart real Q702770) bool) (fun (fun (cart real Q702770) bool) (fun (cart real Q702770) bool))) DIFF) (s (fun (cart real Q702770) bool) s0))) (s (fun (cart real Q702770) bool) t))))) (s (fun (cart real Q702770) bool) t))) (s (fun (cart real Q702770) bool) (i (s (fun (fun (cart real Q702770) bool) (fun (cart real Q702770) bool)) (i (s (fun (fun (cart real Q702770) bool) (fun (fun (cart real Q702770) bool) (fun (cart real Q702770) bool))) affu_ge) (s (fun (cart real Q702770) bool) s0))) (s (fun (cart real Q702770) bool) t))))
(rule (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) pathu_component) (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) pathu_component) (s (fun (cart real N) bool) s0))) (s (cart real N) x))))) (s (cart real N) x))) (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) pathu_component) (s (fun (cart real N) bool) s0))) (s (cart real N) x))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) t))))) (s (fun A bool) t))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) t))))
(rule (s (fun Q95870 bool) (i (s (fun (fun Q95870 bool) (fun Q95870 bool)) (i (s (fun (fun (fun Q95870 bool) bool) (fun (fun Q95870 bool) (fun Q95870 bool))) hull) (s (fun (fun Q95870 bool) bool) P))) (s (fun Q95870 bool) (i (s (fun (fun Q95870 bool) (fun Q95870 bool)) (i (s (fun (fun (fun Q95870 bool) bool) (fun (fun Q95870 bool) (fun Q95870 bool))) hull) (s (fun (fun Q95870 bool) bool) P))) (s (fun Q95870 bool) s0))))) (s (fun Q95870 bool) (i (s (fun (fun Q95870 bool) (fun Q95870 bool)) (i (s (fun (fun (fun Q95870 bool) bool) (fun (fun Q95870 bool) (fun Q95870 bool))) hull) (s (fun (fun Q95870 bool) bool) P))) (s (fun Q95870 bool) s0))))
(rule (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real pi))))))) (s (cart real n2) ii))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) unwinding) (s (cart real n2) z))))
(rule (s (fun Q47720 bool) (i (s (fun (fun Q47720 bool) (fun Q47720 bool)) (i (s (fun (fun Q47720 bool) (fun (fun Q47720 bool) (fun Q47720 bool))) UNION) (s (fun Q47720 bool) p))) (s (fun Q47720 bool) (i (s (fun (fun Q47720 bool) (fun Q47720 bool)) (i (s (fun (fun Q47720 bool) (fun (fun Q47720 bool) (fun Q47720 bool))) UNION) (s (fun Q47720 bool) p))) (s (fun Q47720 bool) q))))) (s (fun Q47720 bool) (i (s (fun (fun Q47720 bool) (fun Q47720 bool)) (i (s (fun (fun Q47720 bool) (fun (fun Q47720 bool) (fun Q47720 bool))) UNION) (s (fun Q47720 bool) p))) (s (fun Q47720 bool) q))))
(rule (s (fun Q47654 bool) (i (s (fun (fun Q47654 bool) (fun Q47654 bool)) (i (s (fun (fun Q47654 bool) (fun (fun Q47654 bool) (fun Q47654 bool))) INTER) (s (fun Q47654 bool) p))) (s (fun Q47654 bool) (i (s (fun (fun Q47654 bool) (fun Q47654 bool)) (i (s (fun (fun Q47654 bool) (fun (fun Q47654 bool) (fun Q47654 bool))) INTER) (s (fun Q47654 bool) p))) (s (fun Q47654 bool) q))))) (s (fun Q47654 bool) (i (s (fun (fun Q47654 bool) (fun Q47654 bool)) (i (s (fun (fun Q47654 bool) (fun (fun Q47654 bool) (fun Q47654 bool))) INTER) (s (fun Q47654 bool) p))) (s (fun Q47654 bool) q))))
(rule (s (list Q18584) (i (s (fun (list Q18594) (list Q18584)) (i (s (fun (list Q18587) (fun (list Q18594) (list Q18584))) (i (s (fun (fun Q18587 (fun Q18594 Q18584)) (fun (list Q18587) (fun (list Q18594) (list Q18584)))) MAP2) (s (fun Q18587 (fun Q18594 Q18584)) f))) (s (list Q18587) NIL))) (s (list Q18594) l))) (s (list Q18584) NIL))
(rule (s (cart real Q140340) (i (s (fun (prod (cart real Q140340) (cart real Q140340)) (cart real Q140340)) midpoint) (s (prod (cart real Q140340) (cart real Q140340)) (i (s (fun (cart real Q140340) (prod (cart real Q140340) (cart real Q140340))) (i (s (fun (cart real Q140340) (fun (cart real Q140340) (prod (cart real Q140340) (cart real Q140340)))) c_) (s (cart real Q140340) x))) (s (cart real Q140340) x))))) (s (cart real Q140340) x))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart (cart real N) N) (fun (cart real N) (cart real N))) matrixu_vectoru_mul) (s (cart (cart real N) N) (i (s (fun num (cart (cart real N) N)) mat) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real N) x))) (s (cart real N) x))
(rule (s (fun (cart real Q208555) bool) (i (s (fun (prod (cart real Q208555) (cart real Q208555)) (fun (cart real Q208555) bool)) openu_interval) (s (prod (cart real Q208555) (cart real Q208555)) (i (s (fun (cart real Q208555) (prod (cart real Q208555) (cart real Q208555))) (i (s (fun (cart real Q208555) (fun (cart real Q208555) (prod (cart real Q208555) (cart real Q208555)))) c_) (s (cart real Q208555) a))) (s (cart real Q208555) a))))) (s (fun (cart real Q208555) bool) EMPTY))
(rule (s (option Q445490) (i (s (fun (option Q445492) (option Q445490)) (i (s (fun (option Q445492) (fun (option Q445492) (option Q445490))) (i (s (fun (fun Q445492 (fun Q445492 Q445490)) (fun (option Q445492) (fun (option Q445492) (option Q445490)))) lifted) (s (fun Q445492 (fun Q445492 Q445490)) op))) (s (option Q445492) u_))) (s (option Q445492) NONE))) (s (option Q445490) NONE))
(rule (s (option Q445490) (i (s (fun (option Q445492) (option Q445490)) (i (s (fun (option Q445492) (fun (option Q445492) (option Q445490))) (i (s (fun (fun Q445492 (fun Q445492 Q445490)) (fun (option Q445492) (fun (option Q445492) (option Q445490)))) lifted) (s (fun Q445492 (fun Q445492 Q445490)) op))) (s (option Q445492) NONE))) (s (option Q445492) u_))) (s (option Q445490) NONE))
(rule (s (fun (cart real Q215712) bool) (i (s (fun (prod (cart real Q215712) (cart real Q215712)) (fun (cart real Q215712) bool)) openu_segment) (s (prod (cart real Q215712) (cart real Q215712)) (i (s (fun (cart real Q215712) (prod (cart real Q215712) (cart real Q215712))) (i (s (fun (cart real Q215712) (fun (cart real Q215712) (prod (cart real Q215712) (cart real Q215712)))) c_) (s (cart real Q215712) a))) (s (cart real Q215712) a))))) (s (fun (cart real Q215712) bool) EMPTY))
(rule (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) c))))))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) d))))))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))) (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (fun (cart real n1) bool) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) INTER) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) c))) (s (cart real n1) d))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))))
(rule (s (cart real n2) (i (s (fun (list real) (cart real n2)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real r))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real t))) (s real s0))))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real r))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real t))) (s real s0))))))))) (s (list real) NIL))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) (i (s (fun (list real) (cart real n2)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real r))) (s real (i (s (fun real real) cos) (s real s0))))))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real r))) (s real (i (s (fun real real) sin) (s real s0))))))) (s (list real) NIL))))))))))
(rule (s C (i (s (fun A C) (i (s (fun (fun A B) (fun A C)) (i (s (fun (fun B C) (fun (fun A B) (fun A C))) o) (s (fun B C) f))) (s (fun A B) g))) (s A x))) (s C (i (s (fun B C) f) (s B (i (s (fun A B) g) (s A x))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real e))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real e))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real e))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) cos) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) sin) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real x))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real (finite_sum Q118949 Q118951)) (i (s (fun (cart real Q118951) (cart real (finite_sum Q118949 Q118951))) (i (s (fun (cart real Q118949) (fun (cart real Q118951) (cart real (finite_sum Q118949 Q118951)))) pastecart) (s (cart real Q118949) (i (s (fun num (cart real Q118949)) vec) (s num n))))) (s (cart real Q118951) (i (s (fun num (cart real Q118951)) vec) (s num n))))) (s (cart real (finite_sum Q118949 Q118951)) (i (s (fun num (cart real (finite_sum Q118949 Q118951))) vec) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))
(rule (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) (i (s (fun real (fun (cart (cart real N) M) (cart (cart real N) M))) r_r_) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart (cart real N) M) A0))) (s (cart (cart real N) M) (i (s (fun (cart (cart real N) M) (cart (cart real N) M)) matrixu_neg) (s (cart (cart real N) M) A0))))
(rule (s (fun (cart real N) bool) (i (s (fun (cart (cart real M) N) (fun (cart real N) bool)) columns) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) A0))))) (s (fun (cart real N) bool) (i (s (fun (cart (cart real N) M) (fun (cart real N) bool)) rows) (s (cart (cart real N) M) A0))))
(rule (s (fun (cart real M) bool) (i (s (fun (cart (cart real M) N) (fun (cart real M) bool)) rows) (s (cart (cart real M) N) (i (s (fun (cart (cart real N) M) (cart (cart real M) N)) transp) (s (cart (cart real N) M) A0))))) (s (fun (cart real M) bool) (i (s (fun (cart (cart real N) M) (fun (cart real M) bool)) columns) (s (cart (cart real N) M) A0))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) sin) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) cos) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) cos) (s real y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num n))))))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num n))))))) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))))) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) sin) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun (fun (cart real Q451420) bool) bool) (i (s (fun (cart real Q451420) (fun (fun (cart real Q451420) bool) bool)) IN) (s (cart real Q451420) x))) (s (fun (cart real Q451420) bool) s0))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) (i (s (fun (cart real Q451420) (cart real n1)) (i (s (fun (fun (cart real Q451420) bool) (fun (cart real Q451420) (cart real n1))) indicator) (s (fun (cart real Q451420) bool) s0))) (s (cart real Q451420) x))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool b))) (s num (i (s (fun num num) SUC) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num x))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num x))))) (s num (i (s (fun num num) (i (s (fun bool (fun num num)) NUMSUM) (s bool b))) (s num x))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) real) (fun (cart real N) bool)) cball) (s (prod (cart real N) real) (i (s (fun real (prod (cart real N) real)) (i (s (fun (cart real N) (fun real (prod (cart real N) real))) c_) (s (cart real N) x))) (s real e))))))) (s (fun (cart real N) bool) (i (s (fun (prod (cart real N) real) (fun (cart real N) bool)) ball) (s (prod (cart real N) real) (i (s (fun real (prod (cart real N) real)) (i (s (fun (cart real N) (fun real (prod (cart real N) real))) c_) (s (cart real N) x))) (s real e))))))
(rule (s num (i (s (fun (fun Q67574 num) num) (i (s (fun (fun Q67574 bool) (fun (fun Q67574 num) num)) nsum) (s (fun Q67574 bool) (i (s (fun (fun Q67574 bool) (fun Q67574 bool)) (i (s (fun (fun Q67574 num) (fun (fun Q67574 bool) (fun Q67574 bool))) (i (s (fun (fun num (fun num num)) (fun (fun Q67574 num) (fun (fun Q67574 bool) (fun Q67574 bool)))) support) (s (fun num (fun num num)) p_))) (s (fun Q67574 num) f))) (s (fun Q67574 bool) s0))))) (s (fun Q67574 num) f))) (s num (i (s (fun (fun Q67574 num) num) (i (s (fun (fun Q67574 bool) (fun (fun Q67574 num) num)) nsum) (s (fun Q67574 bool) s0))) (s (fun Q67574 num) f))))
(rule (s real (i (s (fun (cart real Q690460) real) (i (s (fun (cart real Q690460) (fun (cart real Q690460) real)) vectoru_angle) (s (cart real Q690460) (i (s (fun (cart real Q690460) (cart real Q690460)) vectoru_neg) (s (cart real Q690460) x))))) (s (cart real Q690460) (i (s (fun (cart real Q690460) (cart real Q690460)) vectoru_neg) (s (cart real Q690460) y))))) (s real (i (s (fun (cart real Q690460) real) (i (s (fun (cart real Q690460) (fun (cart real Q690460) real)) vectoru_angle) (s (cart real Q690460) x))) (s (cart real Q690460) y))))
(rule (s real (i (s (fun (fun Q71708 real) real) (i (s (fun (fun Q71708 bool) (fun (fun Q71708 real) real)) sum0) (s (fun Q71708 bool) (i (s (fun (fun Q71708 bool) (fun Q71708 bool)) (i (s (fun (fun Q71708 real) (fun (fun Q71708 bool) (fun Q71708 bool))) (i (s (fun (fun real (fun real real)) (fun (fun Q71708 real) (fun (fun Q71708 bool) (fun Q71708 bool)))) support) (s (fun real (fun real real)) realu_add))) (s (fun Q71708 real) f))) (s (fun Q71708 bool) s0))))) (s (fun Q71708 real) f))) (s real (i (s (fun (fun Q71708 real) real) (i (s (fun (fun Q71708 bool) (fun (fun Q71708 real) real)) sum0) (s (fun Q71708 bool) s0))) (s (fun Q71708 real) f))))
(rule (s (cart (cart real Q114392) Q114393) (i (s (fun (cart (cart real Q114392) Q114393) (cart (cart real Q114392) Q114393)) (i (s (fun real (fun (cart (cart real Q114392) Q114393) (cart (cart real Q114392) Q114393))) r_r_) (s real c))) (s (cart (cart real Q114392) Q114393) (i (s (fun num (cart (cart real Q114392) Q114393)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real Q114392) Q114393) (i (s (fun num (cart (cart real Q114392) Q114393)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real Q114795) (i (s (fun (cart real N) (cart real Q114795)) (i (s (fun (cart (cart real N) Q114795) (fun (cart real N) (cart real Q114795))) matrixu_vectoru_mul) (s (cart (cart real N) Q114795) (i (s (fun num (cart (cart real N) Q114795)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real N) x))) (s (cart real Q114795) (i (s (fun num (cart real Q114795)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real N) (i (s (fun (cart real (finite_sum M N)) (cart real N)) sndcart) (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) vectoru_neg) (s (cart real (finite_sum M N)) x))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) (i (s (fun (cart real (finite_sum M N)) (cart real N)) sndcart) (s (cart real (finite_sum M N)) x))))))
(rule (s (cart real M) (i (s (fun (cart real (finite_sum M N)) (cart real M)) fstcart) (s (cart real (finite_sum M N)) (i (s (fun (cart real (finite_sum M N)) (cart real (finite_sum M N))) vectoru_neg) (s (cart real (finite_sum M N)) x))))) (s (cart real M) (i (s (fun (cart real M) (cart real M)) vectoru_neg) (s (cart real M) (i (s (fun (cart real (finite_sum M N)) (cart real M)) fstcart) (s (cart real (finite_sum M N)) x))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) sin) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) cos) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) w))) (s (cart real n3) y))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) w))) (s (cart real n3) z))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) y))))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) w))) (s (cart real n3) x))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) z))))))
(rule (s (prod hreal hreal) (i (s (fun hreal (prod hreal hreal)) (i (s (fun hreal (fun hreal (prod hreal hreal))) c_) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal x1))) (s hreal x2))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal y1))) (s hreal y2))))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal x1))) (s hreal y2))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal y1))) (s hreal x2))))))) (s (prod hreal hreal) (i (s (fun (prod hreal hreal) (prod hreal hreal)) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) (prod hreal hreal))) trealu_mul) (s (prod hreal hreal) (i (s (fun hreal (prod hreal hreal)) (i (s (fun hreal (fun hreal (prod hreal hreal))) c_) (s hreal x1))) (s hreal y1))))) (s (prod hreal hreal) (i (s (fun hreal (prod hreal hreal)) (i (s (fun hreal (fun hreal (prod hreal hreal))) c_) (s hreal x2))) (s hreal y2))))))
(rule (s num (i (s (fun (fun Q68242 num) num) (i (s (fun (fun Q68242 bool) (fun (fun Q68242 num) num)) nsum) (s (fun Q68242 bool) (i (s (fun (fun Q68242 bool) (fun Q68242 bool)) (i (s (fun Q68242 (fun (fun Q68242 bool) (fun Q68242 bool))) INSERT) (s Q68242 x))) (s (fun Q68242 bool) EMPTY))))) (s (fun Q68242 num) f))) (s num (i (s (fun Q68242 num) f) (s Q68242 x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real (i (s (fun real real) sqrt) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) atn) (s real x))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) (i (s (fun bool (fun (cart real n2) (fun (cart real n2) (cart real n2)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) (i (s (fun bool (fun (cart real n2) (fun (cart real n2) (cart real n2)))) COND) (s bool (i (s (fun (cart real n2) bool) (i (s (fun (cart real n2) (fun (cart real n2) bool)) a_) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num n))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num n))))))))
(rule (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real N) bool) s0))))) (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) s0))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n1) bool) real) measure) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_lt) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n1) bool) real) measure) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n1) bool) real) measure) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun (cart real n1) bool) real) measure) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (fun (cart real n1) bool) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) (i (s (fun bool (fun (fun (cart real n1) bool) (fun (fun (cart real n1) bool) (fun (cart real n1) bool)))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) b))) (s (cart real n1) a))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_segment) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))
(rule (s real (i (s (fun (cart real n2) real) Arg) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n3) (cart real n2)) (i (s (fun num (fun (cart real n3) (cart real n2))) dropout) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) y))))) (s (cart real n2) (i (s (fun (cart real n3) (cart real n2)) (i (s (fun num (fun (cart real n3) (cart real n2))) dropout) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) x))))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) azim) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) x))) (s (cart real n3) y))))
(rule (s real (i (s (fun (prod (cart real Q99591) (cart real Q99591)) real) distance) (s (prod (cart real Q99591) (cart real Q99591)) (i (s (fun (cart real Q99591) (prod (cart real Q99591) (cart real Q99591))) (i (s (fun (cart real Q99591) (fun (cart real Q99591) (prod (cart real Q99591) (cart real Q99591)))) c_) (s (cart real Q99591) x))) (s (cart real Q99591) y))))) (s real (i (s (fun (cart real Q99591) real) vectoru_norm) (s (cart real Q99591) (i (s (fun (cart real Q99591) (cart real Q99591)) (i (s (fun (cart real Q99591) (fun (cart real Q99591) (cart real Q99591))) vectoru_sub) (s (cart real Q99591) x))) (s (cart real Q99591) y))))))
(rule (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun (fun num bool) (fun (fun num bool) (fun num bool))) (i (s (fun bool (fun (fun num bool) (fun (fun num bool) (fun num bool)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))) (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun num (fun (fun num bool) (fun num bool))) INSERT) (s num (i (s (fun num num) SUC) (s num n))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun (cart real n2) real) infnorm) (s (cart real n2) x))))
(rule (s real (i (s (fun (prod (fun (cart real Q238878) bool) (fun (cart real Q238878) bool)) real) setdist) (s (prod (fun (cart real Q238878) bool) (fun (cart real Q238878) bool)) (i (s (fun (fun (cart real Q238878) bool) (prod (fun (cart real Q238878) bool) (fun (cart real Q238878) bool))) (i (s (fun (fun (cart real Q238878) bool) (fun (fun (cart real Q238878) bool) (prod (fun (cart real Q238878) bool) (fun (cart real Q238878) bool)))) c_) (s (fun (cart real Q238878) bool) s0))) (s (fun (cart real Q238878) bool) EMPTY))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun (prod (fun (cart real Q238862) bool) (fun (cart real Q238862) bool)) real) setdist) (s (prod (fun (cart real Q238862) bool) (fun (cart real Q238862) bool)) (i (s (fun (fun (cart real Q238862) bool) (prod (fun (cart real Q238862) bool) (fun (cart real Q238862) bool))) (i (s (fun (fun (cart real Q238862) bool) (fun (fun (cart real Q238862) bool) (prod (fun (cart real Q238862) bool) (fun (cart real Q238862) bool)))) c_) (s (fun (cart real Q238862) bool) EMPTY))) (s (fun (cart real Q238862) bool) t))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real N) (i (s (fun (cart real M) (cart real N)) (i (s (fun (cart (cart real M) N) (fun (cart real M) (cart real N))) matrixu_vectoru_mul) (s (cart (cart real M) N) A0))) (s (cart real M) (i (s (fun num (cart real M)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (list Q18358) (i (s (fun (list Q18358) (list Q18358)) (i (s (fun Q18358 (fun (list Q18358) (list Q18358))) CONS) (s Q18358 x))) (s (list Q18358) (i (s (fun Q18358 (list Q18358)) (i (s (fun num (fun Q18358 (list Q18358))) REPLICATE) (s num n))) (s Q18358 x))))) (s (list Q18358) (i (s (fun Q18358 (list Q18358)) (i (s (fun num (fun Q18358 (list Q18358))) REPLICATE) (s num (i (s (fun num num) SUC) (s num n))))) (s Q18358 x))))
(rule (s real (i (s (fun (fun Q72912 real) real) (i (s (fun (fun Q72912 bool) (fun (fun Q72912 real) real)) sum0) (s (fun Q72912 bool) (i (s (fun (fun Q72912 bool) (fun Q72912 bool)) (i (s (fun Q72912 (fun (fun Q72912 bool) (fun Q72912 bool))) INSERT) (s Q72912 x))) (s (fun Q72912 bool) EMPTY))))) (s (fun Q72912 real) f))) (s real (i (s (fun Q72912 real) f) (s Q72912 x))))
(rule (s (fun (finite_image A) bool) (i (s (fun (fun num bool) (fun (finite_image A) bool)) (i (s (fun (fun num (finite_image A)) (fun (fun num bool) (fun (finite_image A) bool))) IMAGE) (s (fun num (finite_image A)) finiteu_index))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun (fun A bool) num) dimindex) (s (fun A bool) UNIV))))))) (s (fun (finite_image A) bool) UNIV))
(rule (s (cart (cart real M) N) (i (s (fun (cart (cart real M) N) (cart (cart real M) N)) (i (s (fun real (fun (cart (cart real M) N) (cart (cart real M) N))) r_r_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart (cart real M) N) X))) (s (cart (cart real M) N) X))
(rule (s (cart (cart real Q114605) Q114606) (i (s (fun (cart (cart real Q114605) Q114606) (cart (cart real Q114605) Q114606)) matrixu_neg) (s (cart (cart real Q114605) Q114606) (i (s (fun num (cart (cart real Q114605) Q114606)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real Q114605) Q114606) (i (s (fun num (cart (cart real Q114605) Q114606)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (fun (cart real Q721567) bool) (i (s (fun real (fun (cart real Q721567) bool)) (i (s (fun real (fun real (fun (cart real Q721567) bool))) (i (s (fun real (fun real (fun real (fun (cart real Q721567) bool)))) (i (s (fun (cart real Q721567) (fun real (fun real (fun real (fun (cart real Q721567) bool))))) (i (s (fun (cart real Q721567) (fun (cart real Q721567) (fun real (fun real (fun real (fun (cart real Q721567) bool)))))) frustum) (s (cart real Q721567) v0))) (s (cart real Q721567) v1))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real h))) (s real a))) (s (fun (cart real Q721567) bool) (i (s (fun real (fun (cart real Q721567) bool)) (i (s (fun real (fun real (fun (cart real Q721567) bool))) (i (s (fun (cart real Q721567) (fun real (fun real (fun (cart real Q721567) bool)))) (i (s (fun (cart real Q721567) (fun (cart real Q721567) (fun real (fun real (fun (cart real Q721567) bool))))) frustt) (s (cart real Q721567) v0))) (s (cart real Q721567) v1))) (s real h))) (s real a))))
(rule (s real (i (s (fun (fun Q152407 real) real) (i (s (fun (fun Q152407 bool) (fun (fun Q152407 real) real)) product) (s (fun Q152407 bool) (i (s (fun (fun Q152407 bool) (fun Q152407 bool)) (i (s (fun Q152407 (fun (fun Q152407 bool) (fun Q152407 bool))) INSERT) (s Q152407 x))) (s (fun Q152407 bool) EMPTY))))) (s (fun Q152407 real) f))) (s real (i (s (fun Q152407 real) f) (s Q152407 x))))
(rule (s (cart real Q107633) (i (s (fun (fun num (cart real Q107633)) (cart real Q107633)) (i (s (fun (fun num bool) (fun (fun num (cart real Q107633)) (cart real Q107633))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num n))) (s num m))))) (s (fun num (cart real Q107633)) (i (s (fun (fun num num) (fun num (cart real Q107633))) (i (s (fun (fun num (cart real Q107633)) (fun (fun num num) (fun num (cart real Q107633)))) o) (s (fun num (cart real Q107633)) f))) (s (fun num num) SUC))))) (s (cart real Q107633) (i (s (fun (fun num (cart real Q107633)) (cart real Q107633)) (i (s (fun (fun num bool) (fun (fun num (cart real Q107633)) (cart real Q107633))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) SUC) (s num n))))) (s num (i (s (fun num num) SUC) (s num m))))))) (s (fun num (cart real Q107633)) f))))
(rule (s A (i (s (fun (list A) A) LAST) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A h))) (s (list A) NIL))))) (s A h))
(rule (s A (i (s (fun (list A) A) HD) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A h))) (s (list A) t))))) (s A h))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real e))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real e))
(rule (s B (i (s (fun (sum A B) B) OUTR) (s (sum A B) (i (s (fun B (sum A B)) INR) (s B y))))) (s B y))
(rule (s (fun (cart real Q294416) bool) (i (s (fun (fun (cart real Q294416) bool) (fun (cart real Q294416) bool)) relativeu_interior) (s (fun (cart real Q294416) bool) (i (s (fun (fun (cart real Q294416) bool) (fun (cart real Q294416) bool)) (i (s (fun (cart real Q294416) (fun (fun (cart real Q294416) bool) (fun (cart real Q294416) bool))) INSERT) (s (cart real Q294416) a))) (s (fun (cart real Q294416) bool) EMPTY))))) (s (fun (cart real Q294416) bool) (i (s (fun (fun (cart real Q294416) bool) (fun (cart real Q294416) bool)) (i (s (fun (cart real Q294416) (fun (fun (cart real Q294416) bool) (fun (cart real Q294416) bool))) INSERT) (s (cart real Q294416) a))) (s (fun (cart real Q294416) bool) EMPTY))))
(rule (s (fun (cart real Q169849) bool) (i (s (fun (prod (cart real Q169849) real) (fun (cart real Q169849) bool)) cball) (s (prod (cart real Q169849) real) (i (s (fun real (prod (cart real Q169849) real)) (i (s (fun (cart real Q169849) (fun real (prod (cart real Q169849) real))) c_) (s (cart real Q169849) x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (fun (cart real Q169849) bool) (i (s (fun (fun (cart real Q169849) bool) (fun (cart real Q169849) bool)) (i (s (fun (cart real Q169849) (fun (fun (cart real Q169849) bool) (fun (cart real Q169849) bool))) INSERT) (s (cart real Q169849) x))) (s (fun (cart real Q169849) bool) EMPTY))))
(rule (s (fun Q48133 bool) (i (s (fun (fun (fun Q48133 bool) bool) (fun Q48133 bool)) UNIONS) (s (fun (fun Q48133 bool) bool) (i (s (fun (fun (fun Q48133 bool) bool) (fun (fun Q48133 bool) bool)) (i (s (fun (fun Q48133 bool) (fun (fun (fun Q48133 bool) bool) (fun (fun Q48133 bool) bool))) INSERT) (s (fun Q48133 bool) s0))) (s (fun (fun Q48133 bool) bool) EMPTY))))) (s (fun Q48133 bool) s0))
(rule (s (fun Q48463 bool) (i (s (fun (fun (fun Q48463 bool) bool) (fun Q48463 bool)) INTERS) (s (fun (fun Q48463 bool) bool) (i (s (fun (fun (fun Q48463 bool) bool) (fun (fun Q48463 bool) bool)) (i (s (fun (fun Q48463 bool) (fun (fun (fun Q48463 bool) bool) (fun (fun Q48463 bool) bool))) INSERT) (s (fun Q48463 bool) s0))) (s (fun (fun Q48463 bool) bool) EMPTY))))) (s (fun Q48463 bool) s0))
(rule (s (topology Q169211) (i (s (fun (fun Q169211 bool) (topology Q169211)) (i (s (fun (topology Q169211) (fun (fun Q169211 bool) (topology Q169211))) subtopology) (s (topology Q169211) top))) (s (fun Q169211 bool) (i (s (fun (topology Q169211) (fun Q169211 bool)) topspace) (s (topology Q169211) top))))) (s (topology Q169211) top))
(rule (s (cart (cart real Q115515) Q115516) (i (s (fun (cart (cart real Q115516) Q115515) (cart (cart real Q115515) Q115516)) transp) (s (cart (cart real Q115516) Q115515) (i (s (fun num (cart (cart real Q115516) Q115515)) mat) (s num n))))) (s (cart (cart real Q115515) Q115516) (i (s (fun num (cart (cart real Q115515) Q115516)) mat) (s num n))))
(rule (s Q560271 (i (s (fun Q560271 Q560271) (i (s (fun (fun Q560271 Q560271) (fun Q560271 Q560271)) (i (s (fun num (fun (fun Q560271 Q560271) (fun Q560271 Q560271))) ITER) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun Q560271 Q560271) f))) (s Q560271 x))) (s Q560271 x))
(rule (s (fun (net Q619900) bool) (i (s (fun real (fun (net Q619900) bool)) (i (s (fun (fun Q619900 real) (fun real (fun (net Q619900) bool))) m_m_m_g_) (s (fun Q619900 real) (i (s (fun (fun Q619900 (cart real n1)) (fun Q619900 real)) (i (s (fun (fun (cart real n1) real) (fun (fun Q619900 (cart real n1)) (fun Q619900 real))) o) (s (fun (cart real n1) real) drop))) (s (fun Q619900 (cart real n1)) s0))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) l))))) (s (fun (net Q619900) bool) (i (s (fun (cart real n1) (fun (net Q619900) bool)) (i (s (fun (fun Q619900 (cart real n1)) (fun (cart real n1) (fun (net Q619900) bool))) m_m_g_) (s (fun Q619900 (cart real n1)) s0))) (s (cart real n1) l))))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_add) (s (cart real N) x))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) y))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) x))) (s (cart real N) y))))
(rule (s (fun (cart real Q174843) bool) (i (s (fun (fun (cart real Q174843) bool) (fun (cart real Q174843) bool)) frontier) (s (fun (cart real Q174843) bool) (i (s (fun (fun (cart real Q174843) bool) (fun (cart real Q174843) bool)) (i (s (fun (fun (cart real Q174843) bool) (fun (fun (cart real Q174843) bool) (fun (cart real Q174843) bool))) DIFF) (s (fun (cart real Q174843) bool) UNIV))) (s (fun (cart real Q174843) bool) s0))))) (s (fun (cart real Q174843) bool) (i (s (fun (fun (cart real Q174843) bool) (fun (cart real Q174843) bool)) frontier) (s (fun (cart real Q174843) bool) s0))))
(rule (s (fun (cart real n1) (cart real Q307310)) (i (s (fun (fun (cart real n1) (cart real Q307310)) (fun (cart real n1) (cart real Q307310))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real Q307310)) (fun (cart real n1) (cart real Q307310)))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) (cart real Q307310)) (fun (cart real n1) (cart real Q307310))))) subpath) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real n1) (cart real Q307310)) g))) (s (fun (cart real n1) (cart real Q307310)) (i (s (fun (fun (cart real n1) (cart real Q307310)) (fun (cart real n1) (cart real Q307310))) reversepath) (s (fun (cart real n1) (cart real Q307310)) g))))
(rule (s (fun (cart real Q292394) bool) (i (s (fun (fun (cart real Q292394) bool) (fun (cart real Q292394) bool)) relativeu_interior) (s (fun (cart real Q292394) bool) (i (s (fun (fun (cart real Q292394) bool) (fun (cart real Q292394) bool)) (i (s (fun (fun (fun (cart real Q292394) bool) bool) (fun (fun (cart real Q292394) bool) (fun (cart real Q292394) bool))) hull) (s (fun (fun (cart real Q292394) bool) bool) affine))) (s (fun (cart real Q292394) bool) s0))))) (s (fun (cart real Q292394) bool) (i (s (fun (fun (cart real Q292394) bool) (fun (cart real Q292394) bool)) (i (s (fun (fun (fun (cart real Q292394) bool) bool) (fun (fun (cart real Q292394) bool) (fun (cart real Q292394) bool))) hull) (s (fun (fun (cart real Q292394) bool) bool) affine))) (s (fun (cart real Q292394) bool) s0))))
(rule (s (net (cart real N)) (i (s (fun (fun (cart real N) bool) (net (cart real N))) (i (s (fun (net (cart real N)) (fun (fun (cart real N) bool) (net (cart real N)))) within) (s (net (cart real N)) (i (s (fun (cart real N) (net (cart real N))) at) (s (cart real N) x))))) (s (fun (cart real N) bool) UNIV))) (s (net (cart real N)) (i (s (fun (cart real N) (net (cart real N))) at) (s (cart real N) x))))
(rule (s num (i (s (fun (cart (cart real N) M) num) rank) (s (cart (cart real N) M) (i (s (fun (cart (cart real M) N) (cart (cart real N) M)) transp) (s (cart (cart real M) N) A0))))) (s num (i (s (fun (cart (cart real M) N) num) rank) (s (cart (cart real M) N) A0))))
(rule (s real (i (s (fun (cart (cart real N) N) real) det) (s (cart (cart real N) N) (i (s (fun (cart (cart real N) N) (cart (cart real N) N)) transp) (s (cart (cart real N) N) A0))))) (s real (i (s (fun (cart (cart real N) N) real) det) (s (cart (cart real N) N) A0))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) s0))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) s0))))
(rule (s A (i (s (fun (sum A B) A) OUTL) (s (sum A B) (i (s (fun A (sum A B)) INL) (s A x))))) (s A x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) a))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) b))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) b))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) a))) (s (cart real n2) b))))
(rule (s Q78341 (i (s (fun (finite_image Q78351) Q78341) (i (s (fun (cart Q78341 Q78351) (fun (finite_image Q78351) Q78341)) destu_cart) (s (cart Q78341 Q78351) x))) (s (finite_image Q78351) (i (s (fun num (finite_image Q78351)) finiteu_index) (s num i0))))) (s Q78341 (i (s (fun num Q78341) (i (s (fun (cart Q78341 Q78351) (fun num Q78341)) d_) (s (cart Q78341 Q78351) x))) (s num i0))))
(rule (s (cart real Q108456) (i (s (fun (fun num (cart real Q108456)) (cart real Q108456)) (i (s (fun (fun num bool) (fun (fun num (cart real Q108456)) (cart real Q108456))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (fun num (cart real Q108456)) f))) (s (cart real Q108456) (i (s (fun num (cart real Q108456)) f) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real Q303106) (i (s (fun (fun (cart real n1) (cart real Q303106)) (cart real Q303106)) pathfinish) (s (fun (cart real n1) (cart real Q303106)) (i (s (fun (fun (cart real n1) (cart real Q303106)) (fun (cart real n1) (cart real Q303106))) (i (s (fun (fun (cart real n1) (cart real Q303106)) (fun (fun (cart real n1) (cart real Q303106)) (fun (cart real n1) (cart real Q303106)))) p_p_) (s (fun (cart real n1) (cart real Q303106)) g1))) (s (fun (cart real n1) (cart real Q303106)) g2))))) (s (cart real Q303106) (i (s (fun (fun (cart real n1) (cart real Q303106)) (cart real Q303106)) pathfinish) (s (fun (cart real n1) (cart real Q303106)) g2))))
(rule (s (cart real Q303087) (i (s (fun (fun (cart real n1) (cart real Q303087)) (cart real Q303087)) pathstart) (s (fun (cart real n1) (cart real Q303087)) (i (s (fun (fun (cart real n1) (cart real Q303087)) (fun (cart real n1) (cart real Q303087))) (i (s (fun (fun (cart real n1) (cart real Q303087)) (fun (fun (cart real n1) (cart real Q303087)) (fun (cart real n1) (cart real Q303087)))) p_p_) (s (fun (cart real n1) (cart real Q303087)) g1))) (s (fun (cart real n1) (cart real Q303087)) g2))))) (s (cart real Q303087) (i (s (fun (fun (cart real n1) (cart real Q303087)) (cart real Q303087)) pathstart) (s (fun (cart real n1) (cart real Q303087)) g1))))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) x))) (s (cart real N) y))))) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun (cart real N) (fun (cart real N) (cart real N))) vectoru_sub) (s (cart real N) y))) (s (cart real N) x))))
(rule (s num (i (s (fun (list B) num) LENGTH) (s (list B) (i (s (fun (list A) (list B)) (i (s (fun (fun A B) (fun (list A) (list B))) MAP) (s (fun A B) f))) (s (list A) l))))) (s num (i (s (fun (list A) num) LENGTH) (s (list A) l))))
(rule (s (cart (cart real Q114409) Q114410) (i (s (fun (cart (cart real Q114409) Q114410) (cart (cart real Q114409) Q114410)) (i (s (fun real (fun (cart (cart real Q114409) Q114410) (cart (cart real Q114409) Q114410))) r_r_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart (cart real Q114409) Q114410) A0))) (s (cart (cart real Q114409) Q114410) (i (s (fun num (cart (cart real Q114409) Q114410)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (net A) (i (s (fun (fun A (fun A bool)) (net A)) mku_net) (s (fun A (fun A bool)) (i (s (fun (net A) (fun A (fun A bool))) netord) (s (net A) a))))) (s (net A) a))
(rule (s (fun (cart real Q169371) bool) (i (s (fun (topology (cart real Q169371)) (fun (cart real Q169371) bool)) topspace) (s (topology (cart real Q169371)) (i (s (fun (fun (cart real Q169371) bool) (topology (cart real Q169371))) (i (s (fun (topology (cart real Q169371)) (fun (fun (cart real Q169371) bool) (topology (cart real Q169371)))) subtopology) (s (topology (cart real Q169371)) euclidean))) (s (fun (cart real Q169371) bool) s0))))) (s (fun (cart real Q169371) bool) s0))
(rule (s (fun (cart real n1) Q307259) (i (s (fun (fun (cart real n1) Q307259) (fun (cart real n1) Q307259)) (i (s (fun (cart real n1) (fun (fun (cart real n1) Q307259) (fun (cart real n1) Q307259))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) Q307259) (fun (cart real n1) Q307259)))) subpath) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (fun (cart real n1) Q307259) g))) (s (fun (cart real n1) Q307259) g))
(rule (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) s0))) (s A (i (s (fun (fun A bool) A) CHOICE) (s (fun A bool) s0))))) (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) REST) (s (fun A bool) s0))))
(rule (s (fun (cart real Q336363) bool) (i (s (fun (fun (cart real Q336363) bool) (fun (cart real Q336363) bool)) (i (s (fun (fun (cart real Q336363) bool) (fun (fun (cart real Q336363) bool) (fun (cart real Q336363) bool))) INTER) (s (fun (cart real Q336363) bool) (i (s (fun (fun (cart real Q336363) bool) (fun (cart real Q336363) bool)) inside) (s (fun (cart real Q336363) bool) s0))))) (s (fun (cart real Q336363) bool) s0))) (s (fun (cart real Q336363) bool) EMPTY))
(rule (s (fun (cart real Q336377) bool) (i (s (fun (fun (cart real Q336377) bool) (fun (cart real Q336377) bool)) (i (s (fun (fun (cart real Q336377) bool) (fun (fun (cart real Q336377) bool) (fun (cart real Q336377) bool))) INTER) (s (fun (cart real Q336377) bool) (i (s (fun (fun (cart real Q336377) bool) (fun (cart real Q336377) bool)) outside) (s (fun (cart real Q336377) bool) s0))))) (s (fun (cart real Q336377) bool) s0))) (s (fun (cart real Q336377) bool) EMPTY))
(rule (s (fun (cart real Q169832) bool) (i (s (fun (prod (cart real Q169832) real) (fun (cart real Q169832) bool)) ball) (s (prod (cart real Q169832) real) (i (s (fun real (prod (cart real Q169832) real)) (i (s (fun (cart real Q169832) (fun real (prod (cart real Q169832) real))) c_) (s (cart real Q169832) x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (fun (cart real Q169832) bool) EMPTY))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) a_) (s real y))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) rpow) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real y))))
(rule (s (fun (net Q619917) bool) (i (s (fun (cart real n2) (fun (net Q619917) bool)) (i (s (fun (fun Q619917 (cart real n2)) (fun (cart real n2) (fun (net Q619917) bool))) m_m_g_) (s (fun Q619917 (cart real n2)) (i (s (fun (fun Q619917 real) (fun Q619917 (cart real n2))) (i (s (fun (fun real (cart real n2)) (fun (fun Q619917 real) (fun Q619917 (cart real n2)))) o) (s (fun real (cart real n2)) Cx))) (s (fun Q619917 real) s0))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real l))))) (s (fun (net Q619917) bool) (i (s (fun real (fun (net Q619917) bool)) (i (s (fun (fun Q619917 real) (fun real (fun (net Q619917) bool))) m_m_m_g_) (s (fun Q619917 real) s0))) (s real l))))
(rule (s (fun (net Q619883) bool) (i (s (fun (cart real n1) (fun (net Q619883) bool)) (i (s (fun (fun Q619883 (cart real n1)) (fun (cart real n1) (fun (net Q619883) bool))) m_m_g_) (s (fun Q619883 (cart real n1)) (i (s (fun (fun Q619883 real) (fun Q619883 (cart real n1))) (i (s (fun (fun real (cart real n1)) (fun (fun Q619883 real) (fun Q619883 (cart real n1)))) o) (s (fun real (cart real n1)) lift))) (s (fun Q619883 real) s0))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real l))))) (s (fun (net Q619883) bool) (i (s (fun real (fun (net Q619883) bool)) (i (s (fun (fun Q619883 real) (fun real (fun (net Q619883) bool))) m_m_m_g_) (s (fun Q619883 real) s0))) (s real l))))
(rule (s (list A) (i (s (fun (list A) (list A)) TL) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A h))) (s (list A) t))))) (s (list A) t))
(rule (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) azim) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) a))) (s (cart real n3) v))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) a))) (s (cart real n3) w))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) a))) (s (cart real n3) w1))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) a))) (s (cart real n3) w2))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) azim) (s (cart real n3) v))) (s (cart real n3) w))) (s (cart real n3) w1))) (s (cart real n3) w2))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) f) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun num real) f))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) z))))))
(rule (s nadd (i (s (fun nadd nadd) (i (s (fun nadd (fun nadd nadd)) (i (s (fun bool (fun nadd (fun nadd nadd))) COND) (s bool (i (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd x))) (s nadd (i (s (fun num nadd) naddu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s nadd (i (s (fun num nadd) naddu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s nadd (i (s (fun (fun num num) nadd) mku_nadd) (s (fun num num) (i (s (fun nadd (fun num num)) naddu_rinv) (s nadd x))))))) (s nadd (i (s (fun nadd nadd) naddu_inv) (s nadd x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) sqrt) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))
(rule (s (cart real Q98893) (i (s (fun (cart real Q98893) (cart real Q98893)) (i (s (fun (cart real Q98893) (fun (cart real Q98893) (cart real Q98893))) vectoru_sub) (s (cart real Q98893) (i (s (fun num (cart real Q98893)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98893) x))) (s (cart real Q98893) (i (s (fun (cart real Q98893) (cart real Q98893)) vectoru_neg) (s (cart real Q98893) x))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun (prod (cart real n1) (cart real n1)) real) distance) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) x))) (s (cart real n1) y))))))
(rule (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun (fun real bool) (fun (fun real bool) (fun real bool))) DIFF) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_segment) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real a))) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real b))) (s (fun real bool) EMPTY))))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_segment) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (fun (cart real n1) bool) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) DIFF) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (cart real n1) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) INSERT) (s (cart real n1) a))) (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (cart real n1) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) INSERT) (s (cart real n1) b))) (s (fun (cart real n1) bool) EMPTY))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))
(rule (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun (fun real bool) (fun (fun real bool) (fun real bool))) DIFF) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real a))) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real b))) (s (fun real bool) EMPTY))))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num n))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT1) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num n))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT1) (s num n))))))
(rule (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun (fun real bool) (fun (fun real bool) (fun real bool))) (i (s (fun bool (fun (fun real bool) (fun (fun real bool) (fun real bool)))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real a))) (s real b))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real b))) (s real a))))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_segment) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_sub) (s (cart real n1) x))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_add) (s (cart real n1) x))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) real) (fun (cart real n1) bool)) cball) (s (prod (cart real n1) real) (i (s (fun real (prod (cart real n1) real)) (i (s (fun (cart real n1) (fun real (prod (cart real n1) real))) c_) (s (cart real n1) x))) (s real e))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) FACT) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) FACT) (s num k))))) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num k))))) (s num k))))))))) (s num (i (s (fun num num) FACT) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num k))))))
(rule (s real (i (s (fun (fun (cart real n1) bool) real) content) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real Q98454) (i (s (fun (cart real Q98454) (cart real Q98454)) (i (s (fun (cart real Q98454) (fun (cart real Q98454) (cart real Q98454))) vectoru_add) (s (cart real Q98454) (i (s (fun num (cart real Q98454)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98454) x))) (s (cart real Q98454) x))
(rule (s (cart real Q98469) (i (s (fun (cart real Q98469) (cart real Q98469)) (i (s (fun (cart real Q98469) (fun (cart real Q98469) (cart real Q98469))) vectoru_add) (s (cart real Q98469) x))) (s (cart real Q98469) (i (s (fun num (cart real Q98469)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98469) x))
(rule (s (cart real Q98829) (i (s (fun (cart real Q98829) (cart real Q98829)) (i (s (fun (cart real Q98829) (fun (cart real Q98829) (cart real Q98829))) vectoru_sub) (s (cart real Q98829) x))) (s (cart real Q98829) (i (s (fun num (cart real Q98829)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98829) x))
(rule (s (fun (cart real Q120625) bool) (i (s (fun (fun (cart real Q120625) bool) (fun (cart real Q120625) bool)) (i (s (fun (cart real Q120625) (fun (fun (cart real Q120625) bool) (fun (cart real Q120625) bool))) INSERT) (s (cart real Q120625) (i (s (fun num (cart real Q120625)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real Q120625) bool) EMPTY))) (s (fun (cart real Q120625) bool) (i (s (fun (fun (cart real Q120625) bool) (fun (cart real Q120625) bool)) span) (s (fun (cart real Q120625) bool) EMPTY))))
(rule (s (fun (cart real Q286180) bool) (i (s (fun (fun (cart real Q286180) bool) (fun (cart real Q286180) bool)) (i (s (fun (cart real Q286180) (fun (fun (cart real Q286180) bool) (fun (cart real Q286180) bool))) INSERT) (s (cart real Q286180) (i (s (fun num (cart real Q286180)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun (cart real Q286180) bool) EMPTY))) (s (fun (cart real Q286180) bool) (i (s (fun (fun (cart real Q286180) bool) (fun (cart real Q286180) bool)) (i (s (fun (fun (fun (cart real Q286180) bool) bool) (fun (fun (cart real Q286180) bool) (fun (cart real Q286180) bool))) hull) (s (fun (fun (cart real Q286180) bool) bool) convexu_cone))) (s (fun (cart real Q286180) bool) EMPTY))))
(rule (s (fun Q560236 Q560236) (i (s (fun (fun Q560236 Q560236) (fun Q560236 Q560236)) (i (s (fun num (fun (fun Q560236 Q560236) (fun Q560236 Q560236))) ITER) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun Q560236 Q560236) f))) (s (fun Q560236 Q560236) I0))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num n))))
(rule (s (fun (cart real Q721595) bool) (i (s (fun real (fun (cart real Q721595) bool)) (i (s (fun real (fun real (fun (cart real Q721595) bool))) (i (s (fun real (fun real (fun real (fun (cart real Q721595) bool)))) (i (s (fun (cart real Q721595) (fun real (fun real (fun real (fun (cart real Q721595) bool))))) (i (s (fun (cart real Q721595) (fun (cart real Q721595) (fun real (fun real (fun real (fun (cart real Q721595) bool)))))) frustum) (s (cart real Q721595) v0))) (s (cart real Q721595) v0))) (s real h1))) (s real h2))) (s real a))) (s (fun (cart real Q721595) bool) EMPTY))
(rule (s real (i (s (fun (cart real Q99255) real) (i (s (fun (cart real Q99255) (fun (cart real Q99255) real)) dot) (s (cart real Q99255) (i (s (fun (cart real Q99255) (cart real Q99255)) (i (s (fun real (fun (cart real Q99255) (cart real Q99255))) r_) (s real c))) (s (cart real Q99255) x))))) (s (cart real Q99255) y))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real c))) (s real (i (s (fun (cart real Q99255) real) (i (s (fun (cart real Q99255) (fun (cart real Q99255) real)) dot) (s (cart real Q99255) x))) (s (cart real Q99255) y))))))
(rule (s real (i (s (fun (cart real Q99283) real) (i (s (fun (cart real Q99283) (fun (cart real Q99283) real)) dot) (s (cart real Q99283) x))) (s (cart real Q99283) (i (s (fun (cart real Q99283) (cart real Q99283)) (i (s (fun real (fun (cart real Q99283) (cart real Q99283))) r_) (s real c))) (s (cart real Q99283) y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real c))) (s real (i (s (fun (cart real Q99283) real) (i (s (fun (cart real Q99283) (fun (cart real Q99283) real)) dot) (s (cart real Q99283) x))) (s (cart real Q99283) y))))))
(rule (s (cart real N) (i (s (fun (fun (cart real n1) (cart real N)) (cart real N)) pathstart) (s (fun (cart real n1) (cart real N)) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N)))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))))) subpath) (s (cart real n1) u))) (s (cart real n1) v))) (s (fun (cart real n1) (cart real N)) g))))) (s (cart real N) (i (s (fun (cart real n1) (cart real N)) g) (s (cart real n1) u))))
(rule (s (fun (cart real n1) (cart real Q307328)) (i (s (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328))) reversepath) (s (fun (cart real n1) (cart real Q307328)) (i (s (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328)))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328))))) subpath) (s (cart real n1) u))) (s (cart real n1) v))) (s (fun (cart real n1) (cart real Q307328)) g))))) (s (fun (cart real n1) (cart real Q307328)) (i (s (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328)))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) (cart real Q307328)) (fun (cart real n1) (cart real Q307328))))) subpath) (s (cart real n1) v))) (s (cart real n1) u))) (s (fun (cart real n1) (cart real Q307328)) g))))
(rule (s (cart real Q98624) (i (s (fun (cart real Q98624) (cart real Q98624)) (i (s (fun real (fun (cart real Q98624) (cart real Q98624))) r_) (s real a))) (s (cart real Q98624) (i (s (fun (cart real Q98624) (cart real Q98624)) (i (s (fun real (fun (cart real Q98624) (cart real Q98624))) r_) (s real b))) (s (cart real Q98624) x))))) (s (cart real Q98624) (i (s (fun (cart real Q98624) (cart real Q98624)) (i (s (fun real (fun (cart real Q98624) (cart real Q98624))) r_) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real a))) (s real b))))) (s (cart real Q98624) x))))
(rule (s (cart real N) (i (s (fun (fun (cart real n1) (cart real N)) (cart real N)) pathfinish) (s (fun (cart real n1) (cart real N)) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))) (i (s (fun (cart real n1) (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N)))) (i (s (fun (cart real n1) (fun (cart real n1) (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))))) subpath) (s (cart real n1) u))) (s (cart real n1) v))) (s (fun (cart real n1) (cart real N)) g))))) (s (cart real N) (i (s (fun (cart real n1) (cart real N)) g) (s (cart real n1) v))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) z))))
(rule (s (cart real Q118738) (i (s (fun (cart real (finite_sum Q118732 Q118738)) (cart real Q118738)) sndcart) (s (cart real (finite_sum Q118732 Q118738)) (i (s (fun num (cart real (finite_sum Q118732 Q118738))) vec) (s num n))))) (s (cart real Q118738) (i (s (fun num (cart real Q118738)) vec) (s num n))))
(rule (s (cart real Q118481) (i (s (fun (cart real (finite_sum Q118481 Q118475)) (cart real Q118481)) fstcart) (s (cart real (finite_sum Q118481 Q118475)) (i (s (fun num (cart real (finite_sum Q118481 Q118475))) vec) (s num n))))) (s (cart real Q118481) (i (s (fun num (cart real Q118481)) vec) (s num n))))
(rule (s A (i (s (fun num A) (i (s (fun (fun num A) (fun num A)) (i (s (fun A (fun (fun num A) (fun num A))) FCONS) (s A a))) (s (fun num A) f))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s A a))
(rule (s Q18655 (i (s (fun (list Q18655) Q18655) (i (s (fun num (fun (list Q18655) Q18655)) EL) (s num n))) (s (list Q18655) (i (s (fun (list Q18655) (list Q18655)) TL) (s (list Q18655) l))))) (s Q18655 (i (s (fun (list Q18655) Q18655) (i (s (fun num (fun (list Q18655) Q18655)) EL) (s num (i (s (fun num num) SUC) (s num n))))) (s (list Q18655) l))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) cos) (s real x))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real x))))))
(rule (s (cart real Q98922) (i (s (fun (cart real Q98922) (cart real Q98922)) vectoru_neg) (s (cart real Q98922) (i (s (fun (cart real Q98922) (cart real Q98922)) (i (s (fun real (fun (cart real Q98922) (cart real Q98922))) r_) (s real c))) (s (cart real Q98922) x))))) (s (cart real Q98922) (i (s (fun (cart real Q98922) (cart real Q98922)) (i (s (fun real (fun (cart real Q98922) (cart real Q98922))) r_) (s real (i (s (fun real real) realu_neg) (s real c))))) (s (cart real Q98922) x))))
(rule (s (cart real Q98855) (i (s (fun (cart real Q98855) (cart real Q98855)) (i (s (fun real (fun (cart real Q98855) (cart real Q98855))) r_) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real Q98855) x))) (s (cart real Q98855) (i (s (fun (cart real Q98855) (cart real Q98855)) vectoru_neg) (s (cart real Q98855) x))))
(rule (s int (i (s (fun (fun (cart real Q268391) bool) int) affu_dim) (s (fun (cart real Q268391) bool) (i (s (fun (fun (cart real Q268391) bool) (fun (cart real Q268391) bool)) (i (s (fun (fun (fun (cart real Q268391) bool) bool) (fun (fun (cart real Q268391) bool) (fun (cart real Q268391) bool))) hull) (s (fun (fun (cart real Q268391) bool) bool) affine))) (s (fun (cart real Q268391) bool) s0))))) (s int (i (s (fun (fun (cart real Q268391) bool) int) affu_dim) (s (fun (cart real Q268391) bool) s0))))
(rule (s real (i (s (fun (fun (cart real N) bool) real) diameter) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) convex))) (s (fun (cart real N) bool) s0))))) (s real (i (s (fun (fun (cart real N) bool) real) diameter) (s (fun (cart real N) bool) s0))))
(rule (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) convex))) (s (fun (cart real N) bool) s0))))) (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) s0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT1) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) cos) (s real y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) sin) (s real y))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real w))))) (s real (i (s (fun real real) cos) (s real z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real w))))) (s real (i (s (fun real real) sin) (s real z))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real w))) (s real z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real w))))) (s real (i (s (fun real real) cos) (s real z))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real w))))) (s real (i (s (fun real real) sin) (s real z))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real w))) (s real z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) cos) (s real y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) sin) (s real y))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s real (i (s (fun (cart real Q99312) real) (i (s (fun (cart real Q99312) (fun (cart real Q99312) real)) dot) (s (cart real Q99312) (i (s (fun (cart real Q99312) (cart real Q99312)) vectoru_neg) (s (cart real Q99312) x))))) (s (cart real Q99312) y))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real Q99312) real) (i (s (fun (cart real Q99312) (fun (cart real Q99312) real)) dot) (s (cart real Q99312) x))) (s (cart real Q99312) y))))))
(rule (s num (i (s (fun (list A) num) LENGTH) (s (list A) (i (s (fun (list A) (list A)) (i (s (fun A (fun (list A) (list A))) CONS) (s A h))) (s (list A) t))))) (s num (i (s (fun num num) SUC) (s num (i (s (fun (list A) num) LENGTH) (s (list A) t))))))
(rule (s real (i (s (fun (cart real Q99336) real) (i (s (fun (cart real Q99336) (fun (cart real Q99336) real)) dot) (s (cart real Q99336) x))) (s (cart real Q99336) (i (s (fun (cart real Q99336) (cart real Q99336)) vectoru_neg) (s (cart real Q99336) y))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real Q99336) real) (i (s (fun (cart real Q99336) (fun (cart real Q99336) real)) dot) (s (cart real Q99336) x))) (s (cart real Q99336) y))))))
(rule (s (fun (cart real Q722637) bool) (i (s (fun (prod (cart real Q722637) real) (fun (cart real Q722637) bool)) ball) (s (prod (cart real Q722637) real) (i (s (fun real (prod (cart real Q722637) real)) (i (s (fun (cart real Q722637) (fun real (prod (cart real Q722637) real))) c_) (s (cart real Q722637) z))) (s real r))))) (s (fun (cart real Q722637) bool) (i (s (fun real (fun (cart real Q722637) bool)) (i (s (fun (cart real Q722637) (fun real (fun (cart real Q722637) bool))) normball) (s (cart real Q722637) z))) (s real r))))
(rule (s real (i (s (fun (cart (cart real N) N) real) det) (s (cart (cart real N) N) (i (s (fun num (cart (cart real N) N)) mat) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s B (i (s (fun A B) (i (s (fun (fun A B) (fun A B)) LET) (s (fun A B) f))) (s A x))) (s B (i (s (fun A B) f) (s A x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) ii))))))
(rule (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (list (prod real real)) NIL))))) (s (fun real bool) EMPTY))
(rule (s real (i (s (fun (cart (cart real N) N) real) trace) (s (cart (cart real N) N) (i (s (fun num (cart (cart real N) N)) mat) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun (fun N bool) num) dimindex) (s (fun N bool) UNIV))))))
(rule (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (cart real N) (fun (fun (cart real N) bool) (fun (cart real N) bool))) INSERT) (s (cart real N) a))) (s (fun (cart real N) bool) EMPTY))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) y))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun (cart real n1) real) (i (s (fun (cart real n1) (fun (cart real n1) real)) dot) (s (cart real n1) x))) (s (cart real n1) y))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) vectoru_neg) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (fun Q48588 bool) (i (s (fun (fun Q48588 bool) (fun Q48588 bool)) (i (s (fun (fun Q48588 Q48588) (fun (fun Q48588 bool) (fun Q48588 bool))) IMAGE) (s (fun Q48588 Q48588) I0))) (s (fun Q48588 bool) s0))) (s (fun Q48588 bool) s0))
(rule (s (finite_sum A B) (i (s (fun num (finite_sum A B)) mku_finiteu_sum) (s num (i (s (fun (finite_sum A B) num) destu_finiteu_sum) (s (finite_sum A B) a))))) (s (finite_sum A B) a))
(rule (s (list (prod Q18824 Q18825)) (i (s (fun (list Q18825) (list (prod Q18824 Q18825))) (i (s (fun (list Q18824) (fun (list Q18825) (list (prod Q18824 Q18825)))) ZIP) (s (list Q18824) NIL))) (s (list Q18825) NIL))) (s (list (prod Q18824 Q18825)) NIL))
(rule (s (list (prod Q18805 Q18813)) (i (s (fun (list Q18813) (list (prod Q18805 Q18813))) (i (s (fun (list Q18805) (fun (list Q18813) (list (prod Q18805 Q18813)))) ZIP) (s (list Q18805) NIL))) (s (list Q18813) l2))) (s (list (prod Q18805 Q18813)) NIL))
(rule (s (fun Q48527 bool) (i (s (fun (fun Q48523 bool) (fun Q48527 bool)) (i (s (fun (fun Q48523 Q48527) (fun (fun Q48523 bool) (fun Q48527 bool))) IMAGE) (s (fun Q48523 Q48527) f))) (s (fun Q48523 bool) EMPTY))) (s (fun Q48527 bool) EMPTY))
(rule (s (list B) (i (s (fun (list A) (list B)) (i (s (fun (fun A B) (fun (list A) (list B))) MAP) (s (fun A B) f))) (s (list A) NIL))) (s (list B) NIL))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) f) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun num real) f))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))
(rule (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) conv0) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) v0))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) v1))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) v2))) (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) INSERT) (s (cart real n3) v3))) (s (fun (cart real n3) bool) EMPTY))))))))))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real))) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) real)))) volu_conv) (s (cart real n3) v0))) (s (cart real n3) v1))) (s (cart real n3) v2))) (s (cart real n3) v3))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_sub) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun real (fun (cart real n3) (cart real n3))) r_) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) z))))) (s (cart real n3) y))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun real (fun (cart real n3) (cart real n3))) r_) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) y))))) (s (cart real n3) z))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) z))))))
(rule (s A (i (s (fun num A) (i (s (fun (fun num A) (fun num A)) (i (s (fun A (fun (fun num A) (fun num A))) FCONS) (s A a))) (s (fun num A) f))) (s num (i (s (fun num num) SUC) (s num n))))) (s A (i (s (fun num A) f) (s num n))))
(rule (s (fun (cart real Q722870) bool) (i (s (fun real (fun (cart real Q722870) bool)) (i (s (fun real (fun real (fun (cart real Q722870) bool))) (i (s (fun (cart real Q722870) (fun real (fun real (fun (cart real Q722870) bool)))) (i (s (fun (cart real Q722870) (fun (cart real Q722870) (fun real (fun real (fun (cart real Q722870) bool))))) conicu_cap) (s (cart real Q722870) v0))) (s (cart real Q722870) v0))) (s real r))) (s real a))) (s (fun (cart real Q722870) bool) EMPTY))
(rule (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) x))))) (s (cart real N) x))
(rule (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun (fun num bool) (fun (fun num bool) (fun num bool))) (i (s (fun bool (fun (fun num bool) (fun (fun num bool) (fun num bool)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun num (fun (fun num bool) (fun num bool))) INSERT) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun num bool) EMPTY))))) (s (fun num bool) EMPTY))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s A (i (s (fun A A) (i (s (fun A (fun A A)) (i (s (fun bool (fun A (fun A A))) COND) (s bool b))) (s A t))) (s A t))) (s A t))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) vectoru_neg) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) vectoru_neg) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))
(rule (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real x))))) (s real (i (s (fun real real) sin) (s real x))))
(rule (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real x))))) (s real (i (s (fun real real) cos) (s real x))))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real x))))) (s real (i (s (fun real real) realu_inv) (s real (i (s (fun real real) tan) (s real x))))))
(rule (s real (i (s (fun (fun (cart real n2) bool) real) measure) (s (fun (cart real n2) bool) (i (s (fun (prod (cart real n2) real) (fun (cart real n2) bool)) cball) (s (prod (cart real n2) real) (i (s (fun real (prod (cart real n2) real)) (i (s (fun (cart real n2) (fun real (prod (cart real n2) real))) c_) (s (cart real n2) (i (s (fun num (cart real n2)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real pi))
(rule (s (cart (cart real Q129843) n1) (i (s (fun (cart (cart real n1) Q129843) (cart (cart real Q129843) n1)) transp) (s (cart (cart real n1) Q129843) (i (s (fun (cart real Q129843) (cart (cart real n1) Q129843)) columnvector) (s (cart real Q129843) v))))) (s (cart (cart real Q129843) n1) (i (s (fun (cart real Q129843) (cart (cart real Q129843) n1)) rowvector) (s (cart real Q129843) v))))
(rule (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) (i (s (fun (fun (cart real A) bool) (fun (fun (cart real A) bool) (fun (cart real A) bool))) (i (s (fun (fun real bool) (fun (fun (cart real A) bool) (fun (fun (cart real A) bool) (fun (cart real A) bool)))) affsign) (s (fun real bool) sgnu_gt))) (s (fun (cart real A) bool) EMPTY))) (s (fun (cart real A) bool) S))) (s (fun (cart real A) bool) (i (s (fun (fun (cart real A) bool) (fun (cart real A) bool)) conv0) (s (fun (cart real A) bool) S))))
(rule (s (fun (cart real Q173931) bool) (i (s (fun (fun (cart real Q173931) bool) (fun (cart real Q173931) bool)) closure) (s (fun (cart real Q173931) bool) (i (s (fun (fun (cart real Q173931) bool) (fun (cart real Q173931) bool)) closure) (s (fun (cart real Q173931) bool) s0))))) (s (fun (cart real Q173931) bool) (i (s (fun (fun (cart real Q173931) bool) (fun (cart real Q173931) bool)) closure) (s (fun (cart real Q173931) bool) s0))))
(rule (s (fun (cart real Q120445) bool) (i (s (fun (fun (cart real Q120445) bool) (fun (cart real Q120445) bool)) span) (s (fun (cart real Q120445) bool) (i (s (fun (fun (cart real Q120445) bool) (fun (cart real Q120445) bool)) span) (s (fun (cart real Q120445) bool) s0))))) (s (fun (cart real Q120445) bool) (i (s (fun (fun (cart real Q120445) bool) (fun (cart real Q120445) bool)) span) (s (fun (cart real Q120445) bool) s0))))
(rule (s (fun (cart real Q173369) bool) (i (s (fun (fun (cart real Q173369) bool) (fun (cart real Q173369) bool)) interior) (s (fun (cart real Q173369) bool) (i (s (fun (fun (cart real Q173369) bool) (fun (cart real Q173369) bool)) interior) (s (fun (cart real Q173369) bool) s0))))) (s (fun (cart real Q173369) bool) (i (s (fun (fun (cart real Q173369) bool) (fun (cart real Q173369) bool)) interior) (s (fun (cart real Q173369) bool) s0))))
(rule (s (cart (cart real n1) Q129858) (i (s (fun (cart (cart real Q129858) n1) (cart (cart real n1) Q129858)) transp) (s (cart (cart real Q129858) n1) (i (s (fun (cart real Q129858) (cart (cart real Q129858) n1)) rowvector) (s (cart real Q129858) v))))) (s (cart (cart real n1) Q129858) (i (s (fun (cart real Q129858) (cart (cart real n1) Q129858)) columnvector) (s (cart real Q129858) v))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real N) bool)) pathu_image) (s (fun (cart real n1) (cart real N)) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))) reversepath) (s (fun (cart real n1) (cart real N)) g))))) (s (fun (cart real N) bool) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real N) bool)) pathu_image) (s (fun (cart real n1) (cart real N)) g))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) exp) (s real r))))))) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) cos) (s real t))))) (s real (i (s (fun real real) sin) (s real t))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real r))) (s real t))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) x))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) y))))) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) vectoru_angle) (s (cart real n3) x))) (s (cart real n3) y))))))))) (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) y))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_sub) (s (cart real n1) x))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_add) (s (cart real n1) x))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) real) (fun (cart real n1) bool)) ball) (s (prod (cart real n1) real) (i (s (fun real (prod (cart real n1) real)) (i (s (fun (cart real n1) (fun real (prod (cart real n1) real))) c_) (s (cart real n1) x))) (s real e))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun real bool) (fun (cart real n1) bool)) (i (s (fun (fun real (cart real n1)) (fun (fun real bool) (fun (cart real n1) bool))) IMAGE) (s (fun real (cart real n1)) lift))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_segment) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s (list (prod real real)) NIL))))))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_segment) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))
(rule (s (fun real bool) (i (s (fun (fun (cart real n1) bool) (fun real bool)) (i (s (fun (fun (cart real n1) real) (fun (fun (cart real n1) bool) (fun real bool))) IMAGE) (s (fun (cart real n1) real) drop))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_segment) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real a))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real b))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_segment) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) (i (s (fun bool (fun (cart real n2) (fun (cart real n2) (cart real n2)))) COND) (s bool (i (s (fun num bool) EVEN) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num n))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num n))))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num (i (s (fun num num) SUC) (s num k))))))))) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num k))))))) (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) SUC) (s num n))))) (s num (i (s (fun num num) SUC) (s num k))))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun num bool) EVEN) (s num n))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num n))))) (s int (i (s (fun int int) intu_neg) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num n))))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int (i (s (fun int int) intu_neg) (s int x))))) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun num bool) EVEN) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) realu_neg) (s real x))))) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s num n))))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real pi))))) (s (cart real n2) z))))
(rule (s (fun (list Q20493) (list Q20493)) (i (s (fun (fun Q20493 Q20493) (fun (list Q20493) (list Q20493))) MAP) (s (fun Q20493 Q20493) I0))) (s (fun (list Q20493) (list Q20493)) I0))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) ii))))
(rule (s (fun Q144853 Q144853) (i (s (fun (fun Q144853 Q144853) (fun Q144853 Q144853)) inverse) (s (fun Q144853 Q144853) I0))) (s (fun Q144853 Q144853) I0))
(rule (s real (i (s (fun (cart real Q99350) real) (i (s (fun (cart real Q99350) (fun (cart real Q99350) real)) dot) (s (cart real Q99350) (i (s (fun num (cart real Q99350)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q99350) x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun (cart real Q99365) real) (i (s (fun (cart real Q99365) (fun (cart real Q99365) real)) dot) (s (cart real Q99365) x))) (s (cart real Q99365) (i (s (fun num (cart real Q99365)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num (i (s (fun num num) f) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun (fun num num) num) (i (s (fun (fun num bool) (fun (fun num num) num)) nsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (fun num num) f))))
(rule (s (cart real n2) (i (s (fun (cart real n3) (cart real n2)) (i (s (fun num (fun (cart real n3) (cart real n2))) dropout) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real Q303068) (i (s (fun (fun (cart real n1) (cart real Q303068)) (cart real Q303068)) pathfinish) (s (fun (cart real n1) (cart real Q303068)) (i (s (fun (fun (cart real n1) (cart real Q303068)) (fun (cart real n1) (cart real Q303068))) reversepath) (s (fun (cart real n1) (cart real Q303068)) g))))) (s (cart real Q303068) (i (s (fun (fun (cart real n1) (cart real Q303068)) (cart real Q303068)) pathstart) (s (fun (cart real n1) (cart real Q303068)) g))))
(rule (s (cart real Q303058) (i (s (fun (fun (cart real n1) (cart real Q303058)) (cart real Q303058)) pathstart) (s (fun (cart real n1) (cart real Q303058)) (i (s (fun (fun (cart real n1) (cart real Q303058)) (fun (cart real n1) (cart real Q303058))) reversepath) (s (fun (cart real n1) (cart real Q303058)) g))))) (s (cart real Q303058) (i (s (fun (fun (cart real n1) (cart real Q303058)) (cart real Q303058)) pathfinish) (s (fun (cart real n1) (cart real Q303058)) g))))
(rule (s (fun real bool) (i (s (fun (fun (cart real n1) bool) (fun real bool)) (i (s (fun (fun (cart real n1) real) (fun (fun (cart real n1) bool) (fun real bool))) IMAGE) (s (fun (cart real n1) real) drop))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real a))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real b))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun real bool) (fun (cart real n1) bool)) (i (s (fun (fun real (cart real n1)) (fun (fun real bool) (fun (cart real n1) bool))) IMAGE) (s (fun real (cart real n1)) lift))) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))) (s (list (prod real real)) NIL))))))) (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))))
(rule (s (topology A) (i (s (fun (fun (fun A bool) bool) (topology A)) topology0) (s (fun (fun A bool) bool) (i (s (fun (topology A) (fun (fun A bool) bool)) openu_in) (s (topology A) a))))) (s (topology A) a))
(rule (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) l))))) (s (list A) l))
(rule (s (fun (cart real n1) (cart real N)) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))) reversepath) (s (fun (cart real n1) (cart real N)) (i (s (fun (fun (cart real n1) (cart real N)) (fun (cart real n1) (cart real N))) reversepath) (s (fun (cart real n1) (cart real N)) g))))) (s (fun (cart real n1) (cart real N)) g))
(rule (s (cart real Q180474) (i (s (fun (net (cart real Q180474)) (cart real Q180474)) netlimit) (s (net (cart real Q180474)) (i (s (fun (cart real Q180474) (net (cart real Q180474))) at) (s (cart real Q180474) a))))) (s (cart real Q180474) a))
(rule (s (cart real Q98638) (i (s (fun (cart real Q98638) (cart real Q98638)) (i (s (fun real (fun (cart real Q98638) (cart real Q98638))) r_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real Q98638) x))) (s (cart real Q98638) x))
(rule (s real (i (s (fun (cart (cart real Q153473) Q153473) real) trace) (s (cart (cart real Q153473) Q153473) (i (s (fun num (cart (cart real Q153473) Q153473)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real Q98841) (i (s (fun (cart real Q98841) (cart real Q98841)) (i (s (fun real (fun (cart real Q98841) (cart real Q98841))) r_) (s real c))) (s (cart real Q98841) (i (s (fun num (cart real Q98841)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98841) (i (s (fun num (cart real Q98841)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real n2) (i (s (fun (cart real n3) (cart real n2)) (i (s (fun num (fun (cart real n3) (cart real n2))) dropout) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun (cart (cart real N) N) real) det) (s (cart (cart real N) N) (i (s (fun num (cart (cart real N) N)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real Q664027) (i (s (fun (cart real N) (cart real Q664027)) (i (s (fun num (fun (cart real N) (cart real Q664027))) dropout) (s num k))) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q664027) (i (s (fun num (cart real Q664027)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s num (i (s (fun (cart (cart real Q131252) Q131253) num) rank) (s (cart (cart real Q131252) Q131253) (i (s (fun num (cart (cart real Q131252) Q131253)) mat) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real pi))))))) (s real (i (s (fun real real) sin) (s real x))))
(rule (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real pi))))))) (s real (i (s (fun real real) cos) (s real x))))
(rule (s num (i (s (fun (fun (cart real M) bool) num) dim) (s (fun (cart real M) bool) (i (s (fun (cart (cart real M) N) (fun (cart real M) bool)) rows) (s (cart (cart real M) N) A0))))) (s num (i (s (fun (cart (cart real M) N) num) rank) (s (cart (cart real M) N) A0))))
(rule (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) (i (s (fun (cart (cart real M) N) (fun (cart real N) bool)) columns) (s (cart (cart real M) N) A0))))) (s num (i (s (fun (cart (cart real M) N) num) rank) (s (cart (cart real M) N) A0))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (cart real N) bool)) UNIONS) (s (fun (fun (cart real N) bool) bool) (i (s (fun (fun (cart real N) bool) (fun (fun (cart real N) bool) bool)) components) (s (fun (cart real N) bool) u))))) (s (fun (cart real N) bool) u))
(rule (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun (fun num bool) (fun (fun num bool) (fun num bool))) (i (s (fun bool (fun (fun num bool) (fun (fun num bool) (fun num bool)))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_) (s num m))) (s num k))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num k))) (s num n))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))) (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun (fun num bool) (fun (fun num bool) (fun num bool))) INTER) (s (fun num bool) (i (s (fun num (fun num bool)) from) (s num k))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun (cart real n3) (cart real n3))) matrixu_vectoru_mul) (s (cart (cart real n3) n3) (i (s (fun (cart (cart real n3) n3) (cart (cart real n3) n3)) transp) (s (cart (cart real n3) n3) A0))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun (cart real n3) (cart real n3))) matrixu_vectoru_mul) (s (cart (cart real n3) n3) A0))) (s (cart real n3) x))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart (cart real n3) n3) (fun (cart real n3) (cart real n3))) matrixu_vectoru_mul) (s (cart (cart real n3) n3) A0))) (s (cart real n3) y))))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun real (fun (cart real n3) (cart real n3))) r_) (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) A0))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) y))))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun (cart real N) (cart real N)) (i (s (fun real (fun (cart real N) (cart real N))) r_) (s real c))) (s (cart real N) x))))) (s num i0))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real c))) (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) x))) (s num i0))))))
(rule (s (fun (cart real Q705062) bool) (i (s (fun (fun (cart real Q705062) bool) (fun (cart real Q705062) bool)) (i (s (fun (fun (cart real Q705062) bool) (fun (fun (cart real Q705062) bool) (fun (cart real Q705062) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q705062) bool) (fun (fun (cart real Q705062) bool) (fun (cart real Q705062) bool)))) affsign) (s (fun real bool) sgn))) (s (fun (cart real Q705062) bool) s0))) (s (fun (cart real Q705062) bool) EMPTY))) (s (fun (cart real Q705062) bool) (i (s (fun (fun (cart real Q705062) bool) (fun (cart real Q705062) bool)) (i (s (fun (fun (fun (cart real Q705062) bool) bool) (fun (fun (cart real Q705062) bool) (fun (cart real Q705062) bool))) hull) (s (fun (fun (cart real Q705062) bool) bool) affine))) (s (fun (cart real Q705062) bool) s0))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s (cart real n2) z))
(rule (s (fun Q47720 bool) (i (s (fun (fun Q47720 bool) (fun Q47720 bool)) (i (s (fun (fun Q47720 bool) (fun (fun Q47720 bool) (fun Q47720 bool))) UNION) (s (fun Q47720 bool) p))) (s (fun Q47720 bool) p))) (s (fun Q47720 bool) p))
(rule (s (fun Q47654 bool) (i (s (fun (fun Q47654 bool) (fun Q47654 bool)) (i (s (fun (fun Q47654 bool) (fun (fun Q47654 bool) (fun Q47654 bool))) INTER) (s (fun Q47654 bool) p))) (s (fun Q47654 bool) p))) (s (fun Q47654 bool) p))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num n))) (s num m))))) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))))) (s num u_0))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s (topology Q169223) (i (s (fun (fun Q169223 bool) (topology Q169223)) (i (s (fun (topology Q169223) (fun (fun Q169223 bool) (topology Q169223))) subtopology) (s (topology Q169223) top))) (s (fun Q169223 bool) UNIV))) (s (topology Q169223) top))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) ii))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))))) (s real x))) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real x))))
(rule (s (fun (cart real Q708278) bool) (i (s (fun (fun (cart real Q708278) bool) (fun (cart real Q708278) bool)) (i (s (fun (fun (cart real Q708278) bool) (fun (fun (cart real Q708278) bool) (fun (cart real Q708278) bool))) affu_gt) (s (fun (cart real Q708278) bool) EMPTY))) (s (fun (cart real Q708278) bool) s0))) (s (fun (cart real Q708278) bool) (i (s (fun (fun (cart real Q708278) bool) (fun (cart real Q708278) bool)) conv0) (s (fun (cart real Q708278) bool) s0))))
(rule (s (fun (cart real Q119862) bool) (i (s (fun (fun (cart real Q119862) bool) (fun (cart real Q119862) bool)) (i (s (fun (fun (fun (cart real Q119862) bool) bool) (fun (fun (cart real Q119862) bool) (fun (cart real Q119862) bool))) hull) (s (fun (fun (cart real Q119862) bool) bool) subspace))) (s (fun (cart real Q119862) bool) s0))) (s (fun (cart real Q119862) bool) (i (s (fun (fun (cart real Q119862) bool) (fun (cart real Q119862) bool)) span) (s (fun (cart real Q119862) bool) s0))))
(rule (s (fun (cart real Q173889) bool) (i (s (fun (fun (cart real Q173889) bool) (fun (cart real Q173889) bool)) (i (s (fun (fun (fun (cart real Q173889) bool) bool) (fun (fun (cart real Q173889) bool) (fun (cart real Q173889) bool))) hull) (s (fun (fun (cart real Q173889) bool) bool) closed))) (s (fun (cart real Q173889) bool) s0))) (s (fun (cart real Q173889) bool) (i (s (fun (fun (cart real Q173889) bool) (fun (cart real Q173889) bool)) closure) (s (fun (cart real Q173889) bool) s0))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))
(rule (s real (i (s (fun (fun (cart real n1) (cart real n1)) real) (i (s (fun (fun (cart real n1) bool) (fun (fun (cart real n1) (cart real n1)) real)) vectoru_variation) (s (fun (cart real n1) bool) (i (s (fun (fun real bool) (fun (cart real n1) bool)) (i (s (fun (fun real (cart real n1)) (fun (fun real bool) (fun (cart real n1) bool))) IMAGE) (s (fun real (cart real n1)) lift))) (s (fun real bool) s0))))) (s (fun (cart real n1) (cart real n1)) (i (s (fun (fun (cart real n1) real) (fun (cart real n1) (cart real n1))) (i (s (fun (fun real (cart real n1)) (fun (fun (cart real n1) real) (fun (cart real n1) (cart real n1)))) o) (s (fun real (cart real n1)) lift))) (s (fun (cart real n1) real) (i (s (fun (fun (cart real n1) real) (fun (cart real n1) real)) (i (s (fun (fun real real) (fun (fun (cart real n1) real) (fun (cart real n1) real))) o) (s (fun real real) f))) (s (fun (cart real n1) real) drop))))))) (s real (i (s (fun (fun real real) real) (i (s (fun (fun real bool) (fun (fun real real) real)) realu_variation) (s (fun real bool) s0))) (s (fun real real) f))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun (cart real N) (cart real N)) vectoru_neg) (s (cart real N) x))))) (s num i0))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) x))) (s num i0))))))
(rule (s (list Q18680) (i (s (fun (list Q18680) (list Q18680)) (i (s (fun (fun Q18680 bool) (fun (list Q18680) (list Q18680))) FILTER) (s (fun Q18680 bool) P))) (s (list Q18680) NIL))) (s (list Q18680) NIL))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n3) (cart real n2)) (i (s (fun num (fun (cart real n3) (cart real n2))) dropout) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n3) (i (s (fun num (cart real n3)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (fun num real) f))) (s real (i (s (fun num real) f) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (fun num real) f))) (s real (i (s (fun num real) f) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun int bool) (i (s (fun int (fun int bool)) intu_le) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))))) (s int x))) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_abs) (s int x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun (fun M bool) num) dimindex) (s (fun M bool) UNIV))))) (s num (i (s (fun (fun N bool) num) dimindex) (s (fun N bool) UNIV))))) (s num (i (s (fun (fun (finite_sum M N) bool) num) dimindex) (s (fun (finite_sum M N) bool) UNIV))))
(rule (s (cart real Q98655) (i (s (fun (cart real Q98655) (cart real Q98655)) (i (s (fun real (fun (cart real Q98655) (cart real Q98655))) r_) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98655) x))) (s (cart real Q98655) (i (s (fun num (cart real Q98655)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (list A) (i (s (fun (list A) (list A)) (i (s (fun (list A) (fun (list A) (list A))) APPEND) (s (list A) NIL))) (s (list A) l))) (s (list A) l))
(rule (s (list A) (i (s (fun (list A) (list A)) (i (s (fun (list A) (fun (list A) (list A))) APPEND) (s (list A) l))) (s (list A) NIL))) (s (list A) l))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) EMPTY))) (s (fun A bool) s0))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) EMPTY))) (s (fun A bool) s0))) (s (fun A bool) s0))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real pi))))) (s (cart real n2) z))) (s (cart real n2) z))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) UNIV))) (s (fun A bool) s0))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) UNIV))) (s (fun A bool) s0))) (s (fun A bool) s0))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) EMPTY))) (s (fun A bool) s0))
(rule (s num (i (s (fun (list Q19686) num) LENGTH) (s (list Q19686) (i (s (fun Q19686 (list Q19686)) (i (s (fun num (fun Q19686 (list Q19686))) REPLICATE) (s num n))) (s Q19686 x))))) (s num n))
(rule (s (cart real Q98952) (i (s (fun (cart real Q98952) (cart real Q98952)) vectoru_neg) (s (cart real Q98952) (i (s (fun num (cart real Q98952)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real Q98952) (i (s (fun num (cart real Q98952)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) affine))) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun (cart real Q262328) bool) (i (s (fun (fun (cart real Q262328) bool) (fun (cart real Q262328) bool)) (i (s (fun (fun (fun (cart real Q262328) bool) bool) (fun (fun (cart real Q262328) bool) (fun (cart real Q262328) bool))) hull) (s (fun (fun (cart real Q262328) bool) bool) convex))) (s (fun (cart real Q262328) bool) EMPTY))) (s (fun (cart real Q262328) bool) EMPTY))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) (i (s (fun (fun (fun (cart real N) bool) bool) (fun (fun (cart real N) bool) (fun (cart real N) bool))) hull) (s (fun (fun (cart real N) bool) bool) convex))) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun (cart real Q252301) bool) (i (s (fun (fun (cart real Q252301) bool) (fun (cart real Q252301) bool)) (i (s (fun (fun (fun (cart real Q252301) bool) bool) (fun (fun (cart real Q252301) bool) (fun (cart real Q252301) bool))) hull) (s (fun (fun (cart real Q252301) bool) bool) affine))) (s (fun (cart real Q252301) bool) EMPTY))) (s (fun (cart real Q252301) bool) EMPTY))
(rule (s (fun (cart real Q256509) bool) (i (s (fun (fun (cart real Q256509) bool) (fun (cart real Q256509) bool)) (i (s (fun (fun (fun (cart real Q256509) bool) bool) (fun (fun (cart real Q256509) bool) (fun (cart real Q256509) bool))) hull) (s (fun (fun (cart real Q256509) bool) bool) conic))) (s (fun (cart real Q256509) bool) EMPTY))) (s (fun (cart real Q256509) bool) EMPTY))
(rule (s (fun (cart real n1) bool) (i (s (fun (list (prod (cart real n1) (cart real n1))) (fun (cart real n1) bool)) closedu_interval) (s (list (prod (cart real n1) (cart real n1))) (i (s (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1)))) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (list (prod (cart real n1) (cart real n1))) (list (prod (cart real n1) (cart real n1))))) CONS) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) vectoru_neg) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))) (s (list (prod (cart real n1) (cart real n1))) NIL))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) real) (fun (cart real n1) bool)) cball) (s (prod (cart real n1) real) (i (s (fun real (prod (cart real n1) real)) (i (s (fun (cart real n1) (fun real (prod (cart real n1) real))) c_) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real e))))))
(rule (s (cart real Q108445) (i (s (fun (fun num (cart real Q108445)) (cart real Q108445)) (i (s (fun (fun num bool) (fun (fun num (cart real Q108445)) (cart real Q108445))) vsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num n))) (s num n))))) (s (fun num (cart real Q108445)) f))) (s (cart real Q108445) (i (s (fun num (cart real Q108445)) f) (s num n))))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) s0))) (s (fun A bool) EMPTY))) (s (fun A bool) EMPTY))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) INTER) (s (fun A bool) EMPTY))) (s (fun A bool) s0))) (s (fun A bool) EMPTY))
(rule (s (fun (cart real Q311520) bool) (i (s (fun (cart real Q311520) (fun (cart real Q311520) bool)) (i (s (fun (fun (cart real Q311520) bool) (fun (cart real Q311520) (fun (cart real Q311520) bool))) pathu_component) (s (fun (cart real Q311520) bool) EMPTY))) (s (cart real Q311520) x))) (s (fun (cart real Q311520) bool) EMPTY))
(rule (s (fun (cart real Q199949) bool) (i (s (fun (cart real Q199949) (fun (cart real Q199949) bool)) (i (s (fun (fun (cart real Q199949) bool) (fun (cart real Q199949) (fun (cart real Q199949) bool))) connectedu_component) (s (fun (cart real Q199949) bool) EMPTY))) (s (cart real Q199949) x))) (s (fun (cart real Q199949) bool) EMPTY))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) EMPTY))) (s (fun A bool) s0))) (s (fun A bool) EMPTY))
(rule (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) pathu_component) (s (fun (cart real N) bool) UNIV))) (s (cart real N) x))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) s0))) (s (fun A bool) UNIV))) (s (fun A bool) UNIV))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) UNION) (s (fun A bool) UNIV))) (s (fun A bool) s0))) (s (fun A bool) UNIV))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) s0))) (s (fun A bool) EMPTY))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun (fun A bool) (fun (fun A bool) (fun A bool))) DIFF) (s (fun A bool) s0))) (s (fun A bool) UNIV))) (s (fun A bool) EMPTY))
(rule (s (fun A bool) (i (s (fun A (fun A bool)) (i (s (fun (fun A bool) (fun A (fun A bool))) DELETE) (s (fun A bool) EMPTY))) (s A x))) (s (fun A bool) EMPTY))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) (i (s (fun A (fun (fun A bool) (fun A bool))) INSERT) (s A x))) (s (fun A bool) UNIV))) (s (fun A bool) UNIV))
(rule (s (fun (cart real N) bool) (i (s (fun (cart real N) (fun (cart real N) bool)) (i (s (fun (fun (cart real N) bool) (fun (cart real N) (fun (cart real N) bool))) connectedu_component) (s (fun (cart real N) bool) UNIV))) (s (cart real N) x))) (s (fun (cart real N) bool) UNIV))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) (i (s (fun num (cart real n1)) (i (s (fun (cart (cart real n1) n1) (fun num (cart real n1))) d_) (s (cart (cart real n1) n1) A0))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart (cart real n1) n1) real) det) (s (cart (cart real n1) n1) A0))))
(rule (s real (i (s (fun (cart (cart real n3) n3) real) det) (s (cart (cart real n3) n3) (i (s (fun (list (cart real n3)) (cart (cart real n3) n3)) vector) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) x))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) y))) (s (list (cart real n3)) (i (s (fun (list (cart real n3)) (list (cart real n3))) (i (s (fun (cart real n3) (fun (list (cart real n3)) (list (cart real n3)))) CONS) (s (cart real n3) z))) (s (list (cart real n3)) NIL))))))))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) dot) (s (cart real n3) x))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) z))))))
(rule (s (fun (cart real Q721472) (fun (cart real Q721472) (fun real (fun (cart real Q721472) bool)))) (i (s (fun (fun real (fun real bool)) (fun (cart real Q721472) (fun (cart real Q721472) (fun real (fun (cart real Q721472) bool))))) rconesgn) (s (fun real (fun real bool)) a_))) (s (fun (cart real Q721472) (fun (cart real Q721472) (fun real (fun (cart real Q721472) bool)))) rconeu_eq))
(rule (s (fun (cart real Q721465) (fun (cart real Q721465) (fun real (fun (cart real Q721465) bool)))) (i (s (fun (fun real (fun real bool)) (fun (cart real Q721465) (fun (cart real Q721465) (fun real (fun (cart real Q721465) bool))))) rconesgn) (s (fun real (fun real bool)) realu_ge))) (s (fun (cart real Q721465) (fun (cart real Q721465) (fun real (fun (cart real Q721465) bool)))) rconeu_ge))
(rule (s (fun (cart real Q721458) (fun (cart real Q721458) (fun real (fun (cart real Q721458) bool)))) (i (s (fun (fun real (fun real bool)) (fun (cart real Q721458) (fun (cart real Q721458) (fun real (fun (cart real Q721458) bool))))) rconesgn) (s (fun real (fun real bool)) realu_gt))) (s (fun (cart real Q721458) (fun (cart real Q721458) (fun real (fun (cart real Q721458) bool)))) rconeu_gt))
(rule (s Q18655 (i (s (fun (list Q18655) Q18655) (i (s (fun num (fun (list Q18655) Q18655)) EL) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (list Q18655) l))) (s Q18655 (i (s (fun (list Q18655) Q18655) HD) (s (list Q18655) l))))
(rule (s (fun real bool) (i (s (fun (fun (cart real n1) bool) (fun real bool)) (i (s (fun (fun (cart real n1) real) (fun (fun (cart real n1) bool) (fun real bool))) IMAGE) (s (fun (cart real n1) real) drop))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real a))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real b))))))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) a_) (s num n))) (s num u_0))))) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) PRE) (s num n))))))) (s num (i (s (fun num num) PRE) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) z))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun real bool) (fun (cart real n1) bool)) (i (s (fun (fun real (cart real n1)) (fun (fun real bool) (fun (cart real n1) bool))) IMAGE) (s (fun real (cart real n1)) lift))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))
(rule (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) s0))))) (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) s0))))
(rule (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) span) (s (fun (cart real N) bool) s0))))) (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) s0))))
(rule (s real (i (s (fun (cart real Q137237) real) infnorm) (s (cart real Q137237) (i (s (fun (cart real Q137237) (cart real Q137237)) vectoru_neg) (s (cart real Q137237) x))))) (s real (i (s (fun (cart real Q137237) real) infnorm) (s (cart real Q137237) x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))
(rule (s real (i (s (fun (cart real Q101038) real) vectoru_norm) (s (cart real Q101038) (i (s (fun (cart real Q101038) (cart real Q101038)) vectoru_neg) (s (cart real Q101038) x))))) (s real (i (s (fun (cart real Q101038) real) vectoru_norm) (s (cart real Q101038) x))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT1) (s num n))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun real bool) (fun (cart real n1) bool)) (i (s (fun (fun real (cart real n1)) (fun (fun real bool) (fun (cart real n1) bool))) IMAGE) (s (fun real (cart real n1)) lift))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_segment) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) a))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) b))))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_segment) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) a))) (s (cart real n1) b))))))
(rule (s (fun real bool) (i (s (fun (fun (cart real n1) bool) (fun real bool)) (i (s (fun (fun (cart real n1) real) (fun (fun (cart real n1) bool) (fun real bool))) IMAGE) (s (fun (cart real n1) real) drop))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_segment) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real a))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real b))))))))) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_segment) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))
(rule (s real (i (s (fun (fun real real) real) (i (s (fun (fun real bool) (fun (fun real real) real)) realu_integral) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real a))))) (s (list (prod real real)) NIL))))))) (s (fun real real) f))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (fun (cart real n3) bool) (i (s (fun (fun (cart real n3) bool) (fun (cart real n3) bool)) (i (s (fun (fun (cart real n3) (cart real n3)) (fun (fun (cart real n3) bool) (fun (cart real n3) bool))) IMAGE) (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) scale) (s (cart real n3) t))))) (s (fun (cart real n3) bool) (i (s (fun real (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun real (fun (cart real n3) bool))) normball) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real r))))) (s (fun (cart real n3) bool) (i (s (fun real (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun real (fun (cart real n3) bool))) ellipsoid) (s (cart real n3) t))) (s real r))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real x))))))) (s real (i (s (fun real real) exp) (s real y))))
(rule (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun (cart real Q108918) real) vectoru_norm) (s (cart real Q108918) (i (s (fun num (cart real Q108918)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) w))))
(rule (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))
(rule (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) atn) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun real real) asn) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))
(rule (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (list Q18358) (i (s (fun Q18358 (list Q18358)) (i (s (fun num (fun Q18358 (list Q18358))) REPLICATE) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s Q18358 x))) (s (list Q18358) NIL))
(rule (s (fun (cart real Q665072) bool) (i (s (fun (fun (cart real Q665071) bool) (fun (cart real Q665072) bool)) (i (s (fun real (fun (fun (cart real Q665071) bool) (fun (cart real Q665072) bool))) (i (s (fun num (fun real (fun (fun (cart real Q665071) bool) (fun (cart real Q665072) bool)))) slice) (s num k))) (s real a))) (s (fun (cart real Q665071) bool) EMPTY))) (s (fun (cart real Q665072) bool) EMPTY))
(rule (s (fun (fun (cart real Q702491) bool) (fun (fun (cart real Q702491) bool) (fun (cart real Q702491) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q702491) bool) (fun (fun (cart real Q702491) bool) (fun (cart real Q702491) bool)))) affsign) (s (fun real bool) sgnu_lt))) (s (fun (fun (cart real Q702491) bool) (fun (fun (cart real Q702491) bool) (fun (cart real Q702491) bool))) affu_lt))
(rule (s (fun (fun (cart real Q702479) bool) (fun (fun (cart real Q702479) bool) (fun (cart real Q702479) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q702479) bool) (fun (fun (cart real Q702479) bool) (fun (cart real Q702479) bool)))) affsign) (s (fun real bool) sgnu_gt))) (s (fun (fun (cart real Q702479) bool) (fun (fun (cart real Q702479) bool) (fun (cart real Q702479) bool))) affu_gt))
(rule (s (fun (fun (cart real Q702497) bool) (fun (fun (cart real Q702497) bool) (fun (cart real Q702497) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q702497) bool) (fun (fun (cart real Q702497) bool) (fun (cart real Q702497) bool)))) affsign) (s (fun real bool) sgnu_le))) (s (fun (fun (cart real Q702497) bool) (fun (fun (cart real Q702497) bool) (fun (cart real Q702497) bool))) affu_le))
(rule (s (fun (fun (cart real Q702485) bool) (fun (fun (cart real Q702485) bool) (fun (cart real Q702485) bool))) (i (s (fun (fun real bool) (fun (fun (cart real Q702485) bool) (fun (fun (cart real Q702485) bool) (fun (cart real Q702485) bool)))) affsign) (s (fun real bool) sgnu_ge))) (s (fun (fun (cart real Q702485) bool) (fun (fun (cart real Q702485) bool) (fun (cart real Q702485) bool))) affu_ge))
(rule (s real (i (s (fun real real) sqrt) (s real (i (s (fun (cart real Q99486) real) (i (s (fun (cart real Q99486) (fun (cart real Q99486) real)) dot) (s (cart real Q99486) x))) (s (cart real Q99486) x))))) (s real (i (s (fun (cart real Q99486) real) vectoru_norm) (s (cart real Q99486) x))))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num p))))))) (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num p))))))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num p))))))) (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num m))) (s num n))))))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num p))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num p))))))))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num n))) (s num p))))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num m))) (s num n))))))) (s num p))))
(rule (s real (i (s (fun (fun real real) real) (i (s (fun (fun real bool) (fun (fun real real) real)) realu_integral) (s (fun real bool) (i (s (fun (list (prod real real)) (fun real bool)) closedu_realu_interval) (s (list (prod real real)) (i (s (fun (list (prod real real)) (list (prod real real))) (i (s (fun (prod real real) (fun (list (prod real real)) (list (prod real real)))) CONS) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))) (s (list (prod real real)) NIL))))))) (s (fun real real) f))) (s real (i (s (fun (fun real real) real) (i (s (fun (fun real bool) (fun (fun real real) real)) realu_integral) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))) (s (fun real real) f))))
(rule (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num n))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int (i (s (fun int int) intu_abs) (s int x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) realu_abs) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun real real) cos) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) exp) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))))) (s real (i (s (fun real real) sin) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) z))))))
(rule (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s num n))) (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real pi))))))
(rule (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) (cart real n1)) (fun (cart real n1) bool)) openu_interval) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) vectoru_neg) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real e))))))) (s (fun (cart real n1) bool) (i (s (fun (prod (cart real n1) real) (fun (cart real n1) bool)) ball) (s (prod (cart real n1) real) (i (s (fun real (prod (cart real n1) real)) (i (s (fun (cart real n1) (fun real (prod (cart real n1) real))) c_) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real e))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) acs) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real pi))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) asn) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd x))))))) (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd y))))))) (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd (i (s (fun nadd nadd) (i (s (fun nadd (fun nadd nadd)) naddu_add) (s nadd x))) (s nadd y))))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd x))))))) (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd y))))))) (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd (i (s (fun nadd nadd) (i (s (fun nadd (fun nadd nadd)) naddu_mul) (s nadd x))) (s nadd y))))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) intu_neg) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s int x))) (s int (i (s (fun int int) intu_neg) (s int x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num u_0))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num u_0))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num u_0))) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s num (i (s (fun int num) numu_ofu_int) (s int (i (s (fun (prod int int) int) intu_gcd) (s (prod int int) (i (s (fun int (prod int int)) (i (s (fun int (fun int (prod int int))) c_) (s int (i (s (fun num int) intu_ofu_num) (s num a))))) (s int (i (s (fun num int) intu_ofu_num) (s num b))))))))) (s num (i (s (fun (prod num num) num) numu_gcd) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num a))) (s num b))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real b))) (s real a))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun (fun real bool) real) realu_measure) (s (fun real bool) (i (s (fun (prod real real) (fun real bool)) openu_realu_interval) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real b))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real y))))))) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real x))) (s real y))))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real N) (fun num real)) d_) (s (cart real N) (i (s (fun num (cart real N)) vec) (s num k))))) (s num i0))) (s real (i (s (fun num real) realu_ofu_num) (s num k))))
(rule (s (fun num bool) (i (s (fun (fun num bool) (fun num bool)) (i (s (fun (fun num bool) (fun (fun num bool) (fun num bool))) INTER) (s (fun num bool) (i (s (fun num (fun num bool)) from) (s num k))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num n))))) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num k))) (s num n))))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real pi))))))) (s real (i (s (fun real real) tan) (s real x))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num m))) (s num (i (s (fun (fun num bool) num) CARD) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num m))) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real t))))))))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) z))))
(rule (s num (i (s (fun (fun Q67365 num) num) (i (s (fun (fun Q67365 bool) (fun (fun Q67365 num) num)) nsum) (s (fun Q67365 bool) EMPTY))) (s (fun Q67365 num) f))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s (finite_image A) (i (s (fun num (finite_image A)) finiteu_index) (s num (i (s (fun (finite_image A) num) destu_finiteu_image) (s (finite_image A) a))))) (s (finite_image A) a))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) x))) (s (cart real n2) x))
(rule (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) z))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n2) z))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) z))
(rule (s real (i (s (fun (cart real Q101004) real) vectoru_norm) (s (cart real Q101004) (i (s (fun num (cart real Q101004)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun (cart real Q137218) real) infnorm) (s (cart real Q137218) (i (s (fun num (cart real Q137218)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real pi))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real pi))))
(rule (s real (i (s (fun real real) sqrt) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real (i (s (fun real real) realu_abs) (s real x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real x))) (s real (i (s (fun real real) realu_neg) (s real x))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun real real) cos) (s real t))))) (s real (i (s (fun real real) sin) (s real t))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) x1))))))) (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) y1))))))) (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) (i (s (fun (prod hreal hreal) (prod hreal hreal)) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) (prod hreal hreal))) trealu_add) (s (prod hreal hreal) x1))) (s (prod hreal hreal) y1))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) x1))))))) (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) y1))))))) (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) (i (s (fun (prod hreal hreal) (prod hreal hreal)) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) (prod hreal hreal))) trealu_mul) (s (prod hreal hreal) x1))) (s (prod hreal hreal) y1))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) y))) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) y))))) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) y))) (s (cart real n2) z))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num m))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num n))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real y))) (s real z))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal m))) (s hreal p))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal n))) (s hreal p))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal m))) (s hreal n))))) (s hreal p))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) rpow) (s real x))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) rpow) (s real y))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) rpow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))) (s real z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) z1))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) z2))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) z1))) (s (cart real n2) z2))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real y))) (s real z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real y))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real z))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num p))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num m))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int z))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int y))) (s int z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real y))) (s real z))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) z1))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) z2))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) w))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) z1))) (s (cart real n2) z2))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real y))) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real y))))) (s num n))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num n))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int y))) (s num n))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num m))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int z))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int y))) (s int z))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int z))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int y))) (s int z))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))) (s int z))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num p))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) z))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) z))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) x))) (s (cart real n3) y))))) (s (cart real n3) z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) y))) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) x))) (s (cart real n2) y))))) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) y))) (s (cart real n2) z))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num n))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num p))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int z))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int y))) (s int z))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))) (s int z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) y))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) z))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) y))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) z))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) vectoru_add) (s (cart real n3) y))) (s (cart real n3) z))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num n))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num p))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real y))) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num n))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))) (s num p))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal x))) (s hreal y))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal x))) (s hreal z))))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal x))) (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal y))) (s hreal z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) y))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) z))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num p))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int a))) (s int b))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int b))) (s int c))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int a))) (s int c))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real a))) (s real b))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real b))) (s real c))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real a))) (s real c))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) a))) (s (cart real n2) b))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) b))) (s (cart real n2) c))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) a))) (s (cart real n2) c))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num p))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num p))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) MOD) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num p))))) (s num n))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MOD) (s num p))) (s num n))))
(rule (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun real (fun (cart real n1) (cart real n1))) r_) (s real x))) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real a))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real a))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun (cart real n1) real) vectoru_norm) (s (cart real n1) x))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))
(rule (s (fun (fun Q151908 bool) (fun (fun Q151908 real) real)) (i (s (fun (fun real (fun real real)) (fun (fun Q151908 bool) (fun (fun Q151908 real) real))) iterate) (s (fun real (fun real real)) realu_mul))) (s (fun (fun Q151908 bool) (fun (fun Q151908 real) real)) product))
(rule (s (fun (fun Q71470 bool) (fun (fun Q71470 real) real)) (i (s (fun (fun real (fun real real)) (fun (fun Q71470 bool) (fun (fun Q71470 real) real))) iterate) (s (fun real (fun real real)) realu_add))) (s (fun (fun Q71470 bool) (fun (fun Q71470 real) real)) sum0))
(rule (s (fun (fun Q67327 bool) (fun (fun Q67327 num) num)) (i (s (fun (fun num (fun num num)) (fun (fun Q67327 bool) (fun (fun Q67327 num) num))) iterate) (s (fun num (fun num num)) p_))) (s (fun (fun Q67327 bool) (fun (fun Q67327 num) num)) nsum))
(rule (s (recspace A) (i (s (fun (fun num (fun A bool)) (recspace A)) u_mku_rec) (s (fun num (fun A bool)) ZBOT))) (s (recspace A) BOTTOM))
(rule (s (fun (fun Q569520 bool) (fun (fun Q569520 (cart real n2)) (cart real n2))) (i (s (fun (fun (cart real n2) (fun (cart real n2) (cart real n2))) (fun (fun Q569520 bool) (fun (fun Q569520 (cart real n2)) (cart real n2)))) iterate) (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul))) (s (fun (fun Q569520 bool) (fun (fun Q569520 (cart real n2)) (cart real n2))) cproduct))
(rule (s (list A) (i (s (fun (list A) (list A)) REVERSE) (s (list A) NIL))) (s (list A) NIL))
(rule (s num (i (s (fun num num) SUC) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num n))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num n))))))
(rule (s real (i (s (fun real real) acs) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s real pi))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))
(rule (s (list Q18337) (i (s (fun (list Q18337) (list Q18337)) BUTLAST) (s (list Q18337) NIL))) (s (list Q18337) NIL))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s hreal x))) (s hreal x))
(rule (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) w))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))))))) (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) w))) (s (cart real n2) z))))))))
(rule (s (cart real n2) (i (s (fun (list real) (cart real n2)) vector) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real x))) (s (list real) (i (s (fun (list real) (list real)) (i (s (fun real (fun (list real) (list real))) CONS) (s real y))) (s (list real) NIL))))))) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real x))) (s real y))))))
(rule (s real (i (s (fun (fun real bool) real) inf) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real x))) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real y))) (s (fun real bool) EMPTY))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real x))) (s real y))))
(rule (s real (i (s (fun (fun real bool) real) sup) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real x))) (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun real (fun (fun real bool) (fun real bool))) INSERT) (s real y))) (s (fun real bool) EMPTY))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real x))) (s real y))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_neg) (s real y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real x))) (s real y))))
(rule (s int (i (s (fun int int) intu_neg) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_neg) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int y))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_neg) (s real y))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real x))) (s real y))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int y))))
(rule (s int (i (s (fun (prod int int) int) intu_gcd) (s (prod int int) (i (s (fun int (prod int int)) (i (s (fun int (fun int (prod int int))) c_) (s int (i (s (fun num int) intu_ofu_num) (s num a))))) (s int (i (s (fun num int) intu_ofu_num) (s num b))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun (prod num num) num) numu_gcd) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num a))) (s num b))))))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int y))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))
(rule (s int (i (s (fun int int) intu_neg) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_neg) (s int y))))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int y))))
(rule (s real (i (s (fun (prod (cart real n1) (cart real n1)) real) distance) (s (prod (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (prod (cart real n1) (cart real n1))) (i (s (fun (cart real n1) (fun (cart real n1) (prod (cart real n1) (cart real n1)))) c_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real y))))))) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real m))) (s real n))))) (s real n))) (s real m))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real m))) (s real n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) (i (s (fun bool (fun real (fun real real))) COND) (s bool (i (s (fun real bool) (i (s (fun real (fun real bool)) realu_le) (s real m))) (s real n))))) (s real m))) (s real n))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real m))) (s real n))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun int bool) (i (s (fun int (fun int bool)) intu_le) (s int x))) (s int y))))) (s int y))) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) (i (s (fun bool (fun int (fun int int))) COND) (s bool (i (s (fun int bool) (i (s (fun int (fun int bool)) intu_le) (s int x))) (s int y))))) (s int x))) (s int y))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int y))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num n))))))) (s (cart real n2) x))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) x))))) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num n))))) (s num n))) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MAX) (s num m))) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) (i (s (fun bool (fun num (fun num num))) COND) (s bool (i (s (fun num bool) (i (s (fun num (fun num bool)) l_a_) (s num m))) (s num n))))) (s num m))) (s num n))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MIN) (s num m))) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) clog) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (fun (cart real n2) (cart real n2)) (fun (cart real n2) (cart real n2))) (i (s (fun num (fun (fun (cart real n2) (cart real n2)) (fun (cart real n2) (cart real n2)))) higheru_complexu_derivative) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s (fun (cart real n2) (cart real n2)) f))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (fun (cart real n2) (cart real n2)) (fun (cart real n2) (cart real n2))) complexu_derivative) (s (fun (cart real n2) (cart real n2)) f))) (s (cart real n2) z))))
(rule (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) SUC) (s num k))))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) x))) (s (cart real n2) x))
(rule (s (fun A bool) (i (s (fun (fun A bool) (fun A bool)) GSPEC) (s (fun A bool) p))) (s (fun A bool) p))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int x))) (s int x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) x))
(rule (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))))) (s (cart real n2) z))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) x))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))) (s num n))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num m))))) (s num n))
(rule (s num (i (s (fun (fun num bool) num) CARD) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num n))))) (s num n))
(rule (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num n))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) SUC) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num n))
(rule (s A (i (s (fun A A) I0) (s A x))) (s A x))
(rule (s (fun Q48127 bool) (i (s (fun (fun (fun Q48127 bool) bool) (fun Q48127 bool)) UNIONS) (s (fun (fun Q48127 bool) bool) EMPTY))) (s (fun Q48127 bool) EMPTY))
(rule (s (fun (cart real Q174142) bool) (i (s (fun (fun (cart real Q174142) bool) (fun (cart real Q174142) bool)) closure) (s (fun (cart real Q174142) bool) EMPTY))) (s (fun (cart real Q174142) bool) EMPTY))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) span) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun A bool) (i (s (fun (list A) (fun A bool)) setu_ofu_list) (s (list A) NIL))) (s (fun A bool) EMPTY))
(rule (s (fun (cart real Q173336) bool) (i (s (fun (fun (cart real Q173336) bool) (fun (cart real Q173336) bool)) interior) (s (fun (cart real Q173336) bool) EMPTY))) (s (fun (cart real Q173336) bool) EMPTY))
(rule (s (fun A bool) (i (s (fun (fun (fun A bool) bool) (fun A bool)) INTERS) (s (fun (fun A bool) bool) EMPTY))) (s (fun A bool) UNIV))
(rule (s (fun (cart real N) bool) (i (s (fun (topology (cart real N)) (fun (cart real N) bool)) topspace) (s (topology (cart real N)) euclidean))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun (cart real Q174786) bool) (i (s (fun (fun (cart real Q174786) bool) (fun (cart real Q174786) bool)) frontier) (s (fun (cart real Q174786) bool) EMPTY))) (s (fun (cart real Q174786) bool) EMPTY))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) closure) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun (cart real Q292360) bool) (i (s (fun (fun (cart real Q292360) bool) (fun (cart real Q292360) bool)) relativeu_interior) (s (fun (cart real Q292360) bool) EMPTY))) (s (fun (cart real Q292360) bool) EMPTY))
(rule (s (fun (cart real Q337838) bool) (i (s (fun (fun (cart real Q337838) bool) (fun (cart real Q337838) bool)) inside) (s (fun (cart real Q337838) bool) EMPTY))) (s (fun (cart real Q337838) bool) EMPTY))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) frontier) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) EMPTY))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) outside) (s (fun (cart real N) bool) EMPTY))) (s (fun (cart real N) bool) UNIV))
(rule (s (fun (cart real N) bool) (i (s (fun (fun (cart real N) bool) (fun (cart real N) bool)) interior) (s (fun (cart real N) bool) UNIV))) (s (fun (cart real N) bool) UNIV))
(rule (s (topology (cart real Q169284)) (i (s (fun (fun (fun (cart real Q169284) bool) bool) (topology (cart real Q169284))) topology0) (s (fun (fun (cart real Q169284) bool) bool) open))) (s (topology (cart real Q169284)) euclidean))
(rule (s A (i (s (fun A A) LETu_END) (s A t))) (s A t))
(rule (s real (i (s (fun real real) (i (s (fun num (fun real real)) root) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real x))) (s real (i (s (fun real real) sqrt) (s real x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) x))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) rpow) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real z))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) cpow) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real x))))))) (s real (i (s (fun real real) exp) (s real x))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num n))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) ii))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real t))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) exp) (s real x))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) realu_neg) (s real x))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (prod hreal hreal) (i (s (fun hreal (prod hreal hreal)) (i (s (fun hreal (fun hreal (prod hreal hreal))) c_) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num n))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (prod hreal hreal) (i (s (fun num (prod hreal hreal)) trealu_ofu_num) (s num n))))
(rule (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s num n))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (fun (fun num bool) bool) (i (s (fun (cart real n1) (fun (fun num bool) bool)) (i (s (fun (fun num (cart real n1)) (fun (cart real n1) (fun (fun num bool) bool))) sums) (s (fun num (cart real n1)) (i (s (fun (fun num real) (fun num (cart real n1))) (i (s (fun (fun real (cart real n1)) (fun (fun num real) (fun num (cart real n1)))) o) (s (fun real (cart real n1)) lift))) (s (fun num real) f))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real l))))) (s (fun (fun num bool) bool) (i (s (fun real (fun (fun num bool) bool)) (i (s (fun (fun num real) (fun real (fun (fun num bool) bool))) realu_sums) (s (fun num real) f))) (s real l))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real x))) (s real x))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real x))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real x))) (s real y))))))) (s real x))
(rule (s num (i (s (fun (fun num num) num) (i (s (fun num (fun (fun num num) num)) (i (s (fun (fun (fun num num) (fun num num)) (fun num (fun (fun num num) num))) reduced) (s (fun (fun num num) (fun num num)) lab))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun num num) x))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num n))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) SUC) (s num n))))) (s num n))))) (s num (i (s (fun num num) SUC) (s num n))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) y))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) y))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) y))) (s (cart real n2) x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) x))) (s (cart real n2) y))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) sin) (s real x))))) (s real (i (s (fun real real) cos) (s real x))))) (s real (i (s (fun real real) tan) (s real x))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))) (s int (i (s (fun int int) intu_neg) (s int x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) SUC) (s num n))))) (s num (i (s (fun num num) FACT) (s num n))))) (s num (i (s (fun num num) FACT) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num n))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num n))))) (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun (cart real Q101568) real) vectoru_norm) (s (cart real Q101568) x))))) (s real (i (s (fun (cart real Q101568) real) vectoru_norm) (s (cart real Q101568) x))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun (cart real Q137335) real) infnorm) (s (cart real Q137335) x))))) (s real (i (s (fun (cart real Q137335) real) infnorm) (s (cart real Q137335) x))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s hreal x))) (s hreal x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real y))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) realu_abs) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real y))))) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT1) (s num n))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) NUMERAL) (s num m))))) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) NUMERAL) (s num m))))) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) NUMERAL) (s num m))))) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT1) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT1) (s num n))))) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT0) (s num m))))) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) NUMERAL) (s num m))))) (s num (i (s (fun num num) NUMERAL) (s num n))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))) (s real (i (s (fun int real) realu_ofu_int) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun num real) realu_ofu_num) (s num x))))) (s real (i (s (fun num real) realu_ofu_num) (s num y))))) (s real (i (s (fun num real) (i (s (fun num (fun num real)) DECIMAL) (s num x))) (s num y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))) (s real (i (s (fun int real) realu_ofu_int) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))) (s real (i (s (fun int real) realu_ofu_int) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) exp) (s real x))))) (s real (i (s (fun real real) exp) (s real y))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num m))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num n))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real y))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_sgn) (s real x))))) (s real (i (s (fun real real) realu_sgn) (s real y))))) (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) x))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) y))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_add) (s (cart real n1) x))) (s (cart real n1) y))))))
(rule (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_add) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real y))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num m))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun num int) intu_ofu_num) (s num m))))) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_abs) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real y))))) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) x))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) y))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_inv) (s real x))))) (s real (i (s (fun real real) realu_inv) (s real y))))) (s real (i (s (fun real real) realu_inv) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) x))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) y))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) intu_abs) (s int x))))) (s int (i (s (fun int int) intu_abs) (s int y))))) (s int (i (s (fun int int) intu_abs) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_neg) (s int y))))) (s int (i (s (fun int int) intu_neg) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real y))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real y))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))) (s real (i (s (fun int real) realu_ofu_int) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) w))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) x))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) y))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num m))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num n))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s real (i (s (fun int real) realu_ofu_int) (s int y))))) (s real (i (s (fun int real) realu_ofu_int) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) x))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) y))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real (i (s (fun num real) realu_ofu_num) (s num m))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MAX) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real (i (s (fun num real) realu_ofu_num) (s num m))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MIN) (s num m))) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int (i (s (fun num int) intu_ofu_num) (s num m))))) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MAX) (s num m))) (s num n))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num m))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int (i (s (fun num int) intu_ofu_num) (s num m))))) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) MIN) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_neg) (s real y))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun num int) intu_ofu_num) (s num m))))) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) exp) (s real x))))) (s real (i (s (fun real real) exp) (s real y))))) (s real (i (s (fun real real) exp) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) w))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun real real) realu_sgn) (s real x))))) (s real (i (s (fun real real) realu_sgn) (s real y))))) (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real y))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) intu_sgn) (s int x))))) (s int (i (s (fun int int) intu_sgn) (s int y))))) (s int (i (s (fun int int) intu_sgn) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun int real) realu_ofu_int) (s int x))))) (s num n))))) (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) x))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) y))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_sub) (s (cart real n1) x))) (s (cart real n1) y))))))
(rule (s (cart real n1) (i (s (fun (cart real n1) (cart real n1)) (i (s (fun (cart real n1) (fun (cart real n1) (cart real n1))) vectoru_sub) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real y))))) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_add) (s hreal n))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s hreal n))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_neg) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))) (s int (i (s (fun int int) intu_neg) (s int y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_neg) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real y))) (s real x))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num n))))) (s num n))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) SUC) (s num m))))) (s num n))))
(rule (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) product) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num n))) (s num n))))) (s (fun num real) f))) (s real (i (s (fun num real) f) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real (i (s (fun real real) realu_neg) (s real y))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))) (s real x))))
(rule (s num (i (s (fun num num) PRE) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) SUC) (s num m))))) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real x))) (s real (i (s (fun real real) realu_neg) (s real y))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) SUC) (s num m))))) (s num (i (s (fun num num) SUC) (s num n))))) (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num n))))
(rule (s real (i (s (fun real real) exp) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real x))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real (i (s (fun real real) exp) (s real x))))) (s num n))))
(rule (s num (i (s (fun (fun num num) num) (i (s (fun (fun num bool) (fun (fun num num) num)) nsum) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num n))) (s num n))))) (s (fun num num) f))) (s num (i (s (fun num num) f) (s num n))))
(rule (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) z))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) z))))) (s real x))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_neg) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_neg) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int y))) (s int x))))
(rule (s real (i (s (fun (fun num real) real) (i (s (fun (fun num bool) (fun (fun num real) real)) sum0) (s (fun num bool) (i (s (fun num (fun num bool)) (i (s (fun num (fun num (fun num bool))) o_o_) (s num n))) (s num n))))) (s (fun num real) f))) (s real (i (s (fun num real) f) (s num n))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))) (s int x))) (s int (i (s (fun int int) intu_neg) (s int y))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csqrt) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s real (i (s (fun real real) realu_inv) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s int (i (s (fun int int) intu_abs) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ctan) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun real real) sqrt) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))
(rule (s (cart real n2) (i (s (fun num (cart real n2)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n2) ii))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) x))) (s (cart real n2) y))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) y))) (s (cart real n2) x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) y))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) y))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) MOD) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun (fun N bool) num) dimindex) (s (fun N bool) UNIV))))) (s int (i (s (fun (fun (cart real N) bool) int) affu_dim) (s (fun (cart real N) bool) UNIV))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n3) x))) (s (cart real n3) (i (s (fun num (cart real n3)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real pi))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s num (i (s (fun (prod num num) num) binom) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s hreal m))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real pi))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s hreal (i (s (fun hreal hreal) (i (s (fun hreal (fun hreal hreal)) hrealu_mul) (s hreal m))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int x))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))
(rule (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n2) (i (s (fun num (cart real n2)) basis) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun real real) cos) (s real pi))))
(rule (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s (cart real n2) (i (s (fun (fun (cart real n2) (fun (cart real n2) (cart real n2))) (cart real n2)) neutral) (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real y))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real y))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))) (s real x))) (s real y))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real y))) (s real x))
(rule (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) (i (s (fun (prod real real) (cart real n2)) complex) (s (prod real real) (i (s (fun real (prod real real)) (i (s (fun real (fun real (prod real real))) c_) (s real x))) (s real y))))))) (s real y))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n2) z))) (s (cart real n2) z))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))) (s int x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))
(rule (s (cart real n2) (i (s (fun num (cart real n2)) (i (s (fun (cart real n2) (fun num (cart real n2))) complexu_pow) (s (cart real n2) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s (cart real n2) x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_mul) (s int (i (s (fun int int) intu_sgn) (s int x))))) (s int (i (s (fun int int) intu_abs) (s int x))))) (s int x))
(rule (s (fun real bool) (i (s (fun (fun real bool) (fun real bool)) (i (s (fun (fun real real) (fun (fun real bool) (fun real bool))) IMAGE) (s (fun real real) (i (s (fun (fun real (cart real n1)) (fun real real)) (i (s (fun (fun (cart real n1) real) (fun (fun real (cart real n1)) (fun real real))) o) (s (fun (cart real n1) real) drop))) (s (fun real (cart real n1)) lift))))) (s (fun real bool) s0))) (s (fun real bool) s0))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun (cart real n1) bool) (fun (cart real n1) bool)) (i (s (fun (fun (cart real n1) (cart real n1)) (fun (fun (cart real n1) bool) (fun (cart real n1) bool))) IMAGE) (s (fun (cart real n1) (cart real n1)) (i (s (fun (fun (cart real n1) real) (fun (cart real n1) (cart real n1))) (i (s (fun (fun real (cart real n1)) (fun (fun (cart real n1) real) (fun (cart real n1) (cart real n1)))) o) (s (fun real (cart real n1)) lift))) (s (fun (cart real n1) real) drop))))) (s (fun (cart real n1) bool) s0))) (s (fun (cart real n1) bool) s0))
(rule (s int (i (s (fun num int) (i (s (fun int (fun num int)) intu_pow) (s int x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s int x))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num n))) (s num m))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num n))))) (s num m))) (s num n))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num n))) (s num n))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) DIV) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num n))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num n))))) (s num n))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num n))
(rule (s num (i (s (fun (prod num num) num) dist) (s (prod num num) (i (s (fun num (prod num num)) (i (s (fun num (fun num (prod num num))) c_) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s num n))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num m))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int y))))
(rule (s real (i (s (fun real real) acs) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) log) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun (cart real n2) real) Arg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real x))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real x))) (s real y))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real x))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real x))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real x))) (s real y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int y))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))) (s int x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))) (s int y))) (s int x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))) (s int x))) (s int y))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))) (s int y))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))) (s real (i (s (fun real real) realu_neg) (s real x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ctan) (s (cart real n2) z))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun num num) SUC) (s num m))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n2) (fun num real)) d_) (s (cart real n2) z))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))
(rule (s real (i (s (fun num real) (i (s (fun (cart real n1) (fun num real)) d_) (s (cart real n1) x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))) (s real x))
(rule (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real (i (s (fun real real) realu_sgn) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real x))))) (s real x))
(rule (s (fun (cart real n2) (cart real n2)) (i (s (fun (fun (cart real n2) (cart real n2)) (fun (cart real n2) (cart real n2))) (i (s (fun num (fun (fun (cart real n2) (cart real n2)) (fun (cart real n2) (cart real n2)))) higheru_complexu_derivative) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun (cart real n2) (cart real n2)) f))) (s (fun (cart real n2) (cart real n2)) f))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) BIT1) (s num n))))) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num (i (s (fun num num) BIT0) (s num n))))) (s num u_0))) (s num (i (s (fun num num) BIT0) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT1) (s num n))))) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) BIT0) (s num n))))) (s num u_0))) (s num (i (s (fun num num) BIT0) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num n))))) (s num (i (s (fun num num) BIT1) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num u_0))) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT0) (s num n))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num n))))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun int real) realu_ofu_int) (s int x))))))) (s int (i (s (fun int int) intu_sgn) (s int x))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) sin) (s real x))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) realu_abs) (s real (i (s (fun int real) realu_ofu_int) (s int x))))))) (s int (i (s (fun int int) intu_abs) (s int x))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ctan) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) tan) (s real x))))
(rule (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun real real) realu_abs) (s real x))))))
(rule (s num (i (s (fun num num) SUC) (s num (i (s (fun num num) SUC) (s num (i (s (fun num num) BIT0) (s num n))))))) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) SUC) (s num n))))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) acs) (s real x))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) asn) (s real x))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) catn) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) atn) (s real x))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) cos) (s real x))))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun int real) realu_ofu_int) (s int i0))))))) (s int (i (s (fun int int) intu_neg) (s int i0))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cexp) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))))) (s real (i (s (fun real real) exp) (s real x))))
(rule (s num (i (s (fun ind0 num) mku_num) (s ind0 (i (s (fun ind0 ind0) INDu_SUC) (s ind0 (i (s (fun num ind0) destu_num) (s num n))))))) (s num (i (s (fun num num) SUC) (s num n))))
(rule (s real (i (s (fun real real) sin) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real pi))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) sin) (s real x))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real (i (s (fun real real) realu_abs) (s real x))))) (s real (i (s (fun real real) realu_sgn) (s real x))))
(rule (s real (i (s (fun real real) cos) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real pi))))) (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) cos) (s real x))))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real (i (s (fun real real) floor) (s real x))))) (s real (i (s (fun real real) frac) (s real x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) w))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) w))) (s (cart real n2) z))))
(rule (s num (i (s (fun num num) SUC) (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num n))))) (s num (i (s (fun num num) BIT1) (s num n))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real (i (s (fun real real) realu_neg) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) w))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) w))) (s (cart real n2) z))))
(rule (s (fun (cart real n3) bool) (i (s (fun (prod (cart real n3) (cart real n3)) (fun (cart real n3) bool)) openu_interval) (s (prod (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (prod (cart real n3) (cart real n3))) (i (s (fun (cart real n3) (fun (cart real n3) (prod (cart real n3) (cart real n3)))) c_) (s (cart real n3) a))) (s (cart real n3) b))))) (s (fun (cart real n3) bool) (i (s (fun (cart real n3) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) bool))) rect) (s (cart real n3) a))) (s (cart real n3) b))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_mul) (s real x))) (s real (i (s (fun real real) realu_inv) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int (i (s (fun int int) intu_neg) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))
(rule (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) vectoru_neg) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) y))) (s (cart real n3) x))))) (s (cart real n3) (i (s (fun (cart real n3) (cart real n3)) (i (s (fun (cart real n3) (fun (cart real n3) (cart real n3))) cross) (s (cart real n3) x))) (s (cart real n3) y))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int (i (s (fun int int) intu_neg) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_add) (s int x))) (s int y))))
(rule (s real (i (s (fun real real) realu_inv) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real x))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_div) (s real y))) (s real x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real (i (s (fun real real) realu_neg) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real y))))
(rule (s int (i (s (fun int int) intu_neg) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int x))) (s int y))))) (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_sub) (s int y))) (s int x))))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) rpow) (s real x))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) (i (s (fun real (fun num real)) realu_pow) (s real x))) (s num n))))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real x))) (s real y))))) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_sub) (s real y))) (s real x))))
(rule (s (prod hreal hreal) (i (s (fun (prod hreal hreal) (prod hreal hreal)) trealu_neg) (s (prod hreal hreal) (i (s (fun hreal (prod hreal hreal)) (i (s (fun hreal (fun hreal (prod hreal hreal))) c_) (s hreal x))) (s hreal y))))) (s (prod hreal hreal) (i (s (fun hreal (prod hreal hreal)) (i (s (fun hreal (fun hreal (prod hreal hreal))) c_) (s hreal y))) (s hreal x))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (fun real (fun real real)) real) neutral) (s (fun real (fun real real)) realu_mul))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) ii))))
(rule (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun (fun n2 bool) num) dimindex) (s (fun n2 bool) UNIV))))
(rule (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s num (i (s (fun (fun n3 bool) num) dimindex) (s (fun n3 bool) UNIV))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))) (s real (i (s (fun (cart real n2) real) Im) (s (cart real n2) ii))))
(rule (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s (cart real n2) (i (s (fun num (cart real n2)) vec) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) y))) (s (cart real n2) x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_sub) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) y))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) vectoru_add) (s (cart real n2) x))) (s (cart real n2) y))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real t))) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))
(rule (s real (i (s (fun (fun (cart real n3) bool) real) measure) (s (fun (cart real n3) bool) (i (s (fun (cart real n3) (fun (cart real n3) bool)) (i (s (fun (cart real n3) (fun (cart real n3) (fun (cart real n3) bool))) rect) (s (cart real n3) a))) (s (cart real n3) b))))) (s real (i (s (fun (cart real n3) real) (i (s (fun (cart real n3) (fun (cart real n3) real)) volu_rect) (s (cart real n3) a))) (s (cart real n3) b))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) w))) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_div) (s (cart real n2) z))) (s (cart real n2) w))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun (cart real n2) (fun (cart real n2) (cart real n2))) complexu_mul) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real c))))) (s (cart real n2) x))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) r_) (s real c))) (s (cart real n2) x))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num n))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT1) (s num m))))) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num u_0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num (i (s (fun num num) BIT0) (s num m))))) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num u_0))))
(rule (s real (i (s (fun (cart real n2) real) Arg) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real (i (s (fun num real) realu_ofu_num) (s num n))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))))
(rule (s (fun real bool) (i (s (fun (topology real) (fun real bool)) topspace) (s (topology real) (i (s (fun (fun real bool) (topology real)) (i (s (fun (topology real) (fun (fun real bool) (topology real))) subtopology) (s (topology real) euclideanreal))) (s (fun real bool) s0))))) (s (fun real bool) s0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num n))) (s num n))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num m))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num m))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num m))
(rule (s int (i (s (fun int int) intu_sgn) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) realu_inv) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s int (i (s (fun int int) intu_abs) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s int (i (s (fun int int) intu_neg) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s int (i (s (fun num int) intu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) sqrt) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) atn) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) sin) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s hreal (i (s (fun hreal hreal) hrealu_inv) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s real (i (s (fun real real) asn) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))) (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))))
(rule (s num (i (s (fun (fun A bool) num) CARD) (s (fun A bool) EMPTY))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun (list A) num) LENGTH) (s (list A) NIL))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun (fun (cart real N) bool) num) dim) (s (fun (cart real N) bool) EMPTY))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num n))))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num u_0))) (s num (i (s (fun num num) BIT0) (s num n))))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num n))))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT1) (s num n))))) (s num u_0))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num (i (s (fun num num) BIT0) (s num n))))) (s num u_0))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num n))))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num u_0))) (s num (i (s (fun num num) BIT0) (s num n))))) (s num u_0))
(rule (s (net real) (i (s (fun (fun real bool) (net real)) (i (s (fun (net real) (fun (fun real bool) (net real))) within) (s (net real) (i (s (fun real (net real)) atreal) (s real x))))) (s (fun real bool) UNIV))) (s (net real) (i (s (fun real (net real)) atreal) (s real x))))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_add) (s real x))) (s real pi))))) (s real (i (s (fun real real) tan) (s real x))))
(rule (s (fun real real) (i (s (fun (fun real real) (fun real real)) (i (s (fun num (fun (fun real real) (fun real real))) higheru_realu_derivative) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun real real) f))) (s (fun real real) f))
(rule (s real (i (s (fun (fun (prod hreal hreal) bool) real) mku_real) (s (fun (prod hreal hreal) bool) (i (s (fun (prod hreal hreal) (fun (prod hreal hreal) bool)) trealu_eq) (s (prod hreal hreal) (i (s (fun num (prod hreal hreal)) trealu_ofu_num) (s num m))))))) (s real (i (s (fun num real) realu_ofu_num) (s num m))))
(rule (s hreal (i (s (fun (fun nadd bool) hreal) mku_hreal) (s (fun nadd bool) (i (s (fun nadd (fun nadd bool)) naddu_eq) (s nadd (i (s (fun num nadd) naddu_ofu_num) (s num m))))))) (s hreal (i (s (fun num hreal) hrealu_ofu_num) (s num m))))
(rule (s real (i (s (fun (net real) real) netlimit) (s (net real) (i (s (fun real (net real)) atreal) (s real a))))) (s real a))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_min) (s real x))) (s real x))) (s real x))
(rule (s real (i (s (fun real real) (i (s (fun real (fun real real)) realu_max) (s real x))) (s real x))) (s real x))
(rule (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))
(rule (s num (i (s (fun num num) PRE) (s num (i (s (fun num num) BIT1) (s num n))))) (s num (i (s (fun num num) BIT0) (s num n))))
(rule (s num (i (s (fun num num) SUC) (s num (i (s (fun num num) BIT0) (s num n))))) (s num (i (s (fun num num) BIT1) (s num n))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num n))) (s num n))) (s num (i (s (fun num num) BIT0) (s num n))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))
(rule (s real (i (s (fun real real) floor) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))
(rule (s int (i (s (fun int int) intu_abs) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num n))))
(rule (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s (cart real n1) (i (s (fun num (cart real n1)) vec) (s num n))))
(rule (s real (i (s (fun int real) realu_ofu_int) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s real (i (s (fun num real) realu_ofu_num) (s num n))))
(rule (s nadd (i (s (fun (fun num num) nadd) mku_nadd) (s (fun num num) (i (s (fun nadd (fun num num)) destu_nadd) (s nadd a))))) (s nadd a))
(rule (s int (i (s (fun int int) intu_abs) (s int (i (s (fun int int) intu_abs) (s int x))))) (s int (i (s (fun int int) intu_abs) (s int x))))
(rule (s int (i (s (fun int int) intu_abs) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int (i (s (fun int int) intu_abs) (s int x))))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_max) (s int x))) (s int x))) (s int x))
(rule (s int (i (s (fun int int) (i (s (fun int (fun int int)) intu_min) (s int x))) (s int x))) (s int x))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun num real) realu_ofu_num) (s num n))))) (s int (i (s (fun num int) intu_ofu_num) (s num n))))
(rule (s real (i (s (fun (cart real n3) real) vectoru_norm) (s (cart real n3) (i (s (fun (cart real n2) (cart real n3)) pad2d3d) (s (cart real n2) x))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) (i (s (fun real (fun (cart real n2) (cart real n2))) rotate2d) (s real pi))) (s (cart real n2) z))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) z))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) z))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) z))))) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) z))))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) z))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) m_) (s num u_0))) (s num u_0))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) t_) (s num u_0))) (s num u_0))) (s num u_0))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) p_) (s num u_0))) (s num u_0))) (s num u_0))
(rule (s n1 (i (s (fun bool n1) oneu_ABS) (s bool (i (s (fun n1 bool) oneu_REP) (s n1 a))))) (s n1 a))
(rule (s int (i (s (fun real int) intu_ofu_real) (s real (i (s (fun int real) realu_ofu_int) (s int a))))) (s int a))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) z))))) (s (cart real n2) z))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) ccos) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cacs) (s (cart real n2) z))))) (s (cart real n2) z))
(rule (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) x))))) (s (cart real n1) x))
(rule (s int (i (s (fun int int) intu_neg) (s int (i (s (fun int int) intu_neg) (s int x))))) (s int x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) csin) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) casn) (s (cart real n2) z))))) (s (cart real n2) z))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) complexu_inv) (s (cart real n2) x))))) (s (cart real n2) x))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) vectoru_neg) (s (cart real n2) x))))) (s (cart real n2) x))
(rule (s num (i (s (fun num num) PRE) (s num (i (s (fun num num) SUC) (s num n))))) (s num n))
(rule (s num (i (s (fun int num) numu_ofu_int) (s int (i (s (fun num int) intu_ofu_num) (s num n))))) (s num n))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s real (i (s (fun real real) tan) (s real pi))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s real (i (s (fun (fun real bool) real) realu_measure) (s (fun real bool) EMPTY))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) ii))))
(rule (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))) (s num (i (s (fun (fun n1 bool) num) dimindex) (s (fun n1 bool) UNIV))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s real (i (s (fun (fun real (fun real real)) real) neutral) (s (fun real (fun real real)) realu_add))))
(rule (s real (i (s (fun num real) realu_ofu_num) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s real (i (s (fun real real) sin) (s real pi))))
(rule (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) BIT1) (s num u_0))))) (s num (i (s (fun (fun num (fun num num)) num) neutral) (s (fun num (fun num num)) t_))))
(rule (s num (i (s (fun num num) (i (s (fun num (fun num num)) EXP) (s num u_0))) (s num u_0))) (s num (i (s (fun num num) BIT1) (s num u_0))))
(rule (s num (i (s (fun num num) NUMERAL) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s num (i (s (fun num num) PRE) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s (fun (cart real n1) bool) (i (s (fun (fun real bool) (fun (cart real n1) bool)) (i (s (fun (fun real (cart real n1)) (fun (fun real bool) (fun (cart real n1) bool))) IMAGE) (s (fun real (cart real n1)) lift))) (s (fun real bool) UNIV))) (s (fun (cart real n1) bool) UNIV))
(rule (s (fun real bool) (i (s (fun (fun (cart real n1) bool) (fun real bool)) (i (s (fun (fun (cart real n1) real) (fun (fun (cart real n1) bool) (fun real bool))) IMAGE) (s (fun (cart real n1) real) drop))) (s (fun (cart real n1) bool) UNIV))) (s (fun real bool) UNIV))
(rule (s (fun num bool) (i (s (fun num (fun num bool)) from) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s (fun num bool) UNIV))
(rule (s num (i (s (fun num num) BIT0) (s num (i (s (fun num num) NUMERAL) (s num u_0))))) (s num (i (s (fun num num) NUMERAL) (s num u_0))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) exp) (s real x))))) (s real (i (s (fun real real) exp) (s real x))))
(rule (s real (i (s (fun real real) realu_sgn) (s real (i (s (fun real real) realu_inv) (s real x))))) (s real (i (s (fun real real) realu_sgn) (s real x))))
(rule (s real (i (s (fun (cart real n2) real) vectoru_norm) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real x))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real x))))
(rule (s real (i (s (fun real real) cos) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real (i (s (fun real real) cos) (s real x))))
(rule (s real (i (s (fun (cart real n1) real) vectoru_norm) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real x))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun real real) realu_abs) (s real x))))) (s real (i (s (fun real real) realu_abs) (s real x))))
(rule (s (cart real n2) (i (s (fun (cart real n2) (cart real n2)) cnj) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))
(rule (s real (i (s (fun real real) cos) (s real (i (s (fun real real) realu_abs) (s real x))))) (s real (i (s (fun real real) cos) (s real x))))
(rule (s real (i (s (fun real real) realu_abs) (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) x))))) (s real (i (s (fun (cart real n1) real) vectoru_norm) (s (cart real n1) x))))
(rule (s real (i (s (fun real real) tan) (s real (i (s (fun real real) atn) (s real y))))) (s real y))
(rule (s real (i (s (fun real real) realu_inv) (s real (i (s (fun real real) realu_inv) (s real x))))) (s real x))
(rule (s real (i (s (fun real real) realu_neg) (s real (i (s (fun real real) realu_neg) (s real x))))) (s real x))
(rule (s real (i (s (fun (cart real n2) real) Re) (s (cart real n2) (i (s (fun real (cart real n2)) Cx) (s real x))))) (s real x))
(rule (s real (i (s (fun (cart real n1) real) drop) (s (cart real n1) (i (s (fun real (cart real n1)) lift) (s real x))))) (s real x))
(rule (s real (i (s (fun real real) log) (s real (i (s (fun real real) exp) (s real x))))) (s real x))
(rule (s real (i (s (fun real real) realu_abs) (s real pi))) (s real pi))
(rule (s num (i (s (fun num num) PRE) (s num u_0))) (s num u_0))
(rule (s num (i (s (fun num num) BIT0) (s num u_0))) (s num u_0))
(rule (s num (i (s (fun ind0 num) mku_num) (s ind0 INDu_0))) (s num u_0))
(rule (s num (i (s (fun num num) NUMERAL) (s num n))) (s num n))
(rule (s (fun real bool) (i (s (fun (topology real) (fun real bool)) topspace) (s (topology real) euclideanreal))) (s (fun real bool) UNIV))
(rule (s (topology real) (i (s (fun (fun (fun real bool) bool) (topology real)) topology0) (s (fun (fun real bool) bool) realu_open))) (s (topology real) euclideanreal))
(rule blabla blublu)
