; @origtpdbfilename not_3258.trs
; @xtcfilename "./TRS_Standard/Kaliszyk_19/not_3258.xml"
(format TRS)
(fun iapply 2)
(fun yu_ofu_x 0)
(fun deltau_x4 0)
(fun delta4u_y 0)
(fun rotate126 0)
(fun arclengthu_xu_123 0)
(fun arclengthu_xu_126 0)
(fun rotate6 0)
(fun ldihu_xu_divu_sqrtdeltau_posbranch 0)
(fun ldih6u_xu_divu_sqrtdeltau_posbranch 0)
(fun solu_euleru_xu_divu_sqrtdelta 0)
(fun solu_euler156u_xu_divu_sqrtdelta 0)
(fun x1u_deltau_x 0)
(fun x1u_deltau_y 0)
(fun rotate4 0)
(fun eta2u_135 0)
(fun eta2u_456 0)
(fun rotate234 0)
(fun arclengthu_xu_234 0)
(fun solu_euler246u_xu_divu_sqrtdelta 0)
(fun rotate3 0)
(fun ldih3u_xu_divu_sqrtdeltau_posbranch 0)
(fun upperu_dihu_x 0)
(fun upperu_dihu_y 0)
(fun node2u_y 0)
(fun rhazim 0)
(fun rhazim2 0)
(fun node3u_y 0)
(fun rhazim3 0)
(fun mku_135 0)
(fun dih5u_x 0)
(fun dih5u_xu_135u_s2 0)
(fun dih4u_x 0)
(fun dih4u_xu_135u_s2 0)
(fun mku_126 0)
(fun dih6u_x 0)
(fun dih6u_xu_126u_s2 0)
(fun rhazimu_xu_divu_sqrtdeltau_posbranch 0)
(fun rhazim3u_xu_divu_sqrtdeltau_posbranch 0)
(fun volu_x 0)
(fun volu_y 0)
(fun rotate5 0)
(fun ldih5u_xu_divu_sqrtdeltau_posbranch 0)
(fun rotate2 0)
(fun ldih2u_xu_divu_sqrtdeltau_posbranch 0)
(fun solu_euler345u_xu_divu_sqrtdelta 0)
(fun rad2u_x 0)
(fun rad2u_y 0)
(fun dihu_xu_divu_sqrtdeltau_posbranch 0)
(fun dih4u_xu_divu_sqrtdeltau_posbranch 0)
(fun ldihu_x 0)
(fun ldih2u_x 0)
(fun ldihu_xu_n 0)
(fun ldihu_xu_135u_n 0)
(fun ldih3u_x 0)
(fun dih6u_xu_135u_s2 0)
(fun rhazim2u_xu_divu_sqrtdeltau_posbranch 0)
(fun dih3u_xu_divu_sqrtdeltau_posbranch 0)
(fun dih5u_xu_divu_sqrtdeltau_posbranch 0)
(fun dih5u_xu_126u_s2 0)
(fun ldihu_xu_126u_n 0)
(fun dih4u_xu_126u_s2 0)
(fun delta4u_squaredu_x 0)
(fun delta4u_squaredu_y 0)
(fun eta2u_126 0)
(fun dihu_x 0)
(fun dih2u_x 0)
(fun rhazimu_x 0)
(fun rhazim2u_x 0)
(fun dih3u_x 0)
(fun rhazim3u_x 0)
(fun TAGB 0)
(fun ODD 0)
(fun u_0 0)
(fun F 0)
(fun w_ 0)
(fun T 0)
(fun realu_abs 0)
(fun pi 0)
(fun PRE 0)
(fun BIT0 0)
(fun EVEN 0)
(fun neutral 0)
(fun s_b_ 0)
(fun mku_num 0)
(fun INDu_0 0)
(fun topspace 0)
(fun euclideanreal 0)
(fun UNIV 0)
(fun SND 0)
(fun abdodec 0)
(fun bdodec 0)
(fun topology0 0)
(fun realu_open 0)
(fun FST 0)
(fun adodec 0)
(fun netlimit 0)
(fun atreal 0)
(fun realu_min 0)
(fun realu_max 0)
(fun mul6 0)
(fun proju_x1 0)
(fun deltau_x 0)
(fun realu_ofu_int 0)
(fun intu_ofu_num 0)
(fun realu_ofu_num 0)
(fun drop 0)
(fun vec 0)
(fun NUMERAL 0)
(fun BIT1 0)
(fun SUC 0)
(fun p_ 0)
(fun floor 0)
(fun intu_abs 0)
(fun lift 0)
(fun ineq 0)
(fun NIL 0)
(fun l_ 0)
(fun bnu_containsUnacceptableEdge 0)
(fun mku_nadd 0)
(fun destu_nadd 0)
(fun triu_sy 0)
(fun tupleu_triu_sy 0)
(fun mku_456 0)
(fun truncateu_volu_x 0)
(fun truncateu_vol3ru_456 0)
(fun flatu_term 0)
(fun sqrt 0)
(fun flatu_termu_x 0)
(fun intu_neg 0)
(fun twopow 0)
(fun intu_max 0)
(fun intu_min 0)
(fun bnu_graph 0)
(fun bnu_maxGon 0)
(fun bnu_Seed 0)
(fun intu_ofu_real 0)
(fun vectoru_norm 0)
(fun pad2d3d 0)
(fun rotate2d 0)
(fun vectoru_neg 0)
(fun cnj 0)
(fun ccos 0)
(fun openu_in 0)
(fun closedu_in 0)
(fun realu_closed 0)
(fun real0 0)
(fun complexu_inv 0)
(fun Re 0)
(fun mku_bnu_graph 0)
(fun destu_bnu_graph 0)
(fun m_ 0)
(fun t_ 0)
(fun realu_mul 0)
(fun const1 0)
(fun sol0 0)
(fun b_s_ 0)
(fun ku_ts 0)
(fun tayloru_coeffu_catn 0)
(fun catn 0)
(fun ldih2u_xu_126u_n 0)
(fun ldih5u_xu_135u_n 0)
(fun ldih3u_xu_135u_n 0)
(fun ldih6u_xu_126u_n 0)
(fun l_a_ 0)
(fun a_ 0)
(fun oneu_ABS 0)
(fun oneu_REP 0)
(fun nabs 0)
(fun cacs 0)
(fun csin 0)
(fun casn 0)
(fun bnu_faces 0)
(fun setu_ofu_list 0)
(fun bnu_Faces 0)
(fun LENGTH 0)
(fun bnu_nonFinals 0)
(fun bnu_countNonFinals 0)
(fun numu_ofu_int 0)
(fun realu_div 0)
(fun LISTu_TO 0)
(fun machineu_eps 0)
(fun tan 0)
(fun realu_measure 0)
(fun EMPTY 0)
(fun ii 0)
(fun dimindex 0)
(fun realu_add 0)
(fun sin 0)
(fun EXP 0)
(fun IMAGE 0)
(fun from 0)
(fun maxu_num 0)
(fun bnu_maxu_list 0)
(fun minu_num 0)
(fun bnu_minu_list 0)
(fun stableu_sy 0)
(fun tupleu_stableu_sy 0)
(fun exp 0)
(fun realu_sgn 0)
(fun realu_inv 0)
(fun integer 0)
(fun realu_neg 0)
(fun rational 0)
(fun Cx 0)
(fun cos 0)
(fun au_tame 0)
(fun tableu_multiplier 0)
(fun bnu_excessTCount 0)
(fun atn 0)
(fun ku_sy 0)
(fun log 0)
(fun inf 0)
(fun INSERT 0)
(fun sup 0)
(fun higheru_complexu_derivative 0)
(fun g_a_ 0)
(fun bnu_containsUnacceptableEdgeSnd 0)
(fun intu_sgn 0)
(fun du_ts 0)
(fun bnu_countVertices 0)
(fun acs 0)
(fun du_sy 0)
(fun ctan 0)
(fun asn 0)
(fun cexp 0)
(fun INDu_SUC 0)
(fun destu_num 0)
(fun realu_lt 0)
(fun realu_sub 0)
(fun frac 0)
(fun bounded 0)
(fun realu_bounded 0)
(fun vectoru_add 0)
(fun vectoru_sub 0)
(fun du_tame 0)
(fun bnu_squanderFace 0)
(fun realu_lebesgueu_measurable 0)
(fun DIFF 0)
(fun dot 0)
(fun normalize 0)
(fun voronoiu_set 0)
(fun voronoiu_list 0)
(fun bnu_facesAt 0)
(fun bnu_degree 0)
(fun intu_add 0)
(fun intu_sub 0)
(fun cross 0)
(fun intu_le 0)
(fun intu_lt 0)
(fun complexu_mul 0)
(fun complexu_div 0)
(fun distance 0)
(fun c_ 0)
(fun d3 0)
(fun ball 0)
(fun hinhcau 0)
(fun EL 0)
(fun bnu_faceListAt 0)
(fun bnu_heights 0)
(fun bnu_height 0)
(fun openu_interval 0)
(fun rect 0)
(fun atn2 0)
(fun atn2curry 0)
(fun realu_le 0)
(fun netord 0)
(fun atu_neginfinity 0)
(fun rpow 0)
(fun realu_pow 0)
(fun atu_posinfinity 0)
(fun realu_ge 0)
(fun trealu_neg 0)
(fun sequentially 0)
(fun IN 0)
(fun CARD 0)
(fun Im 0)
(fun unit0 0)
(fun mapu_tou_voronoi 0)
(fun voronoiu_open 0)
(fun mapu_tou_nuau_kg 0)
(fun nuau_kg 0)
(fun realu_negligible 0)
(fun measure 0)
(fun volu_rect 0)
(fun r_ 0)
(fun g_ 0)
(fun UNIONS 0)
(fun bnu_planeGraphsP 0)
(fun bnu_PlaneGraphs 0)
(fun uni 0)
(fun pow2 0)
(fun NULL 0)
(fun Arg 0)
(fun ssqrt 0)
(fun subtopology 0)
(fun MAP 0)
(fun bnu_verticesu_face 0)
(fun bnu_fgraph 0)
(fun FILTER 0)
(fun bnu_finalu_face 0)
(fun bnu_finals 0)
(fun UPT 0)
(fun hrealu_inv 0)
(fun hrealu_ofu_num 0)
(fun dim 0)
(fun bnu_rotateu_to 0)
(fun bnu_rotateu_min 0)
(fun within 0)
(fun higheru_realu_derivative 0)
(fun mku_real 0)
(fun trealu_eq 0)
(fun trealu_ofu_num 0)
(fun mku_hreal 0)
(fun naddu_eq 0)
(fun naddu_ofu_num 0)
(fun open 0)
(fun hasu_realu_measure 0)
(fun realu_measurable 0)
(fun isu_interval 0)
(fun isu_realinterval 0)
(fun measurable 0)
(fun connected 0)
(fun compact 0)
(fun realu_compact 0)
(fun lebesgueu_measurable 0)
(fun negligible 0)
(fun closed 0)
(fun convex 0)
(fun complex 0)
(fun Iu_TS 0)
(fun Iu_SY 0)
(fun l_u_c 0)
(fun FINITE 0)
(fun l_a_u_c 0)
(fun COUNTABLE 0)
(fun reduced 0)
(fun binom 0)
(fun closestu_point 0)
(fun h0 0)
(fun rh0 0)
(fun lfun 0)
(fun sub6 0)
(fun vol3fu_456 0)
(fun gamma3u_x 0)
(fun summable 0)
(fun o 0)
(fun realu_summable 0)
(fun FACT 0)
(fun intu_mul 0)
(fun intu_pow 0)
(fun complexu_pow 0)
(fun infnorm 0)
(fun INFINITE 0)
(fun g_a_u_c 0)
(fun hrealu_add 0)
(fun setu_ofu_ccube 0)
(fun intu_ball 0)
(fun setu_ofu_cube 0)
(fun unionu_ofu_intu_cube 0)
(fun faceu_set 0)
(fun hypermapu_ofu_fan 0)
(fun faceu_setu_ofu_fan 0)
(fun unionu_ofu_cube 0)
(fun intu_ge 0)
(fun realu_gt 0)
(fun intu_gt 0)
(fun DECIMAL 0)
(fun float 0)
(fun hrealu_mul 0)
(fun bu_tame 0)
(fun bnu_squanderVertex 0)
(fun map0 0)
(fun map1 0)
(fun UNION 0)
(fun MAX 0)
(fun MIN 0)
(fun intu_divides 0)
(fun numu_divides 0)
(fun packingu_trg 0)
(fun centeru_pac 0)
(fun product 0)
(fun o_o_ 0)
(fun hasu_measure 0)
(fun a_a_g_ 0)
(fun trealu_le 0)
(fun naddu_le 0)
(fun hrealu_le 0)
(fun nsum 0)
(fun sum 0)
(fun csqrt 0)
(fun basis 0)
(fun CONS 0)
(fun voronoiu_closed 0)
(fun scale 0)
(fun I 0)
(fun MOD 0)
(fun add6 0)
(fun tauu_residualu_x 0)
(fun affu_dim 0)
(fun bnu_finalGraph 0)
(fun sqrt2 0)
(fun detu_vec3 0)
(fun isu_nadd 0)
(fun omegau_listu_n 0)
(fun HD 0)
(fun DIV 0)
(fun dist 0)
(fun dependent 0)
(fun independent 0)
(fun pow1 0)
(fun d_ 0)
(fun ivsu_azimu_cycle 0)
(fun obstructed 0)
(fun unobstructed 0)
(fun ISu_SY 0)
(fun klu_sy 0)
(fun intu_mod 0)
(fun maxu_real 0)
(fun maxu_real3 0)
(fun au_ts 0)
(fun au_sy 0)
(fun pow3 0)
(fun sqn 0)
(fun gchi 0)
(fun proju_y4 0)
(fun gchi4u_x 0)
(fun proju_y5 0)
(fun gchi5u_x 0)
(fun proju_y6 0)
(fun gchi6u_x 0)
(fun iterate 0)
(fun rho 0)
(fun proju_y1 0)
(fun u_mku_rec 0)
(fun ZBOT 0)
(fun BOTTOM 0)
(fun cproduct 0)
(fun gchi1u_x 0)
(fun proju_y2 0)
(fun gchi2u_x 0)
(fun proju_y3 0)
(fun gchi3u_x 0)
(fun bnu_concat 0)
(fun REVERSE 0)
(fun bnu_rotate1 0)
(fun APPEND 0)
(fun sqrt3 0)
(fun vector 0)
(fun negligibleu_funu_p 0)
(fun negligibleu_funu_0 0)
(fun prod0 0)
(fun intu_coprime 0)
(fun numu_coprime 0)
(fun intu_gcd 0)
(fun numu_gcd 0)
(fun m_m_m_g_ 0)
(fun realu_continuous 0)
(fun packing 0)
(fun centeredu_pac 0)
(fun openu_realu_interval 0)
(fun COND 0)
(fun minu_real 0)
(fun clog 0)
(fun realu_sums 0)
(fun realu_infsum 0)
(fun hasu_realu_integral 0)
(fun realu_integral 0)
(fun realu_integrableu_on 0)
(fun complexu_derivative 0)
(fun isu_inju_list 0)
(fun evenperm 0)
(fun GSPEC 0)
(fun bnu_hideDups 0)
(fun BUTLAST 0)
(fun closure 0)
(fun span 0)
(fun INTERS 0)
(fun interior 0)
(fun euclidean 0)
(fun frontier 0)
(fun conv 0)
(fun relativeu_interior 0)
(fun inside 0)
(fun outside 0)
(fun marku_term 0)
(fun LETu_END 0)
(fun root 0)
(fun ellipsoid 0)
(fun normball 0)
(fun cpow 0)
(fun bnu_subdivFace0 0)
(fun bnu_makeFaceFinal 0)
(fun sums 0)
(fun poweru_maps 0)
(fun nu_fan 0)
(fun poweru_nu_fan 0)
(fun inverse 0)
(fun extensionu_sigmau_fan 0)
(fun inverseu_sigmau_fan 0)
(fun quadraticu_rootu_plus 0)
(fun quadraticu_rootu_plusu_curry 0)
(fun intervalu_eps 0)
(fun real3u_ofu_triple 0)
(fun mku_vec3 0)
(fun bu_sy 0)
(fun bu_ts 0)
(fun mapu_tou_ball 0)
(fun pow4 0)
(fun permutes 0)
(fun EX 0)
(fun MEM 0)
(fun naddu_add 0)
(fun naddu_mul 0)
(fun sqrt8 0)
(fun exposedu_faceu_of 0)
(fun faceu_of 0)
(fun bnu_except 0)
(fun bnu_exceptionalVertex 0)
(fun bnu_minimal 0)
(fun bnu_minimalVertex 0)
(fun hasu_complexu_derivative 0)
(fun at 0)
(fun complexu_differentiable 0)
(fun polaru_lt 0)
(fun polaru_le 0)
(fun hasu_realu_derivative 0)
(fun realu_derivative 0)
(fun realu_differentiable 0)
(fun bnu_separated2 0)
(fun bnu_separated3 0)
(fun bnu_separated 0)
(fun closedu_interval 0)
(fun convexu_on 0)
(fun realu_convexu_on 0)
(fun closedu_realu_interval 0)
(fun INTER 0)
(fun ALL 0)
(fun iu_fan 0)
(fun halfatn 0)
(fun halfatn4 0)
(fun finiteu_index 0)
(fun destu_finiteu_image 0)
(fun leftu_actionu_list 0)
(fun scalar6 0)
(fun unit6 0)
(fun lfunu_y1 0)
(fun trealu_add 0)
(fun trealu_mul 0)
(fun setu_ofu_orbitsu_pointsu_fan 0)
(fun numberu_ofu_orbitsu_pointsu_fan 0)
(fun vol3r 0)
(fun sigmau_fan 0)
(fun inverseu_sigmau_fanu_alt 0)
(fun topologicalu_componentu_yfan 0)
(fun yfan 0)
(fun analyticu_on 0)
(fun numu_mod 0)
(fun azimu_cycle 0)
(fun Ju_TS 0)
(fun fu_ts 0)
(fun Ju_SY 0)
(fun fu_sy 0)
(fun compose6 0)
(fun proju_x2 0)
(fun two6 0)
(fun proju_x6 0)
(fun proju_x3 0)
(fun proju_x5 0)
(fun proju_x4 0)
(fun rotate345 0)
(fun rconesgn 0)
(fun rconeu_eq 0)
(fun rconeu_ge 0)
(fun rconeu_gt 0)
(fun rconeu_lt 0)
(fun div6 0)
(fun dih3u_xu_135u_s2 0)
(fun ldih3u_xu_135u_s2 0)
(fun dihu_xu_126u_s2 0)
(fun ldihu_xu_126u_s2 0)
(fun ldih5u_xu_135u_s2 0)
(fun dihu_xu_135u_s2 0)
(fun ldihu_xu_135u_s2 0)
(fun ldih6u_xu_126u_s2 0)
(fun dih2u_xu_126u_s2 0)
(fun ldih2u_xu_126u_s2 0)
(fun REVERSEu_TABLE 0)
(fun REPLICATE 0)
(fun ly 0)
(fun rectifiableu_path 0)
(fun reversepath 0)
(fun pathu_length 0)
(fun path 0)
(fun openu_realu_segment 0)
(fun openu_segment 0)
(fun truncateu_sqrt 0)
(fun nodeu_set 0)
(fun numberu_ofu_nodes 0)
(fun planaru_ind 0)
(fun shift 0)
(fun tameu_hypermap 0)
(fun oppositeu_hypermap 0)
(fun dartu_of 0)
(fun size 0)
(fun numberu_ofu_faces 0)
(fun radV 0)
(fun hl 0)
(fun edgeu_set 0)
(fun numberu_ofu_edges 0)
(fun setu_ofu_components 0)
(fun numberu_ofu_components 0)
(fun slice 0)
(fun affsign 0)
(fun sgnu_ge 0)
(fun affu_ge 0)
(fun hull 0)
(fun affine 0)
(fun aff 0)
(fun sgnu_lt 0)
(fun affu_lt 0)
(fun sgnu_gt 0)
(fun affu_gt 0)
(fun sgnu_le 0)
(fun affu_le 0)
(fun HASu_SIZE 0)
(fun connectedu_hypermap 0)
(fun planaru_hypermap 0)
(fun trivialu_limit 0)
(fun lmdihu_xu_divu_sqrtdeltau_posbranch 0)
(fun lmdih6u_xu_divu_sqrtdeltau_posbranch 0)
(fun truncateu_vol3f 0)
(fun truncateu_gamma3fu_x 0)
(fun gamma3fu_vLRu_n 0)
(fun gamma3fu_vLRu_nlfun 0)
(fun gamma2u_x1u_divu_a 0)
(fun gamma2u_xu_divu_azim 0)
(fun lmdih5u_xu_divu_sqrtdeltau_posbranch 0)
(fun lmdih2u_xu_divu_sqrtdeltau_posbranch 0)
(fun gamma3fu_vLu_n 0)
(fun gamma3fu_vLu_nlfun 0)
(fun lmdih3u_xu_divu_sqrtdeltau_posbranch 0)
(fun taumu_sub1u_x 0)
(fun taumu_x 0)
(fun deltau_sub1u_x 0)
(fun shiftu_path 0)
(fun a_a_ 0)
(fun COVER2u_SY 0)
(fun DROP 0)
(fun TL 0)
(fun bump 0)
(fun halfbumpu_x 0)
(fun collinear 0)
(fun tameu_8 0)
(fun bnu_verticesu_graph 0)
(fun continuous 0)
(fun constant6 0)
(fun top0 0)
(fun ind0 0)
(fun bnu_filter 0)
(fun absolutelyu_integrableu_on 0)
(fun absolutelyu_realu_integrableu_on 0)
(fun integrableu_on 0)
(fun conv0 0)
(fun subspace 0)
(fun convu_trg 0)
(fun omegau_list 0)
(fun vectoru_variation 0)
(fun realu_variation 0)
(fun res 0)
(fun nu_fanu_pair 0)
(fun dart1u_ofu_fan 0)
(fun nu_fanu_pairu_ext 0)
(fun fu_fanu_pair 0)
(fun fu_fanu_pairu_ext 0)
(fun continuousu_on 0)
(fun realu_continuousu_on 0)
(fun uniformlyu_continuousu_on 0)
(fun realu_uniformlyu_continuousu_on 0)
(fun hasu_boundedu_variationu_on 0)
(fun hasu_boundedu_realu_variationu_on 0)
(fun measurableu_on 0)
(fun realu_measurableu_on 0)
(fun cball 0)
(fun dropout 0)
(fun homeomorphic 0)
(fun isu_path 0)
(fun isu_inju_contour 0)
(fun isu_contour 0)
(fun PAIRWISE 0)
(fun pairwise 0)
(fun det 0)
(fun TABLE 0)
(fun bnu_hideDupsRec 0)
(fun conic 0)
(fun plainu_hypermap 0)
(fun tameu_1 0)
(fun simpleu_hypermap 0)
(fun tameu_2 0)
(fun CHOICE 0)
(fun vsum 0)
(fun polyhedron 0)
(fun polytope 0)
(fun pathu_component 0)
(fun connectedu_component 0)
(fun DELETE 0)
(fun arclengthu_y1 0)
(fun arclength 0)
(fun arclengthu_y2 0)
(fun wtcount3u_y 0)
(fun wtcount6u_y 0)
(fun gamma23fu_redu_03 0)
(fun gamma3fu_v 0)
(fun flu_sy 0)
(fun derivedu_form 0)
(fun SETSPEC 0)
(fun e2u_fan 0)
(fun e3u_fan 0)
(fun e1u_fan 0)
(fun kle 0)
(fun azim 0)
(fun transp 0)
(fun columnvector 0)
(fun rowvector 0)
(fun supportu_darts 0)
(fun faceu_collection 0)
(fun dart 0)
(fun pathu_image 0)
(fun criticalu_edgeX 0)
(fun criticalu_weight 0)
(fun vectoru_angle 0)
(fun closedu_realu_segment 0)
(fun closedu_segment 0)
(fun a_u_c 0)
(fun pathfinish 0)
(fun pathstart 0)
(fun dih4u_y 0)
(fun rhazim4 0)
(fun dih5u_y 0)
(fun rhazim5 0)
(fun dih6u_y 0)
(fun rhazim6 0)
(fun trace 0)
(fun mat 0)
(fun lunaru_deform 0)
(fun rank 0)
(fun invertible 0)
(fun rows 0)
(fun columns 0)
(fun components 0)
(fun smallestu_angleu_set 0)
(fun smallestu_angleu_line 0)
(fun dihu_y 0)
(fun setu_ofu_edge 0)
(fun deltau_234u_x 0)
(fun deltau_135u_x 0)
(fun dih2u_y 0)
(fun dih3u_y 0)
(fun taumu_sub345u_x 0)
(fun taumu_sub246u_x 0)
(fun lnazim 0)
(fun deltau_126u_x 0)
(fun matrixu_vectoru_mul 0)
(fun bnu_the 0)
(fun bnu_subdivFace 0)
(fun upsu_x 0)
(fun upsu_xu_pow2 0)
(fun hu_dart 0)
(fun hasu_vectoru_derivative 0)
(fun taggedu_partialu_divisionu_of 0)
(fun indicator 0)
(fun taggedu_divisionu_of 0)
(fun bnu_setFinal 0)
(fun sndcart 0)
(fun fstcart 0)
(fun FCONS 0)
(fun SUBSET 0)
(fun diameter 0)
(fun coplanar 0)
(fun pathL 0)
(fun orthogonal 0)
(fun bnu_admissible1 0)
(fun bnu_admissible2 0)
(fun bnu_admissible3 0)
(fun bnu_admissible 0)
(fun bnu_tri 0)
(fun bnu_quad 0)
(fun bnu_vertextype 0)
(fun bnu_tabulate0 0)
(fun bnu_tabulate 0)
(fun m_m_g_ 0)
(fun belong 0)
(fun bnu_sub1 0)
(fun bnu_sub 0)
(fun content 0)
(fun delta 0)
(fun INJN 0)
(fun pathR 0)
(fun dartu_nondegenerate 0)
(fun LET 0)
(fun typeu_ofu_node 0)
(fun totalu_weight 0)
(fun piu_rt18 0)
(fun inju_orbit 0)
(fun mku_finiteu_sum 0)
(fun destu_finiteu_sum 0)
(fun mku_finiteu_product 0)
(fun destu_finiteu_product 0)
(fun ZIP 0)
(fun ou_funs 0)
(fun truncateu_simplex 0)
(fun t_u_c 0)
(fun ITER 0)
(fun safesqrt 0)
(fun volu_conv 0)
(fun wedgeu_ge 0)
(fun etau_x 0)
(fun hasu_integral 0)
(fun dua 0)
(fun mirror 0)
(fun complement 0)
(fun conicu_cap 0)
(fun bnu_nextElem 0)
(fun earu_sy 0)
(fun sigmau_sy 0)
(fun bnu_replace 0)
(fun naddu_rinv 0)
(fun naddu_inv 0)
(fun POWER 0)
(fun bnu_rotate 0)
(fun tau0 0)
(fun mm1 0)
(fun ALL2 0)
(fun projection 0)
(fun wedge 0)
(fun promote1u_tou_6 0)
(fun halfbumpu_x1 0)
(fun convexu_cone 0)
(fun bnu_mapAt 0)
(fun bnu_verticesu_set 0)
(fun vol3f 0)
(fun gamma3f 0)
(fun frustum 0)
(fun glue 0)
(fun supportu_list 0)
(fun inu_list 0)
(fun subpath 0)
(fun INV 0)
(fun LAST 0)
(fun OUTR 0)
(fun INR 0)
(fun truncateu_dihu_x 0)
(fun truncateu_solu_x 0)
(fun normize 0)
(fun bnu_removeKeyList 0)
(fun arcV 0)
(fun orthogonalu_matrix 0)
(fun OUTL 0)
(fun INL 0)
(fun complementu_set 0)
(fun setu_ofu_orbits 0)
(fun numberu_ofu_orbits 0)
(fun destu_cart 0)
(fun lambda 0)
(fun setu_ofu_exceptionalu_meetingu_node 0)
(fun setu_ofu_faceu_meetingu_node 0)
(fun setu_ofu_trianglesu_meetingu_node 0)
(fun setu_ofu_quadrilateralsu_meetingu_node 0)
(fun p_p_ 0)
(fun vectoru_derivative 0)
(fun differentiable 0)
(fun infsum 0)
(fun r_r_ 0)
(fun mku_net 0)
(fun circumcenter 0)
(fun setu_partu_components 0)
(fun rotationu_matrix 0)
(fun rotoinversionu_matrix 0)
(fun REST 0)
(fun realu_itv 0)
(fun triu_itv 0)
(fun norm2hh 0)
(fun norm2hhu_x 0)
(fun abcu_ofu_quadratic 0)
(fun muR 0)
(fun enclosed 0)
(fun gamma3fu_vLR0 0)
(fun gamma3fu_xu_vLR0 0)
(fun surfR 0)
(fun etau_y 0)
(fun surfRy 0)
(fun surfy 0)
(fun surfu_x 0)
(fun surfRdyc2 0)
(fun gamma3fu_v0 0)
(fun gamma3fu_xu_v0 0)
(fun vol3fu_sqrt2u_lmplus 0)
(fun vol3fu_xu_sqrt2u_lmplus 0)
(fun gamma3fu_vLRu_lfun 0)
(fun gamma3fu_xu_vLRu_lfun 0)
(fun gamma3fu_vLu_lfun 0)
(fun gamma3fu_xu_vLu_lfun 0)
(fun gamma3fu_vLu_xu_nlfun 0)
(fun gamma3fu_vu_lfun 0)
(fun gamma3fu_xu_vu_lfun 0)
(fun interp 0)
(fun gamma3fu_vLRu_n0 0)
(fun gamma3fu_vLRu_xu_n0 0)
(fun gamma3fu_vL0 0)
(fun gamma3fu_xu_vL0 0)
(fun gamma3fu_vLu_n0 0)
(fun gamma3fu_vLu_xu_n0 0)
(fun gamma3fu_vLRu_xu_nlfun 0)
(fun azim1 0)
(fun d1u_fan 0)
(fun d20u_fan 0)
(fun du_fan 0)
(fun diagonal0 0)
(fun bnu_tabulate2 0)
(fun bnu_enumerator 0)
(fun bnu_enumTab 0)
(fun rogers 0)
(fun mcell0 0)
(fun radius 0)
(fun DISJOINT 0)
(fun extremeu_pointu_of 0)
(fun bnu_splitAtRec 0)
(fun bnu_splitAt 0)
(fun setdist 0)
(fun RELPOW 0)
(fun matrixu_neg 0)
(fun marchalu_quartic 0)
(fun marchal 0)
(fun ratform 0)
(fun join 0)
(fun wedge3u_fan 0)
(fun taumu_y1u_y2 0)
(fun taumu_x1u_x2 0)
(fun coplanaru_alt 0)
(fun muyu_v 0)
(fun frustt 0)
(fun poweru_list 0)
(fun convexu_localu_fan 0)
(fun Vu_SY 0)
(fun Eu_SY 0)
(fun Fu_SY 0)
(fun CONDITION2u_SY 0)
(fun pastecart 0)
(fun istopology 0)
(fun NUMSUM 0)
(fun cu_union 0)
(fun INJA 0)
(fun support 0)
(fun INJF 0)
(fun u_destu_rec 0)
(fun SC 0)
(fun limitu_pointu_of 0)
(fun arclengthu_x1 0)
(fun arclengthu_x2 0)
(fun adjacentu_pai 0)
(fun conflictingu_dia 0)
(fun extendedu_dart 0)
(fun taumu_y1 0)
(fun taumu_x1 0)
(fun taumu_y2 0)
(fun taumu_x2 0)
(fun poweru_mapu_points 0)
(fun taum 0)
(fun tauq 0)
(fun RC 0)
(fun mapAt1 0)
(fun sign 0)
(fun MAP2 0)
(fun eeu_ofu_hyp 0)
(fun dartsu_ofu_hyp 0)
(fun PSUBSET 0)
(fun proju_point 0)
(fun homotopicu_paths 0)
(fun vecmat 0)
(fun zero6 0)
(fun dummy6 0)
(fun orbitu_map 0)
(fun edgeu_map 0)
(fun edge 0)
(fun next 0)
(fun loopu_path 0)
(fun nodeu_map 0)
(fun node 0)
(fun faceu_map 0)
(fun face 0)
(fun bnu_squanderTarget 0)
(fun unwinding 0)
(fun loop0 0)
(fun tupleu_loop 0)
(fun midpoint 0)
(fun ITLIST 0)
(fun lifted 0)
(fun NONE 0)
(fun vol4f 0)
(fun gamma4f 0)
(fun lmdih2u_xu_n 0)
(fun lmdih3u_xu_n 0)
(fun lmdih5u_xu_n 0)
(fun lmdihu_xu_n 0)
(fun lmdih6u_xu_n 0)
(fun wu_dartu_fan 0)
(fun rconeu_fan 0)
(fun rwu_dartu_fan 0)
(fun ldih2u_xu_n 0)
(fun ldih3u_xu_n 0)
(fun ldih5u_xu_n 0)
(fun ldih6u_xu_n 0)
(fun xfan 0)
(fun isolatedu_qua 0)
(fun isolatedu_pai 0)
(fun edgeu_walkup 0)
(fun doubleu_edgeu_walkup 0)
(fun faceu_walkup 0)
(fun doubleu_faceu_walkup 0)
(fun nodeu_walkup 0)
(fun doubleu_nodeu_walkup 0)
(fun vecmats 0)
(fun matvec 0)
(fun bnu_tame9a 0)
(fun bnu_tame10 0)
(fun bnu_tame11a 0)
(fun bnu_tame11b 0)
(fun bnu_tame12o 0)
(fun bnu_tame13a 0)
(fun bnu_tame 0)
(fun RSTC 0)
(fun TC 0)
(fun STC 0)
(fun RTC 0)
(fun RSC 0)
(fun exceptionalu_face 0)
(fun NUMPAIR 0)
(fun edgeu_of 0)
(fun cosV 0)
(fun cone 0)
(fun between 0)
(fun cone0 0)
(fun mku_cart 0)
(fun ABSu_prod 0)
(fun REPu_prod 0)
(fun drop0 0)
(fun part1 0)
(fun drop1 0)
(fun sqrtu_x6 0)
(fun sqrtu_x5 0)
(fun h0cut 0)
(fun lmfun 0)
(fun sqrtu_x4 0)
(fun sqrtu_x3 0)
(fun sqrtu_x2 0)
(fun ldih6u_x 0)
(fun isu_disjoint 0)
(fun halfbumpu_x4 0)
(fun bu_coef 0)
(fun deltau_x34 0)
(fun faceu_path 0)
(fun faceu_contour 0)
(fun edgeu_path 0)
(fun nodeu_path 0)
(fun sqrtu_x1 0)
(fun sinV 0)
(fun combu_component 0)
(fun vectoru_matrixu_mul 0)
(fun simpleu_path 0)
(fun linepath 0)
(fun arc 0)
(fun mku_pair 0)
(fun swap 0)
(fun r1u_leu_fan 0)
(fun r2u_leu_fan 0)
(fun r2u_geu_fan 0)
(fun r3u_leu_fan 0)
(fun r3u_geu_fan 0)
(fun ru_fan 0)
(fun dihR 0)
(fun tripleu_ofu_real3 0)
(fun vectoru_tou_pair 0)
(fun matrixu_sub 0)
(fun dihV 0)
(fun mxi 0)
(fun dihu3 0)
(fun betau_bumpu_lb 0)
(fun four6 0)
(fun matrixu_mul 0)
(fun matrixu_add 0)
(fun part2 0)
(fun hminus 0)
(fun hplus 0)
(fun criticalu_edgeu_y 0)
(fun deltau_y 0)
(fun gamma3fu_126u_n 0)
(fun gamma23fu_126u_03u_n 0)
(fun azimu_fan 0)
(fun azimu_dart 0)
(fun tauV 0)
(fun affineu_dependent 0)
(fun reflexive 0)
(fun symmetric 0)
(fun transitive 0)
(fun equivalenceu_relation 0)
(fun linear 0)
(fun matrix 0)
(fun orthogonalu_transformation 0)
(fun SOME 0)
(fun arcu_hhn 0)
(fun hypermap0 0)
(fun dartu_ofu_fan 0)
(fun eu_fanu_pairu_ext 0)
(fun dihu2 0)
(fun frechetu_derivative 0)
(fun jacobian 0)
(fun t0 0)
(fun EE 0)
(fun nnu_ofu_hyp 0)
(fun ffu_ofu_hyp 0)
(fun azimu_iu_fan 0)
(fun gamma3fu_126 0)
(fun gamma3fu_vL 0)
(fun gamma23fu_126u_03 0)
(fun bnu_replacefacesAt 0)
(fun bernstein 0)
(fun quotient 0)
(fun supportu_node 0)
(fun bnu_isu_Hom 0)
(fun bnu_isu_hom 0)
(fun bnu_isu_Iso 0)
(fun bnu_isu_iso 0)
(fun bnu_isu_pru_Iso 0)
(fun bnu_isu_pru_iso 0)
(fun shiftpath 0)
(fun integral 0)
(fun cstab 0)
(fun ITLIST2 0)
(fun drop2 0)
(fun part3 0)
(fun INJP 0)
(fun solidu_triangle 0)
(fun volR 0)
(fun initialu_sublist 0)
(fun tameu_tableu_d 0)
(fun acsu_sqrtu_x2u_d4 0)
(fun acsu_sqrtu_x1u_d4 0)
(fun dihu4 0)
(fun rhou_x 0)
(fun bnu_nextVertex 0)
(fun bnu_nextVertices 0)
(fun bnu_removeKey 0)
(fun regularu_sphericalu_polygonu_area 0)
(fun admu_1 0)
(fun admu_2 0)
(fun admu_3 0)
(fun admissibleu_weight 0)
(fun SDIFF 0)
(fun bnu_makeFaceFinalFaceList 0)
(fun ballu_annulus 0)
(fun drop3 0)
(fun part4 0)
(fun monomial 0)
(fun less 0)
(fun UNCURRY 0)
(fun p_u_c 0)
(fun gou_oneu_step 0)
(fun oneu_stepu_contour 0)
(fun fullyu_surrounded 0)
(fun conformingu_bijection 0)
(fun conformingu_halfu_space 0)
(fun conformingu_solidu_angle 0)
(fun conformingu_diagonal 0)
(fun conforming 0)
(fun hasu_derivative 0)
(fun volu_ballu_wedge 0)
(fun HYP 0)
(fun solR 0)
(fun nodeu_contour 0)
(fun back 0)
(fun nodeu_exceptionalu_face 0)
(fun solu_x 0)
(fun solu_y 0)
(fun volu_conicu_capu_wedge 0)
(fun eulerAu_x 0)
(fun edgeu_flat2u_x 0)
(fun euleru_1flatu_x 0)
(fun cu_coef 0)
(fun INJ 0)
(fun SURJ 0)
(fun BIJ 0)
(fun mm2 0)
(fun bnu_enumt 0)
(fun promote 0)
(fun cos797 0)
(fun tgt 0)
(fun bnu_minimalFace 0)
(fun mardih2u_x 0)
(fun mardihu_x 0)
(fun mardih3u_x 0)
(fun mardih4u_x 0)
(fun mardih5u_x 0)
(fun interioru_pos 0)
(fun mardih6u_x 0)
(fun tameu_10 0)
(fun selfu_pairs 0)
(fun bisu_le 0)
(fun bisu_lt 0)
(fun COVER3u_SY 0)
(fun ifu_azimsu_fan 0)
(fun CROSS 0)
(fun fan2 0)
(fun ZCONSTR 0)
(fun angle 0)
(fun ordu_pairs 0)
(fun ASSOC 0)
(fun tupleu_hypermap 0)
(fun parallel 0)
(fun taumu_1flatu_x 0)
(fun voronoiu_nondg 0)
(fun isu_edgeu_split 0)
(fun isu_faceu_split 0)
(fun isu_nodeu_split 0)
(fun bnu_directedLength 0)
(fun bnu_neighbors 0)
(fun bnu_duplicateEdge 0)
(fun vu_prime 0)
(fun eu_prime 0)
(fun localization 0)
(fun baseu_pointu_fan 0)
(fun isu_faceu_merge 0)
(fun isu_nodeu_merge 0)
(fun vol2r 0)
(fun isu_edgeu_merge 0)
(fun promote3u_tou_6 0)
(fun gamma3fu_135u_n 0)
(fun gamma23fu_n 0)
(fun mInside 0)
(fun heading 0)
(fun gcy 0)
(fun truncateu_gamma2u_x 0)
(fun truncateu_gamma23u_xu_B 0)
(fun facetu_of 0)
(fun isolatedu_dart 0)
(fun isu_edgeu_degenerate 0)
(fun isu_nodeu_degenerate 0)
(fun isu_faceu_degenerate 0)
(fun dartu_degenerate 0)
(fun COVER1u_SY 0)
(fun eu_fanu_pair 0)
(fun rhou_fun 0)
(fun homotopicu_loops 0)
(fun divisionu_of 0)
(fun gamma3fu_135 0)
(fun gamma3fu_vLR 0)
(fun gamma23f 0)
(fun halfatn4u_co 0)
(fun volu_frusttu_wedge 0)
(fun chi 0)
(fun rhou_ij 0)
(fun permutation 0)
(fun gamma23u_keep135u_x 0)
(fun num1 0)
(fun num2 0)
(fun numu_combo1 0)
(fun bnu_between 0)
(fun triu_stable 0)
(fun stableu_system 0)
(fun tauu_fun 0)
(fun du_fun 0)
(fun tauu_star 0)
(fun deltau_x6 0)
(fun bnu_inju_on 0)
(fun cm3u_upsu_x 0)
(fun hasu_orders 0)
(fun orientation 0)
(fun standard 0)
(fun deltau_x12 0)
(fun deltau_x13 0)
(fun deltau_x14 0)
(fun ESTD 0)
(fun eu_plane 0)
(fun COVER4u_SY 0)
(fun COVER5u_SY 0)
(fun COVER6u_SY 0)
(fun COVERu_SY 0)
(fun geomdetaili_simplex 0)
(fun protracted 0)
(fun vol2f 0)
(fun mcell1 0)
(fun mcell2 0)
(fun mcell3 0)
(fun mcell4 0)
(fun mcell 0)
(fun cayleytr 0)
(fun cayleyR 0)
(fun diagonal1 0)
(fun mainu_estimate 0)
(fun bnu_congs 0)
(fun mAdd 0)
(fun attach 0)
(fun euleru_2flatu_x 0)
(fun bu_ear0 0)
(fun deltau_pentu_x 0)
(fun fmap 0)
(fun nmap 0)
(fun emap 0)
(fun rat1 0)
(fun nodeu_typeu_exceptionalu_face 0)
(fun gamma3fu_135u_su_n 0)
(fun gamma3fu_126u_su_n 0)
(fun gamma23u_full8u_x 0)
(fun atan2u_temp 0)
(fun contractedu_dart 0)
(fun equiintegrableu_on 0)
(fun au_ear0 0)
(fun bu_spine5 0)
(fun au_spine5 0)
(fun taumu_2flatu_x 0)
(fun matan 0)
(fun faceu_loop 0)
(fun index 0)
(fun tpx 0)
(fun cofactor 0)
(fun rat2 0)
(fun dnax 0)
(fun dnay 0)
(fun genesis 0)
(fun isu_splittingu_component 0)
(fun strictu_qua2 0)
(fun orthonormal 0)
(fun anchor 0)
(fun tameu_3 0)
(fun tameu_4 0)
(fun tameu_5a 0)
(fun tameu_9a 0)
(fun tameu_11a 0)
(fun tameu_11b 0)
(fun tameu_12o 0)
(fun tameu_13a 0)
(fun truncateu_gamma23u_xu_C 0)
(fun x1cube 0)
(fun euleru_3flatu_x 0)
(fun isu_restricted 0)
(fun isu_normal 0)
(fun canon 0)
(fun head 0)
(fun isu_splitu_condition 0)
(fun chiu_x 0)
(fun circular 0)
(fun lunar 0)
(fun taumu_3flatu_x 0)
(fun ortho0 0)
(fun genex 0)
(fun samsara 0)
(fun geney 0)
(fun tpy 0)
(fun part5 0)
(fun gamma4fgcy 0)
(fun ylist 0)
(fun truncateu_gamma23au_x 0)
(fun sqp 0)
(fun truncateu_gamma23u_x 0)
(fun quotientu_darts 0)
(fun part6 0)
(fun betau_bumpAu_y 0)
(fun gamma3fu_xu_divu_sqrtdelta 0)
(fun cycu_emap 0)
(fun cycu_nmap 0)
(fun cycu_fmap 0)
(fun cyclicu_hypermap 0)
(fun dih2k 0)
(fun graph 0)
(fun fan1 0)
(fun fan6 0)
(fun fan7 0)
(fun FAN 0)
(fun edgeu_flat 0)
(fun part7 0)
(fun isu_nodeu_nondegenerate 0)
(fun canonu_darts 0)
(fun canonu_flag 0)
(fun flag 0)
(fun isu_marked 0)
(fun asn797k 0)
(fun apexf4 0)
(fun apexff4 0)
(fun apexfA 0)
(fun apexffA 0)
(fun fdodec 0)
(fun apexf5 0)
(fun apexff5 0)
(fun apexu_flatu_l 0)
(fun dartu_std3u_mini 0)
(fun apexu_flatu_h 0)
(fun dartu_Hllu_n 0)
(fun apexu_std3u_smallu_hll 0)
(fun dartu_mllu_n 0)
(fun apexu_std3u_hll 0)
(fun apexu_std3u_lllu_wxx 0)
(fun dartY 0)
(fun apexu_A 0)
(fun dartu_std3u_lw 0)
(fun dartu_Hllu_w 0)
(fun dartu_mllu_w 0)
(fun apexu_std3u_lhh 0)
(fun apexu_std3u_lllu_xww 0)
(fun apexu_supu_flat 0)
(fun apexu_flat 0)
(fun apexu_flatu_hll 0)
(fun dart4u_diag3 0)
(fun dartu_std3 0)
(fun dartu_std3u_small 0)
(fun dartu_std3u_bigu_200u_218 0)
(fun dartX 0)
(fun dartu_std4 0)
(fun asnFnhk 0)
(fun dart4u_diag3u_b 0)
(fun simplex 0)
(fun u_FALSITYu_ 0)
(fun FINREC 0)
(fun isu_nou_doubleu_joints 0)
(fun conv0u_2 0)
(fun ccube 0)
(fun part0 0)
(fun complete 0)
(fun GABS 0)
(fun h_ 0)
(fun isu_edgeu_nondegenerate 0)
(fun nou_loops 0)
(fun bnu_triangle 0)
(fun atu_infinity 0)
(fun epigraph 0)
(fun GEQ 0)
(fun g_u_c 0)
(fun bis 0)
(fun hold 0)
(fun i 0)
(fun mdtau2ufu_yu_LC 0)
(fun mdtau2ufu_y 0)
(fun dartu_std3u_big 0)
(fun mdtauu_yu_LC 0)
(fun mdtauu_y 0)
(fun muyu_delta 0)
(fun NONLIN 0)
(fun sol 0)
(fun intervalu_upperbound 0)
(fun intervalu_lowerbound 0)
(fun cube 0)
(fun trealu_inv 0)
(fun betau_bumpu_forceu_y 0)
(fun edgeu_flatu_x 0)
(fun dih2u_xu_135u_s2 0)
(fun vol3u_xu_135u_s2 0)
(fun condA 0)
(fun deltau_xu_126u_s2 0)
(fun deltau_yu_LC 0)
(fun promoteu_pow2 0)
(fun promoteu_pow3 0)
(fun gamma3fu_135u_xu_su_n 0)
(fun deltau_xu_135u_s2 0)
(fun mdtau2 0)
(fun homotopicu_with 0)
(fun mdtau 0)
(fun vol3fu_xu_lfun 0)
(fun scale6 0)
(fun vol3u_xu_sqrt 0)
(fun surfR126d 0)
(fun gamma3fu_126u_xu_su_n 0)
(fun preimage 0)
(fun sphericalu_map 0)
(fun PASSOC 0)
(fun dih3u_xu_126u_s2 0)
(fun CONSTR 0)
(fun leftu_action 0)
(fun CURRY 0)
(fun obstruct 0)
(fun bnu_prevVertex 0)
(fun radial 0)
(fun radialu_norm 0)
(fun compose 0)
(rule (iapply yu_ofu_x deltau_x4) delta4u_y)
(rule (iapply rotate126 arclengthu_xu_123) arclengthu_xu_126)
(rule (iapply rotate6 ldihu_xu_divu_sqrtdeltau_posbranch) ldih6u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply rotate6 solu_euleru_xu_divu_sqrtdelta) solu_euler156u_xu_divu_sqrtdelta)
(rule (iapply yu_ofu_x x1u_deltau_x) x1u_deltau_y)
(rule (iapply rotate4 eta2u_135) eta2u_456)
(rule (iapply rotate234 arclengthu_xu_123) arclengthu_xu_234)
(rule (iapply rotate4 solu_euleru_xu_divu_sqrtdelta) solu_euler246u_xu_divu_sqrtdelta)
(rule (iapply rotate3 ldihu_xu_divu_sqrtdeltau_posbranch) ldih3u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply yu_ofu_x upperu_dihu_x) upperu_dihu_y)
(rule (iapply node2u_y rhazim) rhazim2)
(rule (iapply node3u_y rhazim) rhazim3)
(rule (iapply mku_135 dih5u_x) dih5u_xu_135u_s2)
(rule (iapply mku_135 dih4u_x) dih4u_xu_135u_s2)
(rule (iapply mku_126 dih6u_x) dih6u_xu_126u_s2)
(rule (iapply rotate3 rhazimu_xu_divu_sqrtdeltau_posbranch) rhazim3u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply yu_ofu_x volu_x) volu_y)
(rule (iapply rotate5 ldihu_xu_divu_sqrtdeltau_posbranch) ldih5u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply rotate2 ldihu_xu_divu_sqrtdeltau_posbranch) ldih2u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply rotate5 solu_euleru_xu_divu_sqrtdelta) solu_euler345u_xu_divu_sqrtdelta)
(rule (iapply yu_ofu_x rad2u_x) rad2u_y)
(rule (iapply rotate4 dihu_xu_divu_sqrtdeltau_posbranch) dih4u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply rotate2 ldihu_x) ldih2u_x)
(rule (iapply mku_135 ldihu_xu_n) ldihu_xu_135u_n)
(rule (iapply rotate3 ldihu_x) ldih3u_x)
(rule (iapply mku_135 dih6u_x) dih6u_xu_135u_s2)
(rule (iapply rotate2 rhazimu_xu_divu_sqrtdeltau_posbranch) rhazim2u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply rotate3 dihu_xu_divu_sqrtdeltau_posbranch) dih3u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply rotate5 dihu_xu_divu_sqrtdeltau_posbranch) dih5u_xu_divu_sqrtdeltau_posbranch)
(rule (iapply mku_126 dih5u_x) dih5u_xu_126u_s2)
(rule (iapply mku_126 ldihu_xu_n) ldihu_xu_126u_n)
(rule (iapply mku_126 dih4u_x) dih4u_xu_126u_s2)
(rule (iapply yu_ofu_x delta4u_squaredu_x) delta4u_squaredu_y)
(rule (iapply rotate3 eta2u_126) eta2u_135)
(rule (iapply rotate2 dihu_x) dih2u_x)
(rule (iapply rotate2 rhazimu_x) rhazim2u_x)
(rule (iapply rotate3 dihu_x) dih3u_x)
(rule (iapply rotate3 rhazimu_x) rhazim3u_x)
(rule (iapply TAGB x) x)
(rule (iapply ODD u_0) F)
(rule (iapply w_ T) F)
(rule (iapply realu_abs pi) pi)
(rule (iapply PRE u_0) u_0)
(rule (iapply BIT0 u_0) u_0)
(rule (iapply EVEN u_0) T)
(rule (iapply neutral s_b_) T)
(rule (iapply w_ F) T)
(rule (iapply mku_num INDu_0) u_0)
(rule (iapply topspace euclideanreal) UNIV)
(rule (iapply SND abdodec) bdodec)
(rule (iapply topology0 realu_open) euclideanreal)
(rule (iapply FST abdodec) adodec)
(rule (iapply netlimit (iapply atreal a)) a)
(rule (iapply (iapply realu_min x) x) x)
(rule (iapply (iapply realu_max x) x) x)
(rule (iapply (iapply mul6 proju_x1) deltau_x) x1u_deltau_x)
(rule (iapply w_ (iapply w_ t)) t)
(rule (iapply realu_ofu_int (iapply intu_ofu_num u)) (iapply realu_ofu_num u))
(rule (iapply w_ (iapply EVEN n)) (iapply ODD n))
(rule (iapply drop (iapply vec n)) (iapply realu_ofu_num n))
(rule (iapply ODD (iapply NUMERAL n)) (iapply ODD n))
(rule (iapply EVEN (iapply NUMERAL n)) (iapply EVEN n))
(rule (iapply PRE (iapply BIT1 n)) (iapply BIT0 n))
(rule (iapply SUC (iapply BIT0 n)) (iapply BIT1 n))
(rule (iapply (iapply p_ n) n) (iapply BIT0 n))
(rule (iapply realu_abs (iapply realu_ofu_num n)) (iapply realu_ofu_num n))
(rule (iapply floor (iapply realu_ofu_num n)) (iapply realu_ofu_num n))
(rule (iapply intu_abs (iapply intu_ofu_num n)) (iapply intu_ofu_num n))
(rule (iapply lift (iapply realu_ofu_num n)) (iapply vec n))
(rule (iapply w_ (iapply ODD n)) (iapply EVEN n))
(rule (iapply (iapply ineq NIL) c) c)
(rule (iapply ODD (iapply NUMERAL u_0)) F)
(rule (iapply (iapply l_ u_0) u_0) F)
(rule (iapply (iapply bnu_containsUnacceptableEdge N) NIL) F)
(rule (iapply mku_nadd (iapply destu_nadd a)) a)
(rule (iapply triu_sy (iapply tupleu_triu_sy a)) a)
(rule (iapply mku_456 (iapply truncateu_volu_x c)) (iapply truncateu_vol3ru_456 c))
(rule (iapply flatu_term (iapply sqrt x)) (iapply flatu_termu_x x))
(rule (iapply intu_abs (iapply intu_abs x)) (iapply intu_abs x))
(rule (iapply intu_abs (iapply intu_neg x)) (iapply intu_abs x))
(rule (iapply realu_abs (iapply twopow a)) (iapply twopow a))
(rule (iapply (iapply intu_max x) x) x)
(rule (iapply (iapply intu_min x) x) x)
(rule (iapply bnu_graph (iapply bnu_maxGon p)) (iapply bnu_Seed p))
(rule (iapply intu_ofu_real (iapply realu_ofu_num n)) (iapply intu_ofu_num n))
(rule (iapply vectoru_norm (iapply pad2d3d x)) (iapply vectoru_norm x))
(rule (iapply (iapply rotate2d pi) z) (iapply vectoru_neg z))
(rule (iapply vectoru_norm (iapply cnj z)) (iapply vectoru_norm z))
(rule (iapply ccos (iapply vectoru_neg z)) (iapply ccos z))
(rule (iapply (iapply openu_in euclideanreal) s0) (iapply realu_open s0))
(rule (iapply (iapply closedu_in euclideanreal) s0) (iapply realu_closed s0))
(rule (iapply real0 (iapply complexu_inv z)) (iapply real0 z))
(rule (iapply Re (iapply cnj z)) (iapply Re z))
(rule (iapply mku_bnu_graph (iapply destu_bnu_graph a)) a)
(rule (iapply (iapply m_ u_0) u_0) u_0)
(rule (iapply (iapply t_ u_0) u_0) u_0)
(rule (iapply (iapply p_ u_0) u_0) u_0)
(rule (iapply (iapply realu_mul pi) const1) sol0)
(rule (iapply (iapply s_b_ p) p) p)
(rule (iapply (iapply b_s_ p) p) p)
(rule (iapply FST (iapply tupleu_triu_sy s0)) (iapply ku_ts s0))
(rule (iapply tayloru_coeffu_catn (iapply NUMERAL u_0)) catn)
(rule (iapply mku_126 (iapply rotate2 ldihu_xu_n)) ldih2u_xu_126u_n)
(rule (iapply mku_135 (iapply rotate5 ldihu_xu_n)) ldih5u_xu_135u_n)
(rule (iapply mku_135 (iapply rotate3 ldihu_xu_n)) ldih3u_xu_135u_n)
(rule (iapply mku_126 (iapply rotate6 ldihu_xu_n)) ldih6u_xu_126u_n)
(rule (iapply EVEN (iapply NUMERAL u_0)) T)
(rule (iapply (iapply l_a_ u_0) u_0) T)
(rule (iapply (iapply a_ u_0) u_0) T)
(rule (iapply ODD (iapply BIT1 n)) T)
(rule (iapply EVEN (iapply BIT0 n)) T)
(rule (iapply ODD (iapply BIT0 n)) F)
(rule (iapply EVEN (iapply BIT1 n)) F)
(rule (iapply oneu_ABS (iapply oneu_REP a)) a)
(rule (iapply intu_ofu_real (iapply realu_ofu_int a)) a)
(rule (iapply nabs (iapply intu_ofu_num u)) u)
(rule (iapply cnj (iapply cnj z)) z)
(rule (iapply ccos (iapply cacs z)) z)
(rule (iapply lift (iapply drop x)) x)
(rule (iapply intu_neg (iapply intu_neg x)) x)
(rule (iapply csin (iapply casn z)) z)
(rule (iapply complexu_inv (iapply complexu_inv x)) x)
(rule (iapply vectoru_neg (iapply vectoru_neg x)) x)
(rule (iapply FST (iapply destu_bnu_graph g)) (iapply bnu_faces g))
(rule (iapply setu_ofu_list (iapply bnu_faces g)) (iapply bnu_Faces g))
(rule (iapply LENGTH (iapply bnu_nonFinals g)) (iapply bnu_countNonFinals g))
(rule (iapply PRE (iapply SUC n)) n)
(rule (iapply numu_ofu_int (iapply intu_ofu_num n)) n)
(rule (iapply (iapply realu_div sol0) pi) const1)
(rule (iapply LISTu_TO (iapply NUMERAL u_0)) NIL)
(rule (iapply realu_ofu_num (iapply NUMERAL u_0)) machineu_eps)
(rule (iapply realu_ofu_num (iapply NUMERAL u_0)) (iapply tan pi))
(rule (iapply realu_ofu_num (iapply NUMERAL u_0)) (iapply realu_measure EMPTY))
(rule (iapply realu_ofu_num (iapply NUMERAL u_0)) (iapply Re ii))
(rule (iapply NUMERAL (iapply BIT1 u_0)) (iapply dimindex UNIV))
(rule (iapply realu_ofu_num (iapply NUMERAL u_0)) (iapply neutral realu_add))
(rule (iapply realu_ofu_num (iapply NUMERAL u_0)) (iapply sin pi))
(rule (iapply NUMERAL (iapply BIT1 u_0)) (iapply neutral t_))
(rule (iapply (iapply EXP u_0) u_0) (iapply BIT1 u_0))
(rule (iapply NUMERAL (iapply NUMERAL u_0)) (iapply NUMERAL u_0))
(rule (iapply PRE (iapply NUMERAL u_0)) (iapply NUMERAL u_0))
(rule (iapply (iapply IMAGE lift) UNIV) UNIV)
(rule (iapply (iapply IMAGE drop) UNIV) UNIV)
(rule (iapply from (iapply NUMERAL u_0)) UNIV)
(rule (iapply BIT0 (iapply NUMERAL u_0)) (iapply NUMERAL u_0))
(rule (iapply maxu_num (iapply setu_ofu_list xs)) (iapply bnu_maxu_list xs))
(rule (iapply minu_num (iapply setu_ofu_list xs)) (iapply bnu_minu_list xs))
(rule (iapply stableu_sy (iapply tupleu_stableu_sy a)) a)
(rule (iapply realu_abs (iapply exp x)) (iapply exp x))
(rule (iapply realu_sgn (iapply realu_inv x)) (iapply realu_sgn x))
(rule (iapply integer (iapply realu_neg x)) (iapply integer x))
(rule (iapply rational (iapply realu_neg x)) (iapply rational x))
(rule (iapply vectoru_norm (iapply Cx x)) (iapply realu_abs x))
(rule (iapply realu_abs (iapply realu_neg x)) (iapply realu_abs x))
(rule (iapply realu_abs (iapply realu_abs x)) (iapply realu_abs x))
(rule (iapply cos (iapply realu_neg x)) (iapply cos x))
(rule (iapply integer (iapply realu_abs x)) (iapply integer x))
(rule (iapply rational (iapply realu_inv x)) (iapply rational x))
(rule (iapply vectoru_norm (iapply lift x)) (iapply realu_abs x))
(rule (iapply cnj (iapply Cx x)) (iapply Cx x))
(rule (iapply cos (iapply realu_abs x)) (iapply cos x))
(rule (iapply realu_abs (iapply vectoru_norm x)) (iapply vectoru_norm x))
(rule (iapply realu_abs (iapply drop x)) (iapply vectoru_norm x))
(rule (iapply (iapply realu_mul au_tame) tableu_multiplier) (iapply realu_ofu_num bnu_excessTCount))
(rule (iapply tan (iapply atn y)) y)
(rule (iapply FST (iapply tupleu_stableu_sy s0)) (iapply ku_sy s0))
(rule (iapply realu_inv (iapply realu_inv x)) x)
(rule (iapply realu_neg (iapply realu_neg x)) x)
(rule (iapply Re (iapply Cx x)) x)
(rule (iapply drop (iapply lift x)) x)
(rule (iapply log (iapply exp x)) x)
(rule (iapply inf (iapply (iapply INSERT a) EMPTY)) a)
(rule (iapply sup (iapply (iapply INSERT a) EMPTY)) a)
(rule (iapply (iapply higheru_complexu_derivative (iapply NUMERAL u_0)) f) f)
(rule (iapply (iapply m_ (iapply BIT1 n)) u_0) (iapply BIT1 n))
(rule (iapply (iapply m_ (iapply BIT0 n)) u_0) (iapply BIT0 n))
(rule (iapply (iapply g_a_ u_0) (iapply BIT0 n)) (iapply (iapply g_a_ u_0) n))
(rule (iapply (iapply l_ u_0) (iapply BIT0 n)) (iapply (iapply l_ u_0) n))
(rule (iapply (iapply a_ u_0) (iapply BIT0 n)) (iapply (iapply a_ u_0) n))
(rule (iapply (iapply p_ (iapply BIT1 n)) u_0) (iapply BIT1 n))
(rule (iapply (iapply p_ (iapply BIT0 n)) u_0) (iapply BIT0 n))
(rule (iapply (iapply p_ u_0) (iapply BIT1 n)) (iapply BIT1 n))
(rule (iapply (iapply p_ u_0) (iapply BIT0 n)) (iapply BIT0 n))
(rule (iapply vectoru_norm (iapply Cx (iapply realu_ofu_num n))) (iapply realu_ofu_num n))
(rule (iapply intu_abs (iapply intu_neg (iapply intu_ofu_num n))) (iapply intu_ofu_num n))
(rule (iapply (iapply (iapply bnu_containsUnacceptableEdgeSnd N) v) NIL) F)
(rule (iapply intu_ofu_real (iapply realu_sgn (iapply realu_ofu_int x))) (iapply intu_sgn x))
(rule (iapply FST (iapply SND (iapply tupleu_triu_sy s0))) (iapply du_ts s0))
(rule (iapply Re (iapply ccos (iapply Cx x))) (iapply cos x))
(rule (iapply Re (iapply csin (iapply Cx x))) (iapply sin x))
(rule (iapply intu_ofu_real (iapply realu_abs (iapply realu_ofu_int x))) (iapply intu_abs x))
(rule (iapply FST (iapply SND (iapply destu_bnu_graph g))) (iapply bnu_countVertices g))
(rule (iapply Re (iapply catn (iapply Cx x))) (iapply atn x))
(rule (iapply Re (iapply cacs (iapply Cx x))) (iapply acs x))
(rule (iapply FST (iapply SND (iapply tupleu_stableu_sy s0))) (iapply du_sy s0))
(rule (iapply Re (iapply ctan (iapply Cx x))) (iapply tan x))
(rule (iapply Cx (iapply vectoru_norm (iapply Cx x))) (iapply Cx (iapply realu_abs x)))
(rule (iapply SUC (iapply SUC (iapply BIT0 n))) (iapply BIT0 (iapply SUC n)))
(rule (iapply Re (iapply casn (iapply Cx x))) (iapply asn x))
(rule (iapply intu_ofu_real (iapply realu_neg (iapply realu_ofu_int i0))) (iapply intu_neg i0))
(rule (iapply Re (iapply cexp (iapply Cx x))) (iapply exp x))
(rule (iapply mku_num (iapply INDu_SUC (iapply destu_num n))) (iapply SUC n))
(rule (iapply sin (iapply (iapply realu_add x) pi)) (iapply realu_neg (iapply sin x)))
(rule (iapply cos (iapply (iapply realu_add x) pi)) (iapply realu_neg (iapply cos x)))
(rule (iapply (iapply realu_div x) (iapply realu_abs x)) (iapply realu_sgn x))
(rule (iapply (iapply realu_lt (iapply floor x)) x) (iapply w_ (iapply integer x)))
(rule (iapply (iapply realu_sub x) (iapply floor x)) (iapply frac x))
(rule (iapply bounded (iapply (iapply IMAGE lift) s0)) (iapply realu_bounded s0))
(rule (iapply (iapply vectoru_add w) (iapply vectoru_neg z)) (iapply (iapply vectoru_sub w) z))
(rule (iapply SUC (iapply (iapply p_ n) n)) (iapply BIT1 n))
(rule (iapply (iapply realu_mul (iapply du_tame n)) tableu_multiplier) (iapply realu_ofu_num (iapply bnu_squanderFace n)))
(rule (iapply realu_lebesgueu_measurable (iapply (iapply DIFF UNIV) s0)) (iapply realu_lebesgueu_measurable s0))
(rule (iapply (iapply dot v) (iapply normalize v)) (iapply vectoru_norm v))
(rule (iapply (iapply a_ (iapply cnj z)) z) (iapply real0 z))
(rule (iapply (iapply voronoiu_set V) (iapply setu_ofu_list wl)) (iapply (iapply voronoiu_list V) wl))
(rule (iapply LENGTH (iapply (iapply bnu_facesAt g) v)) (iapply (iapply bnu_degree g) v))
(rule (iapply (iapply intu_add a) (iapply intu_neg b)) (iapply (iapply intu_sub a) b))
(rule (iapply vectoru_neg (iapply (iapply cross y) x)) (iapply (iapply cross x) y))
(rule (iapply (iapply realu_add x) (iapply realu_neg y)) (iapply (iapply realu_sub x) y))
(rule (iapply w_ (iapply (iapply intu_le y) x)) (iapply (iapply intu_lt x) y))
(rule (iapply (iapply complexu_mul w) (iapply complexu_inv z)) (iapply (iapply complexu_div w) z))
(rule (iapply distance (iapply (iapply c_ x) y)) (iapply (iapply d3 x) y))
(rule (iapply ball (iapply (iapply c_ x) r)) (iapply (iapply hinhcau x) r))
(rule (iapply (iapply EL v) (iapply bnu_faceListAt g)) (iapply (iapply bnu_facesAt g) v))
(rule (iapply (iapply EL v) (iapply bnu_heights g)) (iapply (iapply bnu_height g) v))
(rule (iapply openu_interval (iapply (iapply c_ a) b)) (iapply (iapply rect a) b))
(rule (iapply atn2 (iapply (iapply c_ x) y)) (iapply (iapply atn2curry x) y))
(rule (iapply (iapply realu_mul x) (iapply realu_inv y)) (iapply (iapply realu_div x) y))
(rule (iapply w_ (iapply (iapply realu_le y) x)) (iapply (iapply realu_lt x) y))
(rule (iapply (iapply intu_sub x) (iapply intu_neg y)) (iapply (iapply intu_add x) y))
(rule (iapply realu_inv (iapply (iapply realu_div x) y)) (iapply (iapply realu_div y) x))
(rule (iapply (iapply realu_sub x) (iapply realu_neg y)) (iapply (iapply realu_add x) y))
(rule (iapply (iapply (iapply netord atu_neginfinity) x) y) (iapply (iapply realu_le x) y))
(rule (iapply intu_neg (iapply (iapply intu_sub x) y)) (iapply (iapply intu_sub y) x))
(rule (iapply (iapply rpow x) (iapply realu_ofu_num n)) (iapply (iapply realu_pow x) n))
(rule (iapply w_ (iapply (iapply l_a_ m) n)) (iapply (iapply l_ n) m))
(rule (iapply w_ (iapply (iapply l_ m) n)) (iapply (iapply l_a_ n) m))
(rule (iapply w_ (iapply (iapply realu_lt x) y)) (iapply (iapply realu_le y) x))
(rule (iapply (iapply l_ m) (iapply SUC n)) (iapply (iapply l_a_ m) n))
(rule (iapply w_ (iapply (iapply intu_lt x) y)) (iapply (iapply intu_le y) x))
(rule (iapply realu_neg (iapply (iapply realu_sub x) y)) (iapply (iapply realu_sub y) x))
(rule (iapply (iapply (iapply netord atu_posinfinity) x) y) (iapply (iapply realu_ge x) y))
(rule (iapply (iapply l_a_ (iapply SUC m)) n) (iapply (iapply l_ m) n))
(rule (iapply trealu_neg (iapply (iapply c_ x) y)) (iapply (iapply c_ y) x))
(rule (iapply (iapply (iapply netord sequentially) m) n) (iapply (iapply g_a_ m) n))
(rule (iapply (iapply IN m) (iapply from n)) (iapply (iapply l_a_ n) m))
(rule (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))) (iapply neutral realu_mul))
(rule (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))) (iapply CARD UNIV))
(rule (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))) (iapply vectoru_norm ii))
(rule (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))) (iapply dimindex UNIV))
(rule (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))) (iapply dimindex UNIV))
(rule (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))) (iapply Im ii))
(rule (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))) unit0)
(rule (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply mapu_tou_voronoi (iapply (iapply c_ x) S)) (iapply (iapply voronoiu_open S) x))
(rule (iapply vectoru_neg (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub y) x))
(rule (iapply mapu_tou_nuau_kg (iapply (iapply c_ x) y)) (iapply (iapply nuau_kg x) y))
(rule (iapply (iapply vectoru_sub x) (iapply vectoru_neg y)) (iapply (iapply vectoru_add x) y))
(rule (iapply realu_negligible (iapply (iapply INSERT a) s0)) (iapply realu_negligible s0))
(rule (iapply vectoru_norm (iapply (iapply rotate2d t) z)) (iapply vectoru_norm z))
(rule (iapply measure (iapply (iapply rect a) b)) (iapply (iapply volu_rect a) b))
(rule (iapply complexu_inv (iapply (iapply complexu_div w) z)) (iapply (iapply complexu_div z) w))
(rule (iapply (iapply complexu_mul (iapply Cx c)) x) (iapply (iapply r_ c) x))
(rule (iapply (iapply t_ m) (iapply NUMERAL u_0)) (iapply NUMERAL u_0))
(rule (iapply (iapply t_ (iapply NUMERAL u_0)) n) (iapply NUMERAL u_0))
(rule (iapply (iapply g_ (iapply BIT0 n)) u_0) (iapply (iapply g_ n) u_0))
(rule (iapply (iapply l_a_ (iapply BIT0 n)) u_0) (iapply (iapply l_a_ n) u_0))
(rule (iapply (iapply a_ (iapply BIT0 n)) u_0) (iapply (iapply a_ n) u_0))
(rule (iapply (iapply EXP (iapply BIT1 m)) u_0) (iapply BIT1 u_0))
(rule (iapply (iapply EXP (iapply BIT0 m)) u_0) (iapply BIT1 u_0))
(rule (iapply UNIONS (iapply (iapply IMAGE bnu_planeGraphsP) UNIV)) bnu_PlaneGraphs)
(rule (iapply uni (iapply (iapply c_ pow2) deltau_x4)) delta4u_squaredu_x)
(rule (iapply NULL NIL) T)
(rule (iapply Arg (iapply Cx (iapply realu_ofu_num n))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply EXP m) (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT1 u_0)))
(rule (iapply ssqrt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply l_ u_0) (iapply BIT1 n)) T)
(rule (iapply (iapply l_a_ u_0) (iapply BIT1 n)) T)
(rule (iapply (iapply l_a_ u_0) (iapply BIT0 n)) T)
(rule (iapply (iapply l_ (iapply BIT1 n)) u_0) F)
(rule (iapply (iapply l_ (iapply BIT0 n)) u_0) F)
(rule (iapply (iapply l_a_ (iapply BIT1 n)) u_0) F)
(rule (iapply (iapply a_ u_0) (iapply BIT1 n)) F)
(rule (iapply (iapply a_ (iapply BIT1 n)) u_0) F)
(rule (iapply (iapply l_ m) (iapply NUMERAL u_0)) F)
(rule (iapply topspace (iapply (iapply subtopology euclideanreal) s0)) s0)
(rule (iapply (iapply MAP bnu_verticesu_face) (iapply bnu_faces g)) (iapply bnu_fgraph g))
(rule (iapply (iapply FILTER bnu_finalu_face) (iapply bnu_faces g)) (iapply bnu_finals g))
(rule (iapply (iapply p_ (iapply NUMERAL u_0)) n) n)
(rule (iapply nabs (iapply intu_neg (iapply intu_ofu_num n))) n)
(rule (iapply (iapply m_ m) (iapply NUMERAL u_0)) m)
(rule (iapply (iapply p_ m) (iapply NUMERAL u_0)) m)
(rule (iapply (iapply UPT m) (iapply NUMERAL u_0)) NIL)
(rule (iapply intu_sgn (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply tan (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply intu_abs (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply realu_sgn (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply realu_abs (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply atn (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply sin (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply hrealu_inv (iapply hrealu_ofu_num (iapply NUMERAL u_0))) (iapply hrealu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply asn (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply CARD EMPTY) (iapply NUMERAL u_0))
(rule (iapply LENGTH NIL) (iapply NUMERAL u_0))
(rule (iapply dim EMPTY) (iapply NUMERAL u_0))
(rule (iapply (iapply bnu_rotateu_to vs) (iapply bnu_minu_list vs)) (iapply bnu_rotateu_min vs))
(rule (iapply (iapply m_ u_0) (iapply BIT1 n)) u_0)
(rule (iapply (iapply m_ u_0) (iapply BIT0 n)) u_0)
(rule (iapply (iapply EXP u_0) (iapply BIT1 n)) u_0)
(rule (iapply (iapply t_ (iapply BIT1 n)) u_0) u_0)
(rule (iapply (iapply t_ (iapply BIT0 n)) u_0) u_0)
(rule (iapply (iapply t_ u_0) (iapply BIT1 n)) u_0)
(rule (iapply (iapply t_ u_0) (iapply BIT0 n)) u_0)
(rule (iapply (iapply within (iapply atreal x)) UNIV) (iapply atreal x))
(rule (iapply (iapply a_ (iapply floor x)) x) (iapply integer x))
(rule (iapply tan (iapply (iapply realu_add x) pi)) (iapply tan x))
(rule (iapply (iapply higheru_realu_derivative (iapply NUMERAL u_0)) f) f)
(rule (iapply mku_real (iapply trealu_eq (iapply trealu_ofu_num m))) (iapply realu_ofu_num m))
(rule (iapply mku_hreal (iapply naddu_eq (iapply naddu_ofu_num m))) (iapply hrealu_ofu_num m))
(rule (iapply open (iapply (iapply IMAGE lift) s0)) (iapply realu_open s0))
(rule (iapply (iapply hasu_realu_measure s0) (iapply realu_measure s0)) (iapply realu_measurable s0))
(rule (iapply isu_interval (iapply (iapply IMAGE lift) s0)) (iapply isu_realinterval s0))
(rule (iapply measurable (iapply (iapply IMAGE lift) s0)) (iapply realu_measurable s0))
(rule (iapply connected (iapply (iapply IMAGE lift) s0)) (iapply isu_realinterval s0))
(rule (iapply compact (iapply (iapply IMAGE lift) s0)) (iapply realu_compact s0))
(rule (iapply lebesgueu_measurable (iapply (iapply IMAGE lift) s0)) (iapply realu_lebesgueu_measurable s0))
(rule (iapply realu_open (iapply (iapply DIFF UNIV) s0)) (iapply realu_closed s0))
(rule (iapply realu_closed (iapply (iapply DIFF UNIV) s0)) (iapply realu_open s0))
(rule (iapply negligible (iapply (iapply IMAGE lift) s0)) (iapply realu_negligible s0))
(rule (iapply closed (iapply (iapply IMAGE lift) s0)) (iapply realu_closed s0))
(rule (iapply convex (iapply (iapply IMAGE lift) s0)) (iapply isu_realinterval s0))
(rule (iapply sin (iapply (iapply realu_sub pi) x)) (iapply sin x))
(rule (iapply Re (iapply complex (iapply (iapply c_ x) y))) x)
(rule (iapply FST (iapply SND (iapply SND (iapply destu_bnu_graph g)))) (iapply bnu_faceListAt g))
(rule (iapply SND (iapply SND (iapply SND (iapply destu_bnu_graph g)))) (iapply bnu_heights g))
(rule (iapply FST (iapply SND (iapply SND (iapply tupleu_triu_sy s0)))) (iapply Iu_TS s0))
(rule (iapply FST (iapply SND (iapply SND (iapply tupleu_stableu_sy s0)))) (iapply Iu_SY s0))
(rule (iapply (iapply l_u_c s0) UNIV) (iapply FINITE s0))
(rule (iapply (iapply l_a_u_c s0) UNIV) (iapply COUNTABLE s0))
(rule (iapply (iapply (iapply reduced lab) (iapply NUMERAL u_0)) x) (iapply NUMERAL u_0))
(rule (iapply (iapply m_ m) (iapply (iapply p_ m) n)) (iapply NUMERAL u_0))
(rule (iapply (iapply m_ n) (iapply (iapply p_ m) n)) (iapply NUMERAL u_0))
(rule (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT1 u_0))) n) (iapply (iapply l_ (iapply NUMERAL u_0)) n))
(rule (iapply binom (iapply (iapply c_ (iapply SUC n)) n)) (iapply SUC n))
(rule (iapply (iapply a_ (iapply oneu_REP (iapply oneu_ABS r))) r) r)
(rule (iapply (iapply vectoru_sub x) (iapply (iapply vectoru_sub x) y)) y)
(rule (iapply (iapply closestu_point (iapply (iapply INSERT a) EMPTY)) b) a)
(rule (iapply (iapply vectoru_add y) (iapply (iapply vectoru_sub x) y)) x)
(rule (iapply (iapply vectoru_add (iapply (iapply vectoru_sub x) y)) y) x)
(rule (iapply (iapply vectoru_sub (iapply (iapply vectoru_add x) y)) x) y)
(rule (iapply realu_neg (iapply sin (iapply (iapply realu_sub x) pi))) (iapply sin x))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub h0) y)) rh0) (iapply lfun y))
(rule (iapply (iapply a_ (iapply BIT1 m)) (iapply BIT0 n)) F)
(rule (iapply (iapply a_ (iapply BIT0 m)) (iapply BIT1 n)) F)
(rule (iapply (iapply sub6 (iapply mku_456 volu_x)) (iapply vol3fu_456 m4)) (iapply gamma3u_x m4))
(rule (iapply (iapply realu_div (iapply sin x)) (iapply cos x)) (iapply tan x))
(rule (iapply (iapply intu_sub (iapply intu_ofu_num (iapply NUMERAL u_0))) x) (iapply intu_neg x))
(rule (iapply (iapply summable s0) (iapply (iapply o Cx) f)) (iapply (iapply realu_summable s0) f))
(rule (iapply (iapply summable s0) (iapply (iapply o lift) f)) (iapply (iapply realu_summable s0) f))
(rule (iapply (iapply realu_mul x) (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow x) (iapply SUC n)))
(rule (iapply (iapply p_ (iapply NUMERAL n)) (iapply NUMERAL n)) (iapply NUMERAL (iapply BIT0 n)))
(rule (iapply (iapply t_ (iapply SUC n)) (iapply FACT n)) (iapply FACT (iapply SUC n)))
(rule (iapply (iapply intu_mul x) (iapply (iapply intu_pow x) n)) (iapply (iapply intu_pow x) (iapply SUC n)))
(rule (iapply (iapply complexu_mul x) (iapply (iapply complexu_pow x) n)) (iapply (iapply complexu_pow x) (iapply SUC n)))
(rule (iapply realu_abs (iapply infnorm x)) (iapply infnorm x))
(rule (iapply (iapply l_a_u_c UNIV) s0) (iapply INFINITE s0))
(rule (iapply (iapply a_ (iapply destu_bnu_graph (iapply mku_bnu_graph r))) r) T)
(rule (iapply (iapply hasu_realu_measure s0) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_negligible s0))
(rule (iapply (iapply a_ (iapply Cx (iapply Re z))) z) (iapply real0 z))
(rule (iapply (iapply g_a_u_c UNIV) t) (iapply COUNTABLE t))
(rule (iapply (iapply hrealu_add (iapply hrealu_ofu_num (iapply NUMERAL u_0))) x) x)
(rule (iapply CARD (iapply setu_ofu_ccube (iapply (iapply intu_ball x) r))) (iapply CARD (iapply (iapply intu_ball x) r)))
(rule (iapply UNIONS (iapply setu_ofu_cube (iapply (iapply intu_ball x) r))) (iapply (iapply unionu_ofu_intu_cube x) r))
(rule (iapply CARD (iapply setu_ofu_cube (iapply (iapply intu_ball x) r))) (iapply CARD (iapply (iapply intu_ball x) r)))
(rule (iapply faceu_set (iapply hypermapu_ofu_fan (iapply (iapply c_ V) E))) (iapply faceu_setu_ofu_fan (iapply (iapply c_ V) E)))
(rule (iapply twopow (iapply (iapply intu_mul a) (iapply intu_ofu_num n))) (iapply (iapply realu_pow (iapply twopow a)) n))
(rule (iapply UNIONS (iapply setu_ofu_cube (iapply (iapply hinhcau x) r))) (iapply (iapply unionu_ofu_cube x) r))
(rule (iapply Re (iapply (iapply complexu_mul z1) (iapply cnj z2))) (iapply (iapply dot z1) z2))
(rule (iapply (iapply a_ (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply complexu_mul (iapply Cx x)) (iapply Cx y)) (iapply Cx (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply realu_ge (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply (iapply intu_ge x) y))
(rule (iapply (iapply realu_div (iapply realu_abs x)) (iapply realu_abs y)) (iapply realu_abs (iapply (iapply realu_div x) y)))
(rule (iapply (iapply realu_gt (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply (iapply intu_gt x) y))
(rule (iapply (iapply realu_le (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply (iapply intu_le x) y))
(rule (iapply (iapply realu_lt (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply (iapply intu_lt x) y))
(rule (iapply (iapply complexu_mul (iapply complexu_inv w)) (iapply complexu_inv z)) (iapply complexu_inv (iapply (iapply complexu_mul w) z)))
(rule (iapply (iapply m_ (iapply BIT1 m)) (iapply BIT1 n)) (iapply BIT0 (iapply (iapply m_ m) n)))
(rule (iapply (iapply m_ (iapply BIT0 m)) (iapply BIT0 n)) (iapply BIT0 (iapply (iapply m_ m) n)))
(rule (iapply (iapply m_ (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply NUMERAL (iapply (iapply m_ m) n)))
(rule (iapply (iapply EXP (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply NUMERAL (iapply (iapply EXP m) n)))
(rule (iapply (iapply t_ (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply NUMERAL (iapply (iapply t_ m) n)))
(rule (iapply (iapply p_ (iapply BIT1 m)) (iapply BIT0 n)) (iapply BIT1 (iapply (iapply p_ m) n)))
(rule (iapply (iapply p_ (iapply BIT0 m)) (iapply BIT1 n)) (iapply BIT1 (iapply (iapply p_ m) n)))
(rule (iapply (iapply p_ (iapply BIT0 m)) (iapply BIT0 n)) (iapply BIT0 (iapply (iapply p_ m) n)))
(rule (iapply (iapply p_ (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply NUMERAL (iapply (iapply p_ m) n)))
(rule (iapply (iapply realu_mul (iapply vectoru_norm w)) (iapply vectoru_norm z)) (iapply vectoru_norm (iapply (iapply complexu_mul w) z)))
(rule (iapply (iapply realu_add (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply realu_ofu_int (iapply (iapply intu_add x) y)))
(rule (iapply (iapply s_b_ (iapply ODD m)) (iapply ODD n)) (iapply ODD (iapply (iapply t_ m) n)))
(rule (iapply (iapply realu_div (iapply realu_ofu_num x)) (iapply realu_ofu_num y)) (iapply (iapply DECIMAL x) y))
(rule (iapply (iapply realu_mul (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply realu_ofu_int (iapply (iapply intu_mul x) y)))
(rule (iapply (iapply realu_min (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply realu_ofu_int (iapply (iapply intu_min x) y)))
(rule (iapply (iapply vectoru_add (iapply cnj w)) (iapply cnj z)) (iapply cnj (iapply (iapply vectoru_add w) z)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_int x)) (iapply twopow n)) (iapply (iapply float x) n))
(rule (iapply (iapply realu_mul (iapply exp x)) (iapply exp y)) (iapply exp (iapply (iapply realu_add x) y)))
(rule (iapply (iapply realu_mul (iapply twopow a)) (iapply twopow b)) (iapply twopow (iapply (iapply intu_add a) b)))
(rule (iapply (iapply hrealu_mul (iapply hrealu_ofu_num m)) (iapply hrealu_ofu_num n)) (iapply hrealu_ofu_num (iapply (iapply t_ m) n)))
(rule (iapply (iapply complexu_mul (iapply cexp w)) (iapply cexp z)) (iapply cexp (iapply (iapply vectoru_add w) z)))
(rule (iapply (iapply complexu_div (iapply cnj w)) (iapply cnj z)) (iapply cnj (iapply (iapply complexu_div w) z)))
(rule (iapply (iapply p_ m) (iapply (iapply t_ m) n)) (iapply (iapply t_ m) (iapply SUC n)))
(rule (iapply (iapply vectoru_sub (iapply Cx x)) (iapply Cx y)) (iapply Cx (iapply (iapply realu_sub x) y)))
(rule (iapply (iapply realu_mul (iapply realu_sgn x)) (iapply realu_sgn y)) (iapply realu_sgn (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply realu_add (iapply drop x)) (iapply drop y)) (iapply drop (iapply (iapply vectoru_add x) y)))
(rule (iapply (iapply a_ (iapply realu_ofu_int a)) (iapply realu_ofu_num n)) (iapply (iapply a_ a) (iapply intu_ofu_num n)))
(rule (iapply (iapply vectoru_add (iapply lift x)) (iapply lift y)) (iapply lift (iapply (iapply realu_add x) y)))
(rule (iapply (iapply a_ (iapply cnj z)) (iapply Cx x)) (iapply (iapply a_ z) (iapply Cx x)))
(rule (iapply (iapply realu_add (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply (iapply p_ m) n)))
(rule (iapply (iapply realu_mul (iapply (iapply bu_tame p) q)) tableu_multiplier) (iapply realu_ofu_num (iapply (iapply bnu_squanderVertex p) q)))
(rule (iapply (iapply intu_add (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply intu_ofu_num (iapply (iapply p_ m) n)))
(rule (iapply (iapply realu_mul (iapply realu_abs x)) (iapply realu_abs y)) (iapply realu_abs (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply realu_sub (iapply Im x)) (iapply Im y)) (iapply Im (iapply (iapply vectoru_sub x) y)))
(rule (iapply (iapply b_s_ (iapply EVEN m)) (iapply EVEN n)) (iapply EVEN (iapply (iapply t_ m) n)))
(rule (iapply (iapply realu_mul (iapply realu_inv x)) (iapply realu_inv y)) (iapply realu_inv (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply realu_sub (iapply Re x)) (iapply Re y)) (iapply Re (iapply (iapply vectoru_sub x) y)))
(rule (iapply (iapply vectoru_add (iapply vectoru_neg x)) (iapply vectoru_neg y)) (iapply vectoru_neg (iapply (iapply vectoru_add x) y)))
(rule (iapply (iapply intu_mul (iapply intu_abs x)) (iapply intu_abs y)) (iapply intu_abs (iapply (iapply intu_mul x) y)))
(rule (iapply (iapply intu_add (iapply intu_neg x)) (iapply intu_neg y)) (iapply intu_neg (iapply (iapply intu_add x) y)))
(rule (iapply (iapply IMAGE map0) (iapply (iapply intu_ball x) r)) (iapply setu_ofu_cube (iapply (iapply intu_ball x) r)))
(rule (iapply (iapply IMAGE map1) (iapply (iapply intu_ball x) r)) (iapply setu_ofu_ccube (iapply (iapply intu_ball x) r)))
(rule (iapply (iapply vectoru_add (iapply Cx x)) (iapply Cx y)) (iapply Cx (iapply (iapply realu_add x) y)))
(rule (iapply (iapply complexu_mul (iapply cnj w)) (iapply cnj z)) (iapply cnj (iapply (iapply complexu_mul w) z)))
(rule (iapply (iapply a_ (iapply EVEN m)) (iapply EVEN n)) (iapply EVEN (iapply (iapply p_ m) n)))
(rule (iapply (iapply t_ m) (iapply (iapply EXP m) n)) (iapply (iapply EXP m) (iapply SUC n)))
(rule (iapply (iapply complexu_div (iapply Cx x)) (iapply Cx y)) (iapply Cx (iapply (iapply realu_div x) y)))
(rule (iapply (iapply s_b_ (iapply realu_bounded s0)) (iapply realu_bounded t)) (iapply realu_bounded (iapply (iapply UNION s0) t)))
(rule (iapply (iapply realu_max (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply realu_ofu_int (iapply (iapply intu_max x) y)))
(rule (iapply (iapply realu_div (iapply vectoru_norm w)) (iapply vectoru_norm z)) (iapply vectoru_norm (iapply (iapply complexu_div w) z)))
(rule (iapply (iapply realu_add (iapply Im x)) (iapply Im y)) (iapply Im (iapply (iapply vectoru_add x) y)))
(rule (iapply (iapply hrealu_add (iapply hrealu_ofu_num m)) (iapply hrealu_ofu_num n)) (iapply hrealu_ofu_num (iapply (iapply p_ m) n)))
(rule (iapply (iapply realu_sub (iapply realu_ofu_int x)) (iapply realu_ofu_int y)) (iapply realu_ofu_int (iapply (iapply intu_sub x) y)))
(rule (iapply (iapply realu_add (iapply Re x)) (iapply Re y)) (iapply Re (iapply (iapply vectoru_add x) y)))
(rule (iapply (iapply realu_max (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply (iapply MAX m) n)))
(rule (iapply (iapply a_ (iapply realu_inv x)) (iapply realu_inv y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_min (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply (iapply MIN m) n)))
(rule (iapply (iapply intu_max (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply intu_ofu_num (iapply (iapply MAX m) n)))
(rule (iapply (iapply vectoru_sub (iapply cnj w)) (iapply cnj z)) (iapply cnj (iapply (iapply vectoru_sub w) z)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply (iapply t_ m) n)))
(rule (iapply (iapply intu_min (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply intu_ofu_num (iapply (iapply MIN m) n)))
(rule (iapply (iapply realu_add (iapply realu_neg x)) (iapply realu_neg y)) (iapply realu_neg (iapply (iapply realu_add x) y)))
(rule (iapply (iapply intu_mul (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply intu_ofu_num (iapply (iapply t_ m) n)))
(rule (iapply (iapply intu_divides (iapply intu_ofu_num a)) (iapply intu_ofu_num b)) (iapply (iapply numu_divides a) b))
(rule (iapply (iapply realu_div (iapply exp x)) (iapply exp y)) (iapply exp (iapply (iapply realu_sub x) y)))
(rule (iapply (iapply s_b_ (iapply realu_negligible s0)) (iapply realu_negligible t)) (iapply realu_negligible (iapply (iapply UNION s0) t)))
(rule (iapply (iapply complexu_div (iapply cexp w)) (iapply cexp z)) (iapply cexp (iapply (iapply vectoru_sub w) z)))
(rule (iapply (iapply s_b_ (iapply packingu_trg s0)) (iapply s0 v)) (iapply (iapply centeru_pac s0) v))
(rule (iapply (iapply realu_div (iapply realu_sgn x)) (iapply realu_sgn y)) (iapply realu_sgn (iapply (iapply realu_div x) y)))
(rule (iapply (iapply intu_mul (iapply intu_sgn x)) (iapply intu_sgn y)) (iapply intu_sgn (iapply (iapply intu_mul x) y)))
(rule (iapply intu_ofu_real (iapply (iapply realu_pow (iapply realu_ofu_int x)) n)) (iapply (iapply intu_pow x) n))
(rule (iapply (iapply realu_sub (iapply drop x)) (iapply drop y)) (iapply drop (iapply (iapply vectoru_sub x) y)))
(rule (iapply (iapply vectoru_sub (iapply lift x)) (iapply lift y)) (iapply lift (iapply (iapply realu_sub x) y)))
(rule (iapply (iapply hrealu_add n) (iapply hrealu_ofu_num (iapply NUMERAL u_0))) n)
(rule (iapply (iapply a_ (iapply realu_neg x)) (iapply realu_neg y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_mul (iapply realu_neg x)) (iapply realu_neg y)) (iapply (iapply realu_mul x) y))
(rule (iapply (iapply intu_sub x) (iapply (iapply intu_add x) y)) (iapply intu_neg y))
(rule (iapply (iapply realu_sub (iapply realu_neg x)) (iapply realu_neg y)) (iapply (iapply realu_sub y) x))
(rule (iapply (iapply p_ (iapply (iapply t_ m) n)) n) (iapply (iapply t_ (iapply SUC m)) n))
(rule (iapply (iapply realu_le (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply g_ (iapply BIT1 n)) (iapply BIT1 m)) (iapply (iapply g_ n) m))
(rule (iapply (iapply g_ (iapply BIT0 n)) (iapply BIT1 m)) (iapply (iapply g_ n) m))
(rule (iapply (iapply g_ (iapply BIT1 n)) (iapply BIT0 m)) (iapply (iapply g_a_ n) m))
(rule (iapply (iapply g_ (iapply BIT0 n)) (iapply BIT0 m)) (iapply (iapply g_ n) m))
(rule (iapply (iapply g_ (iapply NUMERAL n)) (iapply NUMERAL m)) (iapply (iapply g_ n) m))
(rule (iapply (iapply g_a_ (iapply BIT1 n)) (iapply BIT1 m)) (iapply (iapply g_a_ n) m))
(rule (iapply (iapply g_a_ (iapply BIT0 n)) (iapply BIT1 m)) (iapply (iapply g_ n) m))
(rule (iapply (iapply g_a_ (iapply BIT1 n)) (iapply BIT0 m)) (iapply (iapply g_a_ n) m))
(rule (iapply (iapply g_a_ (iapply BIT0 n)) (iapply BIT0 m)) (iapply (iapply g_a_ n) m))
(rule (iapply (iapply g_a_ (iapply NUMERAL n)) (iapply NUMERAL m)) (iapply (iapply g_a_ n) m))
(rule (iapply (iapply l_ (iapply BIT1 m)) (iapply BIT1 n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply l_ (iapply BIT1 m)) (iapply BIT0 n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply l_ (iapply BIT0 m)) (iapply BIT1 n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply l_ (iapply BIT0 m)) (iapply BIT0 n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply l_ (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply l_a_ (iapply BIT1 m)) (iapply BIT1 n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply l_a_ (iapply BIT1 m)) (iapply BIT0 n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply l_a_ (iapply BIT0 m)) (iapply BIT1 n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply l_a_ (iapply BIT0 m)) (iapply BIT0 n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply l_a_ (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply a_ (iapply BIT1 m)) (iapply BIT1 n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply a_ (iapply BIT0 m)) (iapply BIT0 n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply a_ (iapply NUMERAL m)) (iapply NUMERAL n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply product (iapply (iapply o_o_ n) n)) f) (iapply f n))
(rule (iapply (iapply realu_sub x) (iapply (iapply realu_add x) y)) (iapply realu_neg y))
(rule (iapply Re (iapply (iapply complexu_div z) (iapply Cx x))) (iapply (iapply realu_div (iapply Re z)) x))
(rule (iapply (iapply a_ (iapply SUC m)) (iapply SUC n)) (iapply (iapply a_ m) n))
(rule (iapply PRE (iapply (iapply m_ (iapply SUC m)) n)) (iapply (iapply m_ m) n))
(rule (iapply (iapply hasu_measure (iapply (iapply IMAGE lift) s0)) m) (iapply (iapply hasu_realu_measure s0) m))
(rule (iapply (iapply intu_lt (iapply intu_neg x)) (iapply intu_neg y)) (iapply (iapply intu_lt y) x))
(rule (iapply (iapply realu_lt (iapply realu_neg x)) (iapply realu_neg y)) (iapply (iapply realu_lt y) x))
(rule (iapply (iapply a_ (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply realu_ge (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply (iapply g_a_ m) n))
(rule (iapply (iapply realu_gt (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply (iapply g_ m) n))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num m)) (iapply realu_ofu_num n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply realu_sub (iapply (iapply realu_sub x) y)) x) (iapply realu_neg y))
(rule (iapply (iapply a_a_g_ (iapply w_ t1)) (iapply w_ t2)) (iapply (iapply a_a_g_ t2) t1))
(rule (iapply (iapply realu_le (iapply exp x)) (iapply exp y)) (iapply (iapply realu_le x) y))
(rule (iapply (iapply l_ (iapply SUC m)) (iapply SUC n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply realu_lt (iapply exp x)) (iapply exp y)) (iapply (iapply realu_lt x) y))
(rule (iapply (iapply a_ (iapply INDu_SUC x1)) (iapply INDu_SUC x2)) (iapply (iapply a_ x1) x2))
(rule (iapply (iapply a_ (iapply exp x)) (iapply exp y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply intu_le (iapply intu_neg x)) (iapply intu_neg y)) (iapply (iapply intu_le y) x))
(rule (iapply (iapply trealu_eq (iapply trealu_ofu_num m)) (iapply trealu_ofu_num n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply realu_le (iapply atn x)) (iapply atn y)) (iapply (iapply realu_le x) y))
(rule (iapply (iapply trealu_le (iapply trealu_ofu_num m)) (iapply trealu_ofu_num n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply m_ (iapply SUC m)) (iapply SUC n)) (iapply (iapply m_ m) n))
(rule (iapply (iapply naddu_eq (iapply naddu_ofu_num m)) (iapply naddu_ofu_num n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply realu_lt (iapply atn x)) (iapply atn y)) (iapply (iapply realu_lt x) y))
(rule (iapply (iapply naddu_le (iapply naddu_ofu_num m)) (iapply naddu_ofu_num n)) (iapply (iapply l_a_ m) n))
(rule (iapply exp (iapply (iapply realu_mul (iapply realu_ofu_num n)) x)) (iapply (iapply realu_pow (iapply exp x)) n))
(rule (iapply (iapply a_ (iapply hrealu_ofu_num m)) (iapply hrealu_ofu_num n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply a_ (iapply lift x)) (iapply lift y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply hrealu_le (iapply hrealu_ofu_num m)) (iapply hrealu_ofu_num n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply a_ (iapply intu_neg x)) (iapply intu_neg y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply a_ (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply (iapply a_ m) n))
(rule (iapply (iapply intu_ge (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply (iapply g_a_ m) n))
(rule (iapply (iapply intu_gt (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply (iapply g_ m) n))
(rule (iapply (iapply intu_le (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply intu_lt (iapply intu_ofu_num m)) (iapply intu_ofu_num n)) (iapply (iapply l_ m) n))
(rule (iapply (iapply realu_le (iapply realu_neg x)) (iapply realu_neg y)) (iapply (iapply realu_le y) x))
(rule (iapply (iapply nsum (iapply (iapply o_o_ n) n)) f) (iapply f n))
(rule (iapply (iapply a_ (iapply atn x)) (iapply atn y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply a_ (iapply (iapply o_o_ m) n)) EMPTY) (iapply (iapply l_ n) m))
(rule (iapply Im (iapply (iapply complexu_div z) (iapply Cx x))) (iapply (iapply realu_div (iapply Im z)) x))
(rule (iapply (iapply a_ (iapply Cx x)) (iapply Cx y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply l_a_ (iapply SUC m)) (iapply SUC n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply intu_mul (iapply intu_neg x)) (iapply intu_neg y)) (iapply (iapply intu_mul x) y))
(rule (iapply (iapply intu_sub (iapply intu_neg x)) (iapply intu_neg y)) (iapply (iapply intu_sub y) x))
(rule (iapply (iapply sum (iapply (iapply o_o_ n) n)) f) (iapply f n))
(rule (iapply (iapply intu_sub (iapply (iapply intu_sub x) y)) x) (iapply intu_neg y))
(rule (iapply csqrt (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply casn (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply intu_abs (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply complexu_inv (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply ctan (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply lfun (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply realu_abs (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply csin (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) ii)
(rule (iapply (iapply voronoiu_list V) (iapply (iapply CONS u) NIL)) (iapply (iapply voronoiu_closed V) u))
(rule (iapply (iapply voronoiu_set V) (iapply (iapply INSERT u) EMPTY)) (iapply (iapply voronoiu_closed V) u))
(rule (iapply (iapply complexu_mul (iapply vectoru_neg x)) (iapply vectoru_neg y)) (iapply (iapply complexu_mul x) y))
(rule (iapply (iapply vectoru_sub (iapply vectoru_neg x)) (iapply vectoru_neg y)) (iapply (iapply vectoru_sub y) x))
(rule (iapply (iapply IN x) (iapply (iapply IMAGE drop) s0)) (iapply (iapply IN (iapply lift x)) s0))
(rule (iapply (iapply IN x) (iapply (iapply IMAGE lift) s0)) (iapply (iapply IN (iapply drop x)) s0))
(rule (iapply (iapply a_ (iapply cnj w)) (iapply cnj z)) (iapply (iapply a_ w) z))
(rule (iapply (iapply vectoru_sub x) (iapply (iapply vectoru_add x) y)) (iapply vectoru_neg y))
(rule (iapply (iapply vectoru_sub (iapply (iapply vectoru_sub x) y)) x) (iapply vectoru_neg y))
(rule (iapply (iapply a_ (iapply drop x)) (iapply drop y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply a_ (iapply vectoru_neg x)) (iapply vectoru_neg y)) (iapply (iapply a_ x) y))
(rule (iapply scale (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))) I)
(rule (iapply (iapply MOD n) (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL u_0))
(rule (iapply (iapply add6 rhazimu_xu_divu_sqrtdeltau_posbranch) (iapply (iapply add6 rhazim2u_xu_divu_sqrtdeltau_posbranch) rhazim3u_xu_divu_sqrtdeltau_posbranch)) tauu_residualu_x)
(rule (iapply intu_ofu_num (iapply dimindex UNIV)) (iapply affu_dim UNIV))
(rule (iapply (iapply cross x) (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply cross (iapply vec (iapply NUMERAL u_0))) x) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply tan (iapply (iapply realu_mul (iapply realu_ofu_num n)) pi)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL u_0))) x) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply binom (iapply (iapply c_ n) (iapply NUMERAL u_0))) (iapply NUMERAL (iapply BIT1 u_0)))
(rule (iapply (iapply realu_mul x) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL u_0))) x) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply hrealu_mul (iapply hrealu_ofu_num (iapply NUMERAL u_0))) m) (iapply hrealu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply sin (iapply (iapply realu_mul (iapply realu_ofu_num n)) pi)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply intu_mul (iapply intu_ofu_num (iapply NUMERAL u_0))) x) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply hrealu_mul m) (iapply hrealu_ofu_num (iapply NUMERAL u_0))) (iapply hrealu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ (iapply bnu_countNonFinals g)) (iapply NUMERAL u_0)) (iapply bnu_finalGraph g))
(rule (iapply (iapply intu_mul x) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply EXP (iapply NUMERAL (iapply BIT1 u_0))) n) (iapply NUMERAL (iapply BIT1 u_0)))
(rule (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply realu_mul sqrt2) sqrt2))
(rule (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply cos pi))
(rule (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply neutral complexu_mul))
(rule (iapply SUC (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))
(rule (iapply (iapply dot (iapply (iapply cross v1) v2)) v3) (iapply (iapply (iapply detu_vec3 v1) v2) v3))
(rule (iapply (iapply a_ (iapply destu_nadd (iapply mku_nadd r))) r) (iapply isu_nadd r))
(rule (iapply (iapply s_b_ p) (iapply (iapply s_b_ p) q)) (iapply (iapply s_b_ p) q))
(rule (iapply (iapply b_s_ p) (iapply (iapply b_s_ p) q)) (iapply (iapply b_s_ p) q))
(rule (iapply (iapply realu_sub x) (iapply (iapply realu_sub x) y)) y)
(rule (iapply (iapply realu_add y) (iapply (iapply realu_sub x) y)) x)
(rule (iapply (iapply realu_sub (iapply (iapply realu_add x) y)) x) y)
(rule (iapply (iapply realu_add (iapply (iapply realu_sub x) y)) y) x)
(rule (iapply Im (iapply complex (iapply (iapply c_ x) y))) y)
(rule (iapply (iapply (iapply omegau_listu_n V) ul) (iapply NUMERAL u_0)) (iapply HD ul))
(rule (iapply (iapply rotate2d (iapply realu_ofu_num (iapply NUMERAL u_0))) z) z)
(rule (iapply (iapply intu_add (iapply intu_ofu_num (iapply NUMERAL u_0))) x) x)
(rule (iapply (iapply intu_sub x) (iapply intu_ofu_num (iapply NUMERAL u_0))) x)
(rule (iapply (iapply complexu_pow x) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply (iapply intu_add x) (iapply intu_ofu_num (iapply NUMERAL u_0))) x)
(rule (iapply (iapply intu_mul (iapply intu_sgn x)) (iapply intu_abs x)) x)
(rule (iapply (iapply IMAGE (iapply (iapply o drop) lift)) s0) s0)
(rule (iapply (iapply IMAGE (iapply (iapply o lift) drop)) s0) s0)
(rule (iapply (iapply r_ (iapply vectoru_norm v)) (iapply normalize v)) v)
(rule (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply (iapply m_ (iapply (iapply p_ m) n)) n) m)
(rule (iapply (iapply m_ (iapply (iapply p_ m) n)) m) n)
(rule (iapply (iapply t_ (iapply NUMERAL (iapply BIT1 u_0))) n) n)
(rule (iapply (iapply DIV n) (iapply NUMERAL (iapply BIT1 u_0))) n)
(rule (iapply dist (iapply (iapply c_ (iapply NUMERAL u_0)) n)) n)
(rule (iapply (iapply EXP n) (iapply NUMERAL (iapply BIT1 u_0))) n)
(rule (iapply dist (iapply (iapply c_ n) (iapply NUMERAL u_0))) n)
(rule (iapply (iapply t_ m) (iapply NUMERAL (iapply BIT1 u_0))) m)
(rule (iapply (iapply intu_max x) (iapply (iapply intu_max x) y)) (iapply (iapply intu_max x) y))
(rule (iapply (iapply intu_min x) (iapply (iapply intu_min x) y)) (iapply (iapply intu_min x) y))
(rule (iapply acs (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply log (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply vectoru_norm (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply Arg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_min x) (iapply (iapply realu_min x) y)) (iapply (iapply realu_min x) y))
(rule (iapply (iapply realu_max x) (iapply (iapply realu_max x) y)) (iapply (iapply realu_max x) y))
(rule (iapply (iapply intu_add y) (iapply (iapply intu_sub x) y)) x)
(rule (iapply (iapply intu_add (iapply (iapply intu_sub x) y)) y) x)
(rule (iapply (iapply intu_sub (iapply (iapply intu_add x) y)) x) y)
(rule (iapply (iapply intu_sub x) (iapply (iapply intu_sub x) y)) y)
(rule (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL u_0))) x) (iapply realu_neg x))
(rule (iapply (iapply a_ (iapply realu_ofu_int (iapply intu_ofu_real r))) r) (iapply integer r))
(rule (iapply w_ (iapply dependent s0)) (iapply independent s0))
(rule (iapply (iapply s_b_ (iapply realu_bounded s0)) (iapply realu_closed s0)) (iapply realu_compact s0))
(rule (iapply (iapply complexu_div (iapply csin z)) (iapply ccos z)) (iapply ctan z))
(rule (iapply w_ (iapply FINITE s0)) (iapply INFINITE s0))
(rule (iapply (iapply p_ m) (iapply NUMERAL (iapply BIT1 u_0))) (iapply SUC m))
(rule (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply l_ (iapply NUMERAL u_0)) n))
(rule (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT1 u_0))) (iapply pow1 y))
(rule (iapply (iapply d_ z) (iapply NUMERAL (iapply BIT1 u_0))) (iapply Re z))
(rule (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0))) (iapply drop x))
(rule (iapply (iapply (iapply (iapply ivsu_azimu_cycle EMPTY) x) y) t) t)
(rule (iapply w_ (iapply (iapply (iapply obstructed x) y) s0)) (iapply (iapply (iapply unobstructed x) y) s0))
(rule (iapply CARD (iapply (iapply (iapply ISu_SY s0) p) q)) (iapply (iapply (iapply klu_sy s0) p) q))
(rule (iapply (iapply intu_divides n) (iapply (iapply intu_sub x) y)) (iapply (iapply (iapply intu_mod n) x) y))
(rule (iapply (iapply maxu_real (iapply (iapply maxu_real x) y)) z) (iapply (iapply (iapply maxu_real3 x) y) z))
(rule (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL u_0))) x) x)
(rule (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply (iapply realu_add x) (iapply realu_ofu_num (iapply NUMERAL u_0))) x)
(rule (iapply (iapply realu_sub x) (iapply realu_ofu_num (iapply NUMERAL u_0))) x)
(rule (iapply (iapply realu_mul (iapply realu_sgn x)) (iapply realu_abs x)) x)
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply tupleu_triu_sy s0))))) (iapply au_ts s0))
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply tupleu_stableu_sy s0))))) (iapply au_sy s0))
(rule (iapply (iapply r_ x) (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))) (iapply lift x))
(rule (iapply (iapply p_ p) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply bnu_maxGon p))
(rule (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply pow2 y))
(rule (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply pow3 y))
(rule (iapply complex (iapply (iapply c_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx a))
(rule (iapply realu_abs (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply vectoru_norm x))
(rule (iapply (iapply d_ z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply Im z))
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ sqn) deltau_x))) ldihu_xu_divu_sqrtdeltau_posbranch) ldihu_xu_n)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ gchi) proju_y4))) dih4u_x) gchi4u_x)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ gchi) proju_y5))) dih5u_x) gchi5u_x)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ gchi) proju_y6))) dih6u_x) gchi6u_x)
(rule (iapply iterate realu_mul) product)
(rule (iapply iterate realu_add) sum)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ rho) proju_y1))) dihu_xu_divu_sqrtdeltau_posbranch) rhazimu_xu_divu_sqrtdeltau_posbranch)
(rule (iapply iterate p_) nsum)
(rule (iapply u_mku_rec ZBOT) BOTTOM)
(rule (iapply iterate complexu_mul) cproduct)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ gchi) proju_y1))) dihu_x) gchi1u_x)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ gchi) proju_y2))) dih2u_x) gchi2u_x)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ gchi) proju_y3))) dih3u_x) gchi3u_x)
(rule (iapply bnu_concat NIL) NIL)
(rule (iapply REVERSE NIL) NIL)
(rule (iapply bnu_rotate1 NIL) NIL)
(rule (iapply (iapply APPEND (iapply LISTu_TO n)) (iapply (iapply CONS n) NIL)) (iapply LISTu_TO (iapply SUC n)))
(rule (iapply SUC (iapply (iapply p_ (iapply NUMERAL n)) (iapply NUMERAL n))) (iapply NUMERAL (iapply BIT1 n)))
(rule (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) sqrt2)
(rule (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) sqrt3)
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply frac x)) (iapply w_ (iapply integer x)))
(rule (iapply acs (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) pi)
(rule (iapply (iapply intu_le (iapply intu_neg x)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply intu_lt (iapply intu_neg x)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) x) (iapply vectoru_neg x))
(rule (iapply (iapply hrealu_mul (iapply hrealu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x) x)
(rule (iapply realu_sgn (iapply Im (iapply (iapply complexu_mul w) (iapply cnj z)))) (iapply realu_sgn (iapply Im (iapply (iapply complexu_div w) z))))
(rule (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) NIL))) (iapply complex (iapply (iapply c_ x) y)))
(rule (iapply (iapply (iapply negligibleu_funu_p f) S) (iapply vec (iapply NUMERAL u_0))) (iapply (iapply negligibleu_funu_0 f) S))
(rule (iapply inf (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY))) (iapply (iapply realu_min x) y))
(rule (iapply sup (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY))) (iapply (iapply realu_max x) y))
(rule (iapply (iapply prod0 (iapply (iapply c_ n) (iapply NUMERAL u_0))) f) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply intu_ofu_real (iapply (iapply realu_sub (iapply realu_ofu_int x)) (iapply realu_ofu_int y))) (iapply (iapply intu_sub x) y))
(rule (iapply realu_neg (iapply (iapply realu_min (iapply realu_neg x)) (iapply realu_neg y))) (iapply (iapply realu_max x) y))
(rule (iapply intu_neg (iapply (iapply intu_max (iapply intu_neg x)) (iapply intu_neg y))) (iapply (iapply intu_min x) y))
(rule (iapply intu_ofu_real (iapply (iapply realu_add (iapply realu_ofu_int x)) (iapply realu_ofu_int y))) (iapply (iapply intu_add x) y))
(rule (iapply intu_coprime (iapply (iapply c_ (iapply intu_ofu_num a)) (iapply intu_ofu_num b))) (iapply numu_coprime (iapply (iapply c_ a) b)))
(rule (iapply w_ (iapply (iapply a_ (iapply ODD m)) (iapply ODD n))) (iapply ODD (iapply (iapply p_ m) n)))
(rule (iapply realu_neg (iapply (iapply realu_max (iapply realu_neg x)) (iapply realu_neg y))) (iapply (iapply realu_min x) y))
(rule (iapply intu_ofu_real (iapply (iapply realu_max (iapply realu_ofu_int x)) (iapply realu_ofu_int y))) (iapply (iapply intu_max x) y))
(rule (iapply intu_gcd (iapply (iapply c_ (iapply intu_ofu_num a)) (iapply intu_ofu_num b))) (iapply intu_ofu_num (iapply numu_gcd (iapply (iapply c_ a) b))))
(rule (iapply intu_ofu_real (iapply (iapply realu_min (iapply realu_ofu_int x)) (iapply realu_ofu_int y))) (iapply (iapply intu_min x) y))
(rule (iapply intu_ofu_real (iapply (iapply realu_mul (iapply realu_ofu_int x)) (iapply realu_ofu_int y))) (iapply (iapply intu_mul x) y))
(rule (iapply intu_neg (iapply (iapply intu_min (iapply intu_neg x)) (iapply intu_neg y))) (iapply (iapply intu_max x) y))
(rule (iapply (iapply (iapply m_m_m_g_ f) (iapply f x)) (iapply atreal x)) (iapply (iapply realu_continuous f) (iapply atreal x)))
(rule (iapply distance (iapply (iapply c_ (iapply lift x)) (iapply lift y))) (iapply realu_abs (iapply (iapply realu_sub x) y)))
(rule (iapply (iapply s_b_ (iapply packing s0)) (iapply (iapply IN v) s0)) (iapply (iapply centeredu_pac s0) v))
(rule (iapply (iapply a_ (iapply openu_realu_interval (iapply (iapply c_ a) b))) EMPTY) (iapply realu_negligible (iapply openu_realu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le m) n)) n) m) (iapply (iapply realu_max m) n))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le m) n)) m) n) (iapply (iapply realu_min m) n))
(rule (iapply (iapply a_ (iapply (iapply m_ m) n)) (iapply NUMERAL u_0)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply (iapply COND (iapply (iapply intu_le x) y)) y) x) (iapply (iapply intu_max x) y))
(rule (iapply (iapply (iapply COND (iapply (iapply intu_le x) y)) x) y) (iapply (iapply intu_min x) y))
(rule (iapply (iapply IN m) (iapply (iapply o_o_ (iapply NUMERAL u_0)) n)) (iapply (iapply l_a_ m) n))
(rule (iapply cexp (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num n))) x)) (iapply (iapply complexu_pow (iapply cexp x)) n))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt y) x)) x) y) (iapply (iapply maxu_real x) y))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) n)) n) m) (iapply (iapply MAX m) n))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt x) y)) x) y) (iapply (iapply minu_real x) y))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) n)) m) n) (iapply (iapply MIN m) n))
(rule (iapply (iapply a_ (iapply openu_realu_interval (iapply (iapply c_ a) b))) EMPTY) (iapply (iapply realu_le b) a))
(rule (iapply cacs (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply clog (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply realu_sums f) (iapply (iapply realu_infsum s0) f)) s0) (iapply (iapply realu_summable s0) f))
(rule (iapply (iapply (iapply hasu_realu_integral f) (iapply (iapply realu_integral s0) f)) s0) (iapply (iapply realu_integrableu_on f) s0))
(rule (iapply (iapply (iapply higheru_complexu_derivative (iapply NUMERAL (iapply BIT1 u_0))) f) z) (iapply (iapply complexu_derivative f) z))
(rule (iapply (iapply IN (iapply lift x)) (iapply (iapply IMAGE lift) s0)) (iapply (iapply IN x) s0))
(rule (iapply binom (iapply (iapply c_ (iapply NUMERAL u_0)) (iapply SUC k))) (iapply NUMERAL u_0))
(rule (iapply (iapply isu_inju_list p) (iapply NUMERAL u_0)) T)
(rule (iapply evenperm I) T)
(rule (iapply (iapply a_ (iapply intu_ofu_num n)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL u_0)))
(rule (iapply csqrt (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply complexu_inv (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) x) x)
(rule (iapply GSPEC p) p)
(rule (iapply (iapply intu_mul (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x) x)
(rule (iapply (iapply intu_mul x) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)
(rule (iapply (iapply vectoru_add x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) x)
(rule (iapply complex (iapply (iapply c_ (iapply Re z)) (iapply Im z))) z)
(rule (iapply (iapply vectoru_sub x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) x)
(rule (iapply dist (iapply (iapply c_ m) (iapply (iapply p_ m) n))) n)
(rule (iapply dist (iapply (iapply c_ (iapply (iapply p_ m) n)) m)) n)
(rule (iapply CARD (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) n)) n)
(rule (iapply binom (iapply (iapply c_ n) (iapply NUMERAL (iapply BIT1 u_0)))) n)
(rule (iapply (iapply m_ (iapply SUC n)) (iapply NUMERAL (iapply BIT1 u_0))) n)
(rule (iapply bnu_hideDups NIL) NIL)
(rule (iapply BUTLAST NIL) NIL)
(rule (iapply I x) x)
(rule (iapply UNIONS EMPTY) EMPTY)
(rule (iapply closure EMPTY) EMPTY)
(rule (iapply span UNIV) UNIV)
(rule (iapply setu_ofu_list NIL) EMPTY)
(rule (iapply INTERS EMPTY) UNIV)
(rule (iapply interior EMPTY) EMPTY)
(rule (iapply topspace euclidean) UNIV)
(rule (iapply frontier EMPTY) EMPTY)
(rule (iapply conv EMPTY) EMPTY)
(rule (iapply closure UNIV) UNIV)
(rule (iapply relativeu_interior EMPTY) EMPTY)
(rule (iapply inside EMPTY) EMPTY)
(rule (iapply frontier UNIV) EMPTY)
(rule (iapply outside EMPTY) UNIV)
(rule (iapply interior UNIV) UNIV)
(rule (iapply marku_term u) u)
(rule (iapply topology0 open) euclidean)
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply atn x)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply atn x)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x) (iapply realu_inv x))
(rule (iapply LETu_END t) t)
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_inv x)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_le (iapply realu_neg x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_lt (iapply realu_neg x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply floor x)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply Re (iapply cexp (iapply (iapply complexu_mul ii) (iapply Cx x)))) (iapply cos x))
(rule (iapply (iapply a_ (iapply frac x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply integer x))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_inv x)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply root (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) x) (iapply sqrt x))
(rule (iapply (iapply ellipsoid (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))) r) (iapply (iapply normball (iapply vec (iapply NUMERAL u_0))) r))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im z)) (iapply (iapply realu_le (iapply Arg z)) pi))
(rule (iapply (iapply a_ (iapply intu_sgn x)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply Im z)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply real0 z))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_neg x)) (iapply (iapply realu_le x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_neg x)) (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_ofu_num n)) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply realu_inv x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply rpow (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) z) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply cpow (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply drop x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply realu_abs x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply intu_neg x)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply realu_neg x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply rotate2d t) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply complexu_mul x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_mul (iapply exp (iapply realu_neg x))) (iapply exp x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply intu_pow (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) n) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply vectoru_norm (iapply cexp (iapply (iapply complexu_mul ii) (iapply Cx t)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_neg x)) (iapply (iapply intu_le x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_neg x)) (iapply (iapply intu_lt x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_mul (iapply exp x)) (iapply exp (iapply realu_neg x))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply c_ (iapply hrealu_ofu_num n)) (iapply hrealu_ofu_num (iapply NUMERAL u_0))) (iapply trealu_ofu_num n))
(rule (iapply (iapply a_ (iapply intu_abs x)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply realu_sgn x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_pow (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) n) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply (iapply (iapply (iapply bnu_subdivFace0 g) f) u) n) NIL) (iapply (iapply bnu_makeFaceFinal f) g))
(rule (iapply (iapply sums (iapply (iapply o lift) f)) (iapply lift l)) (iapply (iapply realu_sums f) l))
(rule (iapply (iapply (iapply (iapply (iapply poweru_maps nu_fan) x) V) E) n) (iapply (iapply (iapply (iapply poweru_nu_fan x) V) E) n))
(rule (iapply inverse (iapply (iapply (iapply (iapply extensionu_sigmau_fan x) V) E) v)) (iapply (iapply (iapply (iapply inverseu_sigmau_fan x) V) E) v))
(rule (iapply quadraticu_rootu_plus (iapply (iapply c_ a) (iapply (iapply c_ b) c))) (iapply (iapply (iapply quadraticu_rootu_plusu_curry a) b) c))
(rule (iapply (iapply realu_lt (iapply (iapply realu_add x) (iapply realu_neg y))) z) (iapply (iapply realu_lt x) (iapply (iapply realu_add z) y)))
(rule (iapply (iapply intu_lt (iapply (iapply intu_add x) (iapply intu_neg y))) z) (iapply (iapply intu_lt x) (iapply (iapply intu_add z) y)))
(rule (iapply (iapply (iapply intervalu_eps (iapply realu_neg x)) (iapply realu_neg f)) ex) (iapply (iapply (iapply intervalu_eps x) f) ex))
(rule (iapply (iapply realu_le (iapply realu_abs (iapply (iapply realu_sub x) f))) eps) (iapply (iapply (iapply intervalu_eps x) f) eps))
(rule (iapply (iapply intu_lt y) (iapply (iapply intu_add x) (iapply intu_neg z))) (iapply (iapply intu_lt (iapply (iapply intu_add y) z)) x))
(rule (iapply (iapply realu_lt y) (iapply (iapply realu_add x) (iapply realu_neg z))) (iapply (iapply realu_lt (iapply (iapply realu_add y) z)) x))
(rule (iapply real3u_ofu_triple (iapply (iapply c_ a) (iapply (iapply c_ b) c))) (iapply (iapply (iapply mku_vec3 a) b) c))
(rule (iapply (iapply realu_div x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x) x)
(rule (iapply (iapply d_ (iapply lift x)) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply (iapply realu_mul x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply tupleu_stableu_sy s0)))))) (iapply bu_sy s0))
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply tupleu_triu_sy s0)))))) (iapply bu_ts s0))
(rule (iapply w_ (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply vectoru_norm z)))
(rule (iapply ball (iapply (iapply c_ x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply mapu_tou_ball x))
(rule (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))) (iapply pow4 y))
(rule (iapply (iapply complexu_pow (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) n) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply cpow (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply w_ (iapply (iapply a_ (iapply Arg z)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Arg z)))
(rule (iapply (iapply a_ (iapply complexu_inv x)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul x) x)) (iapply w_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply intu_pow (iapply intu_abs x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply cnj z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_pow (iapply realu_abs x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply vectoru_neg x)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply realu_inv x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply csqrt z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply complex (iapply (iapply c_ (iapply Re z)) (iapply realu_neg (iapply Im z)))) (iapply cnj z))
(rule (iapply (iapply permutes p) (iapply (iapply o_o_ (iapply NUMERAL u_0)) (iapply NUMERAL u_0))) (iapply (iapply a_ p) I))
(rule (iapply (iapply realu_mul (iapply exp (iapply Re z))) (iapply cos (iapply Im z))) (iapply Re (iapply cexp z)))
(rule (iapply (iapply vectoru_add (iapply ccos z)) (iapply (iapply complexu_mul ii) (iapply csin z))) (iapply cexp (iapply (iapply complexu_mul ii) z)))
(rule (iapply (iapply realu_mul (iapply exp (iapply Re z))) (iapply sin (iapply Im z))) (iapply Im (iapply cexp z)))
(rule (iapply (iapply s_b_ (iapply (iapply a_a_g_ a) b)) (iapply (iapply a_a_g_ b) a)) (iapply (iapply a_ a) b))
(rule (iapply (iapply realu_pow (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) n) (iapply cos (iapply (iapply realu_mul (iapply realu_ofu_num n)) pi)))
(rule (iapply (iapply realu_pow (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) n) (iapply twopow (iapply intu_ofu_num n)))
(rule (iapply (iapply EX P) NIL) F)
(rule (iapply (iapply MEM x) NIL) F)
(rule (iapply openu_interval (iapply (iapply c_ (iapply vectoru_neg (iapply lift e))) (iapply lift e))) (iapply ball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) e)))
(rule (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply acs (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply asn (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply hrealu_add (iapply mku_hreal (iapply naddu_eq x))) (iapply mku_hreal (iapply naddu_eq y))) (iapply mku_hreal (iapply naddu_eq (iapply (iapply naddu_add x) y))))
(rule (iapply (iapply hrealu_mul (iapply mku_hreal (iapply naddu_eq x))) (iapply mku_hreal (iapply naddu_eq y))) (iapply mku_hreal (iapply naddu_eq (iapply (iapply naddu_mul x) y))))
(rule (iapply (iapply hrealu_le (iapply mku_hreal (iapply naddu_eq x))) (iapply mku_hreal (iapply naddu_eq y))) (iapply (iapply naddu_le x) y))
(rule (iapply (iapply intu_mul (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) x) (iapply intu_neg x))
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_add x) x)) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_add (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply SUC n)))
(rule (iapply (iapply intu_add (iapply intu_ofu_num n)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply intu_ofu_num (iapply SUC n)))
(rule (iapply (iapply t_ (iapply (iapply EXP u_0) n)) (iapply (iapply EXP u_0) n)) (iapply (iapply EXP u_0) (iapply BIT0 n)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) sqrt2) sqrt8)
(rule (iapply (iapply exposedu_faceu_of s0) s0) (iapply convex s0))
(rule (iapply (iapply faceu_of s0) s0) (iapply convex s0))
(rule (iapply (iapply hasu_measure s0) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply negligible s0))
(rule (iapply (iapply closedu_in euclidean) s0) (iapply closed s0))
(rule (iapply (iapply openu_in euclidean) s0) (iapply open s0))
(rule (iapply numu_ofu_int (iapply intu_gcd (iapply (iapply c_ (iapply intu_ofu_num a)) (iapply intu_ofu_num b)))) (iapply numu_gcd (iapply (iapply c_ a) b)))
(rule (iapply (iapply realu_max (iapply (iapply realu_sub b) a)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_measure (iapply openu_realu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply a_ (iapply (iapply float a) b)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ a) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply intu_le (iapply (iapply intu_add x) y)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_le x) (iapply intu_neg y)))
(rule (iapply (iapply realu_lt (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt x) (iapply realu_neg y)))
(rule (iapply (iapply b_s_ (iapply ODD m)) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply ODD (iapply (iapply EXP m) n)))
(rule (iapply (iapply a_ (iapply (iapply vectoru_sub x) y)) (iapply vec (iapply NUMERAL u_0))) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_le (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_le x) (iapply realu_neg y)))
(rule (iapply w_ (iapply (iapply a_ (iapply (iapply bnu_except g) v)) (iapply NUMERAL u_0))) (iapply (iapply bnu_exceptionalVertex g) v))
(rule (iapply (iapply realu_mul (iapply twopow (iapply intu_ofu_num m))) (iapply twopow (iapply intu_ofu_num n))) (iapply twopow (iapply (iapply intu_add (iapply intu_ofu_num m)) (iapply intu_ofu_num n))))
(rule (iapply (iapply vectoru_add (iapply Cx x)) (iapply (iapply complexu_mul ii) (iapply Cx y))) (iapply complex (iapply (iapply c_ x) y)))
(rule (iapply (iapply intu_pow (iapply intu_neg (iapply intu_ofu_num x))) (iapply NUMERAL (iapply BIT0 n))) (iapply (iapply intu_pow (iapply intu_ofu_num x)) (iapply NUMERAL (iapply BIT0 n))))
(rule (iapply (iapply a_ (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ y) (iapply realu_neg x)))
(rule (iapply (iapply b_s_ (iapply (iapply intu_lt x) y)) (iapply (iapply a_ x) y)) (iapply (iapply intu_le x) y))
(rule (iapply (iapply bnu_minimal (iapply bnu_height g)) (iapply bnu_verticesu_face f)) (iapply (iapply bnu_minimalVertex g) f))
(rule (iapply (iapply b_s_ (iapply (iapply a_ m) n)) (iapply (iapply l_ m) n)) (iapply (iapply l_ m) (iapply SUC n)))
(rule (iapply (iapply (iapply hasu_complexu_derivative f) (iapply (iapply complexu_derivative f) x)) (iapply at x)) (iapply (iapply complexu_differentiable f) (iapply at x)))
(rule (iapply (iapply b_s_ (iapply (iapply l_ m) n)) (iapply (iapply a_ m) n)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt x) y)) (iapply (iapply a_ x) y)) (iapply (iapply realu_le x) y))
(rule (iapply (iapply b_s_ (iapply (iapply polaru_lt a) b)) (iapply (iapply a_ a) b)) (iapply (iapply polaru_le a) b))
(rule (iapply (iapply s_b_ (iapply realu_measurable s0)) (iapply (iapply a_ (iapply realu_measure s0)) m)) (iapply (iapply hasu_realu_measure s0) m))
(rule (iapply (iapply (iapply hasu_realu_derivative f) (iapply (iapply realu_derivative f) x)) (iapply atreal x)) (iapply (iapply realu_differentiable f) (iapply atreal x)))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt x) y)) (iapply (iapply realu_lt y) x)) (iapply w_ (iapply (iapply a_ x) y)))
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_add x) y)) (iapply (iapply intu_le (iapply intu_neg x)) y))
(rule (iapply (iapply b_s_ (iapply (iapply intu_lt x) y)) (iapply (iapply intu_lt y) x)) (iapply w_ (iapply (iapply a_ x) y)))
(rule (iapply (iapply a_ (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply realu_neg y)))
(rule (iapply (iapply a_ (iapply (iapply intu_add x) y)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ y) (iapply intu_neg x)))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_add x) y)) (iapply (iapply realu_lt (iapply realu_neg x)) y))
(rule (iapply w_ (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY)) (iapply (iapply realu_lt (iapply drop a)) (iapply drop b)))
(rule (iapply (iapply realu_lt (iapply (iapply dot x) x)) (iapply (iapply dot y) y)) (iapply (iapply realu_lt (iapply vectoru_norm x)) (iapply vectoru_norm y)))
(rule (iapply (iapply s_b_ (iapply (iapply bnu_separated2 g) V)) (iapply (iapply bnu_separated3 g) V)) (iapply (iapply bnu_separated g) V))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_add x) y)) (iapply (iapply realu_le (iapply realu_neg x)) y))
(rule (iapply FINITE (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply realu_le (iapply drop b)) (iapply drop a)))
(rule (iapply (iapply convexu_on (iapply (iapply o f) drop)) (iapply (iapply IMAGE lift) s0)) (iapply (iapply realu_convexu_on f) s0))
(rule (iapply (iapply a_ (iapply (iapply intu_add x) y)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply intu_neg y)))
(rule (iapply realu_negligible (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply a_ (iapply openu_realu_interval (iapply (iapply c_ a) b))) EMPTY))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply float a) b)) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) a))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_sub x) y)) (iapply (iapply realu_le y) x))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_sub x) y)) (iapply (iapply realu_lt y) x))
(rule (iapply (iapply a_ (iapply (iapply intu_sub x) y)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) y))
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_sub x) y)) (iapply (iapply intu_le y) x))
(rule (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_sub x) y)) (iapply (iapply intu_lt y) x))
(rule (iapply (iapply s_b_ (iapply (iapply hrealu_le x) y)) (iapply (iapply hrealu_le y) x)) (iapply (iapply a_ x) y))
(rule (iapply (iapply s_b_ (iapply (iapply naddu_le x) y)) (iapply (iapply naddu_le y) x)) (iapply (iapply naddu_eq x) y))
(rule (iapply (iapply d_ (iapply vec k)) i0) (iapply realu_ofu_num k))
(rule (iapply (iapply a_ (iapply (iapply realu_sub x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) y))
(rule (iapply w_ (iapply (iapply a_ (iapply openu_realu_interval (iapply (iapply c_ a) b))) EMPTY)) (iapply (iapply realu_lt a) b))
(rule (iapply (iapply INTER (iapply from k)) (iapply (iapply o_o_ (iapply NUMERAL u_0)) n)) (iapply (iapply o_o_ k) n))
(rule (iapply tan (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_num n)) pi))) (iapply tan x))
(rule (iapply (iapply a_ (iapply binom (iapply (iapply c_ n) k))) (iapply NUMERAL u_0)) (iapply (iapply l_ n) k))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le x) y)) (iapply (iapply realu_le y) x)) (iapply (iapply a_ x) y))
(rule (iapply (iapply s_b_ (iapply (iapply intu_le x) y)) (iapply (iapply intu_le y) x)) (iapply (iapply a_ x) y))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_ m) n)) (iapply (iapply l_a_ n) m)) (iapply (iapply a_ m) n))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply float a) b)) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) a))
(rule (iapply (iapply m_ (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0)))) m) (iapply CARD (iapply (iapply o_o_ m) n)))
(rule (iapply (iapply IN x) P) (iapply P x))
(rule (iapply (iapply s_b_ (iapply (iapply trealu_le x) y)) (iapply (iapply trealu_le y) x)) (iapply (iapply trealu_eq x) y))
(rule (iapply (iapply complexu_mul (iapply cexp (iapply (iapply complexu_mul ii) (iapply Cx t)))) z) (iapply (iapply rotate2d t) z))
(rule (iapply (iapply vectoru_sub a) (iapply (iapply complexu_mul ii) (iapply (iapply complexu_mul ii) u))) (iapply (iapply vectoru_add a) u))
(rule (iapply (iapply nsum EMPTY) f) (iapply NUMERAL u_0))
(rule (iapply (iapply ALL P) NIL) T)
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_neg (iapply intu_ofu_num n))) (iapply (iapply a_ n) (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ (iapply intu_neg (iapply intu_ofu_num n))) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ x) x) T)
(rule (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_neg (iapply intu_ofu_num n))) F)
(rule (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply poweru_maps f) x) V) E) (iapply NUMERAL u_0)) (iapply (iapply (iapply iu_fan x) V) E))
(rule (iapply (iapply o halfatn) (iapply (iapply o halfatn) (iapply (iapply o halfatn) halfatn))) halfatn4)
(rule (iapply finiteu_index (iapply destu_finiteu_image a)) a)
(rule (iapply (iapply leftu_actionu_list I) ul) ul)
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) x) x)
(rule (iapply (iapply complexu_pow (iapply csqrt z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) z)
(rule (iapply (iapply complexu_mul x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) x)
(rule (iapply (iapply complexu_div z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) z)
(rule (iapply (iapply b_s_ (iapply (iapply l_ i0) k)) (iapply (iapply a_ i0) k)) (iapply (iapply l_ i0) (iapply SUC k)))
(rule (iapply vectoru_norm (iapply vec (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply infnorm (iapply vec (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply clog (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul ii) (iapply Cx pi)))
(rule (iapply cacs (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply Cx pi))
(rule (iapply sqrt (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_abs x))
(rule (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) x) (iapply realu_neg x))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_add x) x)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_lt (iapply Im (iapply complexu_inv z))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im z)))
(rule (iapply (iapply realu_le (iapply Im (iapply complexu_inv z))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im z)))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im (iapply complexu_inv z))) (iapply (iapply realu_le (iapply Im z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply Im (iapply complexu_inv z))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply Im z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply Arg (iapply complexu_inv z))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply Arg z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply vectoru_norm (iapply complex (iapply (iapply c_ (iapply cos t)) (iapply sin t)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im (iapply complexu_inv z))) (iapply (iapply realu_lt (iapply Im z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply realu_sgn x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_gt x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply exp x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply scalar6 (iapply (iapply sub6 (iapply (iapply scalar6 unit6) h0)) proju_x1)) rh0) lfunu_y1)
(rule (iapply (iapply realu_add (iapply mku_real (iapply trealu_eq x1))) (iapply mku_real (iapply trealu_eq y1))) (iapply mku_real (iapply trealu_eq (iapply (iapply trealu_add x1) y1))))
(rule (iapply (iapply realu_mul (iapply mku_real (iapply trealu_eq x1))) (iapply mku_real (iapply trealu_eq y1))) (iapply mku_real (iapply trealu_eq (iapply (iapply trealu_mul x1) y1))))
(rule (iapply (iapply realu_le (iapply mku_real (iapply trealu_eq x1))) (iapply mku_real (iapply trealu_eq y1))) (iapply (iapply trealu_le x1) y1))
(rule (iapply CARD (iapply (iapply (iapply (iapply (iapply setu_ofu_orbitsu_pointsu_fan x) V) E) v) u)) (iapply (iapply (iapply (iapply (iapply numberu_ofu_orbitsu_pointsu_fan x) V) E) v) u))
(rule (iapply (iapply (iapply (iapply (iapply (iapply volu_y r) r) r) y1) y2) y3) (iapply (iapply (iapply (iapply vol3r y1) y2) y3) r))
(rule (iapply (iapply (iapply (iapply (iapply (iapply lfunu_y1 y1) y2) y3) y4) y5) y6) (iapply lfun y1))
(rule (iapply (iapply inverse (iapply (iapply (iapply (iapply sigmau_fan x) V) E) v)) w) (iapply (iapply (iapply (iapply (iapply inverseu_sigmau_fanu_alt x) V) E) v) w))
(rule (iapply (iapply complexu_mul (iapply (iapply complexu_pow x) n)) (iapply (iapply complexu_pow y) n)) (iapply (iapply complexu_pow (iapply (iapply complexu_mul x) y)) n))
(rule (iapply (iapply vectoru_add (iapply (iapply complexu_mul x) y)) (iapply (iapply complexu_mul x) z)) (iapply (iapply complexu_mul x) (iapply (iapply vectoru_add y) z)))
(rule (iapply (iapply intu_mul (iapply (iapply intu_pow x) m)) (iapply (iapply intu_pow x) n)) (iapply (iapply intu_pow x) (iapply (iapply p_ m) n)))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul x) y)) (iapply (iapply realu_mul x) z)) (iapply (iapply realu_mul x) (iapply (iapply realu_add y) z)))
(rule (iapply (iapply hrealu_add (iapply (iapply hrealu_mul m) p)) (iapply (iapply hrealu_mul n) p)) (iapply (iapply hrealu_mul (iapply (iapply hrealu_add m) n)) p))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le x) z)) (iapply (iapply realu_le y) z)) (iapply (iapply realu_le (iapply (iapply realu_max x) y)) z))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt x) z)) (iapply (iapply realu_lt y) z)) (iapply (iapply realu_lt (iapply (iapply realu_max x) y)) z))
(rule (iapply UNIONS (iapply topologicalu_componentu_yfan (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply yfan (iapply (iapply c_ x) (iapply (iapply c_ V) E))))
(rule (iapply (iapply realu_mul (iapply (iapply rpow x) z)) (iapply (iapply rpow y) z)) (iapply (iapply rpow (iapply (iapply realu_mul x) y)) z))
(rule (iapply (iapply complexu_div (iapply (iapply cpow w) z1)) (iapply (iapply cpow w) z2)) (iapply (iapply cpow w) (iapply (iapply vectoru_sub z1) z2)))
(rule (iapply (iapply s_b_ (iapply (iapply intu_le x) z)) (iapply (iapply intu_le y) z)) (iapply (iapply intu_le (iapply (iapply intu_max x) y)) z))
(rule (iapply (iapply s_b_ (iapply (iapply intu_lt x) z)) (iapply (iapply intu_lt y) z)) (iapply (iapply intu_lt (iapply (iapply intu_max x) y)) z))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt z) x)) (iapply (iapply realu_lt z) y)) (iapply (iapply realu_lt z) (iapply (iapply realu_max x) y)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul x) y)) (iapply (iapply realu_mul x) z)) (iapply (iapply realu_mul x) (iapply (iapply realu_sub y) z)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt z) x)) (iapply (iapply realu_lt z) y)) (iapply (iapply realu_lt z) (iapply (iapply realu_min x) y)))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ p) r)) (iapply (iapply s_b_ q) r)) (iapply (iapply s_b_ (iapply (iapply b_s_ p) q)) r))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul x) z)) (iapply (iapply realu_mul y) z)) (iapply (iapply realu_mul (iapply (iapply realu_add x) y)) z))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le x) a)) (iapply (iapply realu_le y) a)) (iapply (iapply realu_le (iapply (iapply maxu_real x) y)) a))
(rule (iapply (iapply b_s_ (iapply (iapply intu_lt z) x)) (iapply (iapply intu_lt z) y)) (iapply (iapply intu_lt z) (iapply (iapply intu_max x) y)))
(rule (iapply (iapply s_b_ (iapply (iapply a_a_g_ a) c)) (iapply (iapply a_a_g_ b) c)) (iapply (iapply a_a_g_ (iapply (iapply b_s_ a) b)) c))
(rule (iapply (iapply s_b_ (iapply (iapply intu_lt z) x)) (iapply (iapply intu_lt z) y)) (iapply (iapply intu_lt z) (iapply (iapply intu_min x) y)))
(rule (iapply (iapply t_ (iapply (iapply EXP m) n)) (iapply (iapply EXP m) p)) (iapply (iapply EXP m) (iapply (iapply p_ n) p)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_pow x) m)) (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow x) (iapply (iapply p_ m) n)))
(rule (iapply (iapply intu_add (iapply (iapply intu_mul x) y)) (iapply (iapply intu_mul x) z)) (iapply (iapply intu_mul x) (iapply (iapply intu_add y) z)))
(rule (iapply (iapply s_b_ (iapply (iapply analyticu_on f) s0)) (iapply (iapply analyticu_on f) t)) (iapply (iapply analyticu_on f) (iapply (iapply UNION s0) t)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul x) z)) (iapply (iapply realu_mul y) z)) (iapply (iapply realu_mul (iapply (iapply realu_sub x) y)) z))
(rule (iapply (iapply complexu_mul (iapply (iapply cpow w) z1)) (iapply (iapply cpow w) z2)) (iapply (iapply cpow w) (iapply (iapply vectoru_add z1) z2)))
(rule (iapply (iapply b_s_ (iapply (iapply realu_le x) z)) (iapply (iapply realu_le y) z)) (iapply (iapply realu_le (iapply (iapply realu_min x) y)) z))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt x) z)) (iapply (iapply realu_lt y) z)) (iapply (iapply realu_lt (iapply (iapply realu_min x) y)) z))
(rule (iapply (iapply realu_div (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow y) n)) (iapply (iapply realu_pow (iapply (iapply realu_div x) y)) n))
(rule (iapply (iapply intu_mul (iapply (iapply intu_pow x) n)) (iapply (iapply intu_pow y) n)) (iapply (iapply intu_pow (iapply (iapply intu_mul x) y)) n))
(rule (iapply (iapply complexu_mul (iapply (iapply complexu_pow x) m)) (iapply (iapply complexu_pow x) n)) (iapply (iapply complexu_pow x) (iapply (iapply p_ m) n)))
(rule (iapply (iapply intu_sub (iapply (iapply intu_mul x) y)) (iapply (iapply intu_mul x) z)) (iapply (iapply intu_mul x) (iapply (iapply intu_sub y) z)))
(rule (iapply (iapply b_s_ (iapply (iapply intu_le x) z)) (iapply (iapply intu_le y) z)) (iapply (iapply intu_le (iapply (iapply intu_min x) y)) z))
(rule (iapply (iapply b_s_ (iapply (iapply intu_lt x) z)) (iapply (iapply intu_lt y) z)) (iapply (iapply intu_lt (iapply (iapply intu_min x) y)) z))
(rule (iapply (iapply intu_add (iapply (iapply intu_mul x) z)) (iapply (iapply intu_mul y) z)) (iapply (iapply intu_mul (iapply (iapply intu_add x) y)) z))
(rule (iapply (iapply m_ (iapply (iapply t_ m) n)) (iapply (iapply t_ m) p)) (iapply (iapply t_ m) (iapply (iapply m_ n) p)))
(rule (iapply (iapply vectoru_add (iapply (iapply cross x) z)) (iapply (iapply cross y) z)) (iapply (iapply cross (iapply (iapply vectoru_add x) y)) z))
(rule (iapply (iapply complexu_div (iapply (iapply complexu_pow x) n)) (iapply (iapply complexu_pow y) n)) (iapply (iapply complexu_pow (iapply (iapply complexu_div x) y)) n))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_ m) p)) (iapply (iapply l_a_ p) n)) (iapply (iapply IN p) (iapply (iapply o_o_ m) n)))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ p) q)) (iapply (iapply s_b_ p) r)) (iapply (iapply s_b_ p) (iapply (iapply b_s_ q) r)))
(rule (iapply (iapply vectoru_sub (iapply (iapply complexu_mul x) y)) (iapply (iapply complexu_mul x) z)) (iapply (iapply complexu_mul x) (iapply (iapply vectoru_sub y) z)))
(rule (iapply (iapply t_ (iapply (iapply EXP m) p)) (iapply (iapply EXP n) p)) (iapply (iapply EXP (iapply (iapply t_ m) n)) p))
(rule (iapply (iapply intu_sub (iapply (iapply intu_mul x) z)) (iapply (iapply intu_mul y) z)) (iapply (iapply intu_mul (iapply (iapply intu_sub x) y)) z))
(rule (iapply (iapply vectoru_add (iapply (iapply complexu_mul x) z)) (iapply (iapply complexu_mul y) z)) (iapply (iapply complexu_mul (iapply (iapply vectoru_add x) y)) z))
(rule (iapply (iapply b_s_ (iapply (iapply realu_le z) x)) (iapply (iapply realu_le z) y)) (iapply (iapply realu_le z) (iapply (iapply realu_max x) y)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le z) x)) (iapply (iapply realu_le z) y)) (iapply (iapply realu_le z) (iapply (iapply realu_min x) y)))
(rule (iapply (iapply vectoru_add (iapply (iapply cross x) y)) (iapply (iapply cross x) z)) (iapply (iapply cross x) (iapply (iapply vectoru_add y) z)))
(rule (iapply (iapply p_ (iapply (iapply t_ m) p)) (iapply (iapply t_ n) p)) (iapply (iapply t_ (iapply (iapply p_ m) n)) p))
(rule (iapply (iapply (iapply intu_mod (iapply intu_ofu_num n)) (iapply intu_ofu_num x)) (iapply intu_ofu_num y)) (iapply (iapply (iapply numu_mod n) x) y))
(rule (iapply (iapply b_s_ (iapply (iapply intu_le z) x)) (iapply (iapply intu_le z) y)) (iapply (iapply intu_le z) (iapply (iapply intu_max x) y)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow y) n)) (iapply (iapply realu_pow (iapply (iapply realu_mul x) y)) n))
(rule (iapply (iapply s_b_ (iapply (iapply intu_le z) x)) (iapply (iapply intu_le z) y)) (iapply (iapply intu_le z) (iapply (iapply intu_min x) y)))
(rule (iapply (iapply m_ (iapply (iapply t_ m) p)) (iapply (iapply t_ n) p)) (iapply (iapply t_ (iapply (iapply m_ m) n)) p))
(rule (iapply (iapply hrealu_add (iapply (iapply hrealu_mul x) y)) (iapply (iapply hrealu_mul x) z)) (iapply (iapply hrealu_mul x) (iapply (iapply hrealu_add y) z)))
(rule (iapply (iapply vectoru_sub (iapply (iapply rotate2d t) w)) (iapply (iapply rotate2d t) z)) (iapply (iapply rotate2d t) (iapply (iapply vectoru_sub w) z)))
(rule (iapply (iapply vectoru_sub (iapply (iapply complexu_mul x) z)) (iapply (iapply complexu_mul y) z)) (iapply (iapply complexu_mul (iapply (iapply vectoru_sub x) y)) z))
(rule (iapply (iapply p_ (iapply (iapply t_ m) n)) (iapply (iapply t_ m) p)) (iapply (iapply t_ m) (iapply (iapply p_ n) p)))
(rule (iapply (iapply realu_add (iapply (iapply float a) m)) (iapply (iapply float b) m)) (iapply (iapply float (iapply (iapply intu_add a) b)) m))
(rule (iapply (iapply a_ (iapply (iapply intu_add x) y)) (iapply (iapply intu_add x) z)) (iapply (iapply a_ y) z))
(rule (iapply (iapply realu_lt (iapply (iapply realu_add x) y)) (iapply (iapply realu_add x) z)) (iapply (iapply realu_lt y) z))
(rule (iapply (iapply intu_le (iapply (iapply intu_add x) z)) (iapply (iapply intu_add y) z)) (iapply (iapply intu_le x) y))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_add x) z)) (iapply (iapply a_ y) z))
(rule (iapply (iapply realu_lt (iapply (iapply realu_add x) z)) (iapply (iapply realu_add y) z)) (iapply (iapply realu_lt x) y))
(rule (iapply (iapply l_a_ (iapply (iapply p_ m) n)) (iapply (iapply p_ m) p)) (iapply (iapply l_a_ n) p))
(rule (iapply (iapply a_ (iapply (iapply realu_add x) y)) (iapply (iapply realu_add x) z)) (iapply (iapply a_ y) z))
(rule (iapply (iapply a_ (iapply (iapply p_ m) n)) (iapply (iapply p_ m) p)) (iapply (iapply a_ n) p))
(rule (iapply (iapply realu_le (iapply (iapply realu_add x) y)) (iapply (iapply realu_add x) z)) (iapply (iapply realu_le y) z))
(rule (iapply (iapply hrealu_le (iapply (iapply hrealu_add m) n)) (iapply (iapply hrealu_add m) p)) (iapply (iapply hrealu_le n) p))
(rule (iapply (iapply m_ (iapply (iapply p_ m) p)) (iapply (iapply p_ n) p)) (iapply (iapply m_ m) n))
(rule (iapply (iapply realu_le (iapply (iapply realu_add x) z)) (iapply (iapply realu_add y) z)) (iapply (iapply realu_le x) y))
(rule (iapply (iapply a_ (iapply (iapply hrealu_add m) n)) (iapply (iapply hrealu_add m) p)) (iapply (iapply a_ n) p))
(rule (iapply (iapply l_a_ (iapply (iapply p_ m) p)) (iapply (iapply p_ n) p)) (iapply (iapply l_a_ m) n))
(rule (iapply (iapply intu_add (iapply (iapply intu_sub a) b)) (iapply (iapply intu_sub b) c)) (iapply (iapply intu_sub a) c))
(rule (iapply (iapply a_ (iapply (iapply p_ m) p)) (iapply (iapply p_ n) p)) (iapply (iapply a_ m) n))
(rule (iapply (iapply (iapply sums (iapply (iapply o Cx) f)) (iapply Cx l)) s0) (iapply (iapply (iapply realu_sums f) l) s0))
(rule (iapply (iapply hrealu_le (iapply (iapply hrealu_add m) p)) (iapply (iapply hrealu_add n) p)) (iapply (iapply hrealu_le m) n))
(rule (iapply (iapply a_ (iapply (iapply rotate2d t) x)) (iapply (iapply rotate2d t) y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub a) b)) (iapply (iapply realu_sub b) c)) (iapply (iapply realu_sub a) c))
(rule (iapply (iapply vectoru_add (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub b) c)) (iapply (iapply vectoru_sub a) c))
(rule (iapply (iapply m_ (iapply (iapply p_ m) n)) (iapply (iapply p_ m) p)) (iapply (iapply m_ n) p))
(rule (iapply (iapply naddu_le (iapply (iapply naddu_add x) y)) (iapply (iapply naddu_add x) z)) (iapply (iapply naddu_le y) z))
(rule (iapply (iapply l_ (iapply (iapply p_ m) p)) (iapply (iapply p_ n) p)) (iapply (iapply l_ m) n))
(rule (iapply (iapply a_ (iapply (iapply hrealu_add m) p)) (iapply (iapply hrealu_add n) p)) (iapply (iapply a_ m) n))
(rule (iapply (iapply intu_lt (iapply (iapply intu_add x) y)) (iapply (iapply intu_add x) z)) (iapply (iapply intu_lt y) z))
(rule (iapply (iapply naddu_le (iapply (iapply naddu_add x) z)) (iapply (iapply naddu_add y) z)) (iapply (iapply naddu_le x) y))
(rule (iapply (iapply a_ (iapply (iapply intu_add x) z)) (iapply (iapply intu_add y) z)) (iapply (iapply a_ x) y))
(rule (iapply (iapply MOD (iapply (iapply p_ (iapply (iapply t_ m) n)) p)) n) (iapply (iapply MOD p) n))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) z)) (iapply (iapply vectoru_add y) z)) (iapply (iapply a_ x) y))
(rule (iapply (iapply intu_lt (iapply (iapply intu_add x) z)) (iapply (iapply intu_add y) z)) (iapply (iapply intu_lt x) y))
(rule (iapply (iapply a_ (iapply (iapply realu_add x) z)) (iapply (iapply realu_add y) z)) (iapply (iapply a_ x) y))
(rule (iapply (iapply intu_le (iapply (iapply intu_add x) y)) (iapply (iapply intu_add x) z)) (iapply (iapply intu_le y) z))
(rule (iapply (iapply l_ (iapply (iapply p_ m) n)) (iapply (iapply p_ m) p)) (iapply (iapply l_ n) p))
(rule (iapply (iapply (iapply (iapply azimu_cycle (iapply (iapply INSERT v) EMPTY)) x) u) v) v)
(rule (iapply (iapply (iapply (iapply ivsu_azimu_cycle (iapply (iapply INSERT v) EMPTY)) x) u) v) v)
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply tupleu_triu_sy s0))))))) (iapply Ju_TS s0))
(rule (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply tupleu_triu_sy s0))))))) (iapply fu_ts s0))
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply tupleu_stableu_sy s0))))))) (iapply Ju_SY s0))
(rule (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply tupleu_stableu_sy s0))))))) (iapply fu_sy s0))
(rule (iapply (iapply a_ (iapply complexu_inv x)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply realu_mul (iapply twopow a)) (iapply twopow (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply twopow (iapply (iapply intu_add a) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply a_ (iapply realu_sgn x)) (iapply realu_ofu_int (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_gt x) (iapply realu_ofu_int (iapply intu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply (iapply m_m_m_g_ (iapply (iapply o f) drop)) a) (iapply at (iapply lift x))) (iapply (iapply (iapply m_m_m_g_ f) a) (iapply atreal x)))
(rule (iapply w_ (iapply (iapply b_s_ (iapply (iapply realu_lt a) b)) (iapply (iapply realu_lt b) a))) (iapply (iapply a_ a) b))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x1) proju_x2) two6) two6) two6) proju_x6) (iapply mku_126 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x1) two6) proju_x3) two6) proju_x5) two6) (iapply mku_135 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x1) proju_x2) proju_x6) unit6) unit6) unit6) (iapply rotate126 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x2) proju_x3) proju_x4) unit6) unit6) unit6) (iapply rotate234 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x3) proju_x4) proju_x5) unit6) unit6) unit6) (iapply rotate345 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) two6) two6) two6) proju_x4) proju_x5) proju_x6) (iapply mku_456 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x2) proju_x3) proju_x1) proju_x5) proju_x6) proju_x4) (iapply rotate2 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x3) proju_x1) proju_x2) proju_x6) proju_x4) proju_x5) (iapply rotate3 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x4) proju_x2) proju_x6) proju_x1) proju_x5) proju_x3) (iapply rotate4 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x5) proju_x3) proju_x4) proju_x2) proju_x6) proju_x1) (iapply rotate5 f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) proju_x6) proju_x1) proju_x5) proju_x3) proju_x4) proju_x2) (iapply rotate6 f))
(rule (iapply rconesgn a_) rconeu_eq)
(rule (iapply rconesgn realu_ge) rconeu_ge)
(rule (iapply rconesgn realu_gt) rconeu_gt)
(rule (iapply rconesgn realu_lt) rconeu_lt)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply div6 proju_y3) two6)))) dih3u_xu_135u_s2) ldih3u_xu_135u_s2)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply div6 proju_y1) two6)))) dihu_xu_126u_s2) ldihu_xu_126u_s2)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply div6 proju_y5) two6)))) dih5u_xu_135u_s2) ldih5u_xu_135u_s2)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply div6 proju_y1) two6)))) dihu_xu_135u_s2) ldihu_xu_135u_s2)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply div6 proju_y6) two6)))) dih6u_xu_126u_s2) ldih6u_xu_126u_s2)
(rule (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply div6 proju_y2) two6)))) dih2u_xu_126u_s2) ldih2u_xu_126u_s2)
(rule (iapply (iapply REVERSEu_TABLE f) (iapply NUMERAL u_0)) NIL)
(rule (iapply (iapply REPLICATE (iapply NUMERAL u_0)) x) NIL)
(rule (iapply (iapply IMAGE drop) (iapply openu_interval (iapply (iapply c_ (iapply lift a)) (iapply lift b)))) (iapply openu_realu_interval (iapply (iapply c_ a) b)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) u_0)) u_0) (iapply BIT1 (iapply PRE n))) (iapply PRE (iapply BIT0 n)))
(rule (iapply ly (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h)) (iapply lfun h))
(rule (iapply complex (iapply (iapply c_ (iapply realu_neg (iapply Re z))) (iapply realu_neg (iapply Im z)))) (iapply vectoru_neg z))
(rule (iapply (iapply IMAGE lift) (iapply openu_realu_interval (iapply (iapply c_ (iapply drop a)) (iapply drop b)))) (iapply openu_interval (iapply (iapply c_ a) b)))
(rule (iapply (iapply complexu_pow ii) (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply vectoru_neg (iapply (iapply complexu_pow ii) n)))
(rule (iapply realu_inv (iapply (iapply realu_pow (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) n)) (iapply twopow (iapply intu_neg (iapply intu_ofu_num n))))
(rule (iapply dim (iapply closure s0)) (iapply dim s0))
(rule (iapply LENGTH (iapply REVERSE ul)) (iapply LENGTH ul))
(rule (iapply dim (iapply span s0)) (iapply dim s0))
(rule (iapply rectifiableu_path (iapply reversepath g)) (iapply rectifiableu_path g))
(rule (iapply infnorm (iapply vectoru_neg x)) (iapply infnorm x))
(rule (iapply pathu_length (iapply reversepath g)) (iapply pathu_length g))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) x) (iapply vectoru_neg x))
(rule (iapply (iapply complexu_mul (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) x) (iapply vectoru_neg x))
(rule (iapply bounded (iapply closure s0)) (iapply bounded s0))
(rule (iapply compact (iapply closure s0)) (iapply bounded s0))
(rule (iapply path (iapply reversepath g)) (iapply path g))
(rule (iapply vectoru_norm (iapply vectoru_neg x)) (iapply vectoru_norm x))
(rule (iapply (iapply p_ (iapply BIT0 n)) (iapply BIT0 (iapply BIT0 (iapply (iapply t_ m) n)))) (iapply (iapply t_ (iapply BIT1 m)) (iapply BIT0 n)))
(rule (iapply (iapply p_ (iapply BIT0 m)) (iapply BIT0 (iapply BIT0 (iapply (iapply t_ m) n)))) (iapply (iapply t_ (iapply BIT0 m)) (iapply BIT1 n)))
(rule (iapply (iapply a_ (iapply (iapply rotate2d t) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply IMAGE lift) (iapply openu_realu_segment (iapply (iapply c_ (iapply drop a)) (iapply drop b)))) (iapply openu_segment (iapply (iapply c_ a) b)))
(rule (iapply (iapply intu_ge x) (iapply (iapply intu_add y) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply intu_gt x) y))
(rule (iapply (iapply s_b_ (iapply EVEN m)) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply EVEN (iapply (iapply EXP m) n)))
(rule (iapply (iapply IMAGE drop) (iapply openu_segment (iapply (iapply c_ (iapply lift a)) (iapply lift b)))) (iapply openu_realu_segment (iapply (iapply c_ a) b)))
(rule (iapply (iapply realu_mul (iapply twopow (iapply intu_ofu_num m))) (iapply twopow (iapply intu_neg (iapply intu_ofu_num n)))) (iapply twopow (iapply (iapply intu_sub (iapply intu_ofu_num m)) (iapply intu_ofu_num n))))
(rule (iapply (iapply a_ (iapply (iapply cpow w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ w) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply dot (iapply normalize v)) u)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply dot v) u)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply intu_le x) y)) (iapply w_ (iapply (iapply a_ x) y))) (iapply (iapply intu_lt x) y))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot v) (iapply normalize u))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot v) u)))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_ m) n)) (iapply w_ (iapply (iapply a_ m) n))) (iapply (iapply l_ m) n))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le x) y)) (iapply w_ (iapply (iapply a_ x) y))) (iapply (iapply realu_lt x) y))
(rule (iapply realu_ofu_num (iapply (iapply p_ (iapply (iapply m_ m) n)) (iapply (iapply m_ n) m))) (iapply realu_abs (iapply (iapply realu_sub (iapply realu_ofu_num n)) (iapply realu_ofu_num m))))
(rule (iapply (iapply realu_integral (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) a)) NIL))) f) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_neg k)) x)) (iapply (iapply realu_le x) k)) (iapply (iapply realu_le (iapply realu_abs x)) k))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le x) c)) (iapply sqrt c)) (iapply sqrt x)) (iapply (iapply truncateu_sqrt c) x))
(rule (iapply (iapply b_s_ (iapply (iapply a_ m) (iapply SUC n))) (iapply (iapply l_a_ m) n)) (iapply (iapply l_a_ m) (iapply SUC n)))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) y)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply vectoru_neg x)))
(rule (iapply (iapply IMAGE (iapply vectoru_add x)) (iapply (iapply normball (iapply vec (iapply NUMERAL u_0))) r)) (iapply (iapply normball x) r))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply real0 z)) (iapply real0 (iapply (iapply complexu_mul (iapply Cx x)) z)))
(rule (iapply (iapply IMAGE (iapply scale t)) (iapply (iapply normball (iapply vec (iapply NUMERAL u_0))) r)) (iapply (iapply ellipsoid t) r))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) y)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ x) (iapply vectoru_neg y)))
(rule (iapply (iapply realu_mul (iapply exp (iapply (iapply realu_add x) y))) (iapply exp (iapply realu_neg x))) (iapply exp y))
(rule (iapply (iapply s_b_ (iapply (iapply intu_le (iapply intu_neg k)) x)) (iapply (iapply intu_le x) k)) (iapply (iapply intu_le (iapply intu_abs x)) k))
(rule (iapply (iapply s_b_ (iapply (iapply intu_lt (iapply intu_neg k)) x)) (iapply (iapply intu_lt x) k)) (iapply (iapply intu_lt (iapply intu_abs x)) k))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_neg k)) x)) (iapply (iapply realu_lt x) k)) (iapply (iapply realu_lt (iapply realu_abs x)) k))
(rule (iapply (iapply intu_le (iapply (iapply intu_add x) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) y) (iapply (iapply intu_lt x) y))
(rule (iapply (iapply a_ (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY) (iapply (iapply realu_lt b) a))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply sin (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply vectoru_norm (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply w_ (iapply (iapply l_a_u_c s0) t)) (iapply (iapply l_u_c t) s0))
(rule (iapply w_ (iapply (iapply l_u_c s0) t)) (iapply (iapply l_a_u_c t) s0))
(rule (iapply (iapply complexu_mul (iapply cexp (iapply (iapply vectoru_add w) z))) (iapply cexp (iapply vectoru_neg z))) (iapply cexp w))
(rule (iapply (iapply a_ (iapply (iapply vectoru_sub x) y)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ x) y))
(rule (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) sqrt8)
(rule (iapply Cx (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply casn (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply Cx (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply cacs (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply atn (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply realu_neg (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply asn (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply EL (iapply NUMERAL u_0)) l) (iapply HD l))
(rule (iapply cos (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply CARD (iapply nodeu_set H)) (iapply numberu_ofu_nodes H))
(rule (iapply planaru_ind (iapply shift H)) (iapply planaru_ind H))
(rule (iapply tameu_hypermap (iapply oppositeu_hypermap H)) (iapply tameu_hypermap H))
(rule (iapply CARD (iapply dartu_of L)) (iapply size L))
(rule (iapply CARD (iapply faceu_set H)) (iapply numberu_ofu_faces H))
(rule (iapply radV (iapply setu_ofu_list ul)) (iapply hl ul))
(rule (iapply CARD (iapply edgeu_set H)) (iapply numberu_ofu_edges H))
(rule (iapply CARD (iapply setu_ofu_components H)) (iapply numberu_ofu_components H))
(rule (iapply (iapply (iapply slice k) a) EMPTY) EMPTY)
(rule (iapply affsign sgnu_ge) affu_ge)
(rule (iapply hull affine) aff)
(rule (iapply affsign sgnu_lt) affu_lt)
(rule (iapply affsign sgnu_gt) affu_gt)
(rule (iapply affsign sgnu_le) affu_le)
(rule (iapply (iapply a_ (iapply sin (iapply (iapply realu_mul n) pi))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply integer n))
(rule (iapply (iapply HASu_SIZE s0) (iapply CARD s0)) (iapply FINITE s0))
(rule (iapply sqrt (iapply (iapply dot x) x)) (iapply vectoru_norm x))
(rule (iapply (iapply hasu_measure s0) (iapply measure s0)) (iapply measurable s0))
(rule (iapply (iapply a_ (iapply numberu_ofu_components H)) (iapply NUMERAL (iapply BIT1 u_0))) (iapply connectedu_hypermap H))
(rule (iapply (iapply a_ (iapply planaru_ind H)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply planaru_hypermap H))
(rule (iapply (iapply a_ (iapply realu_sgn x)) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply trivialu_limit (iapply (iapply within (iapply at (iapply lift x))) (iapply (iapply IMAGE lift) s0))) (iapply trivialu_limit (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate6 lmdihu_xu_divu_sqrtdeltau_posbranch) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply lmdih6u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply sub6 (iapply truncateu_vol3ru_456 d)) (iapply (iapply (iapply (iapply truncateu_vol3f d) m4) m5) m6)) (iapply (iapply (iapply (iapply truncateu_gamma3fu_x d) m4) m5) m6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_n y1) y2) y3) y4) y5) y6) lfun) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_nlfun y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply float a) n)) (iapply (iapply float (iapply intu_neg b)) m)) (iapply (iapply realu_sub (iapply (iapply float a) n)) (iapply (iapply float b) m)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma2u_x1u_divu_a m) x1) x2) x3) x4) x5) x6) (iapply (iapply gamma2u_xu_divu_azim m) x1))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate5 lmdihu_xu_divu_sqrtdeltau_posbranch) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply lmdih5u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x rad2u_x) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply rad2u_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate2 lmdihu_xu_divu_sqrtdeltau_posbranch) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply lmdih2u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply COND a) (iapply (iapply realu_mul b) d)) (iapply (iapply realu_mul c) d)) (iapply (iapply realu_mul (iapply (iapply (iapply COND a) b) c)) d))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_n y1) y2) y3) y4) y5) y6) lfun) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_nlfun y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate3 lmdihu_xu_divu_sqrtdeltau_posbranch) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply lmdih3u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x volu_x) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply volu_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_sub1u_x x1s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1s) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply deltau_sub1u_x x1s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1s) x2) x3) x4) x5) x6))
(rule (iapply (iapply float (iapply (iapply intu_pow a) m)) (iapply (iapply intu_mul n) (iapply intu_ofu_num m))) (iapply (iapply realu_pow (iapply (iapply float a) n)) m))
(rule (iapply dist (iapply (iapply c_ (iapply (iapply p_ m) n)) (iapply (iapply p_ m) p))) (iapply dist (iapply (iapply c_ n) p)))
(rule (iapply (iapply realu_integrableu_on f) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply realu_integrableu_on f) (iapply openu_realu_interval (iapply (iapply c_ a) b))))
(rule (iapply dist (iapply (iapply c_ (iapply (iapply p_ m) p)) (iapply (iapply p_ n) p))) (iapply dist (iapply (iapply c_ m) n)))
(rule (iapply (iapply (iapply shiftu_path p) l) i0) (iapply p (iapply (iapply p_ l) i0)))
(rule (iapply (iapply (iapply m_m_m_g_ f) (iapply f x)) (iapply (iapply within (iapply atreal x)) s0)) (iapply (iapply realu_continuous f) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply dist (iapply (iapply c_ (iapply (iapply t_ m) n)) (iapply (iapply t_ m) p))) (iapply (iapply t_ m) (iapply dist (iapply (iapply c_ n) p))))
(rule (iapply (iapply (iapply a_a_ (iapply intu_ofu_num x)) (iapply intu_ofu_num y)) (iapply intu_mod (iapply intu_ofu_num n))) (iapply (iapply (iapply a_a_ x) y) (iapply numu_mod n)))
(rule (iapply dist (iapply (iapply c_ (iapply (iapply t_ m) p)) (iapply (iapply t_ n) p))) (iapply (iapply t_ (iapply dist (iapply (iapply c_ m) n))) p))
(rule (iapply (iapply realu_le (iapply du_sy s0)) (iapply (iapply realu_add (iapply du_sy s1)) (iapply du_sy s2))) (iapply (iapply (iapply COVER2u_SY s0) s1) s2))
(rule (iapply (iapply s_b_ (iapply (iapply b_s_ (iapply w_ b)) t1)) (iapply (iapply b_s_ b) t2)) (iapply (iapply (iapply COND b) t1) t2))
(rule (iapply (iapply realu_integral (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) f) (iapply (iapply realu_integral (iapply openu_realu_interval (iapply (iapply c_ a) b))) f))
(rule (iapply (iapply DROP ul) (iapply NUMERAL u_0)) (iapply TL ul))
(rule (iapply bump (iapply (iapply realu_div (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply halfbumpu_x x))
(rule (iapply (iapply a_ (iapply realu_sgn x)) (iapply realu_ofu_int (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply realu_lt x) (iapply realu_ofu_int (iapply intu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply intu_le (iapply affu_dim s0)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply collinear s0))
(rule (iapply (iapply g_a_ (iapply numberu_ofu_faces H)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply tameu_8 H))
(rule (iapply (iapply o_o_ (iapply NUMERAL u_0)) (iapply (iapply m_ (iapply bnu_countVertices g)) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply bnu_verticesu_graph g))
(rule (iapply (iapply s_b_ (iapply real0 z)) (iapply (iapply realu_lt (iapply Re z)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply Arg z)) pi))
(rule (iapply (iapply vectoru_add (iapply Cx (iapply Re z))) (iapply (iapply complexu_mul ii) (iapply Cx (iapply Im z)))) z)
(rule (iapply (iapply continuous (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply at (iapply lift x))) (iapply (iapply realu_continuous f) (iapply atreal x)))
(rule (iapply (iapply subtopology top) UNIV) top)
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 taumu_x) (iapply constant6 a)) proju_x2) proju_x3) proju_x4) proju_x5) proju_x6) (iapply taumu_sub1u_x a))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 deltau_x) (iapply constant6 a)) proju_x2) proju_x3) proju_x4) proju_x5) proju_x6) (iapply deltau_sub1u_x a))
(rule (iapply PRE (iapply CARD (iapply dartu_of L))) (iapply top0 L))
(rule (iapply (iapply s_b_ (iapply real0 z)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re z))) (iapply (iapply a_ (iapply Arg z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply UNION p) p) p)
(rule (iapply (iapply INTER p) p) p)
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ n) m)) (iapply BIT1 (iapply (iapply m_ m) n))) u_0) (iapply (iapply m_ (iapply BIT1 m)) (iapply BIT0 n)))
(rule (iapply (iapply (iapply ind0 H) x) (iapply NUMERAL u_0)) (iapply NUMERAL u_0))
(rule (iapply (iapply bnu_filter f) NIL) NIL)
(rule (iapply (iapply (iapply (iapply ivsu_azimu_cycle (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) v) w) a) b)
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply atn (iapply halfatn x))) (iapply atn x))
(rule (iapply atn2 (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply complex (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) ii)
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) x) (iapply realu_neg x)) (iapply realu_abs x))
(rule (iapply (iapply absolutelyu_integrableu_on (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply absolutelyu_realu_integrableu_on f) s0))
(rule (iapply (iapply integrableu_on (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply realu_integrableu_on f) s0))
(rule (iapply (iapply complexu_pow (iapply vectoru_neg ii)) (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply vectoru_neg (iapply (iapply complexu_pow (iapply vectoru_neg ii)) n)))
(rule (iapply (iapply affu_gt EMPTY) s0) (iapply conv0 s0))
(rule (iapply (iapply hull subspace) s0) (iapply span s0))
(rule (iapply (iapply hull closed) s0) (iapply closure s0))
(rule (iapply (iapply hull convex) s0) (iapply convu_trg s0))
(rule (iapply (iapply rotate2d (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) z) (iapply (iapply complexu_mul ii) z))
(rule (iapply (iapply (iapply omegau_listu_n V) ul) (iapply (iapply m_ (iapply LENGTH ul)) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply omegau_list V) ul))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re (iapply (iapply complexu_div a) b))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im (iapply (iapply complexu_div a) b))))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im (iapply (iapply complexu_div a) b))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re (iapply (iapply complexu_div a) b))))
(rule (iapply (iapply vectoru_variation (iapply (iapply IMAGE lift) s0)) (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply realu_variation s0) f))
(rule (iapply (iapply s_b_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply p_ m) n)) (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_le (iapply Im (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_le (iapply Im (iapply (iapply complexu_div a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_lt (iapply Re (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt (iapply Re (iapply (iapply complexu_div a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply Re (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply Re (iapply (iapply complexu_div a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply t_ m) n)) (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_le (iapply Re (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_le (iapply Re (iapply (iapply complexu_div a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_lt (iapply Im (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt (iapply Im (iapply (iapply complexu_div a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply Im (iapply (iapply complexu_mul a) (iapply cnj b)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply Im (iapply (iapply complexu_div a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply b_s_ (iapply (iapply l_a_ m) n)) (iapply (iapply a_ (iapply EVEN m)) (iapply EVEN n))) (iapply EVEN (iapply (iapply m_ m) n)))
(rule (iapply (iapply res (iapply nu_fanu_pair (iapply (iapply c_ V) E))) (iapply dart1u_ofu_fan (iapply (iapply c_ V) E))) (iapply nu_fanu_pairu_ext (iapply (iapply c_ V) E)))
(rule (iapply (iapply res (iapply fu_fanu_pair (iapply (iapply c_ V) E))) (iapply dart1u_ofu_fan (iapply (iapply c_ V) E))) (iapply fu_fanu_pairu_ext (iapply (iapply c_ V) E)))
(rule (iapply (iapply t_ (iapply (iapply EXP (iapply BIT1 m)) n)) (iapply (iapply EXP (iapply BIT1 m)) n)) (iapply (iapply EXP (iapply BIT1 m)) (iapply BIT0 n)))
(rule (iapply (iapply t_ (iapply (iapply EXP (iapply BIT0 m)) n)) (iapply (iapply EXP (iapply BIT0 m)) n)) (iapply (iapply EXP (iapply BIT0 m)) (iapply BIT0 n)))
(rule (iapply (iapply continuousu_on (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply realu_continuousu_on f) s0))
(rule (iapply (iapply uniformlyu_continuousu_on (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply realu_uniformlyu_continuousu_on f) s0))
(rule (iapply w_ (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)) (iapply (iapply realu_le (iapply drop a)) (iapply drop b)))
(rule (iapply (iapply hasu_boundedu_variationu_on (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply hasu_boundedu_realu_variationu_on f) s0))
(rule (iapply (iapply measurableu_on (iapply (iapply o Cx) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply realu_measurableu_on f) s0))
(rule (iapply (iapply s_b_ (iapply (iapply l_ (iapply NUMERAL u_0)) m)) (iapply (iapply l_ (iapply NUMERAL u_0)) n)) (iapply (iapply l_ (iapply NUMERAL u_0)) (iapply (iapply t_ m) n)))
(rule (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) y)) (iapply (iapply realu_sub x) y))
(rule (iapply (iapply measurableu_on (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply IMAGE lift) s0)) (iapply (iapply realu_measurableu_on f) s0))
(rule (iapply (iapply d_ (iapply vectoru_neg x)) i0) (iapply realu_neg (iapply (iapply d_ x) i0)))
(rule (iapply (iapply IN v) (iapply cball (iapply (iapply c_ (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) r))) (iapply (iapply realu_le (iapply vectoru_norm v)) r))
(rule (iapply w_ (iapply (iapply a_ (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)) (iapply (iapply realu_le a) b))
(rule (iapply (iapply IN v) (iapply ball (iapply (iapply c_ (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) r))) (iapply (iapply realu_lt (iapply vectoru_norm v)) r))
(rule (iapply tan (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_pow (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply dropout (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply product (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 u_0)))) f) (iapply f (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply sum (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 u_0)))) f) (iapply f (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply dot (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply LENGTH (iapply (iapply leftu_actionu_list p) ul)) (iapply LENGTH ul))
(rule (iapply (iapply (iapply COND (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x)) x) (iapply intu_neg x)) (iapply intu_abs x))
(rule (iapply vectoru_neg (iapply Cx (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply casn (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))))
(rule (iapply (iapply a_ (iapply dimindex UNIV)) (iapply dimindex UNIV)) (iapply (iapply homeomorphic UNIV) UNIV))
(rule (iapply (iapply t_ (iapply dimindex UNIV)) (iapply dimindex UNIV)) (iapply dimindex UNIV))
(rule (iapply (iapply p_ (iapply dimindex UNIV)) (iapply dimindex UNIV)) (iapply dimindex UNIV))
(rule (iapply (iapply (iapply isu_path H) p) (iapply NUMERAL u_0)) T)
(rule (iapply (iapply (iapply isu_inju_contour H) p) (iapply NUMERAL u_0)) T)
(rule (iapply (iapply (iapply isu_contour H) p) (iapply NUMERAL u_0)) T)
(rule (iapply (iapply PAIRWISE r) NIL) T)
(rule (iapply (iapply a_ (iapply (iapply MOD n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)) (iapply EVEN n))
(rule (iapply (iapply r_ (iapply realu_ofu_num (iapply NUMERAL u_0))) x) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply pairwise r) EMPTY) T)
(rule (iapply det (iapply vector (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) NIL))))) (iapply (iapply (iapply detu_vec3 a) b) c))
(rule (iapply det (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) (iapply (iapply CONS z) NIL))))) (iapply (iapply dot (iapply (iapply cross x) y)) z))
(rule (iapply (iapply APPEND NIL) l) l)
(rule (iapply (iapply APPEND l) NIL) l)
(rule (iapply (iapply UNION s0) EMPTY) s0)
(rule (iapply (iapply UNION EMPTY) s0) s0)
(rule (iapply (iapply rotate2d (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) z) z)
(rule (iapply (iapply INTER s0) UNIV) s0)
(rule (iapply (iapply INTER UNIV) s0) s0)
(rule (iapply (iapply DIFF s0) EMPTY) s0)
(rule (iapply LENGTH (iapply (iapply TABLE f) n)) n)
(rule (iapply LENGTH (iapply (iapply REPLICATE n) x)) n)
(rule (iapply (iapply bnu_hideDupsRec a) NIL) NIL)
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply vectoru_neg (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply normalize (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply hull affine) EMPTY) EMPTY)
(rule (iapply (iapply hull affine) UNIV) UNIV)
(rule (iapply (iapply INTER EMPTY) s0) EMPTY)
(rule (iapply (iapply hull convex) EMPTY) EMPTY)
(rule (iapply (iapply hull convex) UNIV) UNIV)
(rule (iapply (iapply hull conic) EMPTY) EMPTY)
(rule (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vectoru_neg (iapply lift e))) (iapply lift e))) NIL)) (iapply cball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) e)))
(rule (iapply (iapply s_b_ (iapply plainu_hypermap H)) (iapply planaru_hypermap H)) (iapply tameu_1 H))
(rule (iapply (iapply s_b_ (iapply connectedu_hypermap H)) (iapply simpleu_hypermap H)) (iapply tameu_2 H))
(rule (iapply (iapply FILTER P) NIL) NIL)
(rule (iapply (iapply bnu_minimal f) NIL) (iapply CHOICE UNIV))
(rule (iapply (iapply vsum (iapply (iapply o_o_ n) n)) f) (iapply f n))
(rule (iapply bnu_finalu_face (iapply (iapply c_ vs) f)) f)
(rule (iapply (iapply a_ (iapply (iapply realu_pow (iapply sqrt x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply s_b_ (iapply bounded s0)) (iapply closed s0)) (iapply compact s0))
(rule (iapply (iapply s_b_ (iapply polyhedron s0)) (iapply bounded s0)) (iapply polytope s0))
(rule (iapply (iapply INTER s0) EMPTY) EMPTY)
(rule (iapply (iapply pathu_component EMPTY) x) EMPTY)
(rule (iapply (iapply connectedu_component EMPTY) x) EMPTY)
(rule (iapply (iapply DIFF EMPTY) s0) EMPTY)
(rule (iapply (iapply pathu_component UNIV) x) UNIV)
(rule (iapply (iapply UNION s0) UNIV) UNIV)
(rule (iapply (iapply UNION UNIV) s0) UNIV)
(rule (iapply (iapply DIFF s0) s0) EMPTY)
(rule (iapply (iapply DIFF s0) UNIV) EMPTY)
(rule (iapply (iapply DELETE EMPTY) x) EMPTY)
(rule (iapply (iapply INSERT x) UNIV) UNIV)
(rule (iapply (iapply connectedu_component UNIV) x) UNIV)
(rule (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply det A0))
(rule (iapply (iapply (iapply (iapply azimu_cycle (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) v) w) a) b)
(rule (iapply (iapply realu_mul x1) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply x1u_deltau_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_y1 a) b) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply arclength y1) a) b))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_y2 a) b) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply arclength y2) a) b))
(rule (iapply (iapply p_ (iapply (iapply (iapply wtcount3u_y y1) y2) y3)) (iapply (iapply (iapply wtcount3u_y y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply wtcount6u_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply hasu_realu_integral f) y) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply (iapply hasu_realu_integral f) y) (iapply openu_realu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_redu_03 y1) y2) y3) y4) y5) y6) sqrt2) f) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_v y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply dot (iapply complex (iapply (iapply c_ x) y))) (iapply complex (iapply (iapply c_ xi_) yi_))) (iapply (iapply realu_add (iapply (iapply realu_mul x) xi_)) (iapply (iapply realu_mul y) yi_)))
(rule (iapply (iapply (iapply COND (iapply w_ (iapply (iapply a_ i0) q))) (iapply (iapply fu_sy s0) i0)) p) (iapply (iapply (iapply (iapply flu_sy s0) p) q) i0))
(rule (iapply (iapply a_a_g_ p) (iapply (iapply (iapply hasu_realu_derivative f) fi_) (iapply (iapply within (iapply atreal x)) s0))) (iapply (iapply (iapply (iapply (iapply derivedu_form p) f) fi_) x) s0))
(rule (iapply (iapply IN (iapply realu_neg x)) (iapply openu_realu_interval (iapply (iapply c_ (iapply realu_neg b)) (iapply realu_neg a)))) (iapply (iapply IN x) (iapply openu_realu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply FST x)) i0)) (iapply (iapply a_ (iapply SND x)) j)) (iapply (iapply a_ x) (iapply (iapply c_ i0) j)))
(rule (iapply (iapply s_b_ P) (iapply (iapply a_ v) t)) (iapply (iapply (iapply SETSPEC v) P) t))
(rule (iapply (iapply cross (iapply (iapply (iapply e2u_fan x) v) u)) (iapply (iapply (iapply e3u_fan x) v) u)) (iapply (iapply (iapply e1u_fan x) v) u))
(rule (iapply det (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) (iapply (iapply CONS z) NIL))))) (iapply (iapply dot x) (iapply (iapply cross y) z)))
(rule (iapply measure (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) (iapply (iapply INSERT u) EMPTY))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_integrableu_on f) s0)) (iapply (iapply a_ (iapply (iapply realu_integral s0) f)) i0)) (iapply (iapply (iapply hasu_realu_integral f) i0) s0))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply kle n) x) y)) (iapply (iapply (iapply kle n) y) x)) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_div (iapply (iapply realu_sub h0) h)) (iapply (iapply realu_sub h0) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply lfun h))
(rule (iapply (iapply b_s_ (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply l_a_ n) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply INSERT (iapply NUMERAL u_0)) EMPTY)) EMPTY) (iapply (iapply o_o_ m) (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply COND b) t) t) t)
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply w_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply cos (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply sin (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))
(rule (iapply (iapply cross (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply vectoru_neg (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply cross (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply vectoru_neg (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))
(rule (iapply cos (iapply (iapply realu_sub (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x)) (iapply sin x))
(rule (iapply cos (iapply (iapply realu_add (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x)) (iapply realu_neg (iapply sin x)))
(rule (iapply cos (iapply (iapply realu_add x) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_neg (iapply sin x)))
(rule (iapply sin (iapply (iapply realu_sub (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x)) (iapply cos x))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply tan (iapply (iapply realu_sub (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x)) (iapply realu_inv (iapply tan x)))
(rule (iapply cos (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) x)) (iapply cos x))
(rule (iapply trivialu_limit (iapply (iapply within (iapply at (iapply Cx x))) (iapply (iapply INTER real0) (iapply (iapply IMAGE Cx) s0)))) (iapply trivialu_limit (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply measure (iapply cball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) pi)
(rule (iapply (iapply realu_lt (iapply sin (iapply (iapply (iapply (iapply azim x) y) u) v))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt pi) (iapply (iapply (iapply (iapply azim x) y) u) v)))
(rule (iapply transp (iapply columnvector v)) (iapply rowvector v))
(rule (iapply (iapply (iapply affsign sgnu_gt) EMPTY) S) (iapply conv0 S))
(rule (iapply supportu_darts (iapply faceu_collection H)) (iapply dart H))
(rule (iapply closure (iapply closure s0)) (iapply closure s0))
(rule (iapply (iapply (iapply affsign sgnu_ge) EMPTY) S) (iapply conv S))
(rule (iapply span (iapply span s0)) (iapply span s0))
(rule (iapply interior (iapply interior s0)) (iapply interior s0))
(rule (iapply transp (iapply rowvector v)) (iapply columnvector v))
(rule (iapply pathu_image (iapply reversepath g)) (iapply pathu_image g))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply exp r))) (iapply complex (iapply (iapply c_ (iapply cos t)) (iapply sin t)))) (iapply cexp (iapply complex (iapply (iapply c_ r) t))))
(rule (iapply (iapply s_b_ (iapply (iapply l_ n) m)) (iapply w_ (iapply (iapply a_ (iapply ODD m)) (iapply ODD n)))) (iapply ODD (iapply (iapply m_ m) n)))
(rule (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY)))) (iapply (iapply a_ (iapply (iapply cross x) y)) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply CARD (iapply (iapply criticalu_edgeX V) X)))) (iapply (iapply criticalu_weight V) X))
(rule (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply (iapply realu_mul (iapply vectoru_norm y)) (iapply sin (iapply (iapply vectoru_angle x) y)))) (iapply vectoru_norm (iapply (iapply cross x) y)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply EXP m) n)) (iapply NUMERAL u_0)))
(rule (iapply openu_interval (iapply (iapply c_ (iapply (iapply vectoru_sub x) (iapply lift e))) (iapply (iapply vectoru_add x) (iapply lift e)))) (iapply ball (iapply (iapply c_ x) e)))
(rule (iapply (iapply IMAGE lift) (iapply closedu_realu_segment (iapply (iapply CONS (iapply (iapply c_ (iapply drop a)) (iapply drop b))) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply b_s_ (iapply w_ (iapply (iapply a_ x) (iapply NUMERAL u_0)))) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply l_ (iapply NUMERAL u_0)) (iapply (iapply EXP x) n)))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply EXP x) n)) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply IMAGE drop) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ (iapply lift a)) (iapply lift b))) NIL))) (iapply closedu_realu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply (iapply COND (iapply EVEN n)) (iapply (iapply complexu_pow x) n)) (iapply vectoru_neg (iapply (iapply complexu_pow x) n))) (iapply (iapply complexu_pow (iapply vectoru_neg x)) n))
(rule (iapply (iapply p_ (iapply binom (iapply (iapply c_ n) (iapply SUC k)))) (iapply binom (iapply (iapply c_ n) k))) (iapply binom (iapply (iapply c_ (iapply SUC n)) (iapply SUC k))))
(rule (iapply (iapply (iapply COND (iapply EVEN n)) (iapply (iapply intu_pow x) n)) (iapply intu_neg (iapply (iapply intu_pow x) n))) (iapply (iapply intu_pow (iapply intu_neg x)) n))
(rule (iapply (iapply (iapply COND (iapply EVEN n)) (iapply (iapply realu_pow x) n)) (iapply realu_neg (iapply (iapply realu_pow x) n))) (iapply (iapply realu_pow (iapply realu_neg x)) n))
(rule (iapply (iapply vectoru_add x) (iapply (iapply complexu_mul (iapply Cx (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) y)) (iapply (iapply vectoru_sub x) y))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply a_ (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply complexu_mul (iapply (iapply complexu_pow (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) n)) z) (iapply (iapply rotate2d (iapply (iapply realu_mul (iapply realu_ofu_num n)) pi)) z))
(rule (iapply (iapply (iapply pathu_component s0) x) x) (iapply (iapply IN x) s0))
(rule (iapply (iapply (iapply connectedu_component s0) x) x) (iapply (iapply IN x) s0))
(rule (iapply MAP I) I)
(rule (iapply (iapply complexu_mul ii) (iapply Cx (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply clog ii))
(rule (iapply atn2 (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply realu_neg (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply (iapply b_s_ (iapply FINITE s0)) (iapply (iapply a_u_c s0) UNIV)) (iapply COUNTABLE s0))
(rule (iapply (iapply dot (iapply vec (iapply NUMERAL u_0))) x) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply dot x) (iapply vec (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL u_0)) (iapply (iapply EXP (iapply NUMERAL u_0)) n))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply f (iapply NUMERAL u_0))) (iapply NUMERAL u_0)) (iapply (iapply nsum (iapply (iapply o_o_ m) (iapply NUMERAL u_0))) f))
(rule (iapply (iapply dropout (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply cross (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply cross (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply pathfinish (iapply reversepath g)) (iapply pathstart g))
(rule (iapply pathstart (iapply reversepath g)) (iapply pathfinish g))
(rule (iapply (iapply IMAGE drop) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply lift a)) (iapply lift b))) NIL))) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply IMAGE lift) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply drop a)) (iapply drop b))) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply oppositeu_hypermap (iapply oppositeu_hypermap H)) H)
(rule (iapply topology0 (iapply openu_in a)) a)
(rule (iapply REVERSE (iapply REVERSE l)) l)
(rule (iapply reversepath (iapply reversepath g)) g)
(rule (iapply netlimit (iapply at a)) a)
(rule (iapply (iapply r_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x) x)
(rule (iapply (iapply realu_mul (iapply rho y4)) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim4 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply rho y5)) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim5 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply rho y6)) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim6 y1) y2) y3) y4) y5) y6))
(rule (iapply inverse I) I)
(rule (iapply trace (iapply mat (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply d_ (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply lunaru_deform (iapply (iapply c_ e1) (iapply (iapply c_ e2) e3))) t) (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply r_ c) (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply dropout (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply det (iapply mat (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply dropout k) (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply dot (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply dot (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply rank (iapply mat (iapply NUMERAL u_0))) (iapply NUMERAL u_0))
(rule (iapply UNIONS (iapply setu_ofu_components H)) (iapply dart H))
(rule (iapply setu_ofu_components (iapply shift H)) (iapply setu_ofu_components H))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply sin (iapply (iapply (iapply (iapply azim x) y) u) v))) (iapply (iapply realu_le (iapply (iapply (iapply (iapply azim x) y) u) v)) pi))
(rule (iapply sin (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply sin x))
(rule (iapply cos (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply cos x))
(rule (iapply sin (iapply (iapply realu_add (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x)) (iapply cos x))
(rule (iapply (iapply a_ (iapply det A0)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply w_ (iapply invertible A0)))
(rule (iapply dim (iapply rows A0)) (iapply rank A0))
(rule (iapply dim (iapply columns A0)) (iapply rank A0))
(rule (iapply UNIONS (iapply components u)) u)
(rule (iapply (iapply a_ (iapply (iapply MOD n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply ODD n))
(rule (iapply (iapply (iapply smallestu_angleu_set (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))) c) d) (iapply (iapply (iapply (iapply smallestu_angleu_line a) b) c) d))
(rule (iapply (iapply realu_mul (iapply rho y1)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply c_ v) (iapply (iapply (iapply (iapply (iapply sigmau_fan (iapply vec (iapply NUMERAL u_0))) V) E) v) w)) (iapply (iapply nu_fanu_pair (iapply (iapply c_ V) E)) (iapply (iapply c_ v) w)))
(rule (iapply (iapply c_ w) (iapply (iapply (iapply (iapply (iapply inverseu_sigmau_fan (iapply vec (iapply NUMERAL u_0))) V) E) w) v)) (iapply (iapply fu_fanu_pair (iapply (iapply c_ V) E)) (iapply (iapply c_ v) w)))
(rule (iapply (iapply (iapply omegau_listu_n V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) NIL))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply omegau_list V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) NIL))))
(rule (iapply (iapply res (iapply (iapply (iapply (iapply sigmau_fan x) V) E) v)) (iapply (iapply (iapply setu_ofu_edge v) V) E)) (iapply (iapply (iapply (iapply extensionu_sigmau_fan x) V) E) v))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply deltau_234u_x x1s) x5s) x6s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1s) x2) x3) x4) x5s) x6s))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply deltau_135u_x x2s) x4s) x6s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2s) x3) x4s) x5) x6s))
(rule (iapply (iapply realu_mul (iapply rho y2)) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim2 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply rho y3)) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim3 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_sub345u_x x3s) x4s) x5s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2) x3s) x4s) x5s) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_sub246u_x x2s) x4s) x6s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2s) x3) x4s) x5) x6s))
(rule (iapply (iapply realu_mul (iapply ly y1)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply lnazim y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply deltau_126u_x x3s) x4s) x5s) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3s) x4s) x5s) x6))
(rule (iapply (iapply (iapply COND (iapply (iapply l_ m) k)) (iapply (iapply o_o_ k) n)) (iapply (iapply o_o_ m) n)) (iapply (iapply INTER (iapply from k)) (iapply (iapply o_o_ m) n)))
(rule (iapply (iapply matrixu_vectoru_mul (iapply transp A0)) (iapply (iapply cross (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply (iapply matrixu_vectoru_mul A0) y))) (iapply (iapply r_ (iapply det A0)) (iapply (iapply cross x) y)))
(rule (iapply (iapply (iapply (iapply (iapply bnu_subdivFace0 g) f) (iapply bnu_the (iapply HD vos))) (iapply NUMERAL u_0)) (iapply TL vos)) (iapply (iapply (iapply bnu_subdivFace g) f) vos))
(rule (iapply (iapply realu_mul (iapply (iapply prod0 (iapply (iapply c_ n) m)) f)) (iapply f (iapply (iapply p_ n) m))) (iapply (iapply prod0 (iapply (iapply c_ n) (iapply SUC m))) f))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_sub ex) (iapply realu_abs (iapply (iapply realu_sub a) f)))) (iapply (iapply (iapply intervalu_eps a) f) ex))
(rule (iapply (iapply d_ (iapply (iapply r_ c) x)) i0) (iapply (iapply realu_mul c) (iapply (iapply d_ x) i0)))
(rule (iapply (iapply (iapply upsu_x (iapply (iapply realu_mul x) x)) (iapply (iapply realu_mul y) y)) (iapply (iapply realu_mul z) z)) (iapply (iapply (iapply upsu_xu_pow2 x) y) z))
(rule (iapply (iapply (iapply affsign sgn) s0) EMPTY) (iapply (iapply hull affine) s0))
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_add z) (iapply cnj z))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply Cx (iapply Re z)))
(rule (iapply (iapply realu_div (iapply vectoru_norm (iapply FST x))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply hu_dart x))
(rule (iapply (iapply complexu_div (iapply cnj z)) (iapply (iapply complexu_pow (iapply Cx (iapply vectoru_norm z))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply complexu_inv z))
(rule (iapply (iapply realu_lt (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_lt (iapply realu_abs x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply w_ (iapply (iapply a_ (iapply det A0)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply invertible A0))
(rule (iapply (iapply realu_le (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_le (iapply realu_abs x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply vectoru_norm x)))
(rule (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply infnorm x)))
(rule (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_sub const1) (iapply (iapply realu_mul const1) (iapply ly y)))) (iapply rho y))
(rule (iapply (iapply (iapply hasu_vectoru_derivative (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply lift fi_)) (iapply at (iapply lift x))) (iapply (iapply (iapply hasu_realu_derivative f) fi_) (iapply atreal x)))
(rule (iapply (iapply a_ p) EMPTY) (iapply (iapply taggedu_partialu_divisionu_of p) EMPTY))
(rule (iapply (iapply a_ (iapply components s0)) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply measurableu_on (iapply indicator s0)) UNIV) (iapply lebesgueu_measurable s0))
(rule (iapply (iapply a_ p) I) (iapply (iapply permutes p) EMPTY))
(rule (iapply (iapply a_ (iapply setu_ofu_list l)) EMPTY) (iapply (iapply a_ l) NIL))
(rule (iapply (iapply a_ (iapply closure s0)) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ p) EMPTY) (iapply (iapply taggedu_divisionu_of p) EMPTY))
(rule (iapply bnu_setFinal (iapply (iapply c_ vs) f)) (iapply (iapply c_ vs) T))
(rule (iapply (iapply r_ (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) x) (iapply vectoru_neg x))
(rule (iapply (iapply EL n) (iapply TL l)) (iapply (iapply EL (iapply SUC n)) l))
(rule (iapply sndcart (iapply vec n)) (iapply vec n))
(rule (iapply fstcart (iapply vec n)) (iapply vec n))
(rule (iapply (iapply (iapply FCONS a) f) (iapply NUMERAL u_0)) a)
(rule (iapply NULL (iapply (iapply CONS h) t)) F)
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply sin x)) (iapply cos x))) (iapply sin (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x)))
(rule (iapply acs (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_sub h0) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) rh0)
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply sqrt x)) (iapply ssqrt x))
(rule (iapply vectoru_neg (iapply (iapply r_ c) x)) (iapply (iapply r_ (iapply realu_neg c)) x))
(rule (iapply affu_dim (iapply (iapply hull affine) s0)) (iapply affu_dim s0))
(rule (iapply (iapply SUBSET (iapply closure s0)) s0) (iapply closed s0))
(rule (iapply lebesgueu_measurable (iapply (iapply DIFF UNIV) s0)) (iapply lebesgueu_measurable s0))
(rule (iapply (iapply a_ (iapply closure s0)) s0) (iapply closed s0))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply Arg z)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply Arg z)) pi)) (iapply real0 z))
(rule (iapply (iapply r_ (iapply realu_inv (iapply vectoru_norm v))) v) (iapply normalize v))
(rule (iapply collinear (iapply (iapply hull convex) s0)) (iapply collinear s0))
(rule (iapply diameter (iapply (iapply hull convex) s0)) (iapply diameter s0))
(rule (iapply affu_dim (iapply (iapply hull convex) s0)) (iapply affu_dim s0))
(rule (iapply (iapply a_ (iapply interior s0)) s0) (iapply open s0))
(rule (iapply bounded (iapply (iapply hull convex) s0)) (iapply bounded s0))
(rule (iapply coplanar (iapply (iapply hull affine) s0)) (iapply coplanar s0))
(rule (iapply (iapply SUBSET (iapply frontier s0)) s0) (iapply closed s0))
(rule (iapply collinear (iapply (iapply hull affine) s0)) (iapply collinear s0))
(rule (iapply (iapply a_ (iapply span s0)) s0) (iapply subspace s0))
(rule (iapply (iapply p_ (iapply BIT1 m)) (iapply (iapply p_ (iapply BIT0 n)) (iapply BIT0 (iapply BIT0 (iapply (iapply t_ m) n))))) (iapply (iapply t_ (iapply BIT1 m)) (iapply BIT1 n)))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply realu_mul x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply realu_pow x) n)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply intu_mul x) y)) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply intu_pow x) n)) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ m) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ (iapply (iapply t_ m) n)) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply c_ a) (iapply (iapply realu_div (iapply (iapply realu_add a) b)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply pathL (iapply (iapply c_ a) b)))
(rule (iapply (iapply b_s_ (iapply w_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply w_ (iapply (iapply a_ (iapply (iapply realu_pow x) n)) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply dot x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply orthogonal x) y))
(rule (iapply (iapply vectoru_add (iapply (iapply complexu_mul (iapply csin w)) (iapply ccos z))) (iapply (iapply complexu_mul (iapply ccos w)) (iapply csin z))) (iapply csin (iapply (iapply vectoru_add w) z)))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply sin x)) (iapply cos y))) (iapply (iapply realu_mul (iapply cos x)) (iapply sin y))) (iapply sin (iapply (iapply realu_add x) y)))
(rule (iapply (iapply realu_mul (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply distance (iapply (iapply c_ u) v))) (iapply hl (iapply (iapply CONS u) (iapply (iapply CONS v) NIL))))
(rule (iapply (iapply vectoru_sub (iapply (iapply complexu_mul (iapply ccos w)) (iapply ccos z))) (iapply (iapply complexu_mul (iapply csin w)) (iapply csin z))) (iapply ccos (iapply (iapply vectoru_add w) z)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply cos x)) (iapply cos y))) (iapply (iapply realu_mul (iapply sin x)) (iapply sin y))) (iapply cos (iapply (iapply realu_add x) y)))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply cos w)) (iapply cos z))) (iapply (iapply realu_mul (iapply sin w)) (iapply sin z))) (iapply cos (iapply (iapply realu_sub w) z)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply Re w)) (iapply Re z))) (iapply (iapply a_ (iapply Im w)) (iapply Im z))) (iapply (iapply a_ w) z))
(rule (iapply (iapply vectoru_sub (iapply (iapply complexu_mul (iapply csin w)) (iapply ccos z))) (iapply (iapply complexu_mul (iapply ccos w)) (iapply csin z))) (iapply csin (iapply (iapply vectoru_sub w) z)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply sin w)) (iapply cos z))) (iapply (iapply realu_mul (iapply cos w)) (iapply sin z))) (iapply sin (iapply (iapply realu_sub w) z)))
(rule (iapply (iapply vectoru_add (iapply (iapply complexu_mul (iapply ccos w)) (iapply ccos z))) (iapply (iapply complexu_mul (iapply csin w)) (iapply csin z))) (iapply ccos (iapply (iapply vectoru_sub w) z)))
(rule (iapply (iapply s_b_ (iapply (iapply bnu_admissible1 w) g)) (iapply (iapply s_b_ (iapply (iapply bnu_admissible2 w) g)) (iapply (iapply bnu_admissible3 w) g))) (iapply (iapply bnu_admissible w) g))
(rule (iapply (iapply c_ (iapply (iapply bnu_tri g) v)) (iapply (iapply c_ (iapply (iapply bnu_quad g) v)) (iapply (iapply bnu_except g) v))) (iapply (iapply bnu_vertextype g) v))
(rule (iapply bnu_tabulate0 (iapply (iapply c_ n) f)) (iapply (iapply bnu_tabulate n) f))
(rule (iapply (iapply (iapply m_m_g_ f) (iapply f x)) (iapply atreal x)) (iapply (iapply continuous f) (iapply atreal x)))
(rule (iapply (iapply s_b_ (iapply FINITE s0)) (iapply (iapply a_ (iapply CARD s0)) n)) (iapply (iapply HASu_SIZE s0) n))
(rule (iapply (iapply IN x) (iapply dartu_of L)) (iapply (iapply belong x) L))
(rule (iapply bnu_sub1 (iapply (iapply c_ a) n)) (iapply (iapply bnu_sub a) n))
(rule (iapply REVERSE (iapply (iapply REVERSEu_TABLE f) k)) (iapply (iapply TABLE f) k))
(rule (iapply (iapply a_ (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_le (iapply drop b)) (iapply drop a)))
(rule (iapply (iapply dot (iapply vectoru_neg x)) y) (iapply realu_neg (iapply (iapply dot x) y)))
(rule (iapply (iapply s_b_ (iapply measurable s0)) (iapply (iapply a_ (iapply measure s0)) m)) (iapply (iapply hasu_measure s0) m))
(rule (iapply LENGTH (iapply (iapply CONS h) t)) (iapply SUC (iapply LENGTH t)))
(rule (iapply (iapply dot x) (iapply vectoru_neg y)) (iapply realu_neg (iapply (iapply dot x) y)))
(rule (iapply ball (iapply (iapply c_ z) r)) (iapply (iapply normball z) r))
(rule (iapply (iapply (iapply (iapply (iapply (iapply delta x12) (iapply (iapply realu_add x12) x23)) (iapply (iapply realu_add x12) x24)) x23) x24) x34) (iapply (iapply realu_mul x12) (iapply (iapply (iapply upsu_x x23) x24) x34)))
(rule (iapply (iapply a_ (iapply INJN n10)) (iapply INJN n20)) (iapply (iapply a_ n10) n20))
(rule (iapply (iapply c_ (iapply (iapply realu_div (iapply (iapply realu_add a) b)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) b) (iapply pathR (iapply (iapply c_ a) b)))
(rule (iapply (iapply a_ (iapply vec m)) (iapply vec n)) (iapply (iapply a_ m) n))
(rule (iapply det (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply a_ (iapply (iapply cross (iapply (iapply vectoru_sub y) x)) (iapply (iapply vectoru_sub z) x))) (iapply vec (iapply NUMERAL u_0))) (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))))
(rule (iapply (iapply cross (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply dot (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply dot (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply dartu_nondegenerate (iapply shift H)) x) (iapply (iapply dartu_nondegenerate H) x))
(rule (iapply (iapply LET f) x) (iapply f x))
(rule (iapply (iapply typeu_ofu_node (iapply oppositeu_hypermap H)) x) (iapply (iapply typeu_ofu_node H) x))
(rule (iapply (iapply sum (iapply faceu_set H)) w) (iapply (iapply totalu_weight H) w))
(rule (iapply negligible (iapply (iapply INSERT a) s0)) (iapply negligible s0))
(rule (iapply (iapply orthogonal (iapply vectoru_neg x)) y) (iapply (iapply orthogonal x) y))
(rule (iapply (iapply IN x) (iapply setu_ofu_list l)) (iapply (iapply MEM x) l))
(rule (iapply (iapply orthogonal x) (iapply vectoru_neg y)) (iapply (iapply orthogonal x) y))
(rule (iapply COUNTABLE (iapply (iapply DELETE s0) x)) (iapply COUNTABLE s0))
(rule (iapply COUNTABLE (iapply (iapply INSERT x) s0)) (iapply COUNTABLE s0))
(rule (iapply bnu_sub1 (iapply (iapply c_ xs) n)) (iapply (iapply EL n) xs))
(rule (iapply bounded (iapply (iapply INSERT x) s0)) (iapply bounded s0))
(rule (iapply FINITE (iapply (iapply DELETE s0) x)) (iapply FINITE s0))
(rule (iapply FINITE (iapply (iapply INSERT x) s0)) (iapply FINITE s0))
(rule (iapply (iapply realu_div pi) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) piu_rt18)
(rule (iapply (iapply complexu_mul (iapply vectoru_neg ii)) (iapply Cx (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply clog (iapply vectoru_neg ii)))
(rule (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) NIL)) EMPTY)
(rule (iapply trace (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply dimindex UNIV)))
(rule (iapply (iapply continuous (iapply (iapply o Cx) (iapply (iapply o f) Re))) (iapply (iapply within (iapply at (iapply Cx x))) real0)) (iapply (iapply realu_continuous f) (iapply atreal x)))
(rule (iapply (iapply (iapply inju_orbit p) x) (iapply NUMERAL u_0)) T)
(rule (iapply CARD (iapply (iapply INSERT x) EMPTY)) (iapply NUMERAL (iapply BIT1 u_0)))
(rule (iapply affu_dim (iapply (iapply INSERT a) EMPTY)) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply diameter (iapply (iapply INSERT a) EMPTY)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply w_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply dot x) y))
(rule (iapply (iapply cross (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply vectoru_neg (iapply basis (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply IMAGE I) S) S)
(rule (iapply mku_finiteu_sum (iapply destu_finiteu_sum a)) a)
(rule (iapply mku_finiteu_product (iapply destu_finiteu_product a)) a)
(rule (iapply (iapply ZIP NIL) NIL) NIL)
(rule (iapply (iapply ZIP NIL) l2) NIL)
(rule (iapply (iapply ou_funs (iapply (iapply (iapply f x) V) E)) (iapply (iapply (iapply (iapply (iapply poweru_maps f) x) V) E) n)) (iapply (iapply (iapply (iapply (iapply poweru_maps f) x) V) E) (iapply SUC n)))
(rule (iapply (iapply closestu_point (iapply (iapply voronoiu_list V) (iapply (iapply truncateu_simplex (iapply SUC i0)) ul))) (iapply (iapply (iapply omegau_listu_n V) ul) i0)) (iapply (iapply (iapply omegau_listu_n V) ul) (iapply SUC i0)))
(rule (iapply (iapply dot (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply IMAGE f) EMPTY) EMPTY)
(rule (iapply (iapply t_u_c UNIV) UNIV) UNIV)
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_div e) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) e))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Arg z))) (iapply (iapply realu_lt (iapply Arg z)) pi)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Im z)))
(rule (iapply open (iapply (iapply DIFF UNIV) s0)) (iapply closed s0))
(rule (iapply closed (iapply (iapply DIFF UNIV) s0)) (iapply open s0))
(rule (iapply (iapply MAP f) NIL) NIL)
(rule (iapply (iapply ITER n) I) I)
(rule (iapply (iapply a_ (iapply (iapply dot x) x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply vectoru_norm x)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_ge x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply safesqrt x))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply f (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply sum (iapply (iapply o_o_ m) (iapply NUMERAL u_0))) f))
(rule (iapply (iapply b_s_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply Re z)) (iapply Im z))) (iapply Im (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a) x)) (iapply (iapply realu_le x) b))) (iapply (iapply ineq xs) c)) (iapply (iapply ineq (iapply (iapply CONS (iapply (iapply c_ a) (iapply (iapply c_ x) b))) xs)) c))
(rule (iapply (iapply realu_mul (iapply gchi (iapply sqrt x5))) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply gchi5u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply gchi (iapply sqrt x6))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply gchi6u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply b_s_ (iapply (iapply l_ n) m)) (iapply (iapply s_b_ (iapply (iapply l_a_ p) m)) (iapply (iapply l_a_ n) q))) (iapply (iapply SUBSET (iapply (iapply o_o_ m) n)) (iapply (iapply o_o_ p) q)))
(rule (iapply (iapply realu_mul (iapply rho (iapply sqrt x1))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazimu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le x) a)) (iapply (iapply s_b_ (iapply (iapply realu_le y) a)) (iapply (iapply realu_le z) a))) (iapply (iapply realu_le (iapply (iapply (iapply maxu_real3 x) y) z)) a))
(rule (iapply measure (iapply conv0 (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY)))))) (iapply (iapply (iapply (iapply volu_conv v0) v1) v2) v3))
(rule (iapply (iapply realu_mul (iapply gchi (iapply sqrt x1))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply gchi1u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply gchi (iapply sqrt x2))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply gchi2u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_le (iapply (iapply (iapply (iapply azim v0) v1) w1) x)) (iapply (iapply (iapply (iapply azim v0) v1) w1) w2)) (iapply (iapply IN x) (iapply (iapply (iapply (iapply wedgeu_ge v0) v1) w1) w2)))
(rule (iapply (iapply a_ (iapply (iapply realu_sub (iapply (iapply float a) b)) (iapply (iapply float ai_) bi_))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply float a) b)) (iapply (iapply float ai_) bi_)))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_sub (iapply (iapply float ai_) bi_)) (iapply (iapply float a) b))) (iapply (iapply realu_le (iapply (iapply float a) b)) (iapply (iapply float ai_) bi_)))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_sub (iapply (iapply float ai_) bi_)) (iapply (iapply float a) b))) (iapply (iapply realu_lt (iapply (iapply float a) b)) (iapply (iapply float ai_) bi_)))
(rule (iapply (iapply realu_mul (iapply gchi (iapply sqrt x3))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply gchi3u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply gchi (iapply sqrt x4))) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply gchi4u_x x1) x2) x3) x4) x5) x6))
(rule (iapply sqrt (iapply (iapply realu_div (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x2) x3))) (iapply (iapply (iapply upsu_x x1) x2) x3))) (iapply (iapply (iapply etau_x x1) x2) x3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 deltau_x) (iapply constant6 a)) proju_x2) proju_x3) proju_x4) (iapply constant6 b)) (iapply constant6 c)) (iapply (iapply (iapply deltau_234u_x a) b) c))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 deltau_x) proju_x1) (iapply constant6 a)) proju_x3) (iapply constant6 b)) proju_x5) (iapply constant6 c)) (iapply (iapply (iapply deltau_135u_x a) b) c))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply realu_sub a) e)) x)) (iapply (iapply realu_le x) (iapply (iapply realu_add a) e))) (iapply (iapply realu_le (iapply realu_abs (iapply (iapply realu_sub x) a))) e))
(rule (iapply (iapply IN (iapply realu_neg x)) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply realu_neg b)) (iapply realu_neg a))) NIL))) (iapply (iapply IN x) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 taumu_x) proju_x1) (iapply constant6 a)) proju_x3) (iapply constant6 b)) proju_x5) (iapply constant6 c)) (iapply (iapply (iapply taumu_sub246u_x a) b) c))
(rule (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot x) z)) y)) (iapply (iapply r_ (iapply (iapply dot x) y)) z)) (iapply (iapply cross x) (iapply (iapply cross y) z)))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_ m) (iapply (iapply p_ n) p))) (iapply (iapply l_a_ n) (iapply (iapply p_ m) p))) (iapply (iapply l_a_ (iapply dist (iapply (iapply c_ m) n))) p))
(rule (iapply (iapply (iapply hasu_integral (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply lift y)) (iapply (iapply IMAGE lift) s0)) (iapply (iapply (iapply hasu_realu_integral f) y) s0))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add b) (iapply (iapply realu_sub c) a))) (iapply (iapply (iapply dua a) b) c))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 taumu_x) proju_x1) proju_x2) (iapply constant6 a)) (iapply constant6 b)) (iapply constant6 c)) proju_x6) (iapply (iapply (iapply taumu_sub345u_x a) b) c))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 deltau_x) proju_x1) proju_x2) (iapply constant6 a)) (iapply constant6 b)) (iapply constant6 c)) proju_x6) (iapply (iapply (iapply deltau_126u_x a) b) c))
(rule (iapply (iapply (iapply FCONS a) f) (iapply SUC n)) (iapply f n))
(rule (iapply (iapply (iapply (iapply mirror H) x) n) n) (iapply (iapply (iapply complement H) x) n))
(rule (iapply (iapply (iapply (iapply conicu_cap v0) v0) r) a) EMPTY)
(rule (iapply (iapply continuous (iapply (iapply o lift) f)) net0) (iapply (iapply realu_continuous f) net0))
(rule (iapply (iapply (iapply bnu_nextElem NIL) b) x) b)
(rule (iapply (iapply (iapply COND (iapply earu_sy s0)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply sigmau_sy s0))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply frac x)) x))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply floor x)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply f (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply product (iapply (iapply o_o_ m) (iapply NUMERAL u_0))) f))
(rule (iapply (iapply a_ (iapply (iapply dot x) x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ (iapply vectoru_norm x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply w_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply csin z)) (iapply ccos z))) (iapply csin (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) z)))
(rule (iapply (iapply vectoru_sub (iapply vec (iapply NUMERAL u_0))) x) (iapply vectoru_neg x))
(rule (iapply (iapply (iapply bnu_replace x) ys) NIL) NIL)
(rule (iapply (iapply (iapply COND (iapply (iapply naddu_eq x) (iapply naddu_ofu_num (iapply NUMERAL u_0)))) (iapply naddu_ofu_num (iapply NUMERAL u_0))) (iapply mku_nadd (iapply naddu_rinv x))) (iapply naddu_inv x))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply atn (iapply halfatn4 x))) (iapply atn x))
(rule (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply sin x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply cos x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_div (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply cos (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))
(rule (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply cos x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply sin x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply atn (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) pi)
(rule (iapply (iapply vectoru_sub x) (iapply vec (iapply NUMERAL u_0))) x)
(rule (iapply complex (iapply (iapply c_ (iapply (iapply realu_add (iapply Re w)) (iapply Re z))) (iapply (iapply realu_add (iapply Im w)) (iapply Im z)))) (iapply (iapply vectoru_add w) z))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply w_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) a))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply sin (iapply (iapply (iapply (iapply azim (iapply vec (iapply NUMERAL u_0))) u) v) w))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply cross u) v)) w)))
(rule (iapply (iapply continuous (iapply (iapply o Cx) f)) net0) (iapply (iapply realu_continuous f) net0))
(rule (iapply realu_abs (iapply (iapply realu_sub (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply distance (iapply (iapply c_ x) y)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply w_ (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply (iapply rpow x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply complexu_pow x) n)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply DIFF (iapply closedu_realu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply openu_realu_segment (iapply (iapply c_ a) b)))
(rule (iapply (iapply DIFF (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply openu_interval (iapply (iapply c_ a) b)))
(rule (iapply (iapply DIFF (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply openu_realu_interval (iapply (iapply c_ a) b)))
(rule (iapply (iapply t_ (iapply BIT1 m)) (iapply (iapply t_ (iapply (iapply EXP (iapply BIT1 m)) n)) (iapply (iapply EXP (iapply BIT1 m)) n))) (iapply (iapply EXP (iapply BIT1 m)) (iapply BIT1 n)))
(rule (iapply (iapply t_ (iapply BIT0 m)) (iapply (iapply t_ (iapply (iapply EXP (iapply BIT0 m)) n)) (iapply (iapply EXP (iapply BIT0 m)) n))) (iapply (iapply EXP (iapply BIT0 m)) (iapply BIT1 n)))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le a) b)) (iapply openu_realu_interval (iapply (iapply c_ a) b))) (iapply openu_realu_interval (iapply (iapply c_ b) a))) (iapply openu_realu_segment (iapply (iapply c_ a) b)))
(rule (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply vectoru_sub x) (iapply lift e))) (iapply (iapply vectoru_add x) (iapply lift e)))) NIL)) (iapply cball (iapply (iapply c_ x) e)))
(rule (iapply (iapply intu_mul (iapply (iapply intu_pow (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) n)) (iapply (iapply intu_pow (iapply intu_ofu_num x)) n)) (iapply (iapply intu_pow (iapply intu_neg (iapply intu_ofu_num x))) n))
(rule (iapply (iapply t_ (iapply FACT n)) (iapply (iapply t_ (iapply FACT k)) (iapply binom (iapply (iapply c_ (iapply (iapply p_ n) k)) k)))) (iapply FACT (iapply (iapply p_ n) k)))
(rule (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL (iapply BIT1 u_0))))) NIL))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_mul (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_lt (iapply sin (iapply (iapply (iapply (iapply azim (iapply vec (iapply NUMERAL u_0))) u) v) w))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt (iapply (iapply dot (iapply (iapply cross u) v)) w)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply POWER bnu_rotate1) n) xs) (iapply (iapply bnu_rotate n) xs))
(rule (iapply (iapply realu_mul sol0) (iapply (iapply realu_div (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) tau0)) mm1)
(rule (iapply coplanar (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY))))) (iapply (iapply a_ (iapply (iapply dot (iapply (iapply cross x) y)) z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply ALL2 P) NIL) NIL) T)
(rule (iapply (iapply projection d) (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply ALL2 P) NIL) l2) (iapply (iapply a_ l2) NIL))
(rule (iapply (iapply (iapply COND (iapply (iapply l_ n) m)) NIL) (iapply (iapply APPEND (iapply (iapply UPT m) n)) (iapply (iapply CONS n) NIL))) (iapply (iapply UPT m) (iapply SUC n)))
(rule (iapply (iapply vectoru_add (iapply vec (iapply NUMERAL u_0))) x) x)
(rule (iapply (iapply vectoru_add x) (iapply vec (iapply NUMERAL u_0))) x)
(rule (iapply (iapply INTER (iapply aff (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) EMPTY)))) (iapply (iapply (iapply (iapply wedge v0) v1) w1) w2)) EMPTY)
(rule (iapply promote1u_tou_6 sqrt) proju_y1)
(rule (iapply promote1u_tou_6 halfbumpu_x) halfbumpu_x1)
(rule (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) EMPTY) (iapply span EMPTY))
(rule (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) EMPTY) (iapply (iapply hull convexu_cone) EMPTY))
(rule (iapply (iapply (iapply bnu_mapAt NIL) f) xs) xs)
(rule (iapply setu_ofu_list (iapply bnu_verticesu_face fs)) (iapply bnu_verticesu_set fs))
(rule (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT v) (iapply (iapply INSERT (iapply (iapply cross v) w)) EMPTY)))) (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY)))))
(rule (iapply (iapply POWER f) (iapply NUMERAL u_0)) I)
(rule (iapply (iapply ITER (iapply NUMERAL u_0)) f) I)
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_pow (iapply intu_ofu_num (iapply NUMERAL u_0))) n))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_pow (iapply realu_ofu_num (iapply NUMERAL u_0))) n))
(rule (iapply (iapply realu_pow (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) n)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply (iapply m_m_m_g_ (iapply (iapply o f) drop)) a) (iapply (iapply within (iapply at (iapply lift x))) (iapply (iapply IMAGE lift) s0))) (iapply (iapply (iapply m_m_m_g_ f) a) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply realu_sub (iapply (iapply (iapply (iapply vol3r y1) y2) y3) r)) (iapply (iapply (iapply (iapply (iapply vol3f y1) y2) y3) r) f)) (iapply (iapply (iapply (iapply (iapply gamma3f y1) y2) y3) r) f))
(rule (iapply (iapply (iapply (iapply (iapply frustum v0) v0) h1) h2) a) EMPTY)
(rule (iapply (iapply (iapply omegau_listu_n V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) NIL)))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply omegau_list V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) NIL))))
(rule (iapply (iapply realu_pow (iapply (iapply (iapply (iapply (iapply (iapply deltau_x4 x1) x2) x3) x4) x5) x6)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply (iapply (iapply (iapply (iapply delta4u_squaredu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply glue p) q) n) (iapply NUMERAL u_0)) (iapply p (iapply NUMERAL u_0)))
(rule (iapply (iapply IN x) (iapply (iapply supportu_list p) n)) (iapply (iapply (iapply inu_list p) n) x))
(rule (iapply (iapply dot (iapply (iapply r_ c) x)) y) (iapply (iapply realu_mul c) (iapply (iapply dot x) y)))
(rule (iapply (iapply dot x) (iapply (iapply r_ c) y)) (iapply (iapply realu_mul c) (iapply (iapply dot x) y)))
(rule (iapply pathstart (iapply (iapply (iapply subpath u) v) g)) (iapply g u))
(rule (iapply (iapply r_ a) (iapply (iapply r_ b) x)) (iapply (iapply r_ (iapply (iapply realu_mul a) b)) x))
(rule (iapply (iapply (iapply a_a_ x) y) rel) (iapply (iapply rel x) y))
(rule (iapply reversepath (iapply (iapply (iapply subpath u) v) g)) (iapply (iapply (iapply subpath v) u) g))
(rule (iapply (iapply (iapply INV R) x) y) (iapply (iapply R y) x))
(rule (iapply pathfinish (iapply (iapply (iapply subpath u) v) g)) (iapply g v))
(rule (iapply (iapply realu_mul (iapply (iapply prod0 (iapply (iapply c_ (iapply NUMERAL u_0)) n)) f)) (iapply (iapply prod0 (iapply (iapply c_ n) p)) f)) (iapply (iapply prod0 (iapply (iapply c_ (iapply NUMERAL u_0)) (iapply (iapply p_ n) p))) f))
(rule (iapply LAST (iapply (iapply CONS h) NIL)) h)
(rule (iapply HD (iapply (iapply CONS h) t)) h)
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div e) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) e)
(rule (iapply OUTR (iapply INR y)) y)
(rule (iapply (iapply add6 (iapply truncateu_dihu_x c)) (iapply (iapply add6 (iapply rotate2 (iapply truncateu_dihu_x c))) (iapply (iapply sub6 (iapply rotate3 (iapply truncateu_dihu_x c))) (iapply constant6 pi)))) (iapply truncateu_solu_x c))
(rule (iapply (iapply a_ (iapply vectoru_norm (iapply normize u))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply w_ (iapply (iapply a_ u) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply (iapply ITER (iapply NUMERAL (iapply BIT1 u_0))) f) f)
(rule (iapply (iapply subtopology top) (iapply topspace top)) top)
(rule (iapply relativeu_interior (iapply (iapply INSERT a) EMPTY)) (iapply (iapply INSERT a) EMPTY))
(rule (iapply conv0 (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT x) EMPTY))
(rule (iapply conv (iapply (iapply INSERT u) EMPTY)) (iapply (iapply INSERT u) EMPTY))
(rule (iapply cball (iapply (iapply c_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply INSERT x) EMPTY))
(rule (iapply UNIONS (iapply (iapply INSERT s0) EMPTY)) s0)
(rule (iapply INTERS (iapply (iapply INSERT s0) EMPTY)) s0)
(rule (iapply transp (iapply mat n)) (iapply mat n))
(rule (iapply (iapply (iapply ITER (iapply NUMERAL u_0)) f) x) x)
(rule (iapply (iapply a_ (iapply vector (iapply (iapply CONS a1) (iapply (iapply CONS a2) NIL)))) (iapply vector (iapply (iapply CONS b1) (iapply (iapply CONS b2) NIL)))) (iapply (iapply s_b_ (iapply (iapply a_ a1) b1)) (iapply (iapply a_ a2) b2)))
(rule (iapply (iapply realu_div (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_div a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_mul (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_mul a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply bnu_removeKeyList NIL) ps) ps)
(rule (iapply promote1u_tou_6 (iapply gamma2u_xu_divu_azim m)) (iapply gamma2u_x1u_divu_a m))
(rule (iapply (iapply realu_mul (iapply vectoru_norm u)) (iapply (iapply realu_mul (iapply vectoru_norm v)) (iapply cos (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) u) v)))) (iapply (iapply dot u) v))
(rule (iapply (iapply m_m_m_g_ (iapply (iapply o drop) s0)) (iapply drop l)) (iapply (iapply m_m_g_ s0) l))
(rule (iapply frontier (iapply (iapply DIFF UNIV) s0)) (iapply frontier s0))
(rule (iapply (iapply (iapply subpath (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))) (iapply vec (iapply NUMERAL u_0))) g) (iapply reversepath g))
(rule (iapply relativeu_interior (iapply (iapply hull affine) s0)) (iapply (iapply hull affine) s0))
(rule (iapply (iapply within (iapply at x)) UNIV) (iapply at x))
(rule (iapply rank (iapply transp A0)) (iapply rank A0))
(rule (iapply det (iapply transp A0)) (iapply det A0))
(rule (iapply (iapply hull affine) (iapply closure s0)) (iapply (iapply hull affine) s0))
(rule (iapply orthogonalu_matrix (iapply transp A0)) (iapply orthogonalu_matrix A0))
(rule (iapply OUTL (iapply INL x)) x)
(rule (iapply (iapply intu_le (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply intu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply intu_le (iapply intu_abs x)) (iapply intu_abs y)))
(rule (iapply (iapply realu_le (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_le (iapply realu_abs x)) (iapply realu_abs y)))
(rule (iapply (iapply complexu_div (iapply (iapply complexu_mul a) (iapply cnj b))) (iapply (iapply complexu_pow (iapply Cx (iapply vectoru_norm b))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply complexu_div a) b))
(rule (iapply (iapply intu_lt (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply intu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply intu_lt (iapply intu_abs x)) (iapply intu_abs y)))
(rule (iapply (iapply realu_lt (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_lt (iapply realu_abs x)) (iapply realu_abs y)))
(rule (iapply (iapply realu_mul (iapply vectoru_norm u)) (iapply (iapply realu_mul (iapply vectoru_norm v)) (iapply sin (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) u) v)))) (iapply vectoru_norm (iapply (iapply cross u) v)))
(rule (iapply (iapply UNION (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY)))) (iapply complementu_set (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY)))) UNIV)
(rule (iapply (iapply b_s_ (iapply (iapply a_ u) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ v) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply (iapply complexu_div u) v)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ y) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply (iapply complexu_mul x) y)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply w_ (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply w_ (iapply (iapply a_ (iapply (iapply realu_mul x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply intu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply intu_abs x)) (iapply intu_abs y)))
(rule (iapply (iapply a_ (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply realu_abs x)) (iapply realu_abs y)))
(rule (iapply CARD (iapply (iapply setu_ofu_orbits D) f)) (iapply (iapply numberu_ofu_orbits D) f))
(rule (iapply (iapply destu_cart x) (iapply finiteu_index i0)) (iapply (iapply d_ x) i0))
(rule (iapply cos (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_num n)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)))) (iapply cos x))
(rule (iapply sin (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_num n)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)))) (iapply sin x))
(rule (iapply (iapply vsum (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 u_0)))) f) (iapply f (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply d_ (iapply lambda g)) (iapply NUMERAL (iapply BIT1 u_0))) (iapply g (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply setu_ofu_exceptionalu_meetingu_node (iapply oppositeu_hypermap H)) x) (iapply (iapply setu_ofu_exceptionalu_meetingu_node H) x))
(rule (iapply (iapply setu_ofu_faceu_meetingu_node (iapply oppositeu_hypermap H)) x) (iapply (iapply setu_ofu_faceu_meetingu_node H) x))
(rule (iapply (iapply setu_ofu_trianglesu_meetingu_node (iapply oppositeu_hypermap H)) x) (iapply (iapply setu_ofu_trianglesu_meetingu_node H) x))
(rule (iapply (iapply setu_ofu_quadrilateralsu_meetingu_node (iapply oppositeu_hypermap H)) x) (iapply (iapply setu_ofu_quadrilateralsu_meetingu_node H) x))
(rule (iapply pathfinish (iapply (iapply p_p_ g1) g2)) (iapply pathfinish g2))
(rule (iapply (iapply (iapply hasu_vectoru_derivative f) (iapply (iapply vectoru_derivative f) net0)) net0) (iapply (iapply differentiable f) net0))
(rule (iapply pathstart (iapply (iapply p_p_ g1) g2)) (iapply pathstart g1))
(rule (iapply (iapply (iapply sums f) (iapply (iapply infsum s0) f)) s0) (iapply (iapply summable s0) f))
(rule (iapply closure (iapply (iapply voronoiu_open S) v)) (iapply (iapply voronoiu_closed S) v))
(rule (iapply LENGTH (iapply (iapply MAP f) l)) (iapply LENGTH l))
(rule (iapply (iapply realu_pow (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply UNIONS (iapply (iapply DELETE s0) EMPTY)) (iapply UNIONS s0))
(rule (iapply INTERS (iapply (iapply DELETE f) UNIV)) (iapply INTERS f))
(rule (iapply (iapply (iapply hasu_complexu_derivative (iapply (iapply o Cx) (iapply (iapply o f) Re))) (iapply Cx fi_)) (iapply (iapply within (iapply at (iapply Cx a))) real0)) (iapply (iapply (iapply hasu_realu_derivative f) fi_) (iapply atreal a)))
(rule (iapply (iapply r_r_ (iapply realu_ofu_num (iapply NUMERAL u_0))) A0) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply (iapply INSERT (iapply NUMERAL u_0)) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) EMPTY))) (iapply (iapply o_o_ (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply (iapply realu_mul (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) a)) a)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply w_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply mku_net (iapply netord a)) a)
(rule (iapply topspace (iapply (iapply subtopology euclidean) s0)) s0)
(rule (iapply (iapply POWER f) (iapply NUMERAL (iapply BIT1 u_0))) f)
(rule (iapply (iapply (iapply subpath (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))) g) g)
(rule (iapply circumcenter (iapply (iapply INSERT x) EMPTY)) x)
(rule (iapply (iapply setu_partu_components H) (iapply dart H)) (iapply setu_ofu_components H))
(rule (iapply cos (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_int n)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)))) (iapply cos x))
(rule (iapply sin (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_int n)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)))) (iapply sin x))
(rule (iapply (iapply b_s_ (iapply rotationu_matrix Q)) (iapply rotoinversionu_matrix Q)) (iapply orthogonalu_matrix Q))
(rule (iapply (iapply DELETE s0) (iapply CHOICE s0)) (iapply REST s0))
(rule (iapply (iapply INTER (iapply inside s0)) s0) EMPTY)
(rule (iapply (iapply INTER (iapply outside s0)) s0) EMPTY)
(rule (iapply ball (iapply (iapply c_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) EMPTY)
(rule (iapply (iapply res f) EMPTY) I)
(rule (iapply (iapply (iapply COND (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply rpow (iapply realu_ofu_num (iapply NUMERAL u_0))) y))
(rule (iapply (iapply IN x) (iapply (iapply realu_itv (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply triu_itv x))
(rule (iapply (iapply m_m_g_ (iapply (iapply o Cx) s0)) (iapply Cx l)) (iapply (iapply m_m_m_g_ s0) l))
(rule (iapply (iapply m_m_g_ (iapply (iapply o lift) s0)) (iapply lift l)) (iapply (iapply m_m_m_g_ s0) l))
(rule (iapply TL (iapply (iapply CONS h) t)) t)
(rule (iapply (iapply continuous (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply (iapply within (iapply at (iapply lift x))) (iapply (iapply IMAGE lift) s0))) (iapply (iapply realu_continuous f) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply norm2hh (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply norm2hhu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply rhazim (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazimu_x x1) x2) x3) x4) x5) x6))
(rule (iapply sqrt (iapply quadraticu_rootu_plus (iapply abcu_ofu_quadratic (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply muR y1) y2) y3) y4) y5) y6) y7) y8) y9)))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply enclosed y1) y2) y3) y4) y5) y6) y7) y8) y9))
(rule (iapply measure (iapply (iapply INTER (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) (iapply (iapply INSERT u) EMPTY))))) (iapply (iapply normball x) r))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLR0 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_vLR0 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply surfR (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply etau_y y1) y2) y6)) c) (iapply (iapply (iapply (iapply surfRy y1) y2) y6) c))
(rule (iapply (iapply (iapply (iapply (iapply (iapply surfy (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply surfu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply surfRy y1) y2) y6) (iapply sqrt c2))) (iapply (iapply (iapply (iapply surfRy y2) y1) y6) (iapply sqrt c2))) (iapply (iapply (iapply (iapply surfRdyc2 y1) y2) y6) c2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_v0 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_v0 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply omegau_listu_n V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) (iapply (iapply CONS u3) NIL))))) (iapply NUMERAL u_0)) (iapply (iapply omegau_list V) (iapply (iapply CONS u0) NIL)))
(rule (iapply (iapply (iapply omegau_listu_n V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) NIL)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply omegau_list V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) NIL)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply vol3fu_sqrt2u_lmplus (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply vol3fu_xu_sqrt2u_lmplus x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_lfun (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_vLRu_lfun x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_lfun (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_vLu_lfun x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_nlfun (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_xu_nlfun x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vu_lfun (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_vu_lfun x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add y1) (iapply (iapply realu_mul (iapply (iapply realu_sub x) x1)) (iapply (iapply realu_div (iapply (iapply realu_sub y2) y1)) (iapply (iapply realu_sub x2) x1)))) (iapply (iapply (iapply (iapply (iapply interp x1) y1) x2) y2) x))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_n0 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_xu_n0 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vL0 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_vL0 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_n0 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_xu_n0 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply rhazim2 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim2u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_nlfun (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_xu_nlfun x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply rhazim3 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim3u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) (iapply (iapply (iapply (iapply azim x) v) u) w)) (iapply (iapply (iapply (iapply azim1 x) v) u) w))
(rule (iapply (iapply (iapply (iapply azim (iapply (iapply vectoru_add a) v)) (iapply (iapply vectoru_add a) w)) (iapply (iapply vectoru_add a) w1)) (iapply (iapply vectoru_add a) w2)) (iapply (iapply (iapply (iapply azim v) w) w1) w2))
(rule (iapply (iapply UNION (iapply d1u_fan (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply d20u_fan (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply du_fan (iapply (iapply c_ x) (iapply (iapply c_ V) E))))
(rule (iapply (iapply realu_le (iapply (iapply realu_div (iapply realu_ofu_num p)) (iapply realu_ofu_num m))) (iapply (iapply realu_div (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_le (iapply (iapply realu_div (iapply realu_ofu_num p)) (iapply realu_ofu_num m))) (iapply realu_ofu_num n)))
(rule (iapply (iapply realu_le (iapply (iapply realu_div (iapply realu_ofu_num p)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_div (iapply realu_ofu_num n)) (iapply realu_ofu_num m))) (iapply (iapply realu_le (iapply realu_ofu_num p)) (iapply (iapply realu_div (iapply realu_ofu_num n)) (iapply realu_ofu_num m))))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ v) w))) (iapply w_ (iapply (iapply IN (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY))) E))) (iapply (iapply (iapply diagonal0 E) v) w))
(rule (iapply (iapply (iapply m_m_g_ f) (iapply f x)) (iapply (iapply within (iapply atreal x)) s0)) (iapply (iapply continuous f) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) (iapply dart1u_ofu_fan (iapply (iapply c_ V) E)))) (iapply (iapply nu_fanu_pair (iapply (iapply c_ V) E)) x)) x) (iapply (iapply nu_fanu_pairu_ext (iapply (iapply c_ V) E)) x))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) (iapply dart1u_ofu_fan (iapply (iapply c_ V) E)))) (iapply (iapply fu_fanu_pair (iapply (iapply c_ V) E)) x)) x) (iapply (iapply fu_fanu_pairu_ext (iapply (iapply c_ V) E)) x))
(rule (iapply (iapply complexu_mul (iapply vectoru_neg ii)) (iapply (iapply complexu_div (iapply (iapply vectoru_sub z) (iapply cnj z))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply Cx (iapply Im z)))
(rule (iapply (iapply realu_div x) (iapply sqrt (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sin (iapply atn x)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply complexu_pow (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) n))
(rule (iapply (iapply sum (iapply (iapply INSERT x) EMPTY)) f) (iapply f x))
(rule (iapply (iapply a_ (iapply (iapply hull conic) s0)) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ (iapply (iapply hull convex) s0)) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ (iapply (iapply hull affine) s0)) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply (iapply hasu_integral (iapply indicator s0)) (iapply vec (iapply NUMERAL u_0))) UNIV) (iapply negligible s0))
(rule (iapply (iapply (iapply bnu_tabulate2 (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) bnu_enumerator) bnu_enumTab)
(rule (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) sqrt8) sqrt2)
(rule (iapply (iapply (iapply COND (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply complexu_pow z) n)) (iapply (iapply cpow z) (iapply Cx (iapply realu_ofu_num n))))
(rule (iapply (iapply a_ (iapply (iapply hull affine) s0)) s0) (iapply affine s0))
(rule (iapply (iapply a_ (iapply (iapply hull conic) s0)) s0) (iapply conic s0))
(rule (iapply dim (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) s0)) (iapply dim s0))
(rule (iapply (iapply a_ (iapply (iapply hull convex) s0)) s0) (iapply convex s0))
(rule (iapply (iapply DIFF (iapply (iapply rogers V) ul)) (iapply ball (iapply (iapply c_ (iapply HD ul)) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply mcell0 V) ul))
(rule (iapply sqrt (iapply (iapply realu_add (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply radius (iapply (iapply c_ x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply drop a)) (iapply drop b))) (iapply (iapply realu_sub (iapply drop b)) (iapply drop a))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply drop a)) (iapply drop b))) (iapply (iapply realu_sub (iapply drop b)) (iapply drop a))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply drop a)) (iapply drop b))) (iapply (iapply realu_sub (iapply drop b)) (iapply drop a))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply drop a)) (iapply drop b))) (iapply (iapply realu_sub (iapply drop b)) (iapply drop a))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply drop a)) (iapply drop b))) (iapply openu_interval (iapply (iapply c_ a) b))) (iapply openu_interval (iapply (iapply c_ b) a))) (iapply openu_segment (iapply (iapply c_ a) b)))
(rule (iapply Arg (iapply (iapply complexu_div (iapply (iapply dropout (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) y)) (iapply (iapply dropout (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) x))) (iapply (iapply (iapply (iapply azim (iapply vec (iapply NUMERAL u_0))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) x) y))
(rule (iapply (iapply a_ (iapply (iapply connectedu_component s0) x)) EMPTY) (iapply w_ (iapply (iapply IN x) s0)))
(rule (iapply (iapply a_ (iapply (iapply pathu_component s0) x)) EMPTY) (iapply w_ (iapply (iapply IN x) s0)))
(rule (iapply (iapply openu_in (iapply (iapply subtopology top) u)) u) (iapply (iapply SUBSET u) (iapply topspace top)))
(rule (iapply distance (iapply (iapply c_ x) y)) (iapply vectoru_norm (iapply (iapply vectoru_sub x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) (iapply SUC n))) (iapply (iapply INSERT (iapply SUC n)) (iapply (iapply o_o_ m) n))) (iapply (iapply o_o_ m) n)) (iapply (iapply o_o_ m) (iapply SUC n)))
(rule (iapply (iapply closedu_in (iapply (iapply subtopology top) u)) u) (iapply (iapply SUBSET u) (iapply topspace top)))
(rule (iapply (iapply a_ (iapply (iapply connectedu_component s0) x)) UNIV) (iapply (iapply a_ s0) UNIV))
(rule (iapply (iapply a_ (iapply (iapply INTER s0) t)) EMPTY) (iapply (iapply DISJOINT s0) t))
(rule (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply INSERT x) EMPTY)))) (iapply (iapply a_ (iapply (iapply dropout (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) x)) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply vectoru_neg x)) (iapply vec (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply IN x) (iapply (iapply INSERT y) EMPTY)) (iapply (iapply a_ x) y))
(rule (iapply (iapply SUBSET (iapply (iapply INSERT x) EMPTY)) s0) (iapply (iapply IN x) s0))
(rule (iapply (iapply a_ (iapply (iapply INSERT x) s0)) s0) (iapply (iapply IN x) s0))
(rule (iapply (iapply a_ (iapply (iapply UNION s0) t)) t) (iapply (iapply SUBSET s0) t))
(rule (iapply (iapply extremeu_pointu_of x) (iapply (iapply INSERT a) EMPTY)) (iapply (iapply a_ x) a))
(rule (iapply (iapply (iapply bnu_splitAtRec c) NIL) xs) (iapply (iapply bnu_splitAt c) xs))
(rule (iapply (iapply faceu_of (iapply (iapply INSERT x) EMPTY)) s0) (iapply (iapply extremeu_pointu_of x) s0))
(rule (iapply (iapply a_ (iapply (iapply INTER s0) t)) s0) (iapply (iapply SUBSET s0) t))
(rule (iapply (iapply a_ (iapply (iapply DELETE s0) x)) s0) (iapply w_ (iapply (iapply IN x) s0)))
(rule (iapply (iapply nsum (iapply (iapply INSERT x) EMPTY)) f) (iapply f x))
(rule (iapply (iapply realu_max (iapply realu_abs (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply realu_abs (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply infnorm x))
(rule (iapply setdist (iapply (iapply c_ s0) EMPTY)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply setdist (iapply (iapply c_ EMPTY) t)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply matrixu_vectoru_mul A0) (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply d_ (iapply lambda g)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply g (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply (iapply d_ (iapply lambda g)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply g (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply RELPOW (iapply NUMERAL u_0)) R) x) y) (iapply (iapply a_ x) y))
(rule (iapply (iapply CONS x) (iapply (iapply REPLICATE n) x)) (iapply (iapply REPLICATE (iapply SUC n)) x))
(rule (iapply (iapply IMAGE finiteu_index) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply dimindex UNIV))) UNIV)
(rule (iapply shift (iapply shift (iapply shift H))) H)
(rule (iapply (iapply r_r_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) X) X)
(rule (iapply matrixu_neg (iapply mat (iapply NUMERAL u_0))) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le h) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply marchalu_quartic h)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply marchal h))
(rule (iapply (iapply product (iapply (iapply INSERT x) EMPTY)) f) (iapply f x))
(rule (iapply (iapply (iapply bnu_splitAtRec c) bs) NIL) (iapply (iapply c_ bs) NIL))
(rule (iapply (iapply (iapply omegau_listu_n V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) (iapply (iapply CONS u3) NIL))))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply omegau_list V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) NIL))))
(rule (iapply (iapply a_a_g_ p) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ b) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ r) (iapply (iapply realu_div a) b)))) (iapply (iapply (iapply (iapply ratform p) r) a) b))
(rule (iapply (iapply truncateu_simplex (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) (iapply (iapply CONS d) NIL))))) (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) (iapply (iapply CONS d) NIL)))))
(rule (iapply (iapply (iapply (iapply join p) q) n) (iapply (iapply p_ n) (iapply SUC i0))) (iapply q i0))
(rule (iapply (iapply INTER (iapply (iapply (iapply (iapply (iapply (iapply wedge3u_fan x) V) E) v) u) i0)) (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY)))) EMPTY)
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_y1u_y2 a) (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_x1u_x2 a) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply a_ (iapply (iapply (iapply detu_vec3 (iapply (iapply vectoru_sub v1) v0)) (iapply (iapply vectoru_sub v2) v0)) (iapply (iapply vectoru_sub v3) v0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply coplanaru_alt (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY))))))
(rule (iapply (iapply a_ (iapply (iapply (iapply detu_vec3 (iapply (iapply vectoru_sub v1) v0)) (iapply (iapply vectoru_sub v2) v0)) (iapply (iapply vectoru_sub v3) v0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply coplanar (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply muyu_v v1) v2) v3) v4) v5) (iapply (iapply realu_pow (iapply (iapply d3 v4) v5)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply (iapply frustum v0) v1) (iapply realu_ofu_num (iapply NUMERAL u_0))) h) a) (iapply (iapply (iapply (iapply frustt v0) v1) h) a))
(rule (iapply (iapply vsum (iapply (iapply o_o_ n) m)) (iapply (iapply o f) SUC)) (iapply (iapply vsum (iapply (iapply o_o_ (iapply SUC n)) (iapply SUC m))) f))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply isu_contour H) p) n)) (iapply (iapply isu_inju_list p) n)) (iapply (iapply (iapply isu_inju_contour H) p) n))
(rule (iapply (iapply isu_inju_list (iapply (iapply poweru_list p) x)) n) (iapply (iapply (iapply inju_orbit p) x) n))
(rule (iapply (iapply realu_add (iapply (iapply realu_div e) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div e) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) e)
(rule (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply cos x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply sin x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply cos (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x)))
(rule (iapply (iapply vectoru_sub (iapply (iapply complexu_pow (iapply ccos z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply complexu_pow (iapply csin z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply ccos (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) z)))
(rule (iapply (iapply vectoru_add (iapply (iapply complexu_pow (iapply csin z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply complexu_pow (iapply ccos z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply convexu_localu_fan (iapply (iapply c_ (iapply Vu_SY v)) (iapply (iapply c_ (iapply Eu_SY v)) (iapply Fu_SY v)))) (iapply CONDITION2u_SY v))
(rule (iapply (iapply continuousu_on g) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL (iapply BIT1 u_0))))) NIL))) (iapply path g))
(rule (iapply (iapply (iapply m_m_g_ (iapply (iapply o f) drop)) a) (iapply at (iapply lift x))) (iapply (iapply (iapply m_m_g_ f) a) (iapply atreal x)))
(rule (iapply (iapply a_ (iapply inside s0)) (iapply outside s0)) (iapply (iapply a_ s0) UNIV))
(rule (iapply (iapply MAP (iapply SND p)) (iapply LISTu_TO (iapply FST p))) (iapply bnu_tabulate0 p))
(rule (iapply (iapply pastecart (iapply vec n)) (iapply vec n)) (iapply vec n))
(rule (iapply (iapply add6 rhazimu_x) (iapply (iapply add6 rhazim2u_x) (iapply (iapply sub6 rhazim3u_x) (iapply constant6 (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) const1)) pi))))) taumu_x)
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply Re z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply Im z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply Re z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply Im z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply Re (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply b_s_ (iapply (iapply a_ a) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply a_ b) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply s_b_ (iapply (iapply polaru_le a) b)) (iapply (iapply polaru_le b) a)))
(rule (iapply atn2 (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply continuous (iapply (iapply o Cx) (iapply (iapply o f) Re))) (iapply (iapply within (iapply at (iapply Cx x))) (iapply (iapply INTER real0) (iapply (iapply IMAGE Cx) s0)))) (iapply (iapply realu_continuous f) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET a) b)) (iapply (iapply SUBSET b) a)) (iapply (iapply a_ a) b))
(rule (iapply (iapply r_r_ (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) A0) (iapply matrixu_neg A0))
(rule (iapply (iapply vectoru_variation (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL (iapply BIT1 u_0))))) NIL))) g) (iapply pathu_length g))
(rule (iapply (iapply a_ (iapply relativeu_interior s0)) (iapply closure s0)) (iapply affine s0))
(rule (iapply (iapply r_ (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply vectoru_norm v))) v) (iapply normize v))
(rule (iapply (iapply a_ (iapply openu_in (iapply topology0 r))) r) (iapply istopology r))
(rule (iapply columns (iapply transp A0)) (iapply rows A0))
(rule (iapply rows (iapply transp A0)) (iapply columns A0))
(rule (iapply (iapply realu_div (iapply (iapply realu_sub (iapply cos (iapply (iapply realu_sub x) y))) (iapply cos (iapply (iapply realu_add x) y)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply sin x)) (iapply sin y)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply cross x) y)) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_div (iapply (iapply realu_add (iapply cos (iapply (iapply realu_sub x) y))) (iapply cos (iapply (iapply realu_add x) y)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply cos x)) (iapply cos y)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply intu_abs x)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply intu_abs y)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply intu_abs (iapply (iapply intu_mul x) y))) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_div (iapply (iapply realu_add (iapply sin (iapply (iapply realu_add x) y))) (iapply sin (iapply (iapply realu_sub x) y)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply sin x)) (iapply cos y)))
(rule (iapply (iapply vectoru_add (iapply ccos (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num n))) z))) (iapply (iapply complexu_mul ii) (iapply csin (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num n))) z)))) (iapply (iapply complexu_pow (iapply (iapply vectoru_add (iapply ccos z)) (iapply (iapply complexu_mul ii) (iapply csin z)))) n))
(rule (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply orthogonal x) y))
(rule (iapply (iapply realu_div (iapply (iapply realu_sub (iapply sin (iapply (iapply realu_add x) y))) (iapply sin (iapply (iapply realu_sub x) y)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply cos x)) (iapply sin y)))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) s0)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply drop (iapply (iapply indicator s0) x)))
(rule (iapply (iapply (iapply m_m_m_g_ f) (iapply f x)) (iapply at x)) (iapply (iapply realu_continuous f) (iapply at x)))
(rule (iapply (iapply b_s_ (iapply (iapply l_u_c s0) t)) (iapply (iapply a_u_c s0) t)) (iapply (iapply l_a_u_c s0) t))
(rule (iapply (iapply IN (iapply vectoru_neg x)) (iapply span s0)) (iapply (iapply IN x) (iapply span s0)))
(rule (iapply (iapply (iapply COND b) (iapply SUC (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) x))) (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) x)) (iapply (iapply NUMSUM b) x))
(rule (iapply interior (iapply cball (iapply (iapply c_ x) e))) (iapply ball (iapply (iapply c_ x) e)))
(rule (iapply (iapply a_ (iapply shift H)) (iapply shift Hi_)) (iapply (iapply a_ H) Hi_))
(rule (iapply bnu_concat (iapply (iapply MAP r) xs)) (iapply (iapply cu_union xs) r))
(rule (iapply (iapply a_ (iapply (iapply dot x) x)) (iapply (iapply dot y) y)) (iapply (iapply a_ (iapply vectoru_norm x)) (iapply vectoru_norm y)))
(rule (iapply (iapply realu_le (iapply (iapply dot x) x)) (iapply (iapply dot y) y)) (iapply (iapply realu_le (iapply vectoru_norm x)) (iapply vectoru_norm y)))
(rule (iapply (iapply s_b_ (iapply integer a)) (iapply (iapply s_b_ (iapply (iapply realu_le a) x)) (iapply (iapply realu_lt x) (iapply (iapply realu_add a) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply (iapply a_ (iapply floor x)) a))
(rule (iapply (iapply a_ (iapply (iapply dot (iapply (iapply cross (iapply (iapply vectoru_sub y) x)) (iapply (iapply vectoru_sub z) x))) (iapply (iapply vectoru_sub t) x))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply coplanar (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) (iapply (iapply INSERT t) EMPTY))))))
(rule (iapply (iapply a_ (iapply INJA a1)) (iapply INJA a2)) (iapply (iapply a_ a1) a2))
(rule (iapply (iapply dartu_nondegenerate (iapply shift (iapply shift H))) x) (iapply (iapply dartu_nondegenerate H) x))
(rule (iapply (iapply nsum (iapply (iapply (iapply support p_) f) s0)) f) (iapply (iapply nsum s0) f))
(rule (iapply (iapply (iapply m_m_m_g_ f) (iapply f (iapply netlimit net0))) net0) (iapply (iapply realu_continuous f) net0))
(rule (iapply (iapply a_ (iapply INJF f1)) (iapply INJF f2)) (iapply (iapply a_ f1) f2))
(rule (iapply (iapply vectoru_angle (iapply vectoru_neg x)) (iapply vectoru_neg y)) (iapply (iapply vectoru_angle x) y))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_u_c s0) t)) (iapply (iapply l_a_u_c t) s0)) (iapply (iapply a_u_c s0) t))
(rule (iapply (iapply a_ (iapply u_destu_rec x)) (iapply u_destu_rec y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply sum (iapply (iapply (iapply support realu_add) f) s0)) f) (iapply (iapply sum s0) f))
(rule (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) bnu_excessTCount)
(rule (iapply w_ (iapply (iapply a_ (iapply (iapply hull affine) s0)) UNIV)) (iapply (iapply intu_lt (iapply affu_dim s0)) (iapply intu_ofu_num (iapply dimindex UNIV))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ s0) EMPTY)) (iapply (iapply a_ s0) UNIV)) (iapply (iapply s_b_ (iapply closed s0)) (iapply open s0)))
(rule (iapply (iapply b_s_ (iapply (iapply a_ s0) EMPTY)) (iapply (iapply a_ s0) UNIV)) (iapply (iapply a_ (iapply frontier s0)) EMPTY))
(rule (iapply (iapply r_r_ c) (iapply mat (iapply NUMERAL u_0))) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply (iapply matrixu_vectoru_mul (iapply mat (iapply NUMERAL u_0))) x) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply INTER (iapply (iapply affu_ge (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) EMPTY))) (iapply (iapply INSERT w2) EMPTY))) (iapply (iapply (iapply (iapply wedge v0) v1) w1) w2)) EMPTY)
(rule (iapply (iapply INTER (iapply (iapply affu_ge (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) EMPTY))) (iapply (iapply INSERT w1) EMPTY))) (iapply (iapply (iapply (iapply wedge v0) v1) w1) w2)) EMPTY)
(rule (iapply (iapply b_s_ (iapply (iapply R x) y)) (iapply (iapply R y) x)) (iapply (iapply (iapply SC R) x) y))
(rule (iapply UNIONS (iapply (iapply IMAGE UNIONS) X)) (iapply UNIONS (iapply UNIONS X)))
(rule (iapply sndcart (iapply vectoru_neg x)) (iapply vectoru_neg (iapply sndcart x)))
(rule (iapply fstcart (iapply vectoru_neg x)) (iapply vectoru_neg (iapply fstcart x)))
(rule (iapply trivialu_limit (iapply (iapply within (iapply at a)) s0)) (iapply w_ (iapply (iapply limitu_pointu_of a) s0)))
(rule (iapply (iapply a_ A0) (iapply mat (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply rank A0)) (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply sin x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply cos x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply (iapply hasu_vectoru_derivative (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply lift fi_)) (iapply (iapply within (iapply at (iapply lift x))) (iapply (iapply IMAGE lift) s0))) (iapply (iapply (iapply hasu_realu_derivative f) fi_) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_y1 a) b) (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_x1 a) b) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_y2 a) b) (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_x2 a) b) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply omegau_listu_n V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) (iapply (iapply CONS u3) NIL))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply omegau_list V) (iapply (iapply CONS u0) (iapply (iapply CONS u1) (iapply (iapply CONS u2) NIL)))))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply (iapply (iapply (iapply adjacentu_pai v) v1) v3) v2) v4) s0)) (iapply (iapply (iapply (iapply (iapply (iapply adjacentu_pai v) v2) v4) v1) v3) s0)) (iapply (iapply (iapply (iapply (iapply (iapply conflictingu_dia v) v1) v3) v2) v4) s0))
(rule (iapply (iapply (iapply (iapply iu_fan (iapply vec (iapply NUMERAL u_0))) V) E) (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply (iapply c_ v) (iapply (iapply c_ w) w)))) (iapply (iapply extendedu_dart (iapply (iapply c_ V) E)) (iapply (iapply c_ v) w)))
(rule (iapply (iapply b_s_ (iapply (iapply l_ n) p)) (iapply (iapply b_s_ (iapply (iapply l_ q) m)) (iapply (iapply b_s_ (iapply (iapply l_ n) m)) (iapply (iapply l_ q) p)))) (iapply (iapply DISJOINT (iapply (iapply o_o_ m) n)) (iapply (iapply o_o_ p) q)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_y1 a) b) (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_x1 a) b) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_y2 a) b) (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_x2 a) b) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply dot w) y)) (iapply (iapply dot x) z))) (iapply (iapply realu_mul (iapply (iapply dot w) z)) (iapply (iapply dot x) y))) (iapply (iapply dot (iapply (iapply cross w) x)) (iapply (iapply cross y) z)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) x) V) E) v) (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) x) V) E) v) u) n)) m) (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) x) V) E) v) u) (iapply (iapply p_ m) n)))
(rule (iapply (iapply (iapply COND (iapply w_ (iapply (iapply IN u) (iapply (iapply (iapply setu_ofu_edge v) V) E)))) u) (iapply (iapply (iapply (iapply (iapply sigmau_fan x) V) E) v) u)) (iapply (iapply (iapply (iapply (iapply extensionu_sigmau_fan x) V) E) v) u))
(rule (iapply (iapply c_ (iapply (iapply hrealu_add (iapply (iapply hrealu_mul x1) x2)) (iapply (iapply hrealu_mul y1) y2))) (iapply (iapply hrealu_add (iapply (iapply hrealu_mul x1) y2)) (iapply (iapply hrealu_mul y1) x2))) (iapply (iapply trealu_mul (iapply (iapply c_ x1) y1)) (iapply (iapply c_ x2) y2)))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply taum y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply taum y7) y2) y3) y4) y8) y9)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply tauq y1) y2) y3) y4) y5) y6) y7) y8) y9))
(rule (iapply (iapply b_s_ (iapply (iapply R x) y)) (iapply (iapply a_ x) y)) (iapply (iapply (iapply RC R) x) y))
(rule (iapply (iapply b_s_ (iapply (iapply R a0) a1)) (iapply (iapply a_ a1) a0)) (iapply (iapply (iapply RC R) a0) a1))
(rule (iapply (iapply (iapply (iapply mapAt1 f) n) xs) NIL) (iapply REVERSE xs))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply exp (iapply Re z)))) (iapply (iapply vectoru_add (iapply Cx (iapply cos (iapply Im z)))) (iapply (iapply complexu_mul ii) (iapply Cx (iapply sin (iapply Im z)))))) (iapply cexp z))
(rule (iapply (iapply realu_mul (iapply f (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply f (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply f (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply product (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) f))
(rule (iapply (iapply realu_add (iapply t (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_add (iapply t (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply t (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply sum (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) t))
(rule (iapply (iapply (iapply COND (iapply evenperm p)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply sign p))
(rule (iapply (iapply (iapply MAP2 f) NIL) l) NIL)
(rule (iapply (iapply hull affine) (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT x) EMPTY))
(rule (iapply (iapply hull convex) (iapply (iapply INSERT a) EMPTY)) (iapply (iapply INSERT a) EMPTY))
(rule (iapply bnu_verticesu_face (iapply (iapply c_ vs) f)) vs)
(rule (iapply SND (iapply (iapply c_ x) y)) y)
(rule (iapply FST (iapply (iapply c_ x) y)) x)
(rule (iapply atn2 (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_div (iapply realu_neg pi)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply pairwise r) (iapply (iapply INSERT x) EMPTY)) T)
(rule (iapply (iapply IN (iapply (iapply eeu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) v)) (iapply (iapply dartsu_ofu_hyp E) V)) (iapply (iapply IN v) (iapply (iapply dartsu_ofu_hyp E) V)))
(rule (iapply span (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) s0)) (iapply span s0))
(rule (iapply (iapply hull affine) (iapply (iapply hull affine) s0)) (iapply (iapply hull affine) s0))
(rule (iapply (iapply hull affine) (iapply (iapply hull convex) s0)) (iapply (iapply hull affine) s0))
(rule (iapply span (iapply (iapply DELETE s0) (iapply vec (iapply NUMERAL u_0)))) (iapply span s0))
(rule (iapply (iapply INTER (iapply (iapply hull affine) s0)) s0) s0)
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_sub (iapply ccos (iapply (iapply vectoru_sub w) z))) (iapply ccos (iapply (iapply vectoru_add w) z)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply csin w)) (iapply csin z)))
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_add (iapply ccos (iapply (iapply vectoru_sub w) z))) (iapply ccos (iapply (iapply vectoru_add w) z)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply ccos w)) (iapply ccos z)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ w) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply cexp (iapply (iapply complexu_mul z) (iapply clog w)))) (iapply (iapply cpow w) z))
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_add (iapply csin (iapply (iapply vectoru_add w) z))) (iapply csin (iapply (iapply vectoru_sub w) z)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply csin w)) (iapply ccos z)))
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_sub (iapply csin (iapply (iapply vectoru_add w) z))) (iapply csin (iapply (iapply vectoru_sub w) z)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply ccos w)) (iapply csin z)))
(rule (iapply (iapply a_ (iapply cball (iapply (iapply c_ x) e))) EMPTY) (iapply (iapply realu_lt e) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply ball (iapply (iapply c_ x) e))) EMPTY) (iapply (iapply realu_le e) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le a) b)) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ b) a)) NIL))) (iapply closedu_realu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply t_ (iapply (iapply m_ (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0)))) k)) (iapply binom (iapply (iapply c_ (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0)))) k))) (iapply (iapply t_ (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply binom (iapply (iapply c_ n) k))))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_u_c s0) t)) (iapply w_ (iapply (iapply l_a_u_c t) s0))) (iapply (iapply l_u_c s0) t))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_u_c s0) t)) (iapply w_ (iapply (iapply a_u_c s0) t))) (iapply (iapply l_u_c s0) t))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET s0) t)) (iapply w_ (iapply (iapply a_ s0) t))) (iapply (iapply PSUBSET s0) t))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ k) n)) (iapply (iapply DIV (iapply FACT n)) (iapply (iapply t_ (iapply FACT (iapply (iapply m_ n) k))) (iapply FACT k)))) (iapply NUMERAL u_0)) (iapply binom (iapply (iapply c_ n) k)))
(rule (iapply (iapply vectoru_sub x) (iapply (iapply proju_point e) x)) (iapply (iapply projection e) x))
(rule (iapply sndcart (iapply (iapply r_ c) x)) (iapply (iapply r_ c) (iapply sndcart x)))
(rule (iapply (iapply s_b_ (iapply path p)) (iapply (iapply SUBSET (iapply pathu_image p)) s0)) (iapply (iapply (iapply homotopicu_paths s0) p) p))
(rule (iapply fstcart (iapply (iapply r_ c) x)) (iapply (iapply r_ c) (iapply fstcart x)))
(rule (iapply (iapply vecmat i0) (iapply vectoru_neg x)) (iapply vectoru_neg (iapply (iapply vecmat i0) x)))
(rule (iapply (iapply vectoru_sub x) (iapply (iapply projection e) x)) (iapply (iapply proju_point e) x))
(rule (iapply (iapply permutes p) (iapply (iapply INSERT a) EMPTY)) (iapply (iapply a_ p) I))
(rule (iapply (iapply a_ (iapply (iapply IMAGE f) s0)) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ (iapply (iapply MAP f) l)) NIL) (iapply (iapply a_ l) NIL))
(rule (iapply constant6 (iapply realu_ofu_num (iapply NUMERAL u_0))) zero6)
(rule (iapply constant6 (iapply realu_ofu_num (iapply NUMERAL u_0))) dummy6)
(rule (iapply (iapply orbitu_map (iapply edgeu_map H)) x) (iapply (iapply edge H) x))
(rule (iapply (iapply poweru_list (iapply next L)) x) (iapply (iapply loopu_path L) x))
(rule (iapply (iapply DELETE (iapply (iapply DELETE s0) x)) x) (iapply (iapply DELETE s0) x))
(rule (iapply (iapply orbitu_map (iapply nodeu_map H)) x) (iapply (iapply node H) x))
(rule (iapply (iapply orbitu_map (iapply faceu_map H)) x) (iapply (iapply face H) x))
(rule (iapply (iapply INSERT x) (iapply (iapply INSERT x) s0)) (iapply (iapply INSERT x) s0))
(rule (iapply (iapply connectedu_component (iapply (iapply connectedu_component s0) x)) x) (iapply (iapply connectedu_component s0) x))
(rule (iapply (iapply affu_ge (iapply (iapply DIFF s0) t)) t) (iapply (iapply affu_ge s0) t))
(rule (iapply (iapply pathu_component (iapply (iapply pathu_component s0) x)) x) (iapply (iapply pathu_component s0) x))
(rule (iapply (iapply DIFF (iapply (iapply DIFF s0) t)) t) (iapply (iapply DIFF s0) t))
(rule (iapply (iapply UNION (iapply (iapply INSERT x) EMPTY)) s0) (iapply (iapply INSERT x) s0))
(rule (iapply (iapply hull P) (iapply (iapply hull P) s0)) (iapply (iapply hull P) s0))
(rule (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) bnu_squanderTarget)
(rule (iapply (iapply (iapply etau_y (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))
(rule (iapply sqrt (iapply (iapply realu_add (iapply (iapply realu_pow (iapply Re z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply Im z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply vectoru_norm z))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul sqrt8) sqrt8))
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_sub z) (iapply clog (iapply cexp z)))) (iapply (iapply complexu_mul (iapply Cx (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) ii)) (iapply unwinding z))
(rule (iapply (iapply APPEND xs) (iapply (iapply CONS x) NIL)) (iapply bnu_rotate1 (iapply (iapply CONS x) xs)))
(rule (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_div a) (iapply (iapply realu_add a) b))) (iapply (iapply realu_div b) (iapply (iapply realu_add a) b)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply w_ (iapply (iapply a_ (iapply (iapply realu_add a) b)) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply UNION p) (iapply (iapply UNION p) q)) (iapply (iapply UNION p) q))
(rule (iapply (iapply INTER p) (iapply (iapply INTER p) q)) (iapply (iapply INTER p) q))
(rule (iapply (iapply (iapply MAP2 f) NIL) NIL) NIL)
(rule (iapply (iapply (iapply hasu_integral (iapply (iapply o lift) (iapply (iapply o f) drop))) (iapply lift y)) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply lift a)) (iapply lift b))) NIL))) (iapply (iapply (iapply hasu_realu_integral f) y) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply loop0 (iapply tupleu_loop a)) a)
(rule (iapply midpoint (iapply (iapply c_ x) x)) x)
(rule (iapply (iapply matrixu_vectoru_mul (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) x) x)
(rule (iapply (iapply CONS (iapply f i0)) (iapply (iapply REVERSEu_TABLE f) i0)) (iapply (iapply REVERSEu_TABLE f) (iapply SUC i0)))
(rule (iapply openu_interval (iapply (iapply c_ a) a)) EMPTY)
(rule (iapply (iapply (iapply ITLIST f) NIL) b) b)
(rule (iapply FST (iapply tupleu_loop L)) (iapply dartu_of L))
(rule (iapply openu_segment (iapply (iapply c_ a) a)) EMPTY)
(rule (iapply (iapply (iapply lifted op) u_) NONE) NONE)
(rule (iapply (iapply (iapply lifted op) NONE) u_) NONE)
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply volu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply vol4f y1) y2) y3) y4) y5) y6) f)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma4f y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply realu_div (iapply sqrt (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply volu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply lmdih2u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply lmdih2u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply lmdih3u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply lmdih3u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply lmdih5u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply lmdih5u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply lmdihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply lmdihu_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply lmdih6u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply lmdih6u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply INTER (iapply (iapply (iapply (iapply wu_dartu_fan x) V) E) (iapply (iapply c_ y) (iapply (iapply c_ v) (iapply (iapply c_ w) w1))))) (iapply (iapply (iapply rconeu_fan x) v) h)) (iapply (iapply (iapply (iapply (iapply rwu_dartu_fan x) V) E) (iapply (iapply c_ y) (iapply (iapply c_ v) (iapply (iapply c_ w) w1)))) h))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply ldih2u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih2u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply lift (iapply (iapply realu_max (iapply drop a)) (iapply drop c)))) (iapply lift (iapply (iapply realu_min (iapply drop b)) (iapply drop d))))) NIL)) (iapply (iapply INTER (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply ldih3u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih3u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply ldih5u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih5u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply ldih6u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih6u_xu_n x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply DIFF UNIV) (iapply xfan (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply yfan (iapply (iapply c_ x) (iapply (iapply c_ V) E))))
(rule (iapply (iapply s_b_ (iapply (iapply isolatedu_qua q1) s0)) (iapply (iapply s_b_ (iapply (iapply isolatedu_qua q2) s0)) (iapply w_ (iapply (iapply a_ (iapply (iapply INTER (iapply conv0 q1)) (iapply conv0 q2))) EMPTY)))) (iapply (iapply (iapply isolatedu_pai q1) q2) s0))
(rule (iapply vector (iapply (iapply CONS (iapply (iapply realu_mul r) (iapply cos (iapply (iapply realu_add t) s0)))) (iapply (iapply CONS (iapply (iapply realu_mul r) (iapply sin (iapply (iapply realu_add t) s0)))) NIL))) (iapply (iapply rotate2d t) (iapply vector (iapply (iapply CONS (iapply (iapply realu_mul r) (iapply cos s0))) (iapply (iapply CONS (iapply (iapply realu_mul r) (iapply sin s0))) NIL)))))
(rule (iapply (iapply (iapply o f) g) x) (iapply f (iapply g x)))
(rule (iapply (iapply (iapply COND (iapply EVEN n)) (iapply (iapply b_s_ (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply realu_abs x)) (iapply realu_abs y)))) (iapply (iapply a_ x) y)) (iapply (iapply a_ (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow y) n)))
(rule (iapply (iapply edgeu_walkup (iapply (iapply edgeu_walkup H) x)) y) (iapply (iapply (iapply doubleu_edgeu_walkup H) x) y))
(rule (iapply (iapply faceu_walkup (iapply (iapply faceu_walkup H) x)) y) (iapply (iapply (iapply doubleu_faceu_walkup H) x) y))
(rule (iapply (iapply nodeu_walkup (iapply (iapply nodeu_walkup H) x)) y) (iapply (iapply (iapply doubleu_nodeu_walkup H) x) y))
(rule (iapply vecmats (iapply matvec A0)) A0)
(rule (iapply (iapply s_b_ (iapply bnu_tame9a g)) (iapply (iapply s_b_ (iapply bnu_tame10 g)) (iapply (iapply s_b_ (iapply bnu_tame11a g)) (iapply (iapply s_b_ (iapply bnu_tame11b g)) (iapply (iapply s_b_ (iapply bnu_tame12o g)) (iapply bnu_tame13a g)))))) (iapply bnu_tame g))
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_add (iapply cexp (iapply (iapply complexu_mul ii) z))) (iapply cexp (iapply (iapply complexu_mul (iapply vectoru_neg ii)) z)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply ccos z))
(rule (iapply (iapply b_s_ (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply b_s_ (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply l_a_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply sqrt (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply cos (iapply atn x)))
(rule (iapply (iapply IMAGE g) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL (iapply BIT1 u_0))))) NIL))) (iapply pathu_image g))
(rule (iapply matvec (iapply vecmats A0)) A0)
(rule (iapply RSTC (iapply RSTC R)) (iapply RSTC R))
(rule (iapply TC (iapply TC R)) (iapply TC R))
(rule (iapply STC (iapply STC R)) (iapply STC R))
(rule (iapply distance (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) v)) (iapply vectoru_norm v))
(rule (iapply SC (iapply SC R)) (iapply SC R))
(rule (iapply RTC (iapply RTC R)) (iapply RTC R))
(rule (iapply RC (iapply RC R)) (iapply RC R))
(rule (iapply (iapply UNION (iapply inside s0)) (iapply outside s0)) (iapply (iapply DIFF UNIV) s0))
(rule (iapply vectoru_norm (iapply (iapply pastecart (iapply vec (iapply NUMERAL u_0))) y)) (iapply vectoru_norm y))
(rule (iapply vectoru_norm (iapply (iapply pastecart x) (iapply vec (iapply NUMERAL u_0)))) (iapply vectoru_norm x))
(rule (iapply RSC (iapply RSC R)) (iapply RSC R))
(rule (iapply (iapply g_a_ (iapply CARD (iapply (iapply face H) x))) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply exceptionalu_face H) x))
(rule (iapply (iapply t_ (iapply (iapply EXP (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) x)) (iapply (iapply p_ (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) y)) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply NUMPAIR x) y))
(rule (iapply (iapply a_ (iapply (iapply intu_add (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply intu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply intu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply s_b_ (iapply (iapply faceu_of e) s0)) (iapply (iapply a_ (iapply affu_dim e)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply edgeu_of e) s0))
(rule (iapply (iapply realu_div (iapply (iapply dot u) v)) (iapply (iapply realu_mul (iapply vectoru_norm u)) (iapply vectoru_norm v))) (iapply (iapply cosV u) v))
(rule (iapply (iapply UNION (iapply closure s0)) (iapply closure t)) (iapply closure (iapply (iapply UNION s0) t)))
(rule (iapply (iapply DIFF (iapply interior s0)) (iapply closure t)) (iapply interior (iapply (iapply DIFF s0) t)))
(rule (iapply (iapply INTER (iapply interior s0)) (iapply interior t)) (iapply interior (iapply (iapply INTER s0) t)))
(rule (iapply (iapply UNION (iapply UNIONS s0)) (iapply UNIONS t)) (iapply UNIONS (iapply (iapply UNION s0) t)))
(rule (iapply (iapply INTER (iapply INTERS s0)) (iapply INTERS t)) (iapply INTERS (iapply (iapply UNION s0) t)))
(rule (iapply (iapply APPEND (iapply REVERSE m)) (iapply REVERSE l)) (iapply REVERSE (iapply (iapply APPEND l) m)))
(rule (iapply (iapply UNION (iapply setu_ofu_list l1)) (iapply setu_ofu_list l2)) (iapply setu_ofu_list (iapply (iapply APPEND l1) l2)))
(rule (iapply (iapply s_b_ (iapply integer (iapply (iapply realu_sub x) a))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply realu_lt a) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply frac x)) a))
(rule (iapply (iapply (iapply affsign sgnu_ge) (iapply (iapply INSERT v) EMPTY)) S) (iapply (iapply cone v) S))
(rule (iapply (iapply between x) (iapply (iapply c_ a) a)) (iapply (iapply a_ x) a))
(rule (iapply (iapply (iapply affsign sgnu_gt) (iapply (iapply INSERT v) EMPTY)) S) (iapply (iapply cone0 v) S))
(rule (iapply (iapply (iapply affsign sgn) (iapply (iapply DIFF s0) t)) t) (iapply (iapply (iapply affsign sgn) s0) t))
(rule (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) tableu_multiplier)
(rule (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ sqrt) deltau_x))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) volu_x)
(rule (iapply (iapply SUBSET s0) (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) EMPTY)) (iapply (iapply a_ (iapply dim s0)) (iapply NUMERAL u_0)))
(rule (iapply (iapply FCONS (iapply f (iapply NUMERAL u_0))) (iapply (iapply o f) SUC)) f)
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v0) v1) w1) w2)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v0) v1) w1) w2)) pi)) (iapply coplanar (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) (iapply (iapply INSERT w1) (iapply (iapply INSERT w2) EMPTY))))))
(rule (iapply (iapply (iapply m_m_g_ (iapply (iapply o f) Re)) a) (iapply (iapply within (iapply at (iapply Cx x))) real0)) (iapply (iapply (iapply m_m_g_ f) a) (iapply atreal x)))
(rule (iapply SC (iapply INV R)) (iapply SC R))
(rule (iapply transp (iapply transp A0)) A0)
(rule (iapply mku_cart (iapply destu_cart a)) a)
(rule (iapply ABSu_prod (iapply REPu_prod a)) a)
(rule (iapply RC (iapply SC R)) (iapply RSC R))
(rule (iapply RC (iapply TC R)) (iapply RTC R))
(rule (iapply TC (iapply SC R)) (iapply STC R))
(rule (iapply (iapply DIFF (iapply closure s0)) (iapply interior s0)) (iapply frontier s0))
(rule (iapply FST (iapply drop0 u)) (iapply part1 u))
(rule (iapply SND (iapply SND u)) (iapply drop1 u))
(rule (iapply (iapply (iapply (iapply (iapply (iapply sqrtu_x6 x1) x2) x3) x4) x5) x6) (iapply sqrt x6))
(rule (iapply (iapply INTER (iapply inside s0)) (iapply outside s0)) EMPTY)
(rule (iapply (iapply (iapply (iapply (iapply (iapply sqrtu_x5 x1) x2) x3) x4) x5) x6) (iapply sqrt x5))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le y) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply h0cut y))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le h) h0)) (iapply (iapply realu_div (iapply (iapply realu_sub h0) h)) (iapply (iapply realu_sub h0) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply lmfun h))
(rule (iapply (iapply (iapply (iapply (iapply (iapply sqrtu_x4 x1) x2) x3) x4) x5) x6) (iapply sqrt x4))
(rule (iapply (iapply (iapply (iapply (iapply (iapply sqrtu_x3 x1) x2) x3) x4) x5) x6) (iapply sqrt x3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply sqrtu_x2 x1) x2) x3) x4) x5) x6) (iapply sqrt x2))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x3)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih3u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply float (iapply (iapply intu_add (iapply (iapply intu_mul (iapply intu_ofu_num (iapply (iapply EXP (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply p_ m) n)))) a)) b)) (iapply intu_neg (iapply intu_ofu_num n))) (iapply (iapply realu_add (iapply (iapply float a) (iapply intu_ofu_num m))) (iapply (iapply float b) (iapply intu_neg (iapply intu_ofu_num n)))))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x6)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih6u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_y1 x1) x2) x3) x4) x5) x6) (iapply sqrt x1))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_y2 x1) x2) x3) x4) x5) x6) (iapply sqrt x2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_y3 x1) x2) x3) x4) x5) x6) (iapply sqrt x3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_y4 x1) x2) x3) x4) x5) x6) (iapply sqrt x4))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_y5 x1) x2) x3) x4) x5) x6) (iapply sqrt x5))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_y6 x1) x2) x3) x4) x5) x6) (iapply sqrt x6))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_div (iapply (iapply truncateu_sqrt c) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_volu_x c) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply a_ (iapply cos (iapply (iapply vectoru_angle u) v))) (iapply cos (iapply (iapply vectoru_angle x) y))) (iapply (iapply a_ (iapply (iapply vectoru_angle u) v)) (iapply (iapply vectoru_angle x) y)))
(rule (iapply (iapply DISJOINT (iapply (iapply supportu_list p) n)) (iapply (iapply supportu_list q) m)) (iapply (iapply (iapply (iapply isu_disjoint p) q) n) m))
(rule (iapply (iapply (iapply (iapply (iapply (iapply halfbumpu_x1 x1) x2) x3) x4) x5) x6) (iapply halfbumpu_x x1))
(rule (iapply (iapply (iapply (iapply (iapply (iapply halfbumpu_x4 x1) x2) x3) x4) x5) x6) (iapply halfbumpu_x x4))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) x))) (iapply (iapply (iapply (iapply (iapply bu_coef x12) x13) x14) x23) x24)) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x34 x12) x13) x14) x23) x24) x))
(rule (iapply (iapply realu_mul (iapply lmfun (iapply (iapply realu_div (iapply sqrt x1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply lmdihu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x2)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih2u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply vectoru_add (iapply (iapply cross x) (iapply (iapply cross y) z))) (iapply (iapply vectoru_add (iapply (iapply cross y) (iapply (iapply cross z) x))) (iapply (iapply cross z) (iapply (iapply cross x) y)))) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply cross (iapply (iapply vectoru_sub v2) v1)) (iapply (iapply vectoru_sub v3) v1)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply collinear (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY)))))
(rule (iapply (iapply vecmat i0) (iapply (iapply r_ c) x)) (iapply (iapply r_ c) (iapply (iapply vecmat i0) x)))
(rule (iapply (iapply (iapply POWER (iapply faceu_map H)) i0) x) (iapply (iapply (iapply faceu_path H) x) i0))
(rule (iapply (iapply (iapply POWER (iapply faceu_map H)) i0) x) (iapply (iapply (iapply faceu_contour H) x) i0))
(rule (iapply (iapply (iapply POWER (iapply next L)) k) x) (iapply (iapply (iapply loopu_path L) x) k))
(rule (iapply (iapply (iapply POWER (iapply edgeu_map H)) i0) x) (iapply (iapply (iapply edgeu_path H) x) i0))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) d)) (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply realu_sub x) d)) y)) (iapply (iapply realu_lt y) (iapply (iapply realu_add x) d)))) (iapply (iapply realu_lt (iapply realu_abs (iapply (iapply realu_sub y) x))) d))
(rule (iapply (iapply (iapply POWER (iapply nodeu_map H)) i0) x) (iapply (iapply (iapply nodeu_path H) x) i0))
(rule (iapply (iapply s_b_ (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) d)) (iapply (iapply s_b_ (iapply (iapply intu_lt (iapply (iapply intu_sub x) d)) y)) (iapply (iapply intu_lt y) (iapply (iapply intu_add x) d)))) (iapply (iapply intu_lt (iapply intu_abs (iapply (iapply intu_sub y) x))) d))
(rule (iapply (iapply (iapply (iapply (iapply (iapply sqrtu_x1 x1) x2) x3) x4) x5) x6) (iapply sqrt x1))
(rule (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ (iapply truncateu_sqrt c)) deltau_x))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply truncateu_volu_x c))
(rule (iapply (iapply s_b_ (iapply orthogonalu_matrix Q)) (iapply (iapply a_ (iapply det Q)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply rotationu_matrix Q))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply cos x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply cos (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x)))
(rule (iapply (iapply vsum (iapply (iapply INSERT x) EMPTY)) f) (iapply f x))
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_add (iapply exp (iapply Im z))) (iapply exp (iapply realu_neg (iapply Im z))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply cos (iapply Re z))) (iapply Re (iapply ccos z)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply exp (iapply Im z))) (iapply exp (iapply realu_neg (iapply Im z))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply cos (iapply Re z))) (iapply Im (iapply csin z)))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ s0) EMPTY))) (iapply (iapply s_b_ (iapply convex s0)) (iapply conic s0))) (iapply convexu_cone s0))
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_add (iapply exp (iapply Im z))) (iapply exp (iapply realu_neg (iapply Im z))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply sin (iapply Re z))) (iapply Re (iapply csin z)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply exp (iapply realu_neg (iapply Im z)))) (iapply exp (iapply Im z)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply sin (iapply Re z))) (iapply Im (iapply ccos z)))
(rule (iapply constant6 (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) two6)
(rule (iapply (iapply a_ (iapply (iapply INTER (iapply frontier s0)) s0)) EMPTY) (iapply open s0))
(rule (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply (iapply realu_mul (iapply vectoru_norm y)) (iapply cos (iapply (iapply vectoru_angle x) y)))) (iapply (iapply dot x) y))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply cross x) y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply dot x) y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply sqrt (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply (iapply cosV u) v)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply sinV u) v))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply drop a)) (iapply drop b))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ b) a)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply distance (iapply (iapply c_ x) y))) (iapply w_ (iapply (iapply a_ x) y)))
(rule (iapply (iapply IN (iapply (iapply combu_component H) x)) (iapply setu_ofu_components H)) (iapply (iapply IN x) (iapply dart H)))
(rule (iapply (iapply vectoru_matrixu_mul x) (iapply transp A0)) (iapply (iapply matrixu_vectoru_mul A0) x))
(rule (iapply simpleu_path (iapply linepath (iapply (iapply c_ a) b))) (iapply w_ (iapply (iapply a_ a) b)))
(rule (iapply arc (iapply linepath (iapply (iapply c_ a) b))) (iapply w_ (iapply (iapply a_ a) b)))
(rule (iapply (iapply IN (iapply (iapply edge H) x)) (iapply edgeu_set H)) (iapply (iapply IN x) (iapply dart H)))
(rule (iapply (iapply IN (iapply (iapply node H) x)) (iapply nodeu_set H)) (iapply (iapply IN x) (iapply dart H)))
(rule (iapply (iapply IN (iapply (iapply face H) x)) (iapply faceu_set H)) (iapply (iapply IN x) (iapply dart H)))
(rule (iapply setdist (iapply (iapply c_ s0) (iapply closure t))) (iapply setdist (iapply (iapply c_ s0) t)))
(rule (iapply setdist (iapply (iapply c_ (iapply closure s0)) t)) (iapply setdist (iapply (iapply c_ s0) t)))
(rule (iapply ABSu_prod (iapply (iapply mku_pair x) y)) (iapply (iapply c_ x) y))
(rule (iapply (iapply a_ (iapply distance (iapply (iapply c_ x) y))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_le (iapply distance (iapply (iapply c_ x) y))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) y))
(rule (iapply FINITE (iapply openu_segment (iapply (iapply c_ a) b))) (iapply (iapply a_ a) b))
(rule (iapply (iapply matrixu_vectoru_mul (iapply transp A0)) x) (iapply (iapply vectoru_matrixu_mul x) A0))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) au_tame)
(rule (iapply SND (iapply tupleu_loop L)) (iapply next L))
(rule (iapply (iapply (iapply support op) f) EMPTY) EMPTY)
(rule (iapply swap (iapply (iapply c_ a) a)) I)
(rule (iapply (iapply INTER (iapply r1u_leu_fan (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply INTER (iapply r2u_leu_fan a)) (iapply (iapply INTER (iapply r2u_geu_fan b)) (iapply (iapply INTER (iapply r3u_leu_fan (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply r3u_geu_fan c))))) (iapply (iapply (iapply ru_fan a) b) c))
(rule (iapply atn2 (iapply (iapply c_ (iapply sqrt (iapply (iapply realu_sub (iapply (iapply realu_mul b) b)) (iapply (iapply realu_mul a) a)))) (iapply sqrt (iapply (iapply realu_sub (iapply (iapply realu_mul c) c)) (iapply (iapply realu_mul b) b))))) (iapply (iapply (iapply dihR a) b) c))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_abs (iapply (iapply realu_sub x) a)))) (iapply (iapply realu_le (iapply realu_abs (iapply (iapply realu_sub x) a))) (iapply realu_abs (iapply (iapply realu_sub y) a)))) (iapply (iapply (iapply netord (iapply atreal a)) x) y))
(rule (iapply (iapply realu_lt (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply arcV p) u) v)) (iapply (iapply realu_lt (iapply cos (iapply (iapply (iapply arcV p) u) v))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply homotopicu_paths s0) (iapply reversepath p)) (iapply reversepath q)) (iapply (iapply (iapply homotopicu_paths s0) p) q))
(rule (iapply Im (iapply clog (iapply (iapply vectoru_add z) (iapply (iapply complexu_mul ii) (iapply csqrt (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply Re (iapply cacs z)))
(rule (iapply Im (iapply clog (iapply (iapply vectoru_add (iapply (iapply complexu_mul ii) z)) (iapply csqrt (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply Re (iapply casn z)))
(rule (iapply (iapply c_ (iapply (iapply d_ v) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply c_ (iapply (iapply d_ v) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ v) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply tripleu_ofu_real3 v))
(rule (iapply (iapply s_b_ (iapply orthogonalu_matrix Q)) (iapply (iapply a_ (iapply det Q)) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply rotoinversionu_matrix Q))
(rule (iapply (iapply c_ (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply c_ (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply vectoru_tou_pair x))
(rule (iapply (iapply realu_div x) (iapply (iapply realu_add (iapply sqrt (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply halfatn x))
(rule (iapply (iapply complexu_mul (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply (iapply ALL2 P) NIL) (iapply (iapply CONS h2) t2)) F)
(rule (iapply (iapply (iapply ALL2 P) (iapply (iapply CONS h1) t1)) NIL) F)
(rule (iapply (iapply complexu_mul (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) (iapply (iapply complexu_mul ii) (iapply (iapply complexu_mul z) z)))))
(rule (iapply (iapply vectoru_sub (iapply (iapply r_ a) x)) (iapply (iapply r_ b) x)) (iapply (iapply r_ (iapply (iapply realu_sub a) b)) x))
(rule (iapply (iapply vectoru_add (iapply (iapply r_ c) x)) (iapply (iapply r_ c) y)) (iapply (iapply r_ c) (iapply (iapply vectoru_add x) y)))
(rule (iapply (iapply vectoru_sub (iapply (iapply r_ c) x)) (iapply (iapply r_ c) y)) (iapply (iapply r_ c) (iapply (iapply vectoru_sub x) y)))
(rule (iapply (iapply vectoru_add (iapply (iapply r_ a) x)) (iapply (iapply r_ b) x)) (iapply (iapply r_ (iapply (iapply realu_add a) b)) x))
(rule (iapply (iapply matrixu_sub (iapply mat (iapply NUMERAL u_0))) A0) (iapply matrixu_neg A0))
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply realu_ofu_num n)) (iapply realu_ofu_num k))) (iapply (iapply realu_add (iapply realu_ofu_num k)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ n) k)))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ n) (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))))))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_mul r) (iapply cos x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_mul r) (iapply sin x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow r) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_mul (iapply (iapply realu_add x) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) y))) (iapply (iapply realu_sub x) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) y))) (iapply (iapply realu_sub (iapply (iapply realu_mul x) x)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul y) y))))
(rule (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply realu_add a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul a) b))) (iapply (iapply realu_pow (iapply (iapply realu_sub a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) (iapply SUC n))) (iapply (iapply realu_mul (iapply (iapply product (iapply (iapply o_o_ m) n)) f)) (iapply f (iapply SUC n)))) (iapply (iapply product (iapply (iapply o_o_ m) n)) f)) (iapply (iapply product (iapply (iapply o_o_ m) (iapply SUC n))) f))
(rule (iapply (iapply pastecart (iapply vectoru_neg x)) (iapply vectoru_neg y)) (iapply vectoru_neg (iapply (iapply pastecart x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) (iapply SUC n))) (iapply (iapply p_ (iapply (iapply nsum (iapply (iapply o_o_ m) n)) f)) (iapply f (iapply SUC n)))) (iapply (iapply nsum (iapply (iapply o_o_ m) n)) f)) (iapply (iapply nsum (iapply (iapply o_o_ m) (iapply SUC n))) f))
(rule (iapply (iapply (iapply (iapply dihV (iapply (iapply EL (iapply NUMERAL u_0)) ul)) (iapply (iapply EL (iapply NUMERAL (iapply BIT1 u_0))) ul)) (iapply (iapply EL (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) ul)) (iapply (iapply mxi V) ul)) (iapply (iapply dihu3 V) ul))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) (iapply SUC n))) (iapply (iapply realu_add (iapply (iapply sum (iapply (iapply o_o_ m) n)) f)) (iapply f (iapply SUC n)))) (iapply (iapply sum (iapply (iapply o_o_ m) n)) f)) (iapply (iapply sum (iapply (iapply o_o_ m) (iapply SUC n))) f))
(rule (iapply (iapply IN x) (iapply ball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) e))) (iapply (iapply realu_lt (iapply vectoru_norm x)) e))
(rule (iapply (iapply IN x) (iapply cball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) e))) (iapply (iapply realu_le (iapply vectoru_norm x)) e))
(rule (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_pow (iapply Re z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply Im z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) h0)
(rule (iapply realu_neg (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) betau_bumpu_lb)
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sqrt (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))
(rule (iapply constant6 (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) four6)
(rule (iapply (iapply complexu_div (iapply (iapply vectoru_sub (iapply cexp (iapply (iapply complexu_mul ii) z))) (iapply cexp (iapply (iapply complexu_mul (iapply vectoru_neg ii)) z)))) (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) ii)) (iapply csin z))
(rule (iapply (iapply matrixu_mul (iapply mat (iapply NUMERAL u_0))) A0) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply (iapply matrixu_mul A0) (iapply mat (iapply NUMERAL u_0))) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) pi)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))) sol0)) tau0)
(rule (iapply (iapply matrixu_add (iapply mat (iapply NUMERAL u_0))) A0) A0)
(rule (iapply (iapply matrixu_add A0) (iapply mat (iapply NUMERAL u_0))) A0)
(rule (iapply (iapply matrixu_sub A0) (iapply mat (iapply NUMERAL u_0))) A0)
(rule (iapply f (iapply (iapply inverse f) (iapply f x))) (iapply f x))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply acs (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) pi) sol0)
(rule (iapply FST (iapply drop1 u)) (iapply part2 u))
(rule (iapply (iapply POWER (iapply next L)) (iapply size L)) I)
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) hminus)) y)) (iapply (iapply realu_le y) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) hplus))) (iapply criticalu_edgeu_y y))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply f (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL u_0))) (iapply (iapply vsum (iapply (iapply o_o_ m) (iapply NUMERAL u_0))) f))
(rule (iapply w_ (iapply (iapply a_ (iapply realu_abs (iapply (iapply dot x) y))) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y)))) (iapply (iapply realu_lt (iapply realu_abs (iapply (iapply dot x) y))) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))))
(rule (iapply (iapply (iapply m_m_g_ (iapply (iapply o f) drop)) a) (iapply (iapply within (iapply at (iapply lift x))) (iapply (iapply IMAGE lift) s0))) (iapply (iapply (iapply m_m_g_ f) a) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y6) y6)) (iapply (iapply (iapply (iapply (iapply (iapply deltau_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply a_ (iapply det (iapply vector (iapply (iapply CONS (iapply (iapply vectoru_sub v1) v0)) (iapply (iapply CONS (iapply (iapply vectoru_sub v2) v0)) (iapply (iapply CONS (iapply (iapply vectoru_sub v3) v0)) NIL)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply coplanar (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY))))))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_n y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply realu_ofu_num w1))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_n y1) y2) y3) y4) y5) y6) f)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_126u_03u_n y1) y2) y3) y4) y5) y6) w1) sqrt2) f))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ v) w)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) (iapply (iapply (iapply (iapply (iapply azimu_fan (iapply vec (iapply NUMERAL u_0))) V) E) v) w)) (iapply (iapply azimu_dart (iapply (iapply c_ V) E)) (iapply (iapply c_ v) w)))
(rule (iapply (iapply a_ (iapply det (iapply vector (iapply (iapply CONS (iapply (iapply vectoru_sub v1) v0)) (iapply (iapply CONS (iapply (iapply vectoru_sub v2) v0)) (iapply (iapply CONS (iapply (iapply vectoru_sub v3) v0)) NIL)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply coplanaru_alt (iapply (iapply INSERT v0) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY))))))
(rule (iapply (iapply r_ (iapply realu_inv (iapply vectoru_norm (iapply (iapply cross (iapply (iapply (iapply e3u_fan x) v) u)) (iapply (iapply vectoru_sub u) x))))) (iapply (iapply cross (iapply (iapply (iapply e3u_fan x) v) u)) (iapply (iapply vectoru_sub u) x))) (iapply (iapply (iapply e2u_fan x) v) u))
(rule (iapply UNIONS (iapply (iapply IMAGE (iapply (iapply slice k) a)) s0)) (iapply (iapply (iapply slice k) a) (iapply UNIONS s0)))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply matrixu_neg A0)) i0)) j) (iapply realu_neg (iapply (iapply d_ (iapply (iapply d_ A0) i0)) j)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply taum (iapply vectoru_norm v1)) (iapply vectoru_norm v2)) (iapply vectoru_norm v3)) (iapply distance (iapply (iapply c_ v2) v3))) (iapply distance (iapply (iapply c_ v1) v3))) (iapply distance (iapply (iapply c_ v1) v2))) (iapply (iapply (iapply tauV v1) v2) v3))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply transp A0)) i0)) j) (iapply (iapply d_ (iapply (iapply d_ A0) j)) i0))
(rule (iapply (iapply r_r_ a) (iapply (iapply r_r_ b) X)) (iapply (iapply r_r_ (iapply (iapply realu_mul a) b)) X))
(rule (iapply (iapply POWER (iapply (iapply POWER f) n)) m) (iapply (iapply POWER f) (iapply (iapply t_ m) n)))
(rule (iapply (iapply b_s_ (iapply (iapply realu_lt a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_gt (iapply (iapply dot x) x)) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_gt (iapply vectoru_norm x)) a))
(rule (iapply (iapply s_b_ (iapply FINITE s0)) (iapply (iapply a_ (iapply affu_dim s0)) (iapply (iapply intu_sub (iapply intu_ofu_num (iapply CARD s0))) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply w_ (iapply affineu_dependent s0)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply realu_lt (iapply (iapply dot x) x)) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_lt (iapply vectoru_norm x)) a))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply realu_lt (iapply (iapply dot x) x)) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_lt (iapply vectoru_norm x)) a))
(rule (iapply (iapply b_s_ (iapply (iapply realu_le a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_ge (iapply (iapply dot x) x)) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_ge (iapply vectoru_norm x)) a))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply realu_le (iapply (iapply dot x) x)) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_le (iapply vectoru_norm x)) a))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply a_ (iapply (iapply dot x) x)) (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply vectoru_norm x)) a))
(rule (iapply (iapply s_b_ (iapply path g)) (iapply (iapply hasu_boundedu_variationu_on g) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply vec (iapply NUMERAL (iapply BIT1 u_0))))) NIL)))) (iapply rectifiableu_path g))
(rule (iapply (iapply DIFF UNIV) (iapply closure (iapply (iapply DIFF UNIV) s0))) (iapply interior s0))
(rule (iapply (iapply s_b_ (iapply reflexive f)) (iapply (iapply s_b_ (iapply symmetric f)) (iapply transitive f))) (iapply equivalenceu_relation f))
(rule (iapply (iapply s_b_ (iapply linear f)) (iapply orthogonalu_matrix (iapply matrix f))) (iapply orthogonalu_transformation f))
(rule (iapply (iapply DIFF UNIV) (iapply (iapply UNION s0) (iapply outside s0))) (iapply inside s0))
(rule (iapply (iapply DIFF UNIV) (iapply (iapply UNION s0) (iapply inside s0))) (iapply outside s0))
(rule (iapply (iapply DIFF UNIV) (iapply interior (iapply (iapply DIFF UNIV) s0))) (iapply closure s0))
(rule (iapply pathfinish (iapply linepath (iapply (iapply c_ a) b))) b)
(rule (iapply pathstart (iapply linepath (iapply (iapply c_ a) b))) a)
(rule (iapply (iapply CONS (iapply SOME b)) (iapply (iapply bnu_hideDupsRec b) bs)) (iapply bnu_hideDups (iapply (iapply CONS b) bs)))
(rule (iapply (iapply (iapply arclength (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) arcu_hhn)
(rule (iapply (iapply (iapply COND (iapply (iapply a_ t) NIL)) h) (iapply LAST t)) (iapply LAST (iapply (iapply CONS h) t)))
(rule (iapply LAST (iapply (iapply CONS h) (iapply (iapply CONS k) t))) (iapply LAST (iapply (iapply CONS k) t)))
(rule (iapply (iapply d_ (iapply vector (iapply (iapply CONS x) NIL))) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply hypermap0 (iapply (iapply c_ (iapply dartu_ofu_fan (iapply (iapply c_ V) E))) (iapply (iapply c_ (iapply eu_fanu_pairu_ext (iapply (iapply c_ V) E))) (iapply (iapply c_ (iapply nu_fanu_pairu_ext (iapply (iapply c_ V) E))) (iapply fu_fanu_pairu_ext (iapply (iapply c_ V) E)))))) (iapply hypermapu_ofu_fan (iapply (iapply c_ V) E)))
(rule (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply w_ (iapply (iapply a_ x) (iapply CHOICE s0)))) (iapply (iapply IN x) (iapply REST s0)))
(rule (iapply (iapply (iapply (iapply dihV (iapply (iapply EL (iapply NUMERAL u_0)) ul)) (iapply (iapply EL (iapply NUMERAL (iapply BIT1 u_0))) ul)) (iapply (iapply mxi V) ul)) (iapply (iapply (iapply omegau_listu_n V) ul) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply dihu2 V) ul))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ k) n)) (iapply (iapply realu_div (iapply realu_ofu_num (iapply FACT n))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply FACT (iapply (iapply m_ n) k)))) (iapply realu_ofu_num (iapply FACT k))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ n) k))))
(rule (iapply linepath (iapply (iapply c_ (iapply g a)) (iapply g a))) (iapply (iapply (iapply subpath a) a) g))
(rule (iapply relativeu_interior (iapply openu_segment (iapply (iapply c_ a) b))) (iapply openu_segment (iapply (iapply c_ a) b)))
(rule (iapply (iapply (iapply m_m_g_ f) (iapply f x)) (iapply at x)) (iapply (iapply continuous f) (iapply at x)))
(rule (iapply circumcenter (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply midpoint (iapply (iapply c_ a) b)))
(rule (iapply reversepath (iapply linepath (iapply (iapply c_ a) b))) (iapply linepath (iapply (iapply c_ b) a)))
(rule (iapply UNIONS (iapply (iapply IMAGE (iapply INTER A0)) U)) (iapply (iapply INTER (iapply UNIONS U)) A0))
(rule (iapply matrix (iapply (iapply frechetu_derivative f) net0)) (iapply (iapply jacobian f) net0))
(rule (iapply UNIONS (iapply (iapply IMAGE (iapply DIFF X)) V)) (iapply (iapply DIFF X) (iapply INTERS V)))
(rule (iapply (iapply (iapply m_m_g_ f) (iapply f (iapply netlimit net0))) net0) (iapply (iapply continuous f) net0))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t0))
(rule (iapply (iapply APPEND (iapply REVERSE l)) (iapply (iapply CONS x) NIL)) (iapply REVERSE (iapply (iapply CONS x) l)))
(rule (iapply UNIONS (iapply (iapply INSERT s0) (iapply (iapply INSERT t) EMPTY))) (iapply (iapply UNION s0) t))
(rule (iapply INTERS (iapply (iapply INSERT s0) (iapply (iapply INSERT t) EMPTY))) (iapply (iapply INTER s0) t))
(rule (iapply (iapply (iapply COND (iapply (iapply IN u) (iapply (iapply dartsu_ofu_hyp E) V))) (iapply (iapply c_ (iapply FST u)) (iapply (iapply (iapply (iapply azimu_cycle (iapply (iapply EE (iapply FST u)) E)) x) (iapply FST u)) (iapply SND u)))) u) (iapply (iapply nnu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) u))
(rule (iapply (iapply (iapply COND (iapply (iapply IN u) (iapply (iapply dartsu_ofu_hyp E) V))) (iapply (iapply c_ (iapply SND u)) (iapply (iapply (iapply (iapply ivsu_azimu_cycle (iapply (iapply EE (iapply SND u)) E)) x) (iapply SND u)) (iapply FST u)))) u) (iapply (iapply ffu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) u))
(rule (iapply (iapply matrixu_mul (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) A0) A0)
(rule (iapply (iapply matrixu_mul A0) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) A0)
(rule (iapply (iapply setu_ofu_orbits (iapply dart H)) (iapply edgeu_map H)) (iapply edgeu_set H))
(rule (iapply (iapply setu_ofu_orbits (iapply dart H)) (iapply nodeu_map H)) (iapply nodeu_set H))
(rule (iapply (iapply setu_ofu_orbits (iapply dart H)) (iapply faceu_map H)) (iapply faceu_set H))
(rule (iapply promote1u_tou_6 I) proju_x1)
(rule (iapply (iapply (iapply (iapply azim x) v) (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) x) V) E) v) u) i0)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) x) V) E) v) u) (iapply SUC i0))) (iapply (iapply (iapply (iapply (iapply (iapply azimu_iu_fan x) V) E) v) u) i0))
(rule (iapply (iapply (iapply COND (iapply (iapply IN (iapply (iapply c_ v) u)) (iapply (iapply dartsu_ofu_hyp E) V))) (iapply (iapply c_ u) (iapply (iapply (iapply (iapply ivsu_azimu_cycle (iapply (iapply EE u) E)) x) u) v))) (iapply (iapply c_ v) u)) (iapply (iapply ffu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) (iapply (iapply c_ v) u)))
(rule (iapply (iapply (iapply ITER n) (iapply (iapply ITER m) f)) x) (iapply (iapply (iapply ITER (iapply (iapply t_ n) m)) f) x))
(rule (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_vol3ru_456 d) x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_vol3f d) m4) m5) m6) x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma3fu_x d) m4) m5) m6) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126 y1) y2) y3) y4) y5) y6) f)) (iapply realu_ofu_num w1))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vL y1) y2) y3) y4) y5) y6) f)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_126u_03 y1) y2) y3) y4) y5) y6) w1) sqrt2) f))
(rule (iapply (iapply (iapply bnu_mapAt ns) (iapply (iapply bnu_replace f) fs)) Fs) (iapply (iapply (iapply (iapply bnu_replacefacesAt ns) f) fs) Fs))
(rule (iapply (iapply (iapply COND (iapply (iapply IN (iapply (iapply c_ v) u)) (iapply (iapply dartsu_ofu_hyp E) V))) (iapply (iapply c_ v) (iapply (iapply (iapply (iapply azimu_cycle (iapply (iapply EE v) E)) x) v) u))) (iapply (iapply c_ v) u)) (iapply (iapply nnu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) (iapply (iapply c_ v) u)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply binom (iapply (iapply c_ n) k)))) (iapply (iapply realu_mul (iapply (iapply realu_pow x) k)) (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)) (iapply (iapply m_ n) k)))) (iapply (iapply (iapply bernstein n) k) x))
(rule (iapply UNIONS (iapply (iapply node (iapply (iapply quotient H) NF)) atm)) (iapply (iapply (iapply supportu_node H) NF) atm))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply r_r_ c) A0)) i0)) j) (iapply (iapply realu_mul c) (iapply (iapply d_ (iapply (iapply d_ A0) i0)) j)))
(rule (iapply (iapply (iapply bnu_isu_Hom phi) (iapply setu_ofu_list fs1)) (iapply setu_ofu_list fs2)) (iapply (iapply (iapply bnu_isu_hom phi) fs1) fs2))
(rule (iapply (iapply UNION (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply UNION (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ b) c)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) a)) NIL)))) (iapply frontier (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))))))
(rule (iapply (iapply (iapply bnu_isu_Iso phi) (iapply setu_ofu_list fs1)) (iapply setu_ofu_list fs2)) (iapply (iapply (iapply bnu_isu_iso phi) fs1) fs2))
(rule (iapply (iapply (iapply bnu_isu_pru_Iso phi) (iapply setu_ofu_list fs1)) (iapply setu_ofu_list fs2)) (iapply (iapply (iapply bnu_isu_pru_iso phi) fs1) fs2))
(rule (iapply (iapply b_s_ (iapply (iapply R a0) a1)) (iapply (iapply (iapply SC R) a1) a0)) (iapply (iapply (iapply SC R) a0) a1))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) s0)) (iapply f x)) x) (iapply (iapply (iapply res f) s0) x))
(rule (iapply (iapply complexu_mul (iapply vectoru_neg ii)) (iapply clog (iapply (iapply vectoru_add z) (iapply (iapply complexu_mul ii) (iapply csqrt (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply cacs z))
(rule (iapply (iapply complexu_mul (iapply vectoru_neg ii)) (iapply clog (iapply (iapply vectoru_add (iapply (iapply complexu_mul ii) z)) (iapply csqrt (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply casn z))
(rule (iapply (iapply s_b_ (iapply simpleu_path g)) (iapply w_ (iapply (iapply a_ (iapply pathfinish g)) (iapply pathstart g)))) (iapply arc g))
(rule (iapply vector (iapply (iapply CONS (iapply vector (iapply (iapply CONS (iapply cos t)) (iapply (iapply CONS (iapply realu_neg (iapply sin t))) NIL)))) (iapply (iapply CONS (iapply vector (iapply (iapply CONS (iapply sin t)) (iapply (iapply CONS (iapply cos t)) NIL)))) NIL))) (iapply matrix (iapply rotate2d t)))
(rule (iapply (iapply mul6 (iapply (iapply scalar6 (iapply (iapply sub6 (iapply constant6 h0)) (iapply (iapply scalar6 proju_y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) rh0)) dihu_xu_divu_sqrtdeltau_posbranch) ldihu_xu_divu_sqrtdeltau_posbranch)
(rule (iapply (iapply (iapply m_m_g_ (iapply (iapply o f) Re)) a) (iapply (iapply within (iapply at (iapply Cx x))) (iapply (iapply INTER real0) (iapply (iapply IMAGE Cx) s0)))) (iapply (iapply (iapply m_m_g_ f) a) (iapply (iapply within (iapply atreal x)) s0)))
(rule (iapply (iapply s_b_ (iapply (iapply ALL (iapply r h)) t)) (iapply (iapply PAIRWISE r) t)) (iapply (iapply PAIRWISE r) (iapply (iapply CONS h) t)))
(rule (iapply (iapply openu_in (iapply (iapply subtopology euclidean) (iapply (iapply hull affine) s0))) s0) (iapply (iapply a_ (iapply relativeu_interior s0)) s0))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_x6 x1) x2) x3) x4) x5) x6) x6)
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_ofu_num p)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply realu_ofu_num k)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ p) k)))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ (iapply (iapply p_ p) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))))))
(rule (iapply (iapply realu_div (iapply (iapply (iapply upsu_x (iapply (iapply dot u) u)) (iapply (iapply dot v) v)) (iapply (iapply dot (iapply (iapply vectoru_sub u) v)) (iapply (iapply vectoru_sub u) v)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply dot (iapply (iapply cross u) v)) (iapply (iapply cross u) v)))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ (iapply realu_abs x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_a_g_ (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply EVEN n)))) (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply realu_pow x) n)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply shift (iapply shift (iapply (iapply edgeu_walkup (iapply shift H)) x))) (iapply (iapply nodeu_walkup H) x))
(rule (iapply (iapply a_ (iapply (iapply hull convex) s0)) (iapply (iapply INSERT a) EMPTY)) (iapply (iapply a_ s0) (iapply (iapply INSERT a) EMPTY)))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) pi)) (iapply (iapply a_ (iapply sin (iapply (iapply vectoru_angle x) y))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply hull affine) s0)) (iapply (iapply INSERT a) EMPTY)) (iapply (iapply a_ s0) (iapply (iapply INSERT a) EMPTY)))
(rule (iapply (iapply dot (iapply (iapply vectoru_sub b) a)) (iapply (iapply vectoru_add b) a)) (iapply (iapply realu_sub (iapply (iapply dot b) b)) (iapply (iapply dot a) a)))
(rule (iapply (iapply shiftpath t) (iapply linepath (iapply (iapply c_ a) a))) (iapply linepath (iapply (iapply c_ a) a)))
(rule (iapply shift (iapply (iapply edgeu_walkup (iapply shift (iapply shift H))) x)) (iapply (iapply faceu_walkup H) x))
(rule (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY) (iapply negligible (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY) (iapply COUNTABLE (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_x5 x1) x2) x3) x4) x5) x6) x5)
(rule (iapply (iapply a_ (iapply INR a)) (iapply INR ai_)) (iapply (iapply a_ a) ai_))
(rule (iapply (iapply a_ (iapply (iapply faceu_map H) x)) (iapply (iapply faceu_map H) y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) (iapply (iapply nodeu_map H) y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) (iapply (iapply edgeu_map H) y)) (iapply (iapply a_ x) y))
(rule (iapply (iapply a_ (iapply INL a)) (iapply INL ai_)) (iapply (iapply a_ a) ai_))
(rule (iapply (iapply a_ (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT y) EMPTY)) (iapply (iapply a_ x) y))
(rule (iapply evenperm (iapply swap (iapply (iapply c_ a) b))) (iapply (iapply a_ a) b))
(rule (iapply (iapply r_ (iapply (iapply realu_div (iapply (iapply dot x) e)) (iapply (iapply dot e) e))) e) (iapply (iapply proju_point e) x))
(rule (iapply (iapply (iapply hasu_integral f) (iapply (iapply integral s0) f)) s0) (iapply (iapply integrableu_on f) s0))
(rule (iapply (iapply a_ (iapply openu_segment (iapply (iapply c_ a) b))) EMPTY) (iapply (iapply a_ a) b))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) cstab)
(rule (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) unit0) (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_x4 x1) x2) x3) x4) x5) x6) x4)
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_x3 x1) x2) x3) x4) x5) x6) x3)
(rule (iapply (iapply IN (iapply (iapply INSERT v) (iapply (iapply INSERT x) EMPTY))) E) (iapply (iapply IN x) (iapply (iapply EE v) E)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_x2 x1) x2) x3) x4) x5) x6) x2)
(rule (iapply (iapply (iapply (iapply (iapply (iapply proju_x1 x1) x2) x3) x4) x5) x6) x1)
(rule (iapply (iapply DISJOINT (iapply (iapply INSERT a) EMPTY)) (iapply (iapply INSERT b) EMPTY)) (iapply w_ (iapply (iapply a_ a) b)))
(rule (iapply (iapply (iapply (iapply ITLIST2 f) NIL) l2) b) b)
(rule (iapply FST (iapply drop2 u)) (iapply part3 u))
(rule (iapply (iapply (iapply (iapply ITLIST2 f) NIL) NIL) b) b)
(rule (iapply (iapply realu_lt (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply (iapply dihV v) w) x) y)) (iapply (iapply realu_lt (iapply cos (iapply (iapply (iapply (iapply dihV v) w) x) y))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply INJP f1) f2)) (iapply (iapply INJP f1i_) f2i_)) (iapply (iapply s_b_ (iapply (iapply a_ f1) f1i_)) (iapply (iapply a_ f2) f2i_)))
(rule (iapply (iapply a_ (iapply (iapply CONS h1) t1)) (iapply (iapply CONS h2) t2)) (iapply (iapply s_b_ (iapply (iapply a_ h1) h2)) (iapply (iapply a_ t1) t2)))
(rule (iapply (iapply DISJOINT (iapply (iapply pathu_component s0) a)) (iapply (iapply pathu_component s0) b)) (iapply w_ (iapply (iapply IN a) (iapply (iapply pathu_component s0) b))))
(rule (iapply (iapply a_ x) (iapply (iapply inverse (iapply edgeu_map H)) y)) (iapply (iapply a_ y) (iapply (iapply edgeu_map H) x)))
(rule (iapply (iapply INTER (iapply (iapply normball v0) r)) (iapply (iapply cone0 v0) S)) (iapply (iapply (iapply solidu_triangle v0) S) r))
(rule (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div (iapply (iapply (iapply volR a) b) c)) a)) (iapply (iapply (iapply surfR a) b) c))
(rule (iapply inside (iapply (iapply UNION (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply UNION (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ b) c)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) a)) NIL))))) (iapply interior (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))))))
(rule (iapply (iapply DISJOINT (iapply (iapply connectedu_component s0) a)) (iapply (iapply connectedu_component s0) b)) (iapply w_ (iapply (iapply IN a) (iapply (iapply connectedu_component s0) b))))
(rule (iapply (iapply pastecart (iapply (iapply r_ c) x1)) (iapply (iapply r_ c) y1)) (iapply (iapply r_ c) (iapply (iapply pastecart x1) y1)))
(rule (iapply (iapply a_ x) (iapply (iapply inverse (iapply faceu_map H)) y)) (iapply (iapply a_ y) (iapply (iapply faceu_map H) x)))
(rule (iapply (iapply a_ x) (iapply (iapply inverse (iapply nodeu_map H)) y)) (iapply (iapply a_ y) (iapply (iapply nodeu_map H) x)))
(rule (iapply (iapply a_ (iapply vectoru_norm (iapply (iapply r_ (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply vectoru_norm u))) u))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply w_ (iapply (iapply a_ u) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply (iapply mul6 (iapply (iapply scalar6 (iapply (iapply sub6 (iapply (iapply scalar6 unit6) h0)) (iapply (iapply scalar6 proju_y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) rh0)) dihu_x) ldihu_x)
(rule (iapply rotate2 proju_y1) proju_y2)
(rule (iapply rotate3 proju_y1) proju_y3)
(rule (iapply rotate4 proju_y1) proju_y4)
(rule (iapply rotate5 proju_y1) proju_y5)
(rule (iapply rotate6 proju_y1) proju_y6)
(rule (iapply rotate4 halfbumpu_x1) halfbumpu_x4)
(rule (iapply (iapply b_s_ (iapply affineu_dependent s0)) (iapply (iapply IN (iapply vec (iapply NUMERAL u_0))) (iapply (iapply hull affine) s0))) (iapply dependent s0))
(rule (iapply (iapply b_s_ (iapply (iapply a_ xl) NIL)) (iapply (iapply a_ xl) (iapply (iapply CONS v) NIL))) (iapply (iapply initialu_sublist xl) (iapply (iapply CONS v) NIL)))
(rule (iapply UNIONS (iapply (iapply IMAGE (iapply IMAGE f)) s0)) (iapply (iapply IMAGE f) (iapply UNIONS s0)))
(rule (iapply (iapply matrixu_add A0) (iapply matrixu_neg B0)) (iapply (iapply matrixu_sub A0) B0))
(rule (iapply matrixu_neg (iapply (iapply matrixu_sub A0) B0)) (iapply (iapply matrixu_sub B0) A0))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply uni (iapply (iapply c_ acs) (iapply (iapply scalar6 proju_y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) acsu_sqrtu_x2u_d4)
(rule (iapply uni (iapply (iapply c_ acs) (iapply (iapply scalar6 proju_y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) acsu_sqrtu_x1u_d4)
(rule (iapply (iapply HASu_SIZE (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply w_ (iapply (iapply a_ a) b)))
(rule (iapply (iapply CONS (iapply HD ul)) (iapply (iapply DROP (iapply TL ul)) i0)) (iapply (iapply DROP ul) (iapply SUC i0)))
(rule (iapply (iapply (iapply (iapply dihV (iapply (iapply EL (iapply NUMERAL u_0)) ul)) (iapply (iapply EL (iapply NUMERAL (iapply BIT1 u_0))) ul)) (iapply (iapply EL (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) ul)) (iapply (iapply EL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) ul)) (iapply dihu4 ul))
(rule (iapply (iapply a_ (iapply matrixu_neg A0)) (iapply mat (iapply NUMERAL u_0))) (iapply (iapply a_ A0) (iapply mat (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply ITER n) f) (iapply (iapply (iapply ITER m) f) x)) (iapply (iapply (iapply ITER (iapply (iapply p_ n) m)) f) x))
(rule (iapply (iapply (iapply POWER p) m) (iapply (iapply (iapply POWER p) n) x)) (iapply (iapply (iapply POWER p) (iapply (iapply p_ m) n)) x))
(rule (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply rhou_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply rad2u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply POWER (iapply bnu_nextVertex (iapply (iapply c_ vs) f))) n) v) (iapply (iapply (iapply bnu_nextVertices (iapply (iapply c_ vs) f)) n) v))
(rule (iapply (iapply INTER (iapply (iapply normball v0) r)) (iapply (iapply (iapply rconeu_gt v0) v1) a)) (iapply (iapply (iapply (iapply conicu_cap v0) v1) r) a))
(rule (iapply (iapply (iapply m_m_m_g_ f) (iapply f x)) (iapply (iapply within (iapply at x)) s0)) (iapply (iapply realu_continuous f) (iapply (iapply within (iapply at x)) s0)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) h) (iapply (iapply EL (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0)))) t)) (iapply (iapply EL n) (iapply (iapply CONS h) t)))
(rule (iapply (iapply vectoru_add (iapply (iapply r_ a) (iapply basis (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply vectoru_add (iapply (iapply r_ b) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply r_ c) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply vector (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) NIL)))))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) e)) (iapply (iapply IN y) (iapply cball (iapply (iapply c_ x) e)))) (iapply (iapply limitu_pointu_of y) (iapply ball (iapply (iapply c_ x) e))))
(rule (iapply (iapply affu_ge (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT x) EMPTY))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply cos x)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply cos x))) (iapply cos (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) x)))
(rule (iapply (iapply inverse (iapply nodeu_map H)) (iapply (iapply nodeu_map H) x)) x)
(rule (iapply (iapply nodeu_map H) (iapply (iapply inverse (iapply nodeu_map H)) x)) x)
(rule (iapply (iapply inverse (iapply faceu_map H)) (iapply (iapply faceu_map H) x)) x)
(rule (iapply (iapply faceu_map H) (iapply (iapply inverse (iapply faceu_map H)) x)) x)
(rule (iapply (iapply inverse (iapply edgeu_map H)) (iapply (iapply edgeu_map H) x)) x)
(rule (iapply (iapply edgeu_map H) (iapply (iapply inverse (iapply edgeu_map H)) x)) x)
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul a) b)))) (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_sub a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ b) a))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply cross (iapply (iapply vectoru_sub b) a)) (iapply (iapply vectoru_sub c) a)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ (iapply (iapply vectoru_add a) (iapply (iapply cross (iapply (iapply vectoru_sub b) a)) (iapply (iapply vectoru_sub c) a)))) b))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply IMAGE (iapply faceu_map H)) (iapply (iapply face H) x)) (iapply (iapply face H) x))
(rule (iapply (iapply bnu_removeKey w) (iapply (iapply bnu_removeKeyList ws) ps)) (iapply (iapply bnu_removeKeyList (iapply (iapply CONS w) ws)) ps))
(rule (iapply (iapply UNION (iapply (iapply EE v) E)) (iapply (iapply EE v) S)) (iapply (iapply EE v) (iapply (iapply UNION E) S)))
(rule (iapply (iapply a_ (iapply cos (iapply (iapply (iapply arcV x) y) z))) (iapply cos (iapply (iapply (iapply arcV xx) yy) zz))) (iapply (iapply a_ (iapply (iapply (iapply arcV x) y) z)) (iapply (iapply (iapply arcV xx) yy) zz)))
(rule (iapply (iapply o f) (iapply (iapply POWER f) n)) (iapply (iapply POWER f) (iapply SUC n)))
(rule (iapply (iapply IMAGE (iapply nodeu_map H)) (iapply (iapply node H) x)) (iapply (iapply node H) x))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul k) (iapply asn (iapply (iapply realu_mul ca) (iapply sin (iapply (iapply realu_div pi) k))))))) (iapply (iapply regularu_sphericalu_polygonu_area ca) k))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) y))) (iapply (iapply s_b_ (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt y) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) y))) (iapply (iapply s_b_ (iapply (iapply intu_lt x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply intu_lt y) (iapply intu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_mul x) y)))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) y))) (iapply (iapply s_b_ (iapply (iapply realu_le x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_le y) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply matrixu_mul (iapply rowvector x)) (iapply columnvector y))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply dot x) y))
(rule (iapply (iapply a_ (iapply cball (iapply (iapply c_ x) e))) (iapply (iapply INSERT x) EMPTY)) (iapply (iapply a_ e) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply hull convex) (iapply (iapply UNION A0) (iapply (iapply hull convex) B0))) (iapply (iapply hull convex) (iapply (iapply UNION A0) B0)))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET s0) (iapply span t))) (iapply (iapply SUBSET t) (iapply span s0))) (iapply (iapply a_ (iapply span s0)) (iapply span t)))
(rule (iapply (iapply s_b_ (iapply (iapply admu_1 H) w)) (iapply (iapply s_b_ (iapply (iapply admu_2 H) w)) (iapply (iapply admu_3 H) w))) (iapply (iapply admissibleu_weight H) w))
(rule (iapply (iapply a_ (iapply (iapply orbitu_map f) x)) (iapply (iapply INSERT x) EMPTY)) (iapply (iapply a_ (iapply f x)) x))
(rule (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm x)) y)) (iapply (iapply r_ (iapply vectoru_norm y)) x)) (iapply (iapply a_ (iapply (iapply dot x) y)) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))))
(rule (iapply (iapply UNION (iapply (iapply DIFF X) Y)) (iapply (iapply DIFF Y) X)) (iapply (iapply SDIFF X) Y))
(rule (iapply (iapply o f) (iapply (iapply ITER n) f)) (iapply (iapply ITER (iapply SUC n)) f))
(rule (iapply (iapply o (iapply (iapply POWER f) n)) f) (iapply (iapply POWER f) (iapply SUC n)))
(rule (iapply (iapply (iapply bnu_replace f) (iapply (iapply CONS (iapply bnu_setFinal f)) NIL)) fs) (iapply (iapply bnu_makeFaceFinalFaceList f) fs))
(rule (iapply (iapply res (iapply (iapply res f) s0)) s0) (iapply (iapply res f) s0))
(rule (iapply (iapply o (iapply (iapply ITER n) f)) f) (iapply (iapply ITER (iapply SUC n)) f))
(rule (iapply (iapply DIFF (iapply cball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply ball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) ballu_annulus)
(rule (iapply (iapply realu_add (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul a) b))) (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply (iapply realu_add a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply IMAGE (iapply edgeu_map H)) (iapply (iapply edge H) x)) (iapply (iapply edge H) x))
(rule (iapply (iapply c_ (iapply FST x)) (iapply SND x)) x)
(rule (iapply FST (iapply drop3 u)) (iapply part4 u))
(rule (iapply (iapply IMAGE mku_finiteu_product) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply t_ (iapply dimindex UNIV)) (iapply dimindex UNIV)))) UNIV)
(rule (iapply (iapply IMAGE mku_finiteu_sum) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply p_ (iapply dimindex UNIV)) (iapply dimindex UNIV)))) UNIV)
(rule (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply det (iapply vector (iapply (iapply CONS w) (iapply (iapply CONS x) (iapply (iapply CONS z) NIL)))))) y)) (iapply (iapply r_ (iapply det (iapply vector (iapply (iapply CONS w) (iapply (iapply CONS x) (iapply (iapply CONS y) NIL)))))) z)) (iapply (iapply cross (iapply (iapply cross w) x)) (iapply (iapply cross y) z)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_pow y1) n10)) (iapply (iapply realu_mul (iapply (iapply realu_pow y2) n20)) (iapply (iapply realu_mul (iapply (iapply realu_pow y3) n30)) (iapply (iapply realu_mul (iapply (iapply realu_pow y4) n4)) (iapply (iapply realu_mul (iapply (iapply realu_pow y5) n5)) (iapply (iapply realu_pow y6) n6)))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply monomial n10) n20) n30) n4) n5) n6) y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply drop b)) (iapply drop a))) (iapply (iapply realu_lt (iapply drop d)) (iapply drop c)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply drop a)) (iapply drop c))) (iapply (iapply a_ (iapply drop b)) (iapply drop d)))) (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazimu_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim2u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim3u_xu_divu_sqrtdeltau_posbranch x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply tauu_residualu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) y)) (iapply (iapply b_s_ (iapply (iapply R x) y)) (iapply (iapply R y) x))) (iapply (iapply (iapply RSC R) x) y))
(rule (iapply (iapply APPEND (iapply (iapply FILTER P) l1)) (iapply (iapply FILTER P) l2)) (iapply (iapply FILTER P) (iapply (iapply APPEND l1) l2)))
(rule (iapply (iapply res (iapply (iapply res f) s0)) t) (iapply (iapply res f) (iapply (iapply INTER s0) t)))
(rule (iapply (iapply vectoru_sub (iapply (iapply projection d) v)) (iapply (iapply projection d) w)) (iapply (iapply projection d) (iapply (iapply vectoru_sub v) w)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ x) (iapply NUMERAL u_0))) (iapply (iapply a_a_g_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply l_a_ m) n))) (iapply (iapply l_a_ (iapply (iapply EXP x) m)) (iapply (iapply EXP x) n)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ x) (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply a_ n) (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ m) n))) (iapply (iapply a_ (iapply (iapply EXP x) m)) (iapply (iapply EXP x) n)))
(rule (iapply (iapply hull P) (iapply (iapply UNION (iapply (iapply hull P) s0)) t)) (iapply (iapply hull P) (iapply (iapply UNION s0) t)))
(rule (iapply (iapply UNION (iapply (iapply INTER s0) t)) (iapply (iapply INTER s0) u)) (iapply (iapply INTER s0) (iapply (iapply UNION t) u)))
(rule (iapply (iapply hull P) (iapply (iapply UNION s0) (iapply (iapply hull P) t))) (iapply (iapply hull P) (iapply (iapply UNION s0) t)))
(rule (iapply (iapply INTER (iapply (iapply UNION s0) t)) (iapply (iapply UNION s0) u)) (iapply (iapply UNION s0) (iapply (iapply INTER t) u)))
(rule (iapply (iapply s_b_ (iapply l (iapply (iapply c_ x) y))) (iapply w_ (iapply (iapply a_ x) y))) (iapply (iapply less l) (iapply (iapply c_ x) y)))
(rule (iapply (iapply UNCURRY f) (iapply (iapply c_ x) y)) (iapply (iapply f x) y))
(rule (iapply (iapply orbitu_map (iapply inverse (iapply edgeu_map H))) x) (iapply (iapply edge H) x))
(rule (iapply (iapply orbitu_map (iapply inverse (iapply nodeu_map H))) x) (iapply (iapply node H) x))
(rule (iapply (iapply orbitu_map (iapply inverse (iapply faceu_map H))) x) (iapply (iapply face H) x))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply (iapply COND (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_sgn x))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re (iapply (iapply complexu_div (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))))) (iapply (iapply realu_lt (iapply vectoru_norm z)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply COND (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) x)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply (iapply COND (iapply (iapply intu_lt x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply intu_sgn x))
(rule (iapply (iapply INTER (iapply closure s0)) (iapply closure (iapply (iapply DIFF UNIV) s0))) (iapply frontier s0))
(rule (iapply RC (iapply TC (iapply SC R))) (iapply RSTC R))
(rule (iapply (iapply IN (iapply INR y)) (iapply (iapply p_u_c s0) t)) (iapply (iapply IN y) t))
(rule (iapply (iapply IN (iapply INL x)) (iapply (iapply p_u_c s0) t)) (iapply (iapply IN x) s0))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply isu_path H) p) n)) (iapply (iapply (iapply gou_oneu_step H) (iapply p n)) (iapply p (iapply SUC n)))) (iapply (iapply (iapply isu_path H) p) (iapply SUC n)))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply isu_contour H) p) n)) (iapply (iapply (iapply oneu_stepu_contour H) (iapply p n)) (iapply p (iapply SUC n)))) (iapply (iapply (iapply isu_contour H) p) (iapply SUC n)))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) (iapply span s0))) (iapply dim s0)) (iapply (iapply p_ (iapply dim s0)) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply dim (iapply (iapply INSERT x) s0)))
(rule (iapply (iapply s_b_ (iapply fullyu_surrounded (iapply (iapply c_ V) E))) (iapply (iapply s_b_ (iapply conformingu_bijection (iapply (iapply c_ V) E))) (iapply (iapply s_b_ (iapply conformingu_halfu_space (iapply (iapply c_ V) E))) (iapply (iapply s_b_ (iapply conformingu_solidu_angle (iapply (iapply c_ V) E))) (iapply conformingu_diagonal (iapply (iapply c_ V) E)))))) (iapply conforming (iapply (iapply c_ V) E)))
(rule (iapply complex (iapply (iapply c_ (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply Re w)) (iapply Re z))) (iapply (iapply realu_mul (iapply Im w)) (iapply Im z)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply Re w)) (iapply Im z))) (iapply (iapply realu_mul (iapply Im w)) (iapply Re z))))) (iapply (iapply complexu_mul w) z))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ l) NIL)) (iapply HD m)) (iapply HD l)) (iapply HD (iapply (iapply APPEND l) m)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ q) NIL)) (iapply LAST p)) (iapply LAST q)) (iapply LAST (iapply (iapply APPEND p) q)))
(rule (iapply (iapply (iapply hasu_derivative f) (iapply (iapply frechetu_derivative f) net0)) net0) (iapply (iapply differentiable f) net0))
(rule (iapply (iapply a_ (iapply Im (iapply (iapply complexu_div (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply Re z)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_mul (iapply (iapply (iapply (iapply azim v0) v1) v2) v3)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div (iapply (iapply realu_pow r) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply volu_ballu_wedge v0) v1) v2) v3) r))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply constant6 c) x1) x2) x3) x4) x5) x6) c)
(rule (iapply distance (iapply (iapply c_ (iapply (iapply r_ c) x)) (iapply (iapply r_ c) y))) (iapply (iapply realu_mul (iapply realu_abs c)) (iapply distance (iapply (iapply c_ x) y))))
(rule (iapply (iapply c_ (iapply (iapply dartsu_ofu_hyp E) V)) (iapply (iapply c_ (iapply eeu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply (iapply c_ (iapply nnu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply ffu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E)))))) (iapply HYP (iapply (iapply c_ x) (iapply (iapply c_ V) E))))
(rule (iapply shift (iapply (iapply (iapply doubleu_edgeu_walkup (iapply shift (iapply shift H))) x) y)) (iapply (iapply (iapply doubleu_faceu_walkup H) x) y))
(rule (iapply shift (iapply shift (iapply (iapply (iapply doubleu_edgeu_walkup (iapply shift H)) x) y))) (iapply (iapply (iapply doubleu_nodeu_walkup H) x) y))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply atn2 (iapply (iapply c_ (iapply sqrt (iapply (iapply realu_mul (iapply (iapply realu_add c) b)) (iapply (iapply realu_add b) a)))) (iapply sqrt (iapply (iapply realu_mul (iapply (iapply realu_sub c) b)) (iapply (iapply realu_sub b) a)))))) (iapply (iapply (iapply solR a) b) c))
(rule (iapply (iapply (iapply POWER (iapply inverse (iapply nodeu_map H))) i0) x) (iapply (iapply (iapply nodeu_contour H) x) i0))
(rule (iapply (iapply realu_mul sol0) (iapply (iapply realu_div (iapply (iapply realu_sub y) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply flatu_term y))
(rule (iapply (iapply hull convexu_cone) (iapply (iapply UNION s0) (iapply (iapply IMAGE vectoru_neg) s0))) (iapply span s0))
(rule (iapply inverse (iapply SND (iapply tupleu_loop L))) (iapply back L))
(rule (iapply fstcart (iapply (iapply pastecart x) y)) x)
(rule (iapply sndcart (iapply (iapply pastecart x) y)) y)
(rule (iapply (iapply a_ (iapply destu_cart (iapply mku_cart r))) r) T)
(rule (iapply rank (iapply (iapply matrixu_mul (iapply transp A0)) A0)) (iapply rank A0))
(rule (iapply (iapply a_a_g_ (iapply (iapply exceptionalu_face H) x)) (iapply (iapply l_a_ (iapply CARD (iapply (iapply node H) x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply nodeu_exceptionalu_face H) x))
(rule (iapply (iapply IMAGE vectoru_neg) (iapply openu_interval (iapply (iapply c_ a) b))) (iapply openu_interval (iapply (iapply c_ (iapply vectoru_neg b)) (iapply vectoru_neg a))))
(rule (iapply inverse (iapply swap (iapply (iapply c_ a) b))) (iapply swap (iapply (iapply c_ a) b)))
(rule (iapply REPu_prod (iapply ABSu_prod (iapply (iapply mku_pair x) y))) (iapply (iapply mku_pair x) y))
(rule (iapply (iapply a_ (iapply transp A0)) (iapply transp B0)) (iapply (iapply a_ A0) B0))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply dot x) y))
(rule (iapply (iapply o (iapply edgeu_map H)) (iapply nodeu_map H)) (iapply inverse (iapply faceu_map H)))
(rule (iapply coplanar (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT (iapply vectoru_neg x)) s0))) (iapply coplanar (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT x) s0))))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x2) x3) x1) x5) x6) x4)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x3) x1) x2) x6) x4) x5)) pi))) (iapply (iapply (iapply (iapply (iapply (iapply solu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y2) y3) y1) y5) y6) y4)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y3) y1) y2) y6) y4) y5)) pi))) (iapply (iapply (iapply (iapply (iapply (iapply solu_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply (iapply (iapply (iapply azim v0) v1) v2) v3)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) c)) (iapply (iapply realu_div (iapply (iapply realu_pow r) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply volu_conicu_capu_wedge v0) v1) v2) v3) r) c))
(rule (iapply (iapply (iapply (iapply (iapply (iapply eulerAu_x x1) x2) x3) x4) x5) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x12) x1) x2) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply euleru_1flatu_x x1) x2) x3) x4) x5) x12))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) (iapply (iapply realu_pow x34) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply bu_coef x12) x13) x14) x23) x24)) x34)) (iapply (iapply (iapply (iapply (iapply cu_coef x12) x13) x14) x23) x24))) (iapply (iapply (iapply (iapply (iapply (iapply delta x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6)) pi))) (iapply (iapply (iapply (iapply (iapply (iapply solu_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply INJ f) s0) t)) (iapply (iapply (iapply SURJ f) s0) t)) (iapply (iapply (iapply BIJ f) s0) t))
(rule (iapply LENGTH (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) NIL)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply vectoru_norm v))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply vectoru_norm v)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0))) (iapply w_ (iapply (iapply a_ v) (iapply vec (iapply NUMERAL u_0)))))) (iapply (iapply IN v) ballu_annulus))
(rule (iapply (iapply IN i0) (iapply (iapply INSERT (iapply NUMERAL u_0)) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))) EMPTY)))))) (iapply (iapply l_a_ i0) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply hull conic) (iapply (iapply hull convex) s0))) (iapply (iapply hull convexu_cone) s0))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) sol0)) pi)) (iapply (iapply realu_div (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) tau0))) mm2)
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply (iapply realu_add (iapply frac x)) (iapply frac y))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply frac x)) (iapply frac y))) (iapply (iapply realu_sub (iapply (iapply realu_add (iapply frac x)) (iapply frac y))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply frac (iapply (iapply realu_add x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply (iapply realu_add (iapply frac x)) (iapply frac y))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply floor x)) (iapply floor y))) (iapply (iapply realu_add (iapply (iapply realu_add (iapply floor x)) (iapply floor y))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply floor (iapply (iapply realu_add x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply l_ inner) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply l_ outer) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply bnu_sub (iapply (iapply bnu_sub bnu_enumTab) inner)) outer)) (iapply (iapply bnu_enumerator inner) outer)) (iapply (iapply bnu_enumt inner) outer))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply promote f) x1) x2) x3) x4) x5) x6) (iapply f x1))
(rule (iapply cos (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) cos797)
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))) tgt)
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))) t0)
(rule (iapply bnu_minimal (iapply (iapply o LENGTH) bnu_verticesu_face)) bnu_minimalFace)
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x6)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_xu_126u_s2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih6u_xu_126u_s2 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x3)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_xu_135u_s2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih3u_xu_135u_s2 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x2)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_xu_126u_s2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih2u_xu_126u_s2 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x5)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_xu_135u_s2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldih5u_xu_135u_s2 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x1)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_126u_s2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_126u_s2 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply marchalu_quartic (iapply (iapply realu_div (iapply sqrt x2)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply mardih2u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply marchalu_quartic (iapply (iapply realu_div (iapply sqrt x1)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply mardihu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply marchalu_quartic (iapply (iapply realu_div (iapply sqrt x3)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply mardih3u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply marchalu_quartic (iapply (iapply realu_div (iapply sqrt x4)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply mardih4u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply promote1u_tou_6 f) x1) x2) x3) x4) x5) x6) (iapply f x1))
(rule (iapply (iapply realu_mul (iapply marchalu_quartic (iapply (iapply realu_div (iapply sqrt x5)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply mardih5u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply (iapply (iapply (iapply conflictingu_dia v) v1) v3) v2) v4) s0)) (iapply w_ (iapply (iapply a_ (iapply (iapply INTER (iapply conv0 (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) EMPTY)))) (iapply conv0 (iapply (iapply INSERT v) (iapply (iapply INSERT v2) (iapply (iapply INSERT v4) EMPTY)))))) EMPTY))) (iapply (iapply (iapply (iapply (iapply (iapply interioru_pos v) v1) v3) v2) v4) s0))
(rule (iapply (iapply realu_mul (iapply marchalu_quartic (iapply (iapply realu_div (iapply sqrt x6)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply mardih6u_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v) w) a) b)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) (iapply (iapply (iapply (iapply azim v) w) a) b))) (iapply (iapply (iapply (iapply azim v) w) b) a))
(rule (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x1)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_135u_s2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_135u_s2 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply b_s_ (iapply (iapply IN x) (iapply conv (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY))))) (iapply (iapply b_s_ (iapply (iapply IN y) (iapply conv (iapply (iapply INSERT z) (iapply (iapply INSERT x) EMPTY))))) (iapply (iapply IN z) (iapply conv (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY)))))) (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))))
(rule (iapply (iapply s_b_ (iapply (iapply integrableu_on f) s0)) (iapply (iapply a_ (iapply (iapply integral s0) f)) i0)) (iapply (iapply (iapply hasu_integral f) i0) s0))
(rule (iapply (iapply p_ (iapply (iapply (iapply COND (iapply criticalu_edgeu_y y1)) (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL u_0))) (iapply (iapply p_ (iapply (iapply (iapply COND (iapply criticalu_edgeu_y y2)) (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL u_0))) (iapply (iapply (iapply COND (iapply criticalu_edgeu_y y3)) (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL u_0)))) (iapply (iapply (iapply wtcount3u_y y1) y2) y3))
(rule (iapply (iapply b_s_ (iapply (iapply IN x) (iapply conv (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY))))) (iapply (iapply b_s_ (iapply (iapply IN y) (iapply conv (iapply (iapply INSERT x) (iapply (iapply INSERT z) EMPTY))))) (iapply (iapply IN z) (iapply conv (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY)))))) (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply Im x)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply realu_le a) (iapply Re x))) (iapply (iapply realu_le (iapply Re x)) b))) (iapply (iapply s_b_ (iapply (iapply realu_le b) (iapply Re x))) (iapply (iapply realu_le (iapply Re x)) a)))) (iapply (iapply IN x) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ (iapply Cx a)) (iapply Cx b))) NIL))))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) x)) (iapply (iapply l_ m) n))) (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply NUMERAL u_0))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ m) (iapply NUMERAL u_0)))) (iapply (iapply a_ n) (iapply NUMERAL u_0))))) (iapply (iapply l_ (iapply (iapply EXP x) m)) (iapply (iapply EXP x) n)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply sqrt y)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0))) (iapply (iapply realu_mul rh0) (iapply (iapply realu_mul sol0) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply flatu_termu_x y))
(rule (iapply (iapply IN (iapply numberu_ofu_nodes H)) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply INSERT (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) EMPTY)))) (iapply tameu_10 H))
(rule (iapply (iapply (iapply POWER (iapply edgeu_map H)) (iapply CARD (iapply (iapply edge H) x))) x) x)
(rule (iapply (iapply (iapply POWER (iapply faceu_map H)) (iapply CARD (iapply (iapply face H) x))) x) x)
(rule (iapply (iapply (iapply POWER (iapply nodeu_map H)) (iapply CARD (iapply (iapply node H) x))) x) x)
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_mul a) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) a))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply (iapply realu_mul (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) a)) a)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply w_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply w_ (iapply (iapply IN y) (iapply (iapply dartsu_ofu_hyp E) V)))) (iapply (iapply IN y) (iapply (iapply selfu_pairs E) V)))) y) (iapply (iapply c_ (iapply FST y)) (iapply (iapply (iapply (iapply azimu_cycle (iapply (iapply EE (iapply FST y)) E)) x) (iapply FST y)) (iapply SND y)))) (iapply (iapply nnu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) y))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply w_ (iapply (iapply IN u) (iapply (iapply dartsu_ofu_hyp E) V)))) (iapply (iapply IN u) (iapply (iapply selfu_pairs E) V)))) u) (iapply (iapply c_ (iapply SND u)) (iapply (iapply (iapply (iapply ivsu_azimu_cycle (iapply (iapply EE (iapply SND u)) E)) x) (iapply SND u)) (iapply FST u)))) (iapply (iapply ffu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) u))
(rule (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) (iapply (iapply vectoru_sub u) v0)) (iapply (iapply vectoru_sub v) v0)) (iapply (iapply (iapply arcV v0) u) v))
(rule (iapply (iapply d_ (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) NIL)))) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply sin (iapply (iapply realu_div (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply cos (iapply (iapply realu_div (iapply (iapply realu_sub x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply sin x)) (iapply sin y)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply sin (iapply (iapply realu_div (iapply (iapply realu_sub x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply cos (iapply (iapply realu_div (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_sub (iapply sin x)) (iapply sin y)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply cos (iapply (iapply realu_div (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply cos (iapply (iapply realu_div (iapply (iapply realu_sub x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply cos x)) (iapply cos y)))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply sin (iapply (iapply realu_div (iapply (iapply realu_add x) y)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sin (iapply (iapply realu_div (iapply (iapply realu_sub y) x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_sub (iapply cos x)) (iapply cos y)))
(rule (iapply INTERS (iapply (iapply IMAGE (iapply bisu_le v)) (iapply (iapply DELETE s0) v))) (iapply (iapply voronoiu_closed s0) v))
(rule (iapply INTERS (iapply (iapply IMAGE (iapply bisu_lt v)) (iapply (iapply DELETE s0) v))) (iapply (iapply voronoiu_open s0) v))
(rule (iapply UNIONS (iapply (iapply INSERT (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY))) EMPTY)) (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY)))
(rule (iapply (iapply (iapply m_m_g_ f) (iapply f x)) (iapply (iapply within (iapply at x)) s0)) (iapply (iapply continuous f) (iapply (iapply within (iapply at x)) s0)))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply (iapply arcV x) y) z)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply (iapply (iapply arcV x) y) z)) pi)) (iapply (iapply a_ (iapply sin (iapply (iapply (iapply arcV x) y) z))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul y) (iapply (iapply realu_mul const1) (iapply (iapply realu_mul rh0) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul const1) rh0))) (iapply rho y))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ t) NIL)) NIL) (iapply (iapply CONS h) (iapply BUTLAST t))) (iapply BUTLAST (iapply (iapply CONS h) t)))
(rule (iapply (iapply a_ (iapply (iapply c_ x) y)) (iapply (iapply c_ a) b)) (iapply (iapply s_b_ (iapply (iapply a_ x) a)) (iapply (iapply a_ y) b)))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply (iapply (iapply (iapply bu_coef x12) x13) x14) x23) x24)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply (iapply (iapply (iapply cu_coef x12) x13) x14) x23) x24)))) (iapply (iapply realu_mul (iapply (iapply (iapply upsu_x x12) x23) x13)) (iapply (iapply (iapply upsu_x x12) x24) x14)))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply Ju_SY s1)) (iapply (iapply UNION (iapply Ju_SY s0)) (iapply (iapply INSERT (iapply (iapply INSERT p) (iapply (iapply INSERT q) EMPTY))) EMPTY)))) (iapply (iapply SUBSET (iapply Ju_SY s2)) (iapply (iapply UNION (iapply Ju_SY s0)) (iapply (iapply INSERT (iapply (iapply INSERT p) (iapply (iapply INSERT q) EMPTY))) EMPTY)))) (iapply (iapply (iapply (iapply (iapply COVER3u_SY p) q) s0) s1) s2))
(rule (iapply (iapply dot (iapply (iapply pastecart x1) x2)) (iapply (iapply pastecart y1) y2)) (iapply (iapply realu_add (iapply (iapply dot x1) y1)) (iapply (iapply dot x2) y2)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ i0) (iapply CARD (iapply (iapply (iapply setu_ofu_edge v) V) E)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) (iapply (iapply (iapply (iapply azim x) v) u) (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) x) V) E) v) u) i0))) (iapply (iapply (iapply (iapply (iapply (iapply ifu_azimsu_fan x) V) E) v) u) i0))
(rule (iapply (iapply IN (iapply (iapply c_ x) y)) (iapply (iapply t_u_c s0) t)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply (iapply IN y) t)))
(rule (iapply (iapply IN (iapply (iapply c_ x) y)) (iapply (iapply CROSS s0) t)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply (iapply IN y) t)))
(rule (iapply (iapply (iapply COND (iapply (iapply g_ (iapply CARD (iapply (iapply (iapply setu_ofu_edge v) V) E))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply (iapply (iapply azim x) v) w) (iapply (iapply (iapply (iapply (iapply sigmau_fan x) V) E) v) w))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)) (iapply (iapply (iapply (iapply (iapply azimu_fan x) V) E) v) w))
(rule (iapply fan2 (iapply (iapply c_ x) (iapply (iapply c_ V) E))) (iapply w_ (iapply (iapply IN x) V)))
(rule (iapply (iapply INJP (iapply INJN (iapply SUC c))) (iapply (iapply INJP (iapply INJA i0)) (iapply INJF r))) (iapply (iapply (iapply ZCONSTR c) i0) r))
(rule (iapply (iapply UNION (iapply ball (iapply (iapply c_ a) r))) (iapply ball (iapply (iapply c_ a) s0))) (iapply ball (iapply (iapply c_ a) (iapply (iapply realu_max r) s0))))
(rule (iapply (iapply INTER (iapply ball (iapply (iapply c_ a) r))) (iapply ball (iapply (iapply c_ a) s0))) (iapply ball (iapply (iapply c_ a) (iapply (iapply realu_min r) s0))))
(rule (iapply (iapply realu_div (iapply sqrt (iapply (iapply realu_mul a) (iapply (iapply realu_mul a) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_mul b) b)) (iapply (iapply realu_mul a) a))) (iapply (iapply realu_sub (iapply (iapply realu_mul c) c)) (iapply (iapply realu_mul b) b))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply (iapply volR a) b) c))
(rule (iapply angle (iapply (iapply c_ v) (iapply (iapply c_ u) w))) (iapply (iapply (iapply arcV u) v) w))
(rule (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) a)) NIL)) (iapply (iapply INSERT a) EMPTY))
(rule (iapply (iapply (iapply upsu_x (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ a) b))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ a) c))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ b) c))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply cross (iapply (iapply vectoru_sub b) a)) (iapply (iapply vectoru_sub c) a)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply (iapply COND (iapply (iapply IN a) (iapply (iapply hull affine) s0))) (iapply affu_dim s0)) (iapply (iapply intu_add (iapply affu_dim s0)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply affu_dim (iapply (iapply INSERT a) s0)))
(rule (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)) (iapply pathu_image (iapply linepath (iapply (iapply c_ a) b))))
(rule (iapply (iapply vectoru_sub x) (iapply (iapply r_ (iapply (iapply realu_div (iapply (iapply dot x) e)) (iapply (iapply dot e) e))) e)) (iapply (iapply projection e) x))
(rule (iapply (iapply UNION (iapply ordu_pairs E)) (iapply (iapply selfu_pairs E) V)) (iapply (iapply dartsu_ofu_hyp E) V))
(rule (iapply (iapply MEM (iapply (iapply c_ x) (iapply (iapply ASSOC x) l))) l) (iapply (iapply MEM x) (iapply (iapply MAP FST) l)))
(rule (iapply setdist (iapply (iapply c_ (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT y) EMPTY))) (iapply distance (iapply (iapply c_ x) y)))
(rule (iapply (iapply a_ (iapply (iapply faceu_map H) x)) (iapply (iapply inverse (iapply nodeu_map H)) x)) (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x))
(rule (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) (iapply (iapply inverse (iapply edgeu_map H)) x)) (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x))
(rule (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) (iapply (iapply inverse (iapply faceu_map H)) x)) (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x))
(rule (iapply (iapply d_ (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) NIL)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) y)
(rule (iapply hypermap0 (iapply tupleu_hypermap a)) a)
(rule (iapply FST (iapply tupleu_hypermap H)) (iapply dart H))
(rule (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) a)) NIL)) (iapply (iapply INSERT a) EMPTY))
(rule (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY)))) (iapply (iapply parallel v) w))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x c) x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x c) x2) x3) x1) x5) x6) x4)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x c) x3) x1) x2) x6) x4) x5)) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_solu_x c) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2) x3) x4) x5) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x12) x1) x2) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply flatu_termu_x x12)) (iapply (iapply (iapply (iapply (iapply (iapply taumu_1flatu_x x1) x2) x3) x4) x5) x12))
(rule (iapply (iapply a_ (iapply (iapply hull P) (iapply (iapply INSERT a) s0))) (iapply (iapply hull P) s0)) (iapply (iapply IN a) (iapply (iapply hull P) s0)))
(rule (iapply (iapply IN x) (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))) (iapply (iapply between x) (iapply (iapply c_ a) b)))
(rule (iapply (iapply (iapply (iapply dihV (iapply vec (iapply NUMERAL u_0))) (iapply vectoru_neg v1)) (iapply vectoru_neg v2)) (iapply vectoru_neg v3)) (iapply (iapply (iapply (iapply dihV (iapply vec (iapply NUMERAL u_0))) v1) v2) v3))
(rule (iapply (iapply complexu_mul (iapply (iapply complexu_div ii) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply clog (iapply (iapply complexu_div (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))) (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))))) (iapply catn z))
(rule (iapply SND (iapply SND (iapply SND u))) (iapply drop2 u))
(rule (iapply (iapply vectoru_add (iapply matvec x)) (iapply matvec y)) (iapply matvec (iapply (iapply matrixu_add x) y)))
(rule (iapply (iapply vectoru_sub (iapply matvec x)) (iapply matvec y)) (iapply matvec (iapply (iapply matrixu_sub x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply IN a) s0)) (iapply independent s0)) (iapply (iapply s_b_ (iapply independent s0)) (iapply w_ (iapply (iapply IN a) (iapply span s0))))) (iapply independent (iapply (iapply INSERT a) s0)))
(rule (iapply (iapply s_b_ (iapply (iapply l_ (iapply LENGTH ul)) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply setu_ofu_list ul)) V)) (iapply (iapply a_ (iapply (iapply intu_add (iapply affu_dim (iapply (iapply voronoiu_list V) ul))) (iapply intu_ofu_num (iapply LENGTH ul)))) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply voronoiu_nondg V) ul))
(rule (iapply (iapply s_b_ (iapply (iapply dartu_nondegenerate H) x)) (iapply (iapply IN (iapply (iapply nodeu_map H) x)) (iapply (iapply edge H) x))) (iapply (iapply isu_edgeu_split H) x))
(rule (iapply (iapply s_b_ (iapply (iapply dartu_nondegenerate H) x)) (iapply (iapply IN (iapply (iapply edgeu_map H) x)) (iapply (iapply face H) x))) (iapply (iapply isu_faceu_split H) x))
(rule (iapply (iapply s_b_ (iapply (iapply dartu_nondegenerate H) x)) (iapply (iapply IN (iapply (iapply faceu_map H) x)) (iapply (iapply node H) x))) (iapply (iapply isu_nodeu_split H) x))
(rule (iapply (iapply matrixu_add (iapply transp A0)) (iapply transp B0)) (iapply transp (iapply (iapply matrixu_add A0) B0)))
(rule (iapply (iapply matrixu_add (iapply matrixu_neg A0)) (iapply matrixu_neg B0)) (iapply matrixu_neg (iapply (iapply matrixu_add A0) B0)))
(rule (iapply (iapply matrixu_sub (iapply transp A0)) (iapply transp B0)) (iapply transp (iapply (iapply matrixu_sub A0) B0)))
(rule (iapply (iapply matrixu_mul (iapply transp B0)) (iapply transp A0)) (iapply transp (iapply (iapply matrixu_mul A0) B0)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply INTER X) A0)) EMPTY)) (iapply (iapply a_ (iapply (iapply INTER X) B0)) EMPTY)) (iapply (iapply a_ (iapply (iapply INTER X) (iapply (iapply UNION A0) B0))) EMPTY))
(rule (iapply (iapply (iapply (iapply dihV (iapply vectoru_neg v0)) (iapply vectoru_neg v1)) (iapply vectoru_neg v2)) (iapply vectoru_neg v3)) (iapply (iapply (iapply (iapply dihV v0) v1) v2) v3))
(rule (iapply (iapply s_b_ (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply (iapply bnu_directedLength f) a) b))) (iapply (iapply s_b_ (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply (iapply bnu_directedLength f) b) a))) (iapply (iapply setu_ofu_list (iapply (iapply bnu_neighbors g) a)) b))) (iapply (iapply (iapply (iapply bnu_duplicateEdge g) f) a) b))
(rule (iapply (iapply UNION (iapply (iapply (iapply setu_ofu_edge v) V) E1)) (iapply (iapply (iapply setu_ofu_edge v) V) E2)) (iapply (iapply (iapply setu_ofu_edge v) V) (iapply (iapply UNION E1) E2)))
(rule (iapply vector (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) NIL)))) (iapply (iapply (iapply mku_vec3 a) b) c))
(rule (iapply (iapply a_ (iapply (iapply IN x) (iapply (iapply DELETE s0) xi_))) (iapply (iapply IN xi_) (iapply (iapply DELETE s0) x))) (iapply (iapply a_ (iapply (iapply IN x) s0)) (iapply (iapply IN xi_) s0)))
(rule (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_neg b)) (iapply sqrt (iapply (iapply realu_sub (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul a) c)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) a)) (iapply (iapply (iapply quadraticu_rootu_plusu_curry a) b) c))
(rule (iapply (iapply c_ (iapply (iapply vu_prime V) FF)) (iapply (iapply eu_prime E) FF)) (iapply (iapply localization (iapply (iapply c_ V) E)) FF))
(rule (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_neg b)) (iapply sqrt (iapply (iapply realu_sub (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul a) c)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) a)) (iapply quadraticu_rootu_plus (iapply (iapply c_ a) (iapply (iapply c_ b) c))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ y) (iapply (iapply faceu_map H) x))) (iapply (iapply a_ x) (iapply (iapply nodeu_map H) y))) (iapply (iapply (iapply oneu_stepu_contour H) x) y))
(rule (iapply (iapply b_s_ (iapply (iapply initialu_sublist xl) ul)) (iapply (iapply a_ xl) (iapply (iapply APPEND ul) (iapply (iapply CONS v) NIL)))) (iapply (iapply initialu_sublist xl) (iapply (iapply APPEND ul) (iapply (iapply CONS v) NIL))))
(rule (iapply baseu_pointu_fan (iapply (iapply c_ x) (iapply (iapply c_ V) E))) x)
(rule (iapply (iapply vectoru_add (iapply t (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply vectoru_add (iapply t (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply t (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply vsum (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) t))
(rule (iapply rotate2 proju_x1) proju_x2)
(rule (iapply rotate3 proju_x1) proju_x3)
(rule (iapply rotate4 proju_x1) proju_x4)
(rule (iapply rotate5 proju_x1) proju_x5)
(rule (iapply rotate6 proju_x1) proju_x6)
(rule (iapply (iapply s_b_ (iapply (iapply dartu_nondegenerate H) x)) (iapply w_ (iapply (iapply IN (iapply (iapply edgeu_map H) x)) (iapply (iapply face H) x)))) (iapply (iapply isu_faceu_merge H) x))
(rule (iapply (iapply s_b_ (iapply (iapply dartu_nondegenerate H) x)) (iapply w_ (iapply (iapply IN (iapply (iapply faceu_map H) x)) (iapply (iapply node H) x)))) (iapply (iapply isu_nodeu_merge H) x))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_mul r) r)) (iapply (iapply realu_pow (iapply (iapply realu_div y) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply vol2r y) r))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply csin (iapply (iapply complexu_div (iapply (iapply vectoru_sub w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply ccos (iapply (iapply complexu_div (iapply (iapply vectoru_add w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply vectoru_sub (iapply csin w)) (iapply csin z)))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply csin (iapply (iapply complexu_div (iapply (iapply vectoru_add w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply ccos (iapply (iapply complexu_div (iapply (iapply vectoru_sub w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply vectoru_add (iapply csin w)) (iapply csin z)))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply csin (iapply (iapply complexu_div (iapply (iapply vectoru_add w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply csin (iapply (iapply complexu_div (iapply (iapply vectoru_sub z) w)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply vectoru_sub (iapply ccos w)) (iapply ccos z)))
(rule (iapply (iapply s_b_ (iapply (iapply dartu_nondegenerate H) x)) (iapply w_ (iapply (iapply IN (iapply (iapply nodeu_map H) x)) (iapply (iapply edge H) x)))) (iapply (iapply isu_edgeu_merge H) x))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply complexu_mul (iapply ccos (iapply (iapply complexu_div (iapply (iapply vectoru_add w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply ccos (iapply (iapply complexu_div (iapply (iapply vectoru_sub w) z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply vectoru_add (iapply ccos w)) (iapply ccos z)))
(rule (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET s0) (iapply topspace top))) (iapply (iapply closedu_in top) (iapply (iapply DIFF (iapply topspace top)) s0))) (iapply (iapply openu_in top) s0))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET s0) (iapply topspace top))) (iapply (iapply openu_in top) (iapply (iapply DIFF (iapply topspace top)) s0))) (iapply (iapply closedu_in top) s0))
(rule (iapply negligible (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY))
(rule (iapply FINITE (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply a_ a) b))
(rule (iapply angle (iapply (iapply c_ vap) (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) vbp))) (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) vap) vbp))
(rule (iapply (iapply EE v) (iapply (iapply INSERT (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY))) EMPTY)) (iapply (iapply INSERT w) EMPTY))
(rule (iapply angle (iapply (iapply c_ x) (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) y))) (iapply (iapply vectoru_angle x) y))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply promote3u_tou_6 f) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply f x1) x2) x3))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_n y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply realu_ofu_num w1))) (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_n y1) sqrt2) y3) sqrt2) y5) sqrt2)) (iapply realu_ofu_num w2))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_n y1) y2) y3) y4) y5) y6) f))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_n y1) y2) y3) y4) y5) y6) w1) w2) sqrt2) f))
(rule (iapply (iapply (iapply POWER (iapply faceu_map H)) (iapply SUC (iapply (iapply (iapply (iapply mInside H) NF) L) x))) x) (iapply (iapply (iapply (iapply heading H) NF) L) x))
(rule (iapply (iapply (iapply COND (iapply (iapply l_ k) (iapply LENGTH l))) (iapply (iapply EL k) l)) (iapply (iapply EL (iapply (iapply m_ k) (iapply LENGTH l))) m)) (iapply (iapply EL k) (iapply (iapply APPEND l) m)))
(rule (iapply (iapply DIFF (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))))) (iapply (iapply UNION (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply UNION (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ b) c)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) a)) NIL))))) (iapply interior (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ k) i0)) j) (iapply (iapply (iapply COND (iapply (iapply a_ k) j)) i0) k)) (iapply (iapply swap (iapply (iapply c_ i0) j)) k))
(rule (iapply (iapply hull P) (iapply (iapply UNION (iapply (iapply hull P) s0)) (iapply (iapply hull P) t))) (iapply (iapply hull P) (iapply (iapply UNION s0) t)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply lmfun (iapply (iapply realu_div y) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply gcy y))
(rule (iapply (iapply mul6 (iapply (iapply sub6 dihu_x) (iapply constant6 (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply uni (iapply (iapply c_ (iapply truncateu_gamma2u_x m1)) proju_x1))) (iapply truncateu_gamma23u_xu_B m1))
(rule (iapply (iapply DIFF (iapply (iapply DIFF UNIV) (iapply interior s0))) (iapply interior (iapply (iapply DIFF UNIV) s0))) (iapply frontier s0))
(rule (iapply (iapply (iapply (iapply (iapply (iapply solu_y (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) sol0)
(rule (iapply (iapply s_b_ (iapply (iapply faceu_of f) s0)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ f) EMPTY))) (iapply (iapply a_ (iapply affu_dim f)) (iapply (iapply intu_sub (iapply affu_dim s0)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply (iapply facetu_of f) s0))
(rule (iapply (iapply b_s_ (iapply (iapply isolatedu_dart H) x)) (iapply (iapply b_s_ (iapply (iapply isu_edgeu_degenerate H) x)) (iapply (iapply b_s_ (iapply (iapply isu_nodeu_degenerate H) x)) (iapply (iapply isu_faceu_degenerate H) x)))) (iapply (iapply dartu_degenerate H) x))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot x) x)) (iapply (iapply dot x) y))) (iapply (iapply a_ (iapply (iapply dot y) y)) (iapply (iapply dot x) x))) (iapply (iapply a_ x) y))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply CONS (iapply (iapply c_ h1) h2)) (iapply (iapply ZIP t1) t2)) (iapply (iapply ZIP (iapply (iapply CONS h1) t1)) (iapply (iapply CONS h2) t2)))
(rule (iapply (iapply vectoru_sub (iapply (iapply pastecart x1) y1)) (iapply (iapply pastecart x2) y2)) (iapply (iapply pastecart (iapply (iapply vectoru_sub x1) x2)) (iapply (iapply vectoru_sub y1) y2)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply Iu_SY s1)) (iapply (iapply (iapply ISu_SY s0) p) q))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply Iu_SY s2)) (iapply (iapply (iapply ISu_SY s0) q) p))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply fu_sy s1)) (iapply (iapply (iapply flu_sy s0) p) q))) (iapply (iapply a_ (iapply fu_sy s2)) (iapply (iapply (iapply flu_sy s0) q) p))))) (iapply (iapply (iapply (iapply (iapply COVER1u_SY p) q) s0) s1) s2))
(rule (iapply (iapply vectoru_add (iapply (iapply pastecart x1) y1)) (iapply (iapply pastecart x2) y2)) (iapply (iapply pastecart (iapply (iapply vectoru_add x1) x2)) (iapply (iapply vectoru_add y1) y2)))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS x2) NIL))))) (iapply det (iapply vector (iapply (iapply CONS x1) (iapply (iapply CONS y2) NIL)))))) (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS y2) (iapply (iapply CONS x2) NIL))))) (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS x1) NIL)))))) (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS x1) (iapply (iapply CONS x2) NIL))))) (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS y2) NIL))))))
(rule (iapply (iapply (iapply arcV (iapply (iapply vectoru_add a) b)) (iapply (iapply vectoru_add a) c)) (iapply (iapply vectoru_add a) d)) (iapply (iapply (iapply arcV b) c) d))
(rule (iapply (iapply eu_fanu_pair (iapply (iapply c_ V) E)) (iapply (iapply c_ v) w)) (iapply (iapply c_ w) v))
(rule (iapply (iapply matrixu_add (iapply (iapply r_r_ c) A0)) (iapply (iapply r_r_ c) B0)) (iapply (iapply r_r_ c) (iapply (iapply matrixu_add A0) B0)))
(rule (iapply (iapply matrixu_sub (iapply (iapply r_r_ c) A0)) (iapply (iapply r_r_ c) B0)) (iapply (iapply r_r_ c) (iapply (iapply matrixu_sub A0) B0)))
(rule (iapply (iapply o (iapply (iapply POWER f) m)) (iapply (iapply POWER f) n)) (iapply (iapply POWER f) (iapply (iapply p_ m) n)))
(rule (iapply (iapply matrixu_add (iapply (iapply r_r_ b) A0)) (iapply (iapply r_r_ c) A0)) (iapply (iapply r_r_ (iapply (iapply realu_add b) c)) A0))
(rule (iapply (iapply matrixu_sub (iapply (iapply r_r_ b) A0)) (iapply (iapply r_r_ c) A0)) (iapply (iapply r_r_ (iapply (iapply realu_sub b) c)) A0))
(rule (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply realu_inv (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply realu_inv pi)) (iapply (iapply realu_mul sol0) (iapply (iapply realu_sub y) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply rhou_fun y))
(rule (iapply (iapply (iapply COND (iapply EVEN n)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply (iapply realu_mul (iapply realu_ofu_num (iapply FACT (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply DIV (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply tayloru_coeffu_catn n) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply s_b_ (iapply path p)) (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply pathu_image p)) s0)) (iapply (iapply a_ (iapply pathfinish p)) (iapply pathstart p)))) (iapply (iapply (iapply homotopicu_loops s0) p) p))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply (iapply vectoru_angle x) y)) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply vectoru_angle x) y)) (iapply (iapply realu_sub pi) (iapply (iapply vectoru_angle x) y))) (iapply asn (iapply sin (iapply (iapply vectoru_angle x) y))))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply dimindex UNIV))) EMPTY) (iapply openu_segment (iapply (iapply c_ a) b))) (iapply interior (iapply openu_segment (iapply (iapply c_ a) b))))
(rule (iapply closure (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply interior (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply openu_interval (iapply (iapply c_ a) b)))
(rule (iapply (iapply divisionu_of (iapply (iapply IMAGE (iapply IMAGE vectoru_neg)) d)) (iapply (iapply IMAGE vectoru_neg) s0)) (iapply (iapply divisionu_of d) s0))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t0))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126 y1) y2) y3) y4) y5) y6) f)) (iapply realu_ofu_num w1))) (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135 y1) y2) y3) y4) y5) y6) f)) (iapply realu_ofu_num w2))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLR y1) y2) y3) y4) y5) y6) f))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23f y1) y2) y3) y4) y5) y6) w1) w2) sqrt2) f))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazimu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim2u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply rhazim3u_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) const1)) pi)))) (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim2 y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply rhazim3 y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) const1)) pi)))) (iapply (iapply (iapply (iapply (iapply (iapply taum y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply atn2 (iapply (iapply c_ (iapply sqrt (iapply (iapply (iapply upsu_x (iapply (iapply realu_mul a) a)) (iapply (iapply realu_mul b) b)) (iapply (iapply realu_mul c) c)))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul c) c)) (iapply (iapply realu_mul a) a))) (iapply (iapply realu_mul b) b))))) (iapply (iapply (iapply arclength a) b) c))
(rule (iapply (iapply a_ (iapply (iapply (iapply upsu_x (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v2) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply collinear (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY)))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v) w))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow d) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) d)) (iapply (iapply a_ (iapply distance (iapply (iapply c_ v) w))) d))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply (iapply upsu_x (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v2) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply w_ (iapply collinear (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY))))))
(rule (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul const1) (iapply (iapply realu_div (iapply (iapply realu_sub y) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply rho y))
(rule (iapply (iapply a_ (iapply (iapply p_ (iapply numberu_ofu_nodes H)) (iapply (iapply p_ (iapply numberu_ofu_edges H)) (iapply numberu_ofu_faces H)))) (iapply (iapply p_ (iapply CARD (iapply dart H))) (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply numberu_ofu_components H)))) (iapply planaru_hypermap H))
(rule (iapply (iapply a_ (iapply (iapply o (iapply edgeu_map H)) (iapply edgeu_map H))) I) (iapply plainu_hypermap H))
(rule (iapply (iapply b_s_ (iapply (iapply IN u) (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY))))) (iapply (iapply a_ x) v)) (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT v) (iapply (iapply INSERT u) EMPTY)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points f) x) V) E) v) w) (iapply NUMERAL u_0)) w)
(rule (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) j)) (iapply (iapply realu_div (iapply (iapply realu_pow (iapply halfatn4 x)) (iapply (iapply p_ (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) j)) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply (iapply p_ (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) j)) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply halfatn4u_co x) j))
(rule (iapply (iapply dot b) (iapply (iapply vectoru_sub x) (iapply (iapply r_ (iapply (iapply realu_div (iapply (iapply dot b) x)) (iapply (iapply dot b) b))) b))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ (iapply (iapply o (iapply nodeu_map H)) (iapply nodeu_map H))) I) (iapply (iapply a_ (iapply inverse (iapply nodeu_map H))) (iapply nodeu_map H)))
(rule (iapply (iapply a_ (iapply (iapply o (iapply edgeu_map H)) (iapply edgeu_map H))) I) (iapply (iapply a_ (iapply inverse (iapply edgeu_map H))) (iapply edgeu_map H)))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply tameu_tableu_d (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) hplus)
(rule (iapply (iapply IN (iapply (iapply INSERT (iapply FST x)) (iapply (iapply INSERT (iapply SND x)) EMPTY))) E) (iapply (iapply IN x) (iapply ordu_pairs E)))
(rule (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply solu_y (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) pi) const1)
(rule (iapply (iapply realu_mul (iapply (iapply (iapply (iapply azim v0) v1) v2) v3)) (iapply (iapply realu_mul (iapply (iapply realu_pow h) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul a) a))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply (iapply (iapply (iapply (iapply volu_frusttu_wedge v0) v1) v2) v3) h) a))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply (iapply (iapply (iapply (iapply chi x12) x13) x14) x23) x24) x34)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply delta x12) x13) x14) x23) x24) x34)) (iapply (iapply realu_mul x34) (iapply (iapply realu_mul x24) x23))))) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply rhou_ij x12) x13) x14) x23) x24) x34)) (iapply (iapply (iapply upsu_x x34) x24) x23)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply scalar6 f) r) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) r))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) (iapply (iapply vectoru_angle w) z))) (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) (iapply (iapply realu_sub pi) (iapply (iapply vectoru_angle w) z)))) (iapply (iapply a_ (iapply sin (iapply (iapply vectoru_angle x) y))) (iapply sin (iapply (iapply vectoru_angle w) z))))
(rule (iapply (iapply IN x) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply between x) (iapply (iapply c_ a) b)))
(rule (iapply (iapply IN (iapply vectoru_neg x)) (iapply openu_interval (iapply (iapply c_ (iapply vectoru_neg b)) (iapply vectoru_neg a)))) (iapply (iapply IN x) (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply permutation (iapply (iapply o p) (iapply swap (iapply (iapply c_ a) b)))) (iapply permutation p))
(rule (iapply permutation (iapply (iapply o (iapply swap (iapply (iapply c_ a) b))) p)) (iapply permutation p))
(rule (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul const1) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply rho (iapply sqrt x)))
(rule (iapply (iapply add6 (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 (iapply gamma3u_x m1)) dummy6) dummy6) dummy6) proju_x1) proju_x3) proju_x5)) (iapply (iapply scalar6 (iapply (iapply sub6 dihu_x) (iapply mku_135 dihu_x))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply gamma23u_keep135u_x m1))
(rule (iapply (iapply (iapply COND (iapply P h)) (iapply (iapply CONS h) (iapply (iapply FILTER P) t))) (iapply (iapply FILTER P) t)) (iapply (iapply FILTER P) (iapply (iapply CONS h) t)))
(rule (iapply (iapply (iapply POWER (iapply inverse (iapply faceu_map H))) (iapply CARD (iapply (iapply face H) x))) x) x)
(rule (iapply (iapply (iapply POWER (iapply inverse (iapply nodeu_map H))) (iapply CARD (iapply (iapply node H) x))) x) x)
(rule (iapply (iapply (iapply COND (iapply f x)) (iapply (iapply CONS x) (iapply (iapply bnu_filter f) xs))) (iapply (iapply bnu_filter f) xs)) (iapply (iapply bnu_filter f) (iapply (iapply CONS x) xs)))
(rule (iapply (iapply d_ (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) (iapply (iapply CONS z) NIL))))) (iapply NUMERAL (iapply BIT1 u_0))) x)
(rule (iapply (iapply (iapply (iapply (iapply interp (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) y) (iapply ly y))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply truncateu_gamma2u_x m1) x1)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma23u_xu_B m1) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply (iapply (iapply (iapply (iapply num1 x1) x2) x3) x4) x5) x6)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply (iapply (iapply (iapply (iapply num2 x1) x2) x3) x4) x5) x6))) (iapply (iapply (iapply (iapply (iapply (iapply numu_combo1 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) (iapply NUMERAL u_0)) (iapply (iapply p_ (iapply LENGTH (iapply (iapply (iapply bnu_between (iapply bnu_verticesu_face f)) a) b))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply (iapply bnu_directedLength f) a) b))
(rule (iapply (iapply b_s_ (iapply (iapply (iapply bnu_isu_pru_Iso phi) Fs1) Fs2)) (iapply (iapply (iapply bnu_isu_pru_Iso phi) Fs1) (iapply (iapply IMAGE REVERSE) Fs2))) (iapply (iapply (iapply bnu_isu_Iso phi) Fs1) Fs2))
(rule (iapply (iapply (iapply POWER (iapply (iapply res (iapply faceu_map H)) (iapply (iapply face H) x))) n) x) (iapply (iapply (iapply POWER (iapply faceu_map H)) n) x))
(rule (iapply (iapply (iapply support op) f) (iapply (iapply (iapply support op) f) s0)) (iapply (iapply (iapply support op) f) s0))
(rule (iapply (iapply (iapply iterate op) (iapply (iapply (iapply support op) f) s0)) f) (iapply (iapply (iapply iterate op) s0) f))
(rule (iapply (iapply d_ (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) (iapply (iapply CONS z) NIL))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) z)
(rule (iapply (iapply a_ (iapply (iapply matrixu_mul A0) (iapply transp A0))) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) (iapply orthogonalu_matrix A0))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply triu_stable (iapply FST r)) (iapply FST (iapply SND r))) (iapply FST (iapply SND (iapply SND r)))) (iapply FST (iapply SND (iapply SND (iapply SND r))))) (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND r)))))) (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND r))))))) (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND r))))))) (iapply (iapply a_ (iapply tupleu_triu_sy (iapply triu_sy r))) r))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply stableu_system (iapply FST r)) (iapply FST (iapply SND r))) (iapply FST (iapply SND (iapply SND r)))) (iapply FST (iapply SND (iapply SND (iapply SND r))))) (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND r)))))) (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND r))))))) (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND r))))))) (iapply (iapply a_ (iapply tupleu_stableu_sy (iapply stableu_sy r))) r))
(rule (iapply w_ (iapply (iapply a_ (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))))
(rule (iapply (iapply c_ (iapply CARD (iapply (iapply setu_ofu_trianglesu_meetingu_node H) x))) (iapply (iapply c_ (iapply CARD (iapply (iapply setu_ofu_quadrilateralsu_meetingu_node H) x))) (iapply CARD (iapply (iapply setu_ofu_exceptionalu_meetingu_node H) x)))) (iapply (iapply typeu_ofu_node H) x))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) y))) (iapply (iapply s_b_ (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt y) (iapply realu_ofu_num (iapply NUMERAL u_0))))))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul x) y)))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply a_ y) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) x)) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) y))) (iapply (iapply s_b_ (iapply (iapply intu_lt x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply intu_lt y) (iapply intu_ofu_num (iapply NUMERAL u_0))))))) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply intu_mul x) y)))
(rule (iapply (iapply hull affine) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply hull affine) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))))
(rule (iapply (iapply realu_sub (iapply (iapply (iapply tauu_fun (iapply Vu_SY (iapply vecmats l))) (iapply Eu_SY (iapply vecmats l))) (iapply Fu_SY (iapply vecmats l)))) (iapply du_fun (iapply (iapply c_ s0) l))) (iapply (iapply tauu_star s0) l))
(rule (iapply (iapply vectoru_add (iapply (iapply projection d) v)) (iapply (iapply r_ (iapply (iapply realu_div (iapply (iapply dot v) d)) (iapply (iapply dot d) d))) d)) v)
(rule (iapply (iapply IN (iapply midpoint (iapply (iapply c_ a) b))) (iapply openu_segment (iapply (iapply c_ a) b))) (iapply w_ (iapply (iapply a_ a) b)))
(rule (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))) (iapply vec (iapply NUMERAL u_0)))) NIL)) EMPTY)
(rule (iapply (iapply a_ (iapply (iapply matrixu_mul (iapply transp Q)) Q)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) (iapply orthogonalu_matrix Q))
(rule (iapply (iapply d_ (iapply vector (iapply (iapply CONS x) (iapply (iapply CONS y) (iapply (iapply CONS z) NIL))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) y)
(rule (iapply (iapply pastecart (iapply fstcart z)) (iapply sndcart z)) z)
(rule (iapply (iapply realu_add (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply atn2 (iapply (iapply c_ (iapply sqrt (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x1) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))))) (iapply realu_neg (iapply (iapply (iapply (iapply (iapply (iapply deltau_x4 x1) x2) x3) x4) x5) x6))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_neg x2)) x3)) (iapply (iapply realu_mul x1) x4))) (iapply (iapply realu_add (iapply (iapply realu_mul x2) x5)) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul x3) x6)) (iapply (iapply realu_mul x5) x6))) (iapply (iapply realu_mul x1) (iapply (iapply realu_add (iapply realu_neg x1)) (iapply (iapply realu_add x2) (iapply (iapply realu_add (iapply (iapply realu_sub x3) x4)) (iapply (iapply realu_add x5) x6)))))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x4 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_neg x1)) x2)) (iapply (iapply realu_mul x3) x6))) (iapply (iapply realu_add (iapply (iapply realu_mul x1) x4)) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul x2) x5)) (iapply (iapply realu_mul x4) x5))) (iapply (iapply realu_mul x3) (iapply (iapply realu_add (iapply realu_neg x3)) (iapply (iapply realu_add x1) (iapply (iapply realu_add (iapply (iapply realu_sub x2) x6)) (iapply (iapply realu_add x4) x5)))))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x6 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply integrableu_on f) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply integrableu_on f) (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply vectoru_angle x) y)) (iapply (iapply realu_sub pi) (iapply (iapply vectoru_angle x) y)))) (iapply (iapply vectoru_angle (iapply (iapply r_ a) x)) y))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) a)) (iapply (iapply vectoru_angle x) y)) (iapply (iapply realu_sub pi) (iapply (iapply vectoru_angle x) y)))) (iapply (iapply vectoru_angle x) (iapply (iapply r_ a) y)))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply bnu_isu_Hom phi) Fs1) Fs2)) (iapply (iapply bnu_inju_on phi) (iapply UNIONS (iapply (iapply IMAGE setu_ofu_list) Fs1)))) (iapply (iapply (iapply bnu_isu_pru_Iso phi) Fs1) Fs2))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply IN u) (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY)))))) (iapply w_ (iapply (iapply a_ x) v))) (iapply w_ (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT u) (iapply (iapply INSERT v) EMPTY))))))
(rule (iapply (iapply realu_div (iapply (iapply (iapply upsu_x (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_sub v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_sub v2) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_sub v3) v1))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply cm3u_upsu_x v1) v2) v3))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply IN u) (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY)))))) (iapply w_ (iapply (iapply a_ x) v))) (iapply w_ (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT v) (iapply (iapply INSERT u) EMPTY))))))
(rule (iapply (iapply vectoru_add (iapply (iapply r_ (iapply (iapply d_ v) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply basis (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply vectoru_add (iapply (iapply r_ (iapply (iapply d_ v) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply r_ (iapply (iapply d_ v) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply basis (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) v)
(rule (iapply (iapply IN (iapply (iapply c_ (iapply SND x)) (iapply FST x))) (iapply ordu_pairs E)) (iapply (iapply IN x) (iapply ordu_pairs E)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ k) (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply realu_ofu_num n)) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num k))))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ n) k))))) (iapply realu_ofu_num (iapply binom (iapply (iapply c_ (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0)))) k))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply o f) f)) I)) (iapply w_ (iapply (iapply a_ f) I))) (iapply (iapply hasu_orders f) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply dot (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot w) w)) v1)) (iapply (iapply r_ (iapply (iapply dot v1) w)) w))) w) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate2 f) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply f x2) x3) x1) x5) x6) x4))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate3 f) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply f x3) x1) x2) x6) x4) x5))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate4 f) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply f x4) x2) x6) x1) x5) x3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate5 f) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply f x5) x3) x4) x2) x6) x1))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply rotate6 f) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply f x6) x1) x5) x3) x4) x2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply node2u_y f) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply f y2) y3) y1) y5) y6) y4))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply node3u_y f) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply f y3) y1) y2) y6) y4) y5))
(rule (iapply (iapply (iapply (iapply affsign sgn) (iapply (iapply DIFF S) (iapply (iapply INSERT v) EMPTY))) (iapply (iapply INSERT v) EMPTY)) (iapply circumcenter S)) (iapply (iapply (iapply orientation S) v) sgn))
(rule (iapply (iapply b_s_ (iapply (iapply a_ y) (iapply (iapply faceu_map H) x))) (iapply (iapply a_ y) (iapply (iapply inverse (iapply nodeu_map H)) x))) (iapply (iapply (iapply oneu_stepu_contour H) x) y))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply FST h)) a)) (iapply SND h)) (iapply (iapply ASSOC a) t)) (iapply (iapply ASSOC a) (iapply (iapply CONS h) t)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) EMPTY) (iapply (iapply hull affine) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))) (iapply (iapply hull affine) (iapply openu_segment (iapply (iapply c_ a) b))))
(rule (iapply (iapply UNION (iapply openu_segment (iapply (iapply c_ a) b))) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply IN x) (iapply span (iapply rows A0)))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply vectoru_norm (iapply (iapply vectoru_sub v) w)))) (iapply (iapply realu_le (iapply vectoru_norm (iapply (iapply vectoru_sub v) w))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0))) (iapply (iapply standard v) w))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) (iapply (iapply INSERT a) EMPTY)) (iapply openu_segment (iapply (iapply c_ a) b))) (iapply relativeu_interior (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply dartu_of L)) (iapply dartu_of Li_))) (iapply (iapply a_ (iapply next L)) (iapply next Li_))) (iapply (iapply a_ L) Li_))
(rule (iapply (iapply IMAGE vectoru_neg) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vectoru_neg b)) (iapply vectoru_neg a))) NIL)))
(rule (iapply (iapply integral (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) a)) NIL))) f) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply COND (iapply (iapply l_a_ m) (iapply SUC n))) (iapply (iapply vectoru_add (iapply (iapply vsum (iapply (iapply o_o_ m) n)) f)) (iapply f (iapply SUC n)))) (iapply (iapply vsum (iapply (iapply o_o_ m) n)) f)) (iapply (iapply vsum (iapply (iapply o_o_ m) (iapply SUC n))) f))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x))) (iapply (iapply a_ (iapply (iapply nodeu_map H) (iapply (iapply nodeu_map H) x))) x)) (iapply (iapply a_ (iapply CARD (iapply (iapply node H) x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x))) (iapply (iapply a_ (iapply (iapply edgeu_map H) (iapply (iapply edgeu_map H) x))) x)) (iapply (iapply a_ (iapply CARD (iapply (iapply edge H) x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x))) (iapply (iapply a_ (iapply (iapply faceu_map H) (iapply (iapply faceu_map H) x))) x)) (iapply (iapply a_ (iapply CARD (iapply (iapply face H) x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) t)) (iapply (iapply DIFF s0) t)) (iapply (iapply INSERT x) (iapply (iapply DIFF s0) t))) (iapply (iapply DIFF (iapply (iapply INSERT x) s0)) t))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) t)) (iapply (iapply UNION s0) t)) (iapply (iapply INSERT x) (iapply (iapply UNION s0) t))) (iapply (iapply UNION (iapply (iapply INSERT x) s0)) t))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) t)) (iapply (iapply INSERT x) (iapply (iapply INTER s0) t))) (iapply (iapply INTER s0) t)) (iapply (iapply INTER (iapply (iapply INSERT x) s0)) t))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ x) y)) (iapply (iapply DELETE s0) y)) (iapply (iapply INSERT x) (iapply (iapply DELETE s0) y))) (iapply (iapply DELETE (iapply (iapply INSERT x) s0)) y))
(rule (iapply (iapply s_b_ (iapply (iapply IN a) s0)) (iapply (iapply s_b_ (iapply (iapply IN b) s0)) (iapply (iapply a_ (iapply (iapply connectedu_component s0) a)) (iapply (iapply connectedu_component s0) b)))) (iapply w_ (iapply (iapply a_ (iapply (iapply INTER (iapply (iapply connectedu_component s0) a)) (iapply (iapply connectedu_component s0) b))) EMPTY)))
(rule (iapply (iapply integral (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) f) (iapply (iapply integral (iapply openu_interval (iapply (iapply c_ a) b))) f))
(rule (iapply (iapply a_ (iapply edgeu_map H)) (iapply (iapply o (iapply nodeu_map H)) (iapply faceu_map H))) (iapply plainu_hypermap H))
(rule (iapply sqrt (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm va)) (iapply vectoru_norm vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply dot va) vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply vectoru_norm vc)) (iapply sqrt (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm va)) (iapply vectoru_norm vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply dot va) vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x13)) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x14)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x34) (iapply (iapply realu_add (iapply realu_neg x12)) (iapply (iapply realu_add x13) (iapply (iapply realu_add x14) (iapply (iapply realu_add x23) (iapply (iapply realu_add x24) (iapply realu_neg x34)))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) x34)) (iapply (iapply realu_add (iapply (iapply realu_mul x13) x24)) (iapply (iapply realu_mul x14) x23)))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x12 x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x14)) x34)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x34)) (iapply (iapply realu_add (iapply (iapply realu_mul x24) (iapply (iapply realu_add x12) (iapply (iapply realu_add (iapply realu_neg x13)) (iapply (iapply realu_add x14) (iapply (iapply realu_add x23) (iapply (iapply realu_add (iapply realu_neg x24)) x34))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x13)) x24)) (iapply (iapply realu_mul x14) x23)))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x13 x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x13)) x34)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x34)) (iapply (iapply realu_add (iapply (iapply realu_mul x13) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x23) (iapply (iapply realu_add x12) (iapply (iapply realu_add x13) (iapply (iapply realu_add (iapply realu_neg x14)) (iapply (iapply realu_add (iapply realu_neg x23)) (iapply (iapply realu_add x24) x34))))))) (iapply (iapply realu_mul (iapply realu_neg x14)) x23)))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x14 x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply (iapply hasu_integral f) y) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply (iapply hasu_integral f) y) (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply s_b_ (iapply (iapply IN v) V)) (iapply (iapply s_b_ (iapply (iapply IN w) V)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ v) w))) (iapply (iapply realu_le (iapply distance (iapply (iapply c_ v) w))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply IN (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY))) (iapply ESTD V)))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ a) b))) (iapply (iapply a_ (iapply distance (iapply (iapply c_ a) x))) (iapply distance (iapply (iapply c_ b) x)))) (iapply (iapply (iapply eu_plane a) b) x))
(rule (iapply (iapply between (iapply (iapply vectoru_add a) x)) (iapply (iapply c_ (iapply (iapply vectoru_add a) y)) (iapply (iapply vectoru_add a) z))) (iapply (iapply between x) (iapply (iapply c_ y) z)))
(rule (iapply (iapply (iapply homotopicu_loops s0) (iapply linepath (iapply (iapply c_ a) a))) (iapply linepath (iapply (iapply c_ b) b))) (iapply (iapply (iapply pathu_component s0) a) b))
(rule (iapply (iapply realu_add (iapply realu_ofu_num (iapply numberu_ofu_edges H))) (iapply (iapply realu_add (iapply realu_ofu_num (iapply numberu_ofu_nodes H))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply realu_ofu_num (iapply numberu_ofu_faces H))) (iapply realu_ofu_num (iapply CARD (iapply dart H))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply numberu_ofu_components H)))))) (iapply planaru_ind H))
(rule (iapply complex (iapply (iapply c_ (iapply (iapply realu_div (iapply Re z)) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply Re z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply Im z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div (iapply realu_neg (iapply Im z))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply Re z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply Im z)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply complexu_inv z))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply a_ a) b))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x4 (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x4 (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply dot x) y))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply FST a)) (iapply FST b))) (iapply (iapply a_ (iapply SND a)) (iapply SND b))) (iapply (iapply a_ a) b))
(rule (iapply (iapply CONS (iapply (iapply c_ h1) (iapply HD l2))) (iapply (iapply ZIP t1) (iapply TL l2))) (iapply (iapply ZIP (iapply (iapply CONS h1) t1)) l2))
(rule (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ w) x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ y) z))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply distance (iapply (iapply c_ w) x))) (iapply distance (iapply (iapply c_ y) z))))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply (iapply (iapply COVER1u_SY p) q) s0) s1) s2)) (iapply (iapply s_b_ (iapply (iapply (iapply COVER2u_SY s0) s1) s2)) (iapply (iapply s_b_ (iapply (iapply (iapply (iapply (iapply COVER3u_SY p) q) s0) s1) s2)) (iapply (iapply s_b_ (iapply (iapply (iapply (iapply (iapply COVER4u_SY p) q) s0) s1) s2)) (iapply (iapply s_b_ (iapply (iapply (iapply (iapply (iapply COVER5u_SY p) q) s0) s1) s2)) (iapply (iapply (iapply (iapply (iapply COVER6u_SY p) q) s0) s1) s2)))))) (iapply (iapply (iapply (iapply (iapply COVERu_SY p) q) s0) s1) s2))
(rule (iapply (iapply s_b_ (iapply packing s0)) (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY))))) s0)) (iapply w_ (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply b_s_ (iapply (iapply a_ a) c)) (iapply (iapply b_s_ (iapply (iapply a_ a) d)) (iapply (iapply b_s_ (iapply (iapply a_ b) c)) (iapply (iapply b_s_ (iapply (iapply a_ b) d)) (iapply (iapply a_ c) d))))))))) (iapply (iapply geomdetaili_simplex (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY))))) s0))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)) (iapply vectoru_norm (iapply (iapply vectoru_sub v) w)))) (iapply (iapply realu_le (iapply vectoru_norm (iapply (iapply vectoru_sub v) w))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply protracted v) w))
(rule (iapply vector (iapply (iapply CONS (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply cos t))) (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply sin t)))) (iapply (iapply CONS (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply sin t))) (iapply (iapply realu_mul (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply cos t)))) NIL))) (iapply (iapply rotate2d t) x))
(rule (iapply (iapply a_ s0) (iapply (iapply INSERT (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) a)) NIL))) EMPTY)) (iapply (iapply divisionu_of s0) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) a)) NIL))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ z) x)) (iapply (iapply APPEND ys) zs)) (iapply (iapply CONS z) (iapply (iapply (iapply bnu_replace x) ys) zs))) (iapply (iapply (iapply bnu_replace x) ys) (iapply (iapply CONS z) zs)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply upperu_dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply (iapply (iapply (iapply (iapply upperu_dihu_y y1) y3) sqrt2) sqrt2) sqrt2) y5))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply (iapply vol2f y1) sqrt2) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_n y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y3) sqrt2) sqrt2) sqrt2) y5))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply (iapply vol2f y1) sqrt2) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLR y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply solu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) const1))) (iapply (iapply realu_mul const1) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply lnazim y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply lnazim y2) y3) y1) y5) y6) y4)) (iapply (iapply (iapply (iapply (iapply (iapply lnazim y3) y1) y2) y6) y4) y5))))) (iapply (iapply (iapply (iapply (iapply (iapply taum y1) y2) y3) y4) y5) y6))
(rule (iapply distance (iapply (iapply c_ (iapply (iapply pastecart x) y)) (iapply (iapply pastecart x) yi_))) (iapply distance (iapply (iapply c_ y) yi_)))
(rule (iapply distance (iapply (iapply c_ (iapply (iapply pastecart x) y)) (iapply (iapply pastecart xi_) y))) (iapply distance (iapply (iapply c_ x) xi_)))
(rule (iapply (iapply b_s_ (iapply w_ (iapply (iapply IN a) s0))) (iapply (iapply b_s_ (iapply w_ (iapply (iapply IN b) s0))) (iapply w_ (iapply (iapply a_ (iapply (iapply connectedu_component s0) a)) (iapply (iapply connectedu_component s0) b))))) (iapply (iapply a_ (iapply (iapply INTER (iapply (iapply connectedu_component s0) a)) (iapply (iapply connectedu_component s0) b))) EMPTY))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ i0) (iapply NUMERAL u_0))) (iapply (iapply mcell0 V) ul)) (iapply (iapply (iapply COND (iapply (iapply a_ i0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply mcell1 V) ul)) (iapply (iapply (iapply COND (iapply (iapply a_ i0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply mcell2 V) ul)) (iapply (iapply (iapply COND (iapply (iapply a_ i0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply mcell3 V) ul)) (iapply (iapply mcell4 V) ul))))) (iapply (iapply (iapply mcell i0) V) ul))
(rule (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div (iapply (iapply realu_pow (iapply (iapply realu_sub h) h0)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_sub hplus) h0)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply bump h))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply upsu_x x12) x13) x23)) (iapply (iapply realu_pow x45) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleytr x12) x13) x14) x15) x23) x24) x25) x34) x35) (iapply realu_ofu_num (iapply NUMERAL u_0)))) x45)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleyR x12) x13) x14) x15) x23) x24) x25) x34) x35) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleyR x12) x13) x14) x15) x23) x24) x25) x34) x35) x45))
(rule (iapply (iapply (iapply (iapply dihV (iapply (iapply vectoru_add v) u)) (iapply (iapply vectoru_add v) w)) (iapply (iapply vectoru_add v) v1)) (iapply (iapply vectoru_add v) v2)) (iapply (iapply (iapply (iapply dihV u) w) v1) v2))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply hl (iapply (iapply truncateu_simplex (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) ul))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_le (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply hl ul)))) (iapply (iapply hull convex) (iapply (iapply UNION (iapply setu_ofu_list (iapply (iapply truncateu_simplex (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) ul))) (iapply (iapply INSERT (iapply (iapply mxi V) ul)) EMPTY)))) EMPTY) (iapply (iapply mcell3 V) ul))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ u) v))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ u) w))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply distance (iapply (iapply c_ u) v))) (iapply (iapply realu_mul (iapply distance (iapply (iapply c_ u) w))) (iapply cos (iapply (iapply (iapply arcV u) v) w))))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v) w))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply b_s_ (iapply (iapply a_ x) b)) (iapply (iapply IN x) (iapply conv0 (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))))) (iapply (iapply IN x) (iapply conv (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))))
(rule (iapply (iapply DIFF (iapply (iapply (iapply support op) f) s0)) (iapply (iapply (iapply support op) f) t)) (iapply (iapply (iapply support op) f) (iapply (iapply DIFF s0) t)))
(rule (iapply (iapply INTER (iapply (iapply (iapply support op) f) s0)) (iapply (iapply (iapply support op) f) t)) (iapply (iapply (iapply support op) f) (iapply (iapply INTER s0) t)))
(rule (iapply (iapply UNION (iapply (iapply (iapply support op) f) s0)) (iapply (iapply (iapply support op) f) t)) (iapply (iapply (iapply support op) f) (iapply (iapply UNION s0) t)))
(rule (iapply (iapply s_b_ (iapply convexu_localu_fan (iapply (iapply c_ V) (iapply (iapply c_ E) f)))) (iapply (iapply s_b_ (iapply packing V)) (iapply (iapply s_b_ (iapply (iapply SUBSET V) ballu_annulus)) (iapply (iapply s_b_ (iapply diagonal1 (iapply (iapply c_ V) E))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply CARD E)) (iapply CARD f))) (iapply (iapply s_b_ (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply CARD E))) (iapply (iapply l_a_ (iapply CARD E)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply mainu_estimate (iapply (iapply c_ V) (iapply (iapply c_ E) f))))
(rule (iapply (iapply a_ (iapply (iapply IMAGE bnu_congs) (iapply (iapply IMAGE (iapply MAP phi)) Fs1))) (iapply (iapply IMAGE bnu_congs) Fs2)) (iapply (iapply (iapply bnu_isu_Hom phi) Fs1) Fs2))
(rule (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_sub x) y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply dot x) y))
(rule (iapply vector (iapply (iapply CONS (iapply (iapply realu_mul (iapply (iapply d_ t) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ u) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply CONS (iapply (iapply realu_mul (iapply (iapply d_ t) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ u) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply CONS (iapply (iapply realu_mul (iapply (iapply d_ t) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ u) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) NIL)))) (iapply (iapply scale t) u))
(rule (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_add x) y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply vectoru_norm y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply dot x) y))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_div (iapply (iapply dot x) y)) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y)))) (iapply cos (iapply (iapply vectoru_angle x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) EMPTY) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closure (iapply openu_segment (iapply (iapply c_ a) b))))
(rule (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT (iapply (iapply vectoru_sub b) a)) (iapply (iapply INSERT (iapply (iapply vectoru_sub c) a)) EMPTY)))) (iapply collinear (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_neg x1)) x1)) (iapply (iapply realu_mul x2) x2))) (iapply (iapply realu_mul x6) x6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x1) x6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x1) x2))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x2) x6))))) (iapply (iapply (iapply upsu_x x1) x2) x6))
(rule (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT (iapply (iapply vectoru_sub x) y)) (iapply (iapply INSERT (iapply (iapply vectoru_sub z) y)) EMPTY)))) (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply det A0))
(rule (iapply (iapply (iapply POWER (iapply faceu_map H)) (iapply SUC (iapply (iapply (iapply (iapply mAdd H) NF) L) x))) (iapply (iapply (iapply (iapply heading H) NF) L) x)) (iapply (iapply (iapply (iapply attach H) NF) L) x))
(rule (iapply (iapply (iapply (iapply (iapply (iapply eulerAu_x x1) x2) x3) x4) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x13) x1) x3) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x12) x1) x2) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply euleru_2flatu_x x1) x2) x3) x4) x13) x12))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply MOD i0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply MOD j) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply (iapply COND (iapply (iapply IN (iapply (iapply INSERT (iapply (iapply MOD i0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply INSERT (iapply (iapply MOD j) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) EMPTY))) J)) cstab) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0))) (iapply (iapply bu_ear0 J) (iapply (iapply c_ i0) j)))
(rule (iapply SND (iapply SND (iapply SND (iapply SND u)))) (iapply drop3 u))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ x) a)) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply LENGTH aas)) (iapply NUMERAL u_0))) b) (iapply HD aas))) (iapply (iapply (iapply bnu_nextElem aas) b) x)) (iapply (iapply (iapply bnu_nextElem (iapply (iapply CONS a) aas)) b) x))
(rule (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleytr x12) x13) x14) x15) x23) x24) x25) x34) x35) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply (iapply upsu_x x12) x13) x23)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleyR x12) x13) x14) x15) x23) x24) x25) x34) x35) (iapply realu_ofu_num (iapply NUMERAL u_0)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply delta x12) x13) x14) x23) x24) x34)) (iapply (iapply (iapply (iapply (iapply (iapply delta x12) x13) x15) x23) x25) x35))))
(rule (iapply (iapply CONS v) (iapply (iapply APPEND (iapply SND (iapply (iapply bnu_splitAt v) vs))) (iapply FST (iapply (iapply bnu_splitAt v) vs)))) (iapply (iapply bnu_rotateu_to vs) v))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x)) (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x))) (iapply (iapply isolatedu_dart H) x))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x)) (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x)) (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x))) (iapply (iapply dartu_degenerate H) x))
(rule (iapply (iapply add6 (iapply uni (iapply (iapply c_ pow2) (iapply (iapply sub6 proju_y1) (iapply constant6 (iapply (iapply realu_add hminus) hplus)))))) (iapply (iapply add6 (iapply uni (iapply (iapply c_ pow2) (iapply (iapply sub6 proju_y2) two6)))) (iapply (iapply add6 (iapply uni (iapply (iapply c_ pow2) (iapply (iapply sub6 proju_y3) two6)))) (iapply (iapply add6 (iapply uni (iapply (iapply c_ pow2) (iapply (iapply sub6 proju_y4) two6)))) (iapply (iapply add6 (iapply uni (iapply (iapply c_ pow2) (iapply (iapply sub6 proju_y5) two6)))) (iapply uni (iapply (iapply c_ pow2) (iapply (iapply sub6 proju_y6) two6)))))))) norm2hhu_x)
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 deltau_x) proju_x1) proju_x2) proju_x6) four6) four6) (iapply constant6 (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))) deltau_pentu_x)
(rule (iapply (iapply realu_div (iapply sqrt (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply dot x) y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sqrt (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply sqrt (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply dot x) y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply w_ (iapply (iapply IN x) s0))) (iapply w_ (iapply (iapply IN y) s0)))) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply (iapply s_b_ (iapply (iapply IN y) s0)) (iapply (iapply (iapply connectedu_component s0) x) y)))) (iapply (iapply a_ (iapply (iapply connectedu_component s0) x)) (iapply (iapply connectedu_component s0) y)))
(rule (iapply (iapply a_ (iapply (iapply realu_add (iapply distance (iapply (iapply c_ v1) v))) (iapply distance (iapply (iapply c_ v) v2)))) (iapply distance (iapply (iapply c_ v1) v2))) (iapply (iapply IN v) (iapply (iapply hull convex) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) EMPTY)))))
(rule (iapply (iapply a_ (iapply (iapply realu_add (iapply distance (iapply (iapply c_ v1) v))) (iapply distance (iapply (iapply c_ v) v2)))) (iapply distance (iapply (iapply c_ v1) v2))) (iapply (iapply IN v) (iapply conv (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) EMPTY)))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ y) (iapply (iapply edgeu_map H) x))) (iapply (iapply b_s_ (iapply (iapply a_ y) (iapply (iapply nodeu_map H) x))) (iapply (iapply a_ y) (iapply (iapply faceu_map H) x)))) (iapply (iapply (iapply gou_oneu_step H) x) y))
(rule (iapply (iapply a_ (iapply distance (iapply (iapply c_ a) b))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ a) x))) (iapply distance (iapply (iapply c_ x) b)))) (iapply (iapply between x) (iapply (iapply c_ a) b)))
(rule (iapply (iapply p_ (iapply (iapply (iapply ind0 H) x) n)) (iapply PRE (iapply CARD (iapply (iapply node H) (iapply (iapply (iapply POWER (iapply inverse (iapply faceu_map H))) (iapply SUC n)) x))))) (iapply (iapply (iapply ind0 H) x) (iapply SUC n)))
(rule (iapply (iapply realu_div (iapply (iapply dot (iapply (iapply vectoru_sub u) v0)) (iapply (iapply vectoru_sub w) v0))) (iapply (iapply realu_mul (iapply vectoru_norm (iapply (iapply vectoru_sub u) v0))) (iapply vectoru_norm (iapply (iapply vectoru_sub w) v0)))) (iapply cos (iapply (iapply (iapply arcV v0) u) w)))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply vectoru_norm (iapply (iapply vectoru_sub x) y))) (iapply (iapply realu_add (iapply vectoru_norm x)) (iapply vectoru_norm y))))) (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) pi))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply vectoru_norm (iapply (iapply vectoru_add x) y))) (iapply (iapply realu_add (iapply vectoru_norm x)) (iapply vectoru_norm y))))) (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply o (iapply inverse (iapply (iapply fmap H) NF))) (iapply inverse (iapply (iapply nmap H) NF))) (iapply (iapply emap H) NF))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply hl ul))) (iapply (iapply DIFF (iapply (iapply INTER (iapply (iapply rogers V) ul)) (iapply cball (iapply (iapply c_ (iapply HD ul)) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply rconeu_gt (iapply HD ul)) (iapply HD (iapply TL ul))) (iapply (iapply realu_div (iapply hl (iapply (iapply truncateu_simplex (iapply NUMERAL (iapply BIT1 u_0))) ul))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) EMPTY) (iapply (iapply mcell1 V) ul))
(rule (iapply (iapply o (iapply swap (iapply (iapply c_ a) b))) (iapply swap (iapply (iapply c_ a) b))) I)
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) r)) (iapply (iapply (iapply vol2f y1) r) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_redu_03 y1) y2) y3) y4) y5) y6) r) f))
(rule (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply num1 e1) e2) e3) a2) b2) c2)) (iapply (iapply realu_mul (iapply sqrt (iapply (iapply (iapply (iapply (iapply (iapply deltau_x (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) a2) b2) c2))) (iapply (iapply realu_mul (iapply sqrt a2)) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) a2)))) (iapply (iapply (iapply (iapply (iapply (iapply rat1 e1) e2) e3) a2) b2) c2))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply (iapply vol2f y1) sqrt2) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_v y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply b_s_ (iapply (iapply a_ x) b)) (iapply (iapply a_ (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ x) b)))) pi))) (iapply (iapply between x) (iapply (iapply c_ a) b)))
(rule (iapply w_ (iapply (iapply realu_lt (iapply distance (iapply (iapply c_ v1) v2))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ v1) v))) (iapply distance (iapply (iapply c_ v) v2))))) (iapply (iapply a_ (iapply (iapply realu_add (iapply distance (iapply (iapply c_ v1) v))) (iapply distance (iapply (iapply c_ v) v2)))) (iapply distance (iapply (iapply c_ v1) v2))))
(rule (iapply (iapply a_ (iapply (iapply dot (iapply (iapply vectoru_sub x) a)) (iapply (iapply vectoru_sub b) x))) (iapply (iapply realu_mul (iapply vectoru_norm (iapply (iapply vectoru_sub x) a))) (iapply vectoru_norm (iapply (iapply vectoru_sub b) x)))) (iapply (iapply between x) (iapply (iapply c_ a) b)))
(rule (iapply (iapply IN (iapply vectoru_neg x)) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply vectoru_neg b)) (iapply vectoru_neg a))) NIL))) (iapply (iapply IN x) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x))) (iapply w_ (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x)))) (iapply (iapply isu_edgeu_degenerate H) x))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x)) (iapply w_ (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x)))) (iapply (iapply isu_nodeu_degenerate H) x))
(rule (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply exceptionalu_face H) x)) (iapply (iapply a_ (iapply CARD (iapply (iapply node H) x))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply a_ (iapply (iapply typeu_ofu_node H) x)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply nodeu_typeu_exceptionalu_face H) x))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x))) (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x))) (iapply (iapply isu_faceu_degenerate H) x))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply vectoru_sub u) v)) (iapply (iapply vectoru_sub x) (iapply (iapply r_ (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply vectoru_add u) v))))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply vectoru_sub u) v)) (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x)) (iapply (iapply vectoru_add u) v)))))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_su_n y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdihu_xu_n) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih3u_xu_n) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih5u_xu_n) y1) y2) y3) y4) y5) y6))))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_su_n y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdihu_xu_n) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih2u_xu_n) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih6u_xu_n) y1) y2) y3) y4) y5) y6))))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_n y1) y2) y3) y4) y5) y6))
(rule (iapply acs (iapply (iapply realu_div (iapply (iapply dot (iapply (iapply vectoru_sub v) u)) (iapply (iapply vectoru_sub w) u))) (iapply (iapply realu_mul (iapply vectoru_norm (iapply (iapply vectoru_sub v) u))) (iapply vectoru_norm (iapply (iapply vectoru_sub w) u))))) (iapply (iapply (iapply arcV u) v) w))
(rule (iapply (iapply add6 (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 (iapply gamma3u_x m1)) dummy6) dummy6) dummy6) proju_x1) proju_x2) proju_x6)) (iapply (iapply add6 (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 (iapply gamma3u_x m1)) dummy6) dummy6) dummy6) proju_x1) proju_x3) proju_x5)) (iapply (iapply scalar6 (iapply (iapply sub6 dihu_x) (iapply (iapply add6 (iapply mku_126 dihu_x)) (iapply mku_135 dihu_x)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply gamma23u_full8u_x m1))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply acs (iapply (iapply realu_div (iapply (iapply dot x) y)) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))))) (iapply (iapply vectoru_angle x) y))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply edgeu_map H) x)) x))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply (iapply nodeu_map H) x)) x))) (iapply w_ (iapply (iapply a_ (iapply (iapply faceu_map H) x)) x)))) (iapply (iapply dartu_nondegenerate H) x))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm x)) y)) (iapply (iapply r_ (iapply vectoru_norm y)) x)))) (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_mul r) (iapply (iapply realu_mul r) (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_mul (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply vol2r y) r))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply realu_abs y)) x)) (iapply atn (iapply (iapply realu_div y) x))) (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) y)) (iapply (iapply realu_sub (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply atn (iapply (iapply realu_div x) y)))) (iapply (iapply (iapply COND (iapply (iapply realu_lt y) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_sub (iapply realu_neg (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply atn (iapply (iapply realu_div x) y)))) pi))) (iapply atn2 (iapply (iapply c_ x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply realu_abs y)) x)) (iapply atn (iapply (iapply realu_div y) x))) (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) y)) (iapply (iapply realu_sub (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply atn (iapply (iapply realu_div x) y)))) (iapply (iapply (iapply COND (iapply (iapply realu_lt y) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_sub (iapply realu_neg (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply atn (iapply (iapply realu_div x) y)))) pi))) (iapply atan2u_temp (iapply (iapply c_ x) y)))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply m_m_g_ f) l) (iapply (iapply within (iapply at x)) s0))) (iapply (iapply (iapply m_m_g_ f) l) (iapply (iapply within (iapply at x)) t))) (iapply (iapply (iapply m_m_g_ f) l) (iapply (iapply within (iapply at x)) (iapply (iapply UNION s0) t))))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply upperu_dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply (iapply vol2f y1) sqrt2) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_n y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply (iapply vol2f y1) sqrt2) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vL y1) y2) y3) y4) y5) y6) f))
(rule (iapply contractedu_dart (iapply (iapply c_ x) (iapply (iapply c_ v) (iapply (iapply c_ w) w1)))) (iapply (iapply c_ v) w))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply au_sy s1) (iapply (iapply c_ p) q))) (iapply (iapply au_sy s0) (iapply (iapply c_ p) q)))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply au_sy s2) (iapply (iapply c_ p) q))) (iapply (iapply au_sy s0) (iapply (iapply c_ p) q)))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply au_sy s0) (iapply (iapply c_ p) q))) (iapply (iapply bu_sy s1) (iapply (iapply c_ p) q)))) (iapply (iapply realu_le (iapply (iapply au_sy s0) (iapply (iapply c_ p) q))) (iapply (iapply bu_sy s2) (iapply (iapply c_ p) q)))))) (iapply (iapply (iapply (iapply (iapply COVER5u_SY p) q) s0) s1) s2))
(rule (iapply (iapply equiintegrableu_on (iapply (iapply INSERT f) EMPTY)) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply integrableu_on f) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply (iapply COND (iapply (iapply l_ n) (iapply LENGTH xs))) (iapply (iapply (iapply bnu_mapAt ns) f) (iapply (iapply (iapply (iapply mapAt1 f) n) NIL) xs))) (iapply (iapply (iapply bnu_mapAt ns) f) xs)) (iapply (iapply (iapply bnu_mapAt (iapply (iapply CONS n) ns)) f) xs))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm x)) y)) (iapply (iapply r_ (iapply vectoru_norm y)) x))) (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm x)) y)) (iapply (iapply r_ (iapply realu_neg (iapply vectoru_norm y))) x))) (iapply (iapply a_ (iapply realu_abs (iapply (iapply dot x) y))) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) (iapply (iapply CONS NONE) (iapply (iapply bnu_hideDupsRec b) bs))) (iapply (iapply CONS (iapply SOME b)) (iapply (iapply bnu_hideDupsRec b) bs))) (iapply (iapply bnu_hideDupsRec a) (iapply (iapply CONS b) bs)))
(rule (iapply angle (iapply (iapply c_ (iapply (iapply vectoru_add a) b)) (iapply (iapply c_ (iapply (iapply vectoru_add a) c)) (iapply (iapply vectoru_add a) d)))) (iapply angle (iapply (iapply c_ b) (iapply (iapply c_ c) d))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply MOD i0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply MOD j) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply (iapply COND (iapply (iapply IN (iapply (iapply INSERT (iapply (iapply MOD i0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply INSERT (iapply (iapply MOD j) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) EMPTY))) J)) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply au_ear0 J) (iapply (iapply c_ i0) j)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply distance (iapply (iapply c_ x) a)))) (iapply (iapply realu_le (iapply distance (iapply (iapply c_ x) a))) (iapply distance (iapply (iapply c_ y) a)))) (iapply (iapply (iapply netord (iapply at a)) x) y))
(rule (iapply FST (iapply SND (iapply tupleu_hypermap H))) (iapply edgeu_map H))
(rule (iapply (iapply DIFF (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply openu_segment (iapply (iapply c_ a) b)))
(rule (iapply (iapply DIFF (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply openu_interval (iapply (iapply c_ a) b))) (iapply frontier (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply realu_neg (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))) bu_spine5)
(rule (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))))) au_spine5)
(rule (iapply (iapply (iapply (iapply (iapply (iapply delta (iapply (iapply realu_pow (iapply (iapply d3 a) d)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 b) d)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 c) d)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 a) c)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 b) c)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply (iapply (iapply detu_vec3 (iapply (iapply vectoru_sub a) d)) (iapply (iapply vectoru_sub b) d)) (iapply (iapply vectoru_sub c) d))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a1) y1)) (iapply (iapply realu_le y1) b1))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a2) y2)) (iapply (iapply realu_le y2) b2))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a3) y3)) (iapply (iapply realu_le y3) b3))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a4) y4)) (iapply (iapply realu_le y4) b4))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a5) y5)) (iapply (iapply realu_le y5) b5))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a6) y6)) (iapply (iapply realu_le y6) b6))) P)))))) (iapply (iapply ineq (iapply (iapply CONS (iapply (iapply c_ a1) (iapply (iapply c_ y1) b1))) (iapply (iapply CONS (iapply (iapply c_ a2) (iapply (iapply c_ y2) b2))) (iapply (iapply CONS (iapply (iapply c_ a3) (iapply (iapply c_ y3) b3))) (iapply (iapply CONS (iapply (iapply c_ a4) (iapply (iapply c_ y4) b4))) (iapply (iapply CONS (iapply (iapply c_ a5) (iapply (iapply c_ y5) b5))) (iapply (iapply CONS (iapply (iapply c_ a6) (iapply (iapply c_ y6) b6))) NIL))))))) P))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) x34))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x13)) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x23)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x13) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x14) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) x12)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x13)) (iapply (iapply realu_mul x12) x23)))))))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x34 x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2) x3) x4) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x13) x1) x3) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x12) x1) x2) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply flatu_termu_x x12)) (iapply flatu_termu_x x13))) (iapply (iapply (iapply (iapply (iapply (iapply taumu_2flatu_x x1) x2) x3) x4) x13) x12))
(rule (iapply (iapply (iapply (iapply (iapply (iapply delta (iapply (iapply realu_pow (iapply (iapply d3 d) a)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 d) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 d) c)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 a) b)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 a) c)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d3 b) c)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply (iapply (iapply detu_vec3 (iapply (iapply vectoru_sub a) d)) (iapply (iapply vectoru_sub b) d)) (iapply (iapply vectoru_sub c) d))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply b_s_ (iapply (iapply a_ a) c)) (iapply (iapply b_s_ (iapply (iapply a_ b) c)) (iapply affineu_dependent (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))))))) (iapply collinear (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY)))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply CARD (iapply Iu_SY s0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply du_sy s0)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply CARD (iapply Ju_SY s0))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply au_sy s0)) (iapply au_ear0 (iapply Ju_SY s0)))) (iapply (iapply a_ (iapply bu_sy s0)) (iapply bu_ear0 (iapply Ju_SY s0))))))) (iapply earu_sy s0))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply (iapply COND (iapply (iapply realu_gt x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_div (iapply atn (iapply sqrt x))) (iapply sqrt x))) (iapply (iapply realu_div (iapply log (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply sqrt (iapply realu_neg x)))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply sqrt (iapply realu_neg x)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply sqrt (iapply realu_neg x)))))) (iapply matan x))
(rule (iapply loop0 (iapply (iapply c_ (iapply (iapply face H) x)) (iapply (iapply res (iapply faceu_map H)) (iapply (iapply face H) x)))) (iapply (iapply faceu_loop H) x))
(rule (iapply (iapply p_ (iapply (iapply (iapply index L) (iapply (iapply (iapply (iapply attach H) NF) L) x)) (iapply (iapply (iapply (iapply heading H) NF) L) x))) (iapply (iapply (iapply (iapply mAdd H) NF) L) x)) (iapply (iapply (iapply (iapply tpx H) NF) L) x))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply det A0)) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ Ai_) (iapply (iapply r_r_ (iapply realu_inv (iapply det A0))) (iapply transp (iapply cofactor A0))))) (iapply (iapply a_ (iapply (iapply matrixu_mul Ai_) A0)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ (iapply det A0)) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ Ai_) (iapply (iapply r_r_ (iapply realu_inv (iapply det A0))) (iapply transp (iapply cofactor A0))))) (iapply (iapply a_ (iapply (iapply matrixu_mul A0) Ai_)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply UNION (iapply (iapply affu_ge (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT y) EMPTY))) (iapply (iapply affu_lt (iapply (iapply INSERT x) EMPTY)) (iapply (iapply INSERT y) EMPTY))) (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY))))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ a) b)) (iapply (iapply a_ c) d))) (iapply (iapply a_ (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY)))) (iapply (iapply a_ (iapply openu_segment (iapply (iapply c_ a) b))) (iapply openu_segment (iapply (iapply c_ c) d))))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply matrixu_mul (iapply rowvector x)) (iapply (iapply matrixu_mul (iapply (iapply matrixu_mul (iapply transp A0)) B0)) (iapply columnvector y)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply dot (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply (iapply matrixu_vectoru_mul B0) y)))
(rule (iapply (iapply s_b_ (iapply (iapply IN x) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) a))) (iapply w_ (iapply (iapply a_ x) b)))) (iapply (iapply IN x) (iapply openu_segment (iapply (iapply c_ a) b))))
(rule (iapply (iapply a_ (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ z) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ y) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply collinear (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))))
(rule (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm (iapply (iapply vectoru_sub x) a))) (iapply (iapply vectoru_sub b) x))) (iapply (iapply r_ (iapply vectoru_norm (iapply (iapply vectoru_sub b) x))) (iapply (iapply vectoru_sub x) a))) (iapply (iapply between x) (iapply (iapply c_ a) b)))
(rule (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm (iapply (iapply vectoru_sub x) y))) (iapply (iapply vectoru_sub y) z))) (iapply (iapply r_ (iapply vectoru_norm (iapply (iapply vectoru_sub y) z))) (iapply (iapply vectoru_sub x) y))) (iapply (iapply a_ (iapply distance (iapply (iapply c_ x) z))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ x) y))) (iapply distance (iapply (iapply c_ y) z)))))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply (iapply realu_div (iapply (iapply dot x) y)) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply sin (iapply (iapply vectoru_angle x) y))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply sqrt x1)) (iapply (iapply realu_mul (iapply sqrt x2)) (iapply sqrt x3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply sqrt x1)) (iapply (iapply realu_div (iapply (iapply realu_add x2) (iapply (iapply realu_sub x3) x4))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply sqrt x2)) (iapply (iapply realu_div (iapply (iapply realu_add x1) (iapply (iapply realu_sub x3) x5))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply sqrt x3)) (iapply (iapply realu_div (iapply (iapply realu_add x1) (iapply (iapply realu_sub x2) x6))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply eulerAu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply b_s_ (iapply (iapply between a) (iapply (iapply c_ b) c))) (iapply (iapply b_s_ (iapply (iapply between b) (iapply (iapply c_ c) a))) (iapply (iapply between c) (iapply (iapply c_ a) b)))) (iapply collinear (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY)))))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply sqrt (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply (iapply realu_div (iapply (iapply dot x) y)) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sin (iapply (iapply vectoru_angle x) y)))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply realu_neg (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x23))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x24))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x34)))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x24))))))) (iapply (iapply (iapply (iapply (iapply (iapply rhou_ij x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply num2 e1) e2) e3) a2) b2) c2)) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply sqrt (iapply (iapply (iapply (iapply (iapply (iapply deltau_x (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) a2) b2) c2))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_mul a2) (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) a2)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply rat2 e1) e2) e3) a2) b2) c2))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ a) c)) (iapply (iapply c_ bs) xs)) (iapply (iapply (iapply bnu_splitAtRec c) (iapply (iapply APPEND bs) (iapply (iapply CONS a) NIL))) xs)) (iapply (iapply (iapply bnu_splitAtRec c) bs) (iapply (iapply CONS a) xs)))
(rule (iapply (iapply res (iapply eu_fanu_pair (iapply (iapply c_ V) E))) (iapply dart1u_ofu_fan (iapply (iapply c_ V) E))) (iapply eu_fanu_pairu_ext (iapply (iapply c_ V) E)))
(rule (iapply (iapply complexu_mul (iapply complexu_inv (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply vectoru_add (iapply (iapply complexu_mul (iapply complexu_inv (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z)))) (iapply (iapply complexu_mul (iapply complexu_inv (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z))))) (iapply complexu_inv (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow z) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY)) (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))) EMPTY)) (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)) (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ c) d))) EMPTY)) (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply openu_interval (iapply (iapply c_ c) d))))
(rule (iapply (iapply UNION (iapply (iapply DELETE NF) L)) (iapply (iapply INSERT (iapply (iapply (iapply (iapply dnax H) NF) L) x)) (iapply (iapply INSERT (iapply (iapply (iapply (iapply dnay H) NF) L) x)) EMPTY))) (iapply (iapply (iapply (iapply genesis H) NF) L) x))
(rule (iapply w_ (iapply (iapply a_ (iapply (iapply combu_component (iapply (iapply edgeu_walkup H) x)) (iapply (iapply nodeu_map H) x))) (iapply (iapply combu_component (iapply (iapply edgeu_walkup H) x)) (iapply (iapply inverse (iapply edgeu_map H)) x)))) (iapply (iapply isu_splittingu_component H) x))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply (iapply vectoru_add (iapply (iapply r_ (iapply vectoru_norm x)) y)) (iapply (iapply r_ (iapply vectoru_norm y)) x))) (iapply vec (iapply NUMERAL u_0))))) (iapply (iapply a_ (iapply (iapply vectoru_angle x) y)) pi))
(rule (iapply (iapply a_ (iapply cos (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c))))) (iapply cos (iapply angle (iapply (iapply c_ ai_) (iapply (iapply c_ bi_) ci_))))) (iapply (iapply a_ (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c)))) (iapply angle (iapply (iapply c_ ai_) (iapply (iapply c_ bi_) ci_)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply gamma3f y1) y2) y6) r) f)) (iapply realu_ofu_num w1))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) r) r) r) y6))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) r)) (iapply (iapply (iapply vol2f y1) r) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_126u_03 y1) y2) y3) y4) y5) y6) w1) r) f))
(rule (iapply (iapply s_b_ (iapply (iapply (iapply strictu_qua2 (iapply (iapply INSERT v) (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) (iapply (iapply INSERT v2) EMPTY))))) (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) EMPTY))) s0)) (iapply (iapply s_b_ (iapply (iapply (iapply strictu_qua2 (iapply (iapply INSERT v) (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) (iapply (iapply INSERT v4) EMPTY))))) (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) EMPTY))) s0)) (iapply (iapply a_ (iapply (iapply INTER (iapply conv0 (iapply (iapply INSERT v) (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) (iapply (iapply INSERT v2) EMPTY)))))) (iapply conv0 (iapply (iapply INSERT v) (iapply (iapply INSERT v1) (iapply (iapply INSERT v3) (iapply (iapply INSERT v4) EMPTY))))))) EMPTY))) (iapply (iapply (iapply (iapply (iapply (iapply adjacentu_pai v) v1) v3) v2) v4) s0))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply vectoru_norm e1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply vectoru_norm e2)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply vectoru_norm e3)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e1) e2)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e1) e3)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e2) e3)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply cross e1) e2)) e3)))))))) (iapply (iapply (iapply orthonormal e1) e2) e3))
(rule (iapply (iapply realu_div (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v2) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply upsu_x (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v2) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply (iapply (iapply etau_y (iapply (iapply d3 v2) v3)) (iapply (iapply d3 v1) v3)) (iapply (iapply d3 v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euleru_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler246u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler156u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)))))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_su_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_n y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply realu_ofu_num w1))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply upperu_dihu_y y1) y2) r) r) r) y6))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) r)) (iapply (iapply (iapply vol2f y1) r) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi)))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_126u_03u_n y1) y2) y3) y4) y5) y6) w1) r) f))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euleru_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler156u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler345u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)))))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_su_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply (iapply INSERT v) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) EMPTY)))) s0)) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d3 v1) v2)) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply s_b_ (iapply (iapply realu_ge (iapply (iapply d3 v1) v2)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t0))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d3 v) v1)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t0))) (iapply (iapply realu_le (iapply (iapply d3 v) v2)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t0)))))) (iapply (iapply (iapply (iapply anchor v) v1) v2) s0))
(rule (iapply (iapply realu_div (iapply realu_abs (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply measure (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))))))
(rule (iapply (iapply realu_mul (iapply distance (iapply (iapply c_ A0) C0))) (iapply (iapply realu_mul (iapply distance (iapply (iapply c_ B0) C0))) (iapply cos (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ C0) B0)))))) (iapply (iapply dot (iapply (iapply vectoru_sub A0) C0)) (iapply (iapply vectoru_sub B0) C0)))
(rule (iapply (iapply s_b_ (iapply tameu_1 H)) (iapply (iapply s_b_ (iapply tameu_2 H)) (iapply (iapply s_b_ (iapply tameu_3 H)) (iapply (iapply s_b_ (iapply tameu_4 H)) (iapply (iapply s_b_ (iapply tameu_5a H)) (iapply (iapply s_b_ (iapply tameu_8 H)) (iapply (iapply s_b_ (iapply tameu_9a H)) (iapply (iapply s_b_ (iapply tameu_10 H)) (iapply (iapply s_b_ (iapply tameu_11a H)) (iapply (iapply s_b_ (iapply tameu_11b H)) (iapply (iapply s_b_ (iapply tameu_12o H)) (iapply tameu_13a H)))))))))))) (iapply tameu_hypermap H))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply (iapply APPEND (iapply REVERSE xs)) (iapply (iapply CONS (iapply f y)) ys))) (iapply (iapply (iapply (iapply mapAt1 f) (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply CONS y) xs)) ys)) (iapply (iapply (iapply (iapply mapAt1 f) n) xs) (iapply (iapply CONS y) ys)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply fstcart x)) (iapply fstcart y))) (iapply (iapply a_ (iapply sndcart x)) (iapply sndcart y))) (iapply (iapply a_ x) y))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply (iapply (iapply (iapply (iapply delta (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x1) x2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x1) x3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x1) x4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x2) x3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x2) x4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x3) x4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply w_ (iapply coplanaru_alt (iapply (iapply INSERT x1) (iapply (iapply INSERT x2) (iapply (iapply INSERT x3) (iapply (iapply INSERT x4) EMPTY)))))))
(rule (iapply (iapply a_ (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))) (iapply (iapply a_ (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY))))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY)) (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ c) d))) EMPTY))) (iapply (iapply s_b_ (iapply (iapply a_ a) c)) (iapply (iapply a_ b) d))) (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) (iapply openu_interval (iapply (iapply c_ c) d))))
(rule (iapply (iapply add6 (iapply (iapply scalar6 (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) m1) m2) m6)) dummy6) dummy6) dummy6) proju_x1) proju_x2) proju_x6)) iw1)) (iapply (iapply mul6 (iapply (iapply sub6 dihu_x) (iapply (iapply add6 (iapply mku_126 (iapply truncateu_dihu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply constant6 d)))) (iapply uni (iapply (iapply c_ (iapply truncateu_gamma2u_x m1)) proju_x1)))) (iapply (iapply (iapply (iapply (iapply truncateu_gamma23u_xu_C d) iw1) m1) m2) m6))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS x2) (iapply (iapply CONS x3) NIL)))))) (iapply det (iapply vector (iapply (iapply CONS x1) (iapply (iapply CONS y2) (iapply (iapply CONS y3) NIL))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS y2) (iapply (iapply CONS x2) (iapply (iapply CONS x3) NIL)))))) (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS x1) (iapply (iapply CONS y3) NIL))))))) (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS y3) (iapply (iapply CONS x2) (iapply (iapply CONS x3) NIL)))))) (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS y2) (iapply (iapply CONS x1) NIL)))))))) (iapply (iapply realu_mul (iapply det (iapply vector (iapply (iapply CONS x1) (iapply (iapply CONS x2) (iapply (iapply CONS x3) NIL)))))) (iapply det (iapply vector (iapply (iapply CONS y1) (iapply (iapply CONS y2) (iapply (iapply CONS y3) NIL)))))))
(rule (iapply (iapply mul6 proju_x1) (iapply (iapply mul6 proju_x1) proju_x1)) x1cube)
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply gamma3f y1) y2) y6) r) f)) (iapply realu_ofu_num w1))) (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply gamma3f y1) y3) y5) r) f)) (iapply realu_ofu_num w2))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) r) r) r) y6))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y3) r) r) r) y5))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) r)) (iapply (iapply (iapply vol2f y1) r) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23f y1) y2) y3) y4) y5) y6) w1) w2) r) f))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e1) e1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e2) e2)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e3) e3)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e1) e2)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e1) e3)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply dot e2) e3)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply cross e1) e2)) e3)))))))) (iapply (iapply (iapply orthonormal e1) e2) e3))
(rule (iapply (iapply s_b_ (iapply (iapply IN x) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) a))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) b))) (iapply w_ (iapply (iapply a_ a) b))))) (iapply (iapply IN x) (iapply openu_segment (iapply (iapply c_ a) b))))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_div (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_div mm2) pi))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply realu_div (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_mul y) (iapply (iapply realu_div mm2) pi)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply gchi y))
(rule (iapply (iapply s_b_ (iapply (iapply differentiable f) (iapply at z))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply jacobian f) (iapply at z))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply jacobian f) (iapply at z))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply jacobian f) (iapply at z))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_neg (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply jacobian f) (iapply at z))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply (iapply complexu_differentiable f) (iapply at z)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply eulerAu_x x1) x2) x3) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x23) x2) x3) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x13) x1) x3) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x12) x1) x2) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply euleru_3flatu_x x1) x2) x3) x23) x13) x12))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) pi)) (iapply (iapply a_ (iapply sin (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0))))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y) (iapply (iapply realu_mul r) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply f (iapply (iapply realu_div y) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply (iapply vol2f y) r) f))
(rule (iapply (iapply (iapply COND (iapply (iapply IN x) (iapply dart1u_ofu_fan (iapply (iapply c_ V) E)))) (iapply (iapply eu_fanu_pair (iapply (iapply c_ V) E)) x)) x) (iapply (iapply eu_fanu_pairu_ext (iapply (iapply c_ V) E)) x))
(rule (iapply SND (iapply SND (iapply SND (iapply tupleu_hypermap H)))) (iapply faceu_map H))
(rule (iapply FST (iapply SND (iapply SND (iapply tupleu_hypermap H)))) (iapply nodeu_map H))
(rule (iapply (iapply s_b_ (iapply isu_restricted H)) (iapply (iapply s_b_ (iapply (iapply isu_normal H) NF)) (iapply (iapply s_b_ (iapply (iapply IN L) NF)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply IN L) (iapply (iapply canon H) NF)))) (iapply (iapply s_b_ (iapply (iapply belong x) L)) (iapply (iapply a_ (iapply (iapply (iapply head H) NF) x)) x)))))) (iapply (iapply (iapply (iapply isu_splitu_condition H) NF) L) x))
(rule (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_n y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply realu_ofu_num w1))) (iapply (iapply realu_add (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_n y1) sqrt2) y3) sqrt2) y5) sqrt2)) (iapply realu_ofu_num w2))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply upperu_dihu_y y1) y2) r) r) r) y6))) (iapply (iapply (iapply (iapply (iapply (iapply upperu_dihu_y y1) y3) r) r) r) y5))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) r)) (iapply (iapply (iapply vol2f y1) r) f))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23fu_n y1) y2) y3) y4) y5) y6) w1) w2) r) f))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3u_x m1) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x3) x5)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23u_keep135u_x m1) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_add x) (iapply (iapply realu_add y) z))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_add x) (iapply (iapply realu_add y) z))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_add x) (iapply (iapply realu_add y) z))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) y)) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_add x) (iapply (iapply realu_add y) z))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) z))))) (iapply (iapply (iapply upsu_xu_pow2 x) y) z))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_add a) (iapply (iapply realu_add b) c))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_add a) (iapply (iapply realu_add b) c))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) a)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_add a) (iapply (iapply realu_add b) c))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) b)) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_add a) (iapply (iapply realu_add b) c))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) c))))) (iapply (iapply (iapply upsu_x (iapply (iapply realu_mul a) a)) (iapply (iapply realu_mul b) b)) (iapply (iapply realu_mul c) c)))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ A0) B0))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ C0) B0))) (iapply (iapply a_ (iapply distance (iapply (iapply c_ A0) C0))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ A0) B0))) (iapply distance (iapply (iapply c_ B0) C0)))))) (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) pi))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ A0) B0))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ C0) B0))) (iapply (iapply a_ (iapply distance (iapply (iapply c_ A0) C0))) (iapply realu_abs (iapply (iapply realu_sub (iapply distance (iapply (iapply c_ A0) B0))) (iapply distance (iapply (iapply c_ C0) B0))))))) (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply Im z)) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply (iapply COND (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply Re z))) (iapply complex (iapply (iapply c_ (iapply sqrt (iapply Re z))) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply complex (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply sqrt (iapply realu_neg (iapply Re z))))))) (iapply complex (iapply (iapply c_ (iapply sqrt (iapply (iapply realu_div (iapply (iapply realu_add (iapply vectoru_norm z)) (iapply Re z))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply Im z)) (iapply realu_abs (iapply Im z)))) (iapply sqrt (iapply (iapply realu_div (iapply (iapply realu_sub (iapply vectoru_norm z)) (iapply Re z))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply csqrt z))
(rule (iapply (iapply realu_div (iapply sqrt (iapply (iapply (iapply (iapply (iapply (iapply deltau_x (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x1) x2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x1) x3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x1) x4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x3) x4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x2) x4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x2) x3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply measure (iapply (iapply hull convex) (iapply (iapply INSERT x1) (iapply (iapply INSERT x2) (iapply (iapply INSERT x3) (iapply (iapply INSERT x4) EMPTY)))))))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply a_ c) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_div (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub c) b))) (iapply (iapply realu_mul (iapply vectoru_norm (iapply (iapply vectoru_sub a) b))) (iapply vectoru_norm (iapply (iapply vectoru_sub c) b))))) (iapply cos (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c)))))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) x)) (iapply (iapply realu_div (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div (iapply sqrt x)) sqrt8)))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_mul m) (iapply lfun (iapply (iapply realu_div (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply gamma2u_xu_divu_azim m) x))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) x)) (iapply (iapply realu_div (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div (iapply sqrt x)) sqrt8)))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_mul m) (iapply lfun (iapply (iapply realu_div (iapply sqrt x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply truncateu_gamma2u_x m) x))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) x24))) (iapply (iapply realu_add (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x24))) (iapply (iapply realu_add (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) x34))) (iapply (iapply realu_add (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x34))) (iapply (iapply realu_add (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x24) x34))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x34))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x34))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) x34)))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x23)))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x24)))))))) (iapply (iapply (iapply (iapply (iapply (iapply chi x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL u_0))) (iapply catn z)) (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply FACT (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply (iapply complexu_mul (iapply complexu_inv (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply vectoru_add (iapply (iapply complexu_mul (iapply (iapply complexu_pow (iapply vectoru_neg ii)) (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow (iapply complexu_inv (iapply (iapply vectoru_add (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z)))) n))) (iapply (iapply complexu_mul (iapply (iapply complexu_pow ii) (iapply (iapply m_ n) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_pow (iapply complexu_inv (iapply (iapply vectoru_sub (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply complexu_mul ii) z)))) n)))))) (iapply (iapply tayloru_coeffu_catn n) z))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_neg x1)) (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x4) x4)))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x5) x5))))) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x6) x6))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x4) x5))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x4) x6))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x5) x6))))))) (iapply (iapply (iapply (iapply (iapply (iapply rhou_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_add (iapply realu_neg (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x4) x4)))) (iapply (iapply realu_add (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x4) x5))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x4) x5))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x5) x5)))) (iapply (iapply realu_add (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x4) x6))) (iapply (iapply realu_add (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x4) x6))) (iapply (iapply realu_add (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x5) x6))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x5) x6))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x4) (iapply (iapply realu_mul x5) x6))))) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x6) x6))))))))) (iapply (iapply (iapply (iapply (iapply (iapply chiu_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply s_b_ (iapply (iapply IN a) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL)))) (iapply (iapply IN b) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL)))) (iapply (iapply SUBSET (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply SUBSET (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL)))) (iapply (iapply SUBSET (iapply openu_segment (iapply (iapply c_ a) b))) (iapply openu_segment (iapply (iapply c_ c) d))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply f x)) (iapply neutral op))) (iapply (iapply (iapply support op) f) s0)) (iapply (iapply INSERT x) (iapply (iapply (iapply support op) f) s0))) (iapply (iapply (iapply support op) f) (iapply (iapply INSERT x) s0)))
(rule (iapply (iapply add6 (iapply (iapply mul6 proju_y1) (iapply (iapply mul6 proju_y2) proju_y3))) (iapply (iapply add6 (iapply (iapply scalar6 (iapply (iapply mul6 proju_y1) (iapply (iapply add6 proju_x2) (iapply (iapply sub6 proju_x3) proju_x4)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply add6 (iapply (iapply scalar6 (iapply (iapply mul6 proju_y2) (iapply (iapply add6 proju_x1) (iapply (iapply sub6 proju_x3) proju_x5)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply scalar6 (iapply (iapply mul6 proju_y3) (iapply (iapply add6 proju_x1) (iapply (iapply sub6 proju_x2) proju_x6)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) eulerAu_x)
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y3) sqrt2) sqrt2) sqrt2) y5))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y1) (iapply (iapply realu_mul sqrt2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLR0 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply circular V) E))) (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY))) V)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ v) w))) (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT v) (iapply (iapply INSERT w) EMPTY))))))) (iapply (iapply (iapply lunar (iapply (iapply c_ v) w)) V) E))
(rule (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) e1)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub b2) c2)) (iapply (iapply realu_sub e2) e3)))) (iapply (iapply realu_mul a2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_sub b2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) e2)) (iapply (iapply realu_mul (iapply (iapply realu_sub c2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) e3))))))) (iapply (iapply (iapply (iapply (iapply (iapply num1 e1) e2) e3) a2) b2) c2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply uni (iapply (iapply c_ f) x)) x1) x2) x3) x4) x5) x6) (iapply f (iapply (iapply (iapply (iapply (iapply (iapply x x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply (iapply join (iapply (iapply (iapply mirror H) x) n)) (iapply (iapply nodeu_contour H) (iapply (iapply inverse (iapply nodeu_map H)) (iapply (iapply (iapply POWER (iapply inverse (iapply faceu_map H))) (iapply SUC n)) x)))) (iapply (iapply (iapply ind0 H) x) n)) (iapply (iapply (iapply mirror H) x) (iapply SUC n)))
(rule (iapply (iapply (iapply COND (iapply FINITE (iapply (iapply (iapply support op) f) s0))) (iapply (iapply (iapply iterate op) (iapply (iapply (iapply support op) f) s0)) f)) (iapply neutral op)) (iapply (iapply (iapply iterate op) s0) f))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) h)) (iapply (iapply realu_mul (iapply (iapply realu_sub h) hplus)) (iapply (iapply realu_div (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_pow h) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) h))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub hplus) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))))) (iapply marchalu_quartic h))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2) x3) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x23) x2) x3) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x13) x1) x3) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x12) x1) x2) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply flatu_termu_x x12)) (iapply (iapply realu_add (iapply flatu_termu_x x23)) (iapply flatu_termu_x x13)))) (iapply (iapply (iapply (iapply (iapply (iapply taumu_3flatu_x x1) x2) x3) x23) x13) x12))
(rule (iapply (iapply vectoru_add (iapply (iapply r_ (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply (iapply realu_mul (iapply cos (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) t)) (iapply (iapply (iapply (iapply azim (iapply vec (iapply NUMERAL u_0))) e3) e1) x)))) (iapply sin (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) e3) x))))) e1)) (iapply (iapply vectoru_add (iapply (iapply r_ (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply (iapply realu_mul (iapply sin (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) t)) (iapply (iapply (iapply (iapply azim (iapply vec (iapply NUMERAL u_0))) e3) e1) x)))) (iapply sin (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) e3) x))))) e2)) (iapply (iapply r_ (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply cos (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) e3) x)))) e3))) (iapply (iapply (iapply lunaru_deform (iapply (iapply c_ e1) (iapply (iapply c_ e2) e3))) t) x))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply matrixu_mul (iapply transp Q)) Q)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply (iapply matrixu_mul Q) (iapply transp Q))) (iapply mat (iapply NUMERAL (iapply BIT1 u_0))))) (iapply orthogonalu_matrix Q))
(rule (iapply (iapply INTER (iapply (iapply hull affine) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))) (iapply ball (iapply (iapply c_ (iapply (iapply r_ (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply vectoru_add a) b))) (iapply (iapply realu_div (iapply vectoru_norm (iapply (iapply vectoru_sub b) a))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply openu_segment (iapply (iapply c_ a) b)))
(rule (iapply (iapply INTER (iapply (iapply hull affine) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))) (iapply cball (iapply (iapply c_ (iapply (iapply r_ (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply vectoru_add a) b))) (iapply (iapply realu_div (iapply vectoru_norm (iapply (iapply vectoru_sub b) a))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))
(rule (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_abs (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_abs (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply b_s_ (iapply (iapply a_ (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply (iapply d_ x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))))) (iapply (iapply a_ (iapply infnorm x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul x1) (iapply (iapply realu_pow x4) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul x1) x1)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub x3) x5)) (iapply (iapply realu_sub x2) x6))) (iapply (iapply realu_mul x1) (iapply (iapply realu_add x2) (iapply (iapply realu_add x3) (iapply (iapply realu_add x5) x6))))))) x4)) (iapply (iapply realu_add (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x3) x5))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x2) x6))) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul (iapply (iapply realu_add x1) (iapply (iapply realu_add (iapply (iapply realu_sub x2) x3)) (iapply (iapply realu_sub x5) x6)))) x6)))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x5) (iapply (iapply realu_add (iapply (iapply realu_sub x1) x2)) (iapply (iapply realu_add (iapply (iapply realu_sub x3) x5)) x6)))))))) (iapply realu_neg (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x4) (iapply (iapply realu_add (iapply realu_neg x1)) (iapply (iapply realu_add x2) (iapply (iapply realu_add (iapply (iapply realu_sub x3) x4)) (iapply (iapply realu_add x5) x6))))))) (iapply (iapply realu_add (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x5) (iapply (iapply realu_add (iapply (iapply realu_sub x1) x2)) (iapply (iapply realu_add x3) (iapply (iapply realu_add (iapply (iapply realu_sub x4) x5)) x6)))))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x6) (iapply (iapply realu_add x1) (iapply (iapply realu_add (iapply (iapply realu_sub x2) x3)) (iapply (iapply realu_add x4) (iapply (iapply realu_sub x5) x6))))))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x3) x4)))) (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x3) x5)))) (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x2) x6)))) (iapply (iapply realu_mul x4) (iapply (iapply realu_mul x5) x6))))) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y1) (iapply (iapply realu_mul sqrt2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_v0 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a1) y1)) (iapply (iapply realu_le y1) b1))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a2) y2)) (iapply (iapply realu_le y2) b2))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a3) y3)) (iapply (iapply realu_le y3) b3))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a4) y4)) (iapply (iapply realu_le y4) b4))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a5) y5)) (iapply (iapply realu_le y5) b5))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a6) y6)) (iapply (iapply realu_le y6) b6))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a7) y7)) (iapply (iapply realu_le y7) b7))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a8) y8)) (iapply (iapply realu_le y8) b8))) (iapply (iapply a_a_g_ (iapply (iapply s_b_ (iapply (iapply realu_le a9) y9)) (iapply (iapply realu_le y9) b9))) P))))))))) (iapply (iapply ineq (iapply (iapply CONS (iapply (iapply c_ a1) (iapply (iapply c_ y1) b1))) (iapply (iapply CONS (iapply (iapply c_ a2) (iapply (iapply c_ y2) b2))) (iapply (iapply CONS (iapply (iapply c_ a3) (iapply (iapply c_ y3) b3))) (iapply (iapply CONS (iapply (iapply c_ a4) (iapply (iapply c_ y4) b4))) (iapply (iapply CONS (iapply (iapply c_ a5) (iapply (iapply c_ y5) b5))) (iapply (iapply CONS (iapply (iapply c_ a6) (iapply (iapply c_ y6) b6))) (iapply (iapply CONS (iapply (iapply c_ a7) (iapply (iapply c_ y7) b7))) (iapply (iapply CONS (iapply (iapply c_ a8) (iapply (iapply c_ y8) b8))) (iapply (iapply CONS (iapply (iapply c_ a9) (iapply (iapply c_ y9) b9))) NIL)))))))))) P))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply realu_neg (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x23)))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) x24)))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) x34)))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) (iapply (iapply realu_add (iapply realu_neg x12)) (iapply (iapply realu_add x13) (iapply (iapply realu_add x14) (iapply (iapply realu_add x23) (iapply (iapply realu_sub x24) x34)))))))) (iapply (iapply realu_add (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) (iapply (iapply realu_add (iapply (iapply realu_sub x12) x13)) (iapply (iapply realu_add x14) (iapply (iapply realu_add (iapply (iapply realu_sub x23) x24)) x34)))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_add x12) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub x13) x14)) x23)) (iapply (iapply realu_add x24) x34)))))))) (iapply (iapply (iapply (iapply (iapply (iapply delta x12) x13) x14) x23) x24) x34))
(rule (iapply measure (iapply (iapply INTER (iapply ball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) r))) (iapply (iapply affu_gt (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) EMPTY)) (iapply (iapply INSERT (iapply vectoru_neg v1)) (iapply (iapply INSERT (iapply vectoru_neg v2)) (iapply (iapply INSERT (iapply vectoru_neg v3)) EMPTY)))))) (iapply measure (iapply (iapply INTER (iapply ball (iapply (iapply c_ (iapply vec (iapply NUMERAL u_0))) r))) (iapply (iapply affu_gt (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) EMPTY)) (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) EMPTY)))))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply s_b_ (iapply (iapply IN a) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL)))) (iapply (iapply IN b) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))) (iapply (iapply SUBSET (iapply openu_segment (iapply (iapply c_ a) b))) (iapply openu_segment (iapply (iapply c_ c) d))))
(rule (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply s_b_ (iapply (iapply IN a) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL)))) (iapply (iapply IN b) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))) (iapply (iapply SUBSET (iapply openu_segment (iapply (iapply c_ a) b))) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y1) (iapply (iapply realu_mul sqrt2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vL0 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply (iapply realu_sub y1) hminus)) hplus)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub y2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub y3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub y4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub y5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_sub y6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply norm2hh y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply a_ c) b))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply (iapply realu_div (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub c) b))) (iapply (iapply realu_mul (iapply vectoru_norm (iapply (iapply vectoru_sub a) b))) (iapply vectoru_norm (iapply (iapply vectoru_sub c) b))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply sin (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply conv0 (iapply (iapply INSERT x) (iapply (iapply INSERT (iapply (iapply vectoru_add x) v1)) (iapply (iapply INSERT (iapply (iapply vectoru_add x) (iapply (iapply vectoru_add v1) v2))) (iapply (iapply INSERT (iapply (iapply vectoru_add x) (iapply (iapply vectoru_add v1) (iapply (iapply vectoru_add v2) v3)))) EMPTY))))) (iapply (iapply (iapply (iapply ortho0 x) v1) v2) v3))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) mm1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y1)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y2)) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y3)) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y4)) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y5)) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_mul (iapply gcy y6)) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6)))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply vol4f y1) y2) y3) y4) y5) y6) lmfun))
(rule (iapply (iapply (iapply COND (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply a_ c) b))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply sqrt (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply (iapply realu_div (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub c) b))) (iapply (iapply realu_mul (iapply vectoru_norm (iapply (iapply vectoru_sub a) b))) (iapply vectoru_norm (iapply (iapply vectoru_sub c) b))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sin (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c)))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply openu_interval (iapply (iapply c_ a) b))) EMPTY)) EMPTY) (iapply (iapply DIFF (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply openu_interval (iapply (iapply c_ a) b)))) (iapply frontier (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x14) x23)) x12)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x14) x23)) x13)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x14)) x23)) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x14)) x23)) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x14) x23)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x12)) x13)) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x12)) x14)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x13) x24)) x12)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x13)) x24)) x13)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x13) x24)) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x13) x24)) x23)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x13)) x24)) x24)))))))))))) (iapply (iapply (iapply (iapply (iapply cu_coef x12) x13) x14) x23) x24))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)) (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) bnu_squanderTarget)))) (iapply bnu_squanderFace n))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_neg (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply rotationu_matrix A0))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply dart H)) (iapply dart Hi_))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply edgeu_map H)) (iapply edgeu_map Hi_))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply nodeu_map H)) (iapply nodeu_map Hi_))) (iapply (iapply a_ (iapply faceu_map H)) (iapply faceu_map Hi_))))) (iapply (iapply a_ H) Hi_))
(rule (iapply vector (iapply (iapply CONS (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply CONS (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply CONS (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))))) NIL)))) (iapply (iapply cross a) b))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply openu_interval (iapply (iapply c_ a) b))))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_le (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply loop0 (iapply (iapply c_ (iapply (iapply supportu_list (iapply (iapply (iapply (iapply genex H) NF) L) x)) (iapply (iapply (iapply (iapply tpx H) NF) L) x))) (iapply (iapply samsara (iapply (iapply (iapply (iapply genex H) NF) L) x)) (iapply (iapply (iapply (iapply tpx H) NF) L) x)))) (iapply (iapply (iapply (iapply dnax H) NF) L) x))
(rule (iapply loop0 (iapply (iapply c_ (iapply (iapply supportu_list (iapply (iapply (iapply (iapply geney H) NF) L) x)) (iapply (iapply (iapply (iapply tpy H) NF) L) x))) (iapply (iapply samsara (iapply (iapply (iapply (iapply geney H) NF) L) x)) (iapply (iapply (iapply (iapply tpy H) NF) L) x)))) (iapply (iapply (iapply (iapply dnay H) NF) L) x))
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND u)))))) (iapply part5 u))
(rule (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)) (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))) EMPTY))) (iapply (iapply s_b_ (iapply (iapply a_ a) c)) (iapply (iapply a_ b) d))) (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL))))
(rule (iapply (iapply c_ (iapply dart H)) (iapply (iapply c_ (iapply edgeu_map H)) (iapply (iapply c_ (iapply nodeu_map H)) (iapply faceu_map H)))) (iapply tupleu_hypermap H))
(rule (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply volu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) mm1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y1)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y2)) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y3)) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y4)) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply gcy y5)) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_mul (iapply gcy y6)) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma4fgcy y1) y2) y3) y4) y5) y6) lmfun))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) m1) m2) m6) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x2) x6)) iw1)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) x1) x2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6)) d))) (iapply (iapply truncateu_gamma2u_x m1) x1))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma23u_xu_C d) iw1) m1) m2) m6) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply glue (iapply (iapply loopu_path L) (iapply (iapply (iapply (iapply attach H) NF) L) x))) (iapply (iapply faceu_contour H) (iapply (iapply (iapply (iapply heading H) NF) L) x))) (iapply (iapply (iapply index L) (iapply (iapply (iapply (iapply attach H) NF) L) x)) (iapply (iapply (iapply (iapply heading H) NF) L) x))) (iapply (iapply (iapply (iapply genex H) NF) L) x))
(rule (iapply (iapply c_ (iapply distance (iapply (iapply c_ w0) w1))) (iapply (iapply c_ (iapply distance (iapply (iapply c_ w0) w2))) (iapply (iapply c_ (iapply distance (iapply (iapply c_ w0) w3))) (iapply (iapply c_ (iapply distance (iapply (iapply c_ w2) w3))) (iapply (iapply c_ (iapply distance (iapply (iapply c_ w1) w3))) (iapply distance (iapply (iapply c_ w1) w2))))))) (iapply (iapply (iapply (iapply ylist w0) w1) w2) w3))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply realu_ofu_num (iapply NUMERAL u_0))) m1) m2) m6) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x2) x6)) iw1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply realu_ofu_num (iapply NUMERAL u_0))) m1) m3) m5) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x3) x5)) iw2)) (iapply (iapply realu_mul (iapply (iapply realu_sub az4) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply truncateu_gamma2u_x m1) x1)))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma23au_x iw1) iw2) m1) m2) m3) m5) m6) x1) x2) x3) az4) x5) x6))
(rule (iapply (iapply p_ (iapply (iapply (iapply index L) (iapply (iapply inverse (iapply nodeu_map H)) (iapply (iapply (iapply (iapply heading H) NF) L) x))) (iapply (iapply nodeu_map H) (iapply (iapply (iapply (iapply attach H) NF) L) x)))) (iapply (iapply (iapply ind0 H) (iapply (iapply (iapply (iapply attach H) NF) L) x)) (iapply (iapply (iapply (iapply mAdd H) NF) L) x))) (iapply (iapply (iapply (iapply tpy H) NF) L) x))
(rule (iapply hypermap0 (iapply (iapply c_ (iapply dart H)) (iapply (iapply c_ (iapply nodeu_map H)) (iapply (iapply c_ (iapply faceu_map H)) (iapply edgeu_map H))))) (iapply shift H))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply realu_neg (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) x)))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_div x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul x) (iapply (iapply realu_div x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply sqrt x)) (iapply sqp x))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_y y1) y2) r) r) r) y3)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_y y2) y3) r) r) r) y1)) (iapply (iapply (iapply (iapply (iapply (iapply solu_y y3) y1) r) r) r) y2))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) r) r) r) y3))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y2) y3) r) r) r) y1))) (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y3) y1) r) r) r) y2)))))) (iapply (iapply (iapply (iapply (iapply vol3f y1) y2) y3) r) f))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euleru_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler156u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler345u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdihu_xu_divu_sqrtdeltau_posbranch) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih3u_xu_divu_sqrtdeltau_posbranch) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih5u_xu_divu_sqrtdeltau_posbranch) y1) y2) y3) y4) y5) y6))))))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3u_x m1) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x2) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3u_x m1) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x3) x5)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma23u_full8u_x m1) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply realu_mul (iapply sqn (iapply (iapply (iapply (iapply (iapply (iapply deltau_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euleru_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler246u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x solu_euler156u_xu_divu_sqrtdelta) y1) y2) y3) y4) y5) y6))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdihu_xu_divu_sqrtdeltau_posbranch) y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih2u_xu_divu_sqrtdeltau_posbranch) y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x lmdih6u_xu_divu_sqrtdeltau_posbranch) y1) y2) y3) y4) y5) y6))))))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y3) sqrt2) sqrt2) sqrt2) y5))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y1) (iapply (iapply realu_mul sqrt2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply lfun (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLRu_lfun y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply sub6 (iapply (iapply scalar6 (iapply (iapply add6 (iapply mku_456 (iapply rotate5 solu_x))) (iapply (iapply add6 (iapply mku_456 (iapply rotate6 solu_x))) (iapply mku_456 (iapply rotate4 solu_x))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply scalar6 (iapply (iapply add6 (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m4)) (iapply mku_456 (iapply rotate4 dihu_x)))) (iapply (iapply add6 (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply mku_456 (iapply rotate5 dihu_x)))) (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply mku_456 (iapply rotate6 dihu_x)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi)))) (iapply vol3fu_456 m4))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y1) (iapply (iapply realu_mul sqrt2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply lfun (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vu_lfun y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply vol2r y1) sqrt2)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_div y1) (iapply (iapply realu_mul sqrt2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul pi) (iapply lfun (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_vLu_lfun y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ A0) B0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ A0) C0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply distance (iapply (iapply c_ A0) B0))) (iapply (iapply realu_mul (iapply distance (iapply (iapply c_ A0) C0))) (iapply cos (iapply angle (iapply (iapply c_ B0) (iapply (iapply c_ A0) C0)))))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ B0) C0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply COND (iapply (iapply g_ (iapply (iapply p_ r) (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) s0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num s0)))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))) (iapply (iapply realu_add (iapply realu_ofu_num r)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num s0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply DECIMAL (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply tameu_tableu_d r) s0))
(rule (iapply (iapply add6 (iapply (iapply scalar6 (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) m1) m2) m6)) dummy6) dummy6) dummy6) proju_x1) proju_x2) proju_x6)) iw1)) (iapply (iapply add6 (iapply (iapply scalar6 (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) m1) m3) m5)) dummy6) dummy6) dummy6) proju_x1) proju_x3) proju_x5)) iw2)) (iapply (iapply mul6 (iapply (iapply sub6 dihu_x) (iapply (iapply add6 (iapply mku_126 (iapply truncateu_dihu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply mku_135 (iapply truncateu_dihu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply uni (iapply (iapply c_ (iapply truncateu_gamma2u_x m1)) proju_x1))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma23u_x iw1) iw2) m1) m2) m3) m5) m6))
(rule (iapply hypermap0 (iapply (iapply c_ (iapply (iapply quotientu_darts H) NF)) (iapply (iapply c_ (iapply (iapply emap H) NF)) (iapply (iapply c_ (iapply (iapply nmap H) NF)) (iapply (iapply fmap H) NF))))) (iapply (iapply quotient H) NF))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_lt (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply volu_rect a) b))
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND u))))))) (iapply part6 u))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ A0) B0))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ C0) B0))) (iapply (iapply b_s_ (iapply (iapply a_ (iapply distance (iapply (iapply c_ A0) B0))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ A0) C0))) (iapply distance (iapply (iapply c_ C0) B0))))) (iapply (iapply a_ (iapply distance (iapply (iapply c_ B0) C0))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ A0) C0))) (iapply distance (iapply (iapply c_ A0) B0))))))) (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply sub6 (iapply (iapply scalar6 (iapply (iapply add6 (iapply mku_456 (iapply rotate5 (iapply truncateu_solu_x c)))) (iapply (iapply add6 (iapply mku_456 (iapply rotate6 (iapply truncateu_solu_x c)))) (iapply mku_456 (iapply rotate4 (iapply truncateu_solu_x c)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply scalar6 (iapply (iapply add6 (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m4)) (iapply mku_456 (iapply rotate4 (iapply truncateu_dihu_x c))))) (iapply (iapply add6 (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m5)) (iapply mku_456 (iapply rotate5 (iapply truncateu_dihu_x c))))) (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m6)) (iapply mku_456 (iapply rotate6 (iapply truncateu_dihu_x c))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi)))) (iapply (iapply (iapply (iapply truncateu_vol3f c) m4) m5) m6))
(rule (iapply (iapply realu_mul (iapply (iapply (iapply COND (iapply criticalu_edgeu_y y1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_mul (iapply (iapply (iapply COND (iapply (iapply realu_lt y2) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) hminus))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_mul (iapply (iapply (iapply COND (iapply (iapply realu_lt y3) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) hminus))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_mul (iapply (iapply (iapply COND (iapply criticalu_edgeu_y y4)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_mul (iapply (iapply (iapply COND (iapply (iapply realu_lt y5) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) hminus))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_mul (iapply (iapply (iapply COND (iapply (iapply realu_lt y6) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) hminus))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_sub (iapply bump (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply bump (iapply (iapply realu_div y4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply betau_bumpAu_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply b_s_ (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) (iapply angle (iapply (iapply c_ Ai_) (iapply (iapply c_ Bi_) Ci_))))) (iapply (iapply a_ (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0)))) (iapply (iapply realu_sub pi) (iapply angle (iapply (iapply c_ Ai_) (iapply (iapply c_ Bi_) Ci_)))))) (iapply (iapply a_ (iapply sin (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0))))) (iapply sin (iapply angle (iapply (iapply c_ Ai_) (iapply (iapply c_ Bi_) Ci_))))))
(rule (iapply (iapply c_ (iapply dart H)) (iapply (iapply c_ (iapply (iapply o (iapply faceu_map H)) (iapply nodeu_map H))) (iapply (iapply c_ (iapply inverse (iapply nodeu_map H))) (iapply inverse (iapply faceu_map H))))) (iapply tupleu_hypermap (iapply oppositeu_hypermap H)))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) tgt)))) (iapply du_tame n))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply FST X)) D)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply FST (iapply SND X))) e)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply FST (iapply SND (iapply SND X)))) n)) (iapply (iapply a_ (iapply SND (iapply SND (iapply SND X)))) f)))) (iapply (iapply a_ X) (iapply (iapply c_ D) (iapply (iapply c_ e) (iapply (iapply c_ n) f)))))
(rule (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply vectoru_sub v2) v1)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply vectoru_sub v3) v1)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply vectoru_sub v2) v1)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply vectoru_sub v3) v1)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply vectoru_sub v2) v1)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply vectoru_sub v3) v1)) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply vectoru_sub v2) v1)) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply vectoru_sub v3) v1)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply vectoru_sub v2) v1)) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply vectoru_sub v3) v1)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply vectoru_sub v2) v1)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply vectoru_sub v3) v1)) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply cm3u_upsu_x v1) v2) v3))
(rule (iapply (iapply sub6 (iapply constant6 (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply sub6 (iapply (iapply scalar6 (iapply (iapply add6 (iapply mku_456 (iapply rotate5 solu_euleru_xu_divu_sqrtdelta))) (iapply (iapply add6 (iapply mku_456 (iapply rotate6 solu_euleru_xu_divu_sqrtdelta))) (iapply mku_456 (iapply rotate4 solu_euleru_xu_divu_sqrtdelta))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply scalar6 (iapply (iapply add6 (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m4)) (iapply mku_456 (iapply rotate4 dihu_xu_divu_sqrtdeltau_posbranch)))) (iapply (iapply add6 (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m5)) (iapply mku_456 (iapply rotate5 dihu_xu_divu_sqrtdeltau_posbranch)))) (iapply (iapply mul6 (iapply (iapply scalar6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) m6)) (iapply mku_456 (iapply rotate6 dihu_xu_divu_sqrtdeltau_posbranch)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))))) (iapply (iapply (iapply gamma3fu_xu_divu_sqrtdelta m4) m5) m6))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply (iapply detu_vec3 a) b) c))
(rule (iapply (iapply sub6 (iapply constant6 (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply sub6 (iapply (iapply scalar6 (iapply (iapply add6 (iapply mku_456 (iapply rotate5 solu_euleru_xu_divu_sqrtdelta))) (iapply (iapply add6 (iapply mku_456 (iapply rotate6 solu_euleru_xu_divu_sqrtdelta))) (iapply mku_456 (iapply rotate4 solu_euleru_xu_divu_sqrtdelta))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply scalar6 (iapply (iapply add6 (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply scalar6 (iapply mku_456 (iapply rotate4 dihu_xu_divu_sqrtdeltau_posbranch))) m4))) (iapply (iapply add6 (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply scalar6 (iapply mku_456 (iapply rotate5 dihu_xu_divu_sqrtdeltau_posbranch))) m5))) (iapply (iapply mul6 (iapply uni (iapply (iapply c_ lfun) (iapply (iapply scalar6 proju_y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply scalar6 (iapply mku_456 (iapply rotate6 dihu_xu_divu_sqrtdeltau_posbranch))) m6))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))))) (iapply (iapply (iapply gamma3fu_xu_divu_sqrtdelta m4) m5) m6))
(rule (iapply hypermap0 (iapply (iapply c_ (iapply (iapply UNION (iapply (iapply supportu_list p) k)) (iapply (iapply supportu_list q) k))) (iapply (iapply c_ (iapply (iapply (iapply cycu_emap p) q) k)) (iapply (iapply c_ (iapply (iapply (iapply cycu_nmap p) q) k)) (iapply (iapply (iapply cycu_fmap p) q) k))))) (iapply (iapply (iapply cyclicu_hypermap p) q) k))
(rule (iapply (iapply (iapply glue (iapply (iapply loopu_path L) (iapply (iapply inverse (iapply nodeu_map H)) (iapply (iapply (iapply (iapply heading H) NF) L) x)))) (iapply (iapply complement H) (iapply (iapply (iapply (iapply attach H) NF) L) x))) (iapply (iapply (iapply index L) (iapply (iapply inverse (iapply nodeu_map H)) (iapply (iapply (iapply (iapply heading H) NF) L) x))) (iapply (iapply nodeu_map H) (iapply (iapply (iapply (iapply attach H) NF) L) x)))) (iapply (iapply (iapply (iapply geney H) NF) L) x))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply orthogonalu_matrix A0))
(rule (iapply (iapply s_b_ (iapply (iapply hasu_orders (iapply edgeu_map H)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply s_b_ (iapply (iapply IN x) (iapply dart H))) (iapply (iapply s_b_ (iapply simpleu_hypermap H)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply INTER (iapply (iapply face H) x)) (iapply (iapply IMAGE (iapply nodeu_map H)) (iapply (iapply face H) x)))) EMPTY)) (iapply (iapply a_ (iapply dart H)) (iapply (iapply UNION (iapply (iapply face H) x)) (iapply (iapply IMAGE (iapply nodeu_map H)) (iapply (iapply face H) x)))))))) (iapply (iapply s_b_ (iapply (iapply dih2k H) (iapply CARD (iapply (iapply face H) x)))) (iapply (iapply IN x) (iapply dart H))))
(rule (iapply hypermap0 (iapply (iapply c_ (iapply dart H)) (iapply (iapply c_ (iapply (iapply o (iapply faceu_map H)) (iapply nodeu_map H))) (iapply (iapply c_ (iapply inverse (iapply nodeu_map H))) (iapply inverse (iapply faceu_map H)))))) (iapply oppositeu_hypermap H))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_neg (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_neg (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply a_ (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply orthogonalu_matrix A0))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) (iapply (iapply realu_pow x34) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x13)) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x23)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x13) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x14) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg x12)) x12)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul x12) x13)) (iapply (iapply realu_mul x12) x23)))))))))) x34)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x14) x23)) x12)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x14) x23)) x13)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x14)) x23)) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x14)) x23)) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x14) x23)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x12)) x13)) x23)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x12)) x14)) x24)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x13) x24)) x12)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x13)) x24)) x13)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x13) x24)) x14)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul x13) x24)) x23)) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg x13)) x24)) x24)))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply delta x12) x13) x14) x23) x24) x34))
(rule (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply UNIONS E)) V)) (iapply (iapply s_b_ (iapply graph E)) (iapply (iapply s_b_ (iapply fan1 (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply (iapply s_b_ (iapply fan2 (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply (iapply s_b_ (iapply fan6 (iapply (iapply c_ x) (iapply (iapply c_ V) E)))) (iapply fan7 (iapply (iapply c_ x) (iapply (iapply c_ V) E)))))))) (iapply FAN (iapply (iapply c_ x) (iapply (iapply c_ V) E))))
(rule (iapply sqrt (iapply quadraticu_rootu_plus (iapply (iapply c_ (iapply (iapply realu_mul y1) y1)) (iapply (iapply c_ (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y1) y1))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y5) y5))) (iapply (iapply realu_sub (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y6) y6)))) (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_add (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_add (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y6) y6)))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y5) y5)))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y6) y6)))) (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_sub (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y6) y6))))) (iapply (iapply realu_mul y6) y6))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y2) y2))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y5) y5))) (iapply (iapply realu_mul y6) y6))))))))))) (iapply (iapply (iapply (iapply (iapply edgeu_flat y1) y2) y3) y5) y6))
(rule (iapply FST (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND (iapply SND u)))))))) (iapply part7 u))
(rule (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_mul x1) x4))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul x2) x4)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul x3) x4)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x1) (iapply (iapply realu_pow x4) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul x2) x5)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul x3) x5))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x4) x5)))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul x2) x6))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul x3) x6)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul x4) x6))))))) (iapply (iapply (iapply (iapply (iapply (iapply num1 x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply s_b_ (iapply isu_restricted H)) (iapply (iapply s_b_ (iapply (iapply isu_normal H) NF)) (iapply (iapply s_b_ (iapply (iapply IN L) NF)) (iapply (iapply s_b_ (iapply (iapply belong x) L)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply next L) x)) (iapply (iapply faceu_map H) x))) (iapply (iapply s_b_ (iapply simpleu_hypermap (iapply (iapply quotient H) NF))) (iapply (iapply s_b_ (iapply isu_nodeu_nondegenerate (iapply (iapply quotient H) NF))) (iapply (iapply s_b_ (iapply (iapply IN (iapply (iapply edgeu_map H) x)) (iapply (iapply canonu_darts H) NF))) (iapply (iapply s_b_ (iapply (iapply a_a_g_ (iapply (iapply IN L) (iapply (iapply canon H) NF))) (iapply (iapply canonu_flag H) NF))) (iapply (iapply a_a_g_ (iapply w_ (iapply (iapply IN L) (iapply (iapply canon H) NF)))) (iapply (iapply (iapply (iapply flag H) NF) L) x))))))))))) (iapply (iapply (iapply (iapply isu_marked H) NF) L) x))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) mm1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul mm2) (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) const1)) (iapply (iapply realu_mul pi) const1)))))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6)))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) (iapply (iapply realu_mul pi) const1)))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim2 y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim3 y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim4 y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply rhazim5 y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply rhazim6 y1) y2) y3) y4) y5) y6))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply vol4f y1) y2) y3) y4) y5) y6) lfun))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) m1) m2) m6) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x2) x6)) iw1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma3fu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) m1) m3) m5) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL u_0))) x1) x3) x5)) iw2)) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) x1) x2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) x1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply truncateu_gamma2u_x m1) x1)))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_gamma23u_x iw1) iw2) m1) m2) m3) m5) m6) x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply (iapply COND (iapply (iapply realu_lt x) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_div (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply realu_neg (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) x)) x))))))) (iapply sqrt x)) (iapply sqn x))
(rule (iapply (iapply (iapply arcV (iapply vec (iapply NUMERAL u_0))) (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot (iapply (iapply vectoru_sub v1) v0)) (iapply (iapply vectoru_sub v1) v0))) (iapply (iapply vectoru_sub v2) v0))) (iapply (iapply r_ (iapply (iapply dot (iapply (iapply vectoru_sub v2) v0)) (iapply (iapply vectoru_sub v1) v0))) (iapply (iapply vectoru_sub v1) v0)))) (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot (iapply (iapply vectoru_sub v1) v0)) (iapply (iapply vectoru_sub v1) v0))) (iapply (iapply vectoru_sub v3) v0))) (iapply (iapply r_ (iapply (iapply dot (iapply (iapply vectoru_sub v3) v0)) (iapply (iapply vectoru_sub v1) v0))) (iapply (iapply vectoru_sub v1) v0)))) (iapply (iapply (iapply (iapply dihV v0) v1) v2) v3))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_y y1) y5) y6) y4) y2) y3)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_y y4) y5) y3) y1) y2) y6)) (iapply (iapply (iapply (iapply (iapply (iapply solu_y y4) y2) y6) y1) y5) y3)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y2) y3) y1) y5) y6) y4))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y3) y1) y2) y6) y4) y5))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y4) y3) y5) y1) y6) y2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y5) y1) y6) y2) y4) y3))) (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y6) y1) y5) y3) y4) y2))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply vol4f y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply mul6 proju_x1) (iapply uni (iapply (iapply c_ asn) (iapply (iapply mul6 (iapply constant6 cos797)) (iapply uni (iapply (iapply c_ sin) (iapply (iapply div6 (iapply constant6 pi)) proju_x1))))))) asn797k)
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) mm1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6)) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6)))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6))) (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6)))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply vol4f y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ sqrt8) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y6) sqrt8))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexf4 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ sqrt8) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y5) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexff4 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply distance (iapply (iapply c_ u) v)))) (iapply (iapply s_b_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply distance (iapply (iapply c_ u) w)))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply distance (iapply (iapply c_ v) w)))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply distance (iapply (iapply c_ v) w))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ u) v))) (iapply distance (iapply (iapply c_ u) w))))) (iapply (iapply s_b_ (iapply (iapply realu_le (iapply distance (iapply (iapply c_ u) v))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ u) w))) (iapply distance (iapply (iapply c_ v) w))))) (iapply (iapply realu_le (iapply distance (iapply (iapply c_ u) w))) (iapply (iapply realu_add (iapply distance (iapply (iapply c_ v) w))) (iapply distance (iapply (iapply c_ u) v))))))))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ u) v))) (iapply w_ (iapply (iapply a_ u) w))))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ (iapply (iapply d_ A0) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0)))))))) (iapply det A0))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y5) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexfA y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y6) sqrt8))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexffA y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply c_ (iapply FST S)) (iapply (iapply c_ (iapply FST (iapply SND S))) (iapply (iapply c_ (iapply FST (iapply SND (iapply SND S)))) (iapply SND (iapply SND (iapply SND S)))))) S)
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply volR (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply etau_y (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) y)) (iapply sqrt (iapply (iapply (iapply (iapply (iapply (iapply rad2u_y (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) y) y) y))))) (iapply (iapply realu_add (iapply (iapply realu_mul a) (iapply (iapply (iapply (iapply (iapply (iapply solu_y (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) y) y) y))) (iapply (iapply realu_mul (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul b) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) y) y) y))))) (iapply (iapply (iapply fdodec y) a) b))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y6) sqrt8))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexf5 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y5) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexff5 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))))))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))))))))))))))))))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_div (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))))))))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))))))))))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))))))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))))))))))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))))))))))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))))))) (iapply (iapply realu_sub (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))))))))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_flatu_l y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_std3u_mini y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_div (iapply realu_abs (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ d) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ d) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ d) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ d) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_sub (iapply (iapply d_ d) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ b) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply (iapply d_ c) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply d_ d) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply d_ a) (iapply NUMERAL (iapply BIT1 u_0))))))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply measure (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY)))))))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_flatu_h y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_Hllu_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_std3u_smallu_hll y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_mllu_n y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_std3u_hll y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_std3u_lllu_wxx y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply realu_mul (iapply realu_inv (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply (iapply realu_sub (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply (iapply realu_sub h) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_pow h) (iapply NUMERAL u_0)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_sub (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_pow h) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))))))))) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_pow h) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))))))))))) (iapply (iapply realu_pow h) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_sub (iapply marchalu_quartic h)) (iapply lfun h)))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ sqrt8) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartY y1) y2) y3) y4) y5) y6))
(rule (iapply hypermap0 (iapply (iapply c_ (iapply (iapply DELETE (iapply dart H)) x)) (iapply (iapply c_ (iapply (iapply o (iapply inverse (iapply (iapply o (iapply swap (iapply (iapply c_ x) (iapply (iapply faceu_map H) x)))) (iapply faceu_map H)))) (iapply inverse (iapply (iapply o (iapply swap (iapply (iapply c_ x) (iapply (iapply nodeu_map H) x)))) (iapply nodeu_map H))))) (iapply (iapply c_ (iapply (iapply o (iapply swap (iapply (iapply c_ x) (iapply (iapply nodeu_map H) x)))) (iapply nodeu_map H))) (iapply (iapply o (iapply swap (iapply (iapply c_ x) (iapply (iapply faceu_map H) x)))) (iapply faceu_map H)))))) (iapply (iapply edgeu_walkup H) x))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y5) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y6) sqrt8))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_A y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_std3u_lw y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_Hllu_w y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_mllu_w y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_std3u_lhh y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_std3u_lllu_xww y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ sqrt8) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_supu_flat y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_flat y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) sqrt8))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply apexu_flatu_hll y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dart4u_diag3 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_std3 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_std3u_small y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartu_std3u_bigu_200u_218 y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL)))))) (iapply (iapply (iapply (iapply (iapply (iapply dartX y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y1) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y2) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y3) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)) (iapply (iapply c_ y4) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y5) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y6) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y7) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y8) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply c_ y9) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) h0)))) NIL))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply dartu_std4 y1) y2) y3) y4) y5) y6) y7) y8) y9))
(rule (iapply (iapply mul6 proju_x2) (iapply uni (iapply (iapply c_ asn) (iapply (iapply mul6 (iapply (iapply add6 (iapply (iapply mul6 proju_x1) (iapply constant6 (iapply (iapply realu_div sqrt3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply mul6 (iapply uni (iapply (iapply c_ sqrt) (iapply (iapply sub6 unit6) (iapply uni (iapply (iapply c_ pow2) (iapply (iapply mul6 proju_x1) (iapply constant6 (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))))) (iapply constant6 (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply uni (iapply (iapply c_ sin) (iapply (iapply div6 (iapply constant6 pi)) proju_x2))))))) asnFnhk)
(rule (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y1) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y2) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply c_ y4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y5) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y6) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y7) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y8) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply CONS (iapply (iapply c_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply c_ y9) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) NIL))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply dart4u_diag3u_b y1) y2) y3) y4) y5) y6) y7) y8) y9))
(rule (iapply (iapply s_b_ (iapply FINITE (iapply FST r))) (iapply (iapply s_b_ (iapply (iapply permutes (iapply FST (iapply SND r))) (iapply FST r))) (iapply (iapply s_b_ (iapply (iapply permutes (iapply FST (iapply SND (iapply SND r)))) (iapply FST r))) (iapply (iapply s_b_ (iapply (iapply permutes (iapply SND (iapply SND (iapply SND r)))) (iapply FST r))) (iapply (iapply a_ (iapply (iapply o (iapply FST (iapply SND r))) (iapply (iapply o (iapply FST (iapply SND (iapply SND r)))) (iapply SND (iapply SND (iapply SND r)))))) I))))) (iapply (iapply a_ (iapply tupleu_hypermap (iapply hypermap0 r))) r))
(rule (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL u_0))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL u_0))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ q) (iapply NUMERAL u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ q) (iapply NUMERAL u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply a_ q) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply a_ q) (iapply NUMERAL u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply s_b_ (iapply (iapply a_ p) (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply a_ q) (iapply NUMERAL u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))) bnu_squanderTarget))))))))))))))) (iapply (iapply bnu_squanderVertex p) q))
(rule (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vc) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vc) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vb) vb))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vb) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vb) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vb) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vc) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vc) vb))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vb)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vb) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_div (iapply (iapply realu_sub (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ vc) vc))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot vc) vc)) vb)) (iapply (iapply r_ (iapply (iapply dot vb) vc)) vc)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply c_ p) q)) (iapply (iapply c_ (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))) (iapply NUMERAL u_0)))) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))))))) tgt))))))))))))))) (iapply (iapply bu_tame p) q))
(rule (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x23) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x45))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x24)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_pow x23) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x25)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_pow x23) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) x23)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x25)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) x45)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) x25)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) x24)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) x24)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) x23)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) x25)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) x23)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x13) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x45))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x13) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x25))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x13) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x24))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x25) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x24) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) x45)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) x24)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) x23)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) x25)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) x23)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x45)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x35)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x34)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x25)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x24)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) x23)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x12) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x45))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x12) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x35))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow x12) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x34))))))))))))))))))))))))))))))))))))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleytr x12) x13) x14) x15) x23) x24) x25) x34) x35) x45))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) e1))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) e3))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_add (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul b2) c2))) (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) e1))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) c2)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) c2)))))) e2)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) c2)) (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) c2)) (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) e3)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))) e1)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) b2)) e2)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e3)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) e2)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul c2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) e2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) e3)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) e3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) e3))) (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2))) e2)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e3))))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul a2) (iapply (iapply realu_mul (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) e3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) c2))) e2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) c2)) e3))))))) (iapply (iapply realu_mul c2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e2))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) c2)) e3)))))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply num2 e1) e2) e3) a2) b2) c2))
(rule (iapply (iapply realu_mul (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))) e1))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) e3))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))))) (iapply (iapply realu_add (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul b2) c2))) (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) e1))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) c2)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) c2)))))) e2)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) c2)) (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))) c2)) (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) e3))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) e1)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) b2)) e2)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e3))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))))))) (iapply (iapply realu_pow (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) e3))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul a2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) b2)) e2)) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e3)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow a2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) e2)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul c2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) e2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))) e3)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) e3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow c2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) e3))) (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2))) e2)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e3))))))))))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul a2) (iapply (iapply realu_mul (iapply (iapply realu_add b2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) c2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow b2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add e2) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) e3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul b2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) c2))) e2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) c2)) e3))))))) (iapply (iapply realu_mul c2) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))) e1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))))) c2)) e2))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))))) c2)) e3))))))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply numu_combo1 e1) e2) e3) a2) b2) c2))
(rule (iapply sqrt (iapply quadraticu_rootu_plus (iapply (iapply c_ (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_mul y6) y6)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_add (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y4) y4)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_add (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y4) y4))))))) (iapply (iapply c_ (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_mul y5) y5)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y8) y8)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_mul y6) y6)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_add (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y2) y2))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul y7) y7))) (iapply (iapply realu_add (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y8) y8))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y2) y2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y8) y8))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y8) y8)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_add (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_add (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9))))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y4) y4)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y4) y4)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_mul y4) y4)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y2) y2)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_mul y2) y2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y8) y8)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y8) y8))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9))))))))))))))))))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_mul y7) y7)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_mul y4) y4)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y3) y3))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y2) y2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y8) y8)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul y9) y9))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_mul y1) y1)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_mul y4) y4)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y9) y9))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y3) y3))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_pow (iapply (iapply realu_mul y3) y3)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply (iapply realu_mul y2) y2)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y8) y8))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_add (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul y9) y9)))))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_mul y2) y2)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9)))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul y8) y8))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_add (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9))))))))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y3) y3))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow (iapply (iapply realu_mul y8) y8)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y6) y6)) (iapply (iapply realu_pow (iapply (iapply realu_mul y9) y9)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_pow (iapply (iapply realu_mul y9) y9)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y8) y8))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9)))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul y9) y9)))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y7) y7)) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply (iapply realu_mul y4) y4)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y3) y3)))) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul y9) y9))))) (iapply (iapply realu_mul (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_add (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_add (iapply (iapply realu_mul y8) y8)) (iapply (iapply realu_add (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y9) y9)))))))))))))))))))))))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply enclosed y1) y2) y3) y4) y5) y6) y7) y8) y9))
(rule (iapply (iapply realu_add (iapply realu_neg (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x23))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x23))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x23))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x24))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x24)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x24)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x24))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x24))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x24))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x24))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x25)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x25))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x25))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x25)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x25))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x24) x25)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x25)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x25))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) x25))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x25))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x25))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x34))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x34)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x34))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x34))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x34)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x34))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x34))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x34))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x25) x34))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x25) x34)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x25) x34))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x25) x34))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x34))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x35))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x24) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x24) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x24) x35))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x24) x35))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x35))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x25) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x25) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x34) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x34) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x34) x35))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x34) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x34) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x35)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x35)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x35))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x35) x35))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x35) x35))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x35) x35))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x35) x35))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x35) x35))))) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x35) x35))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) x45))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x23) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x23) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x24) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x25) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x25) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x34) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x34) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x34) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x34) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x15) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x34) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x25) (iapply (iapply realu_mul x34) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x35) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x35) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x35) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x35) x45))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x35) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x14) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x35) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x35) x45)))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x35) x45)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x24) (iapply (iapply realu_mul x35) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x34) (iapply (iapply realu_mul x35) x45))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x45) x45))))) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x45) x45))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x45) x45))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x12) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x45) x45))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul x13) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x45) x45))))) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x23) (iapply (iapply realu_mul x45) x45))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply cayleyR x12) x13) x14) x15) x23) x24) x25) x34) x35) x45))
(rule (iapply (iapply IN x) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY))))) (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply b_s_ (iapply (iapply a_ x) b)) (iapply (iapply b_s_ (iapply (iapply a_ x) c)) (iapply (iapply a_ x) d)))))
(rule (iapply sqrt (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply ssqrt (iapply (iapply realu_add (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply (iapply vsum (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t) (iapply (iapply vectoru_add (iapply t (iapply NUMERAL (iapply BIT1 u_0)))) (iapply t (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply simplex n) EMPTY) (iapply (iapply a_ n) (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply product (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t) (iapply (iapply realu_mul (iapply t (iapply NUMERAL (iapply BIT1 u_0)))) (iapply t (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply sum (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) t) (iapply (iapply realu_add (iapply t (iapply NUMERAL (iapply BIT1 u_0)))) (iapply t (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply pathfinish g) (iapply g (iapply vec (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply complexu_pow x) (iapply NUMERAL u_0)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply matrixu_mul (iapply transp (iapply cofactor A0))) A0) (iapply (iapply r_r_ (iapply det A0)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply basis i0)) (iapply vec (iapply NUMERAL u_0))) (iapply w_ (iapply (iapply IN i0) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply dimindex UNIV)))))
(rule (iapply (iapply cproduct EMPTY) f) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply dot x) x) (iapply (iapply realu_pow (iapply vectoru_norm x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply vectoru_norm z)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot x) x)) (iapply w_ (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply (iapply matrixu_mul A0) (iapply transp (iapply cofactor A0))) (iapply (iapply r_r_ (iapply det A0)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply complexu_mul (iapply cexp (iapply vectoru_neg z))) (iapply cexp z)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply complexu_mul (iapply cexp z)) (iapply cexp (iapply vectoru_neg z))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply tupleu_hypermap H)) (iapply (iapply c_ D) (iapply (iapply c_ e) (iapply (iapply c_ n) f)))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply dart H)) D)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply edgeu_map H)) e)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply nodeu_map H)) n)) (iapply (iapply a_ (iapply faceu_map H)) f)))))
(rule (iapply (iapply IN (iapply inside s0)) (iapply components (iapply (iapply DIFF UNIV) s0))) (iapply (iapply s_b_ (iapply connected (iapply inside s0))) (iapply w_ (iapply (iapply a_ (iapply inside s0)) EMPTY))))
(rule (iapply (iapply IN (iapply outside s0)) (iapply components (iapply (iapply DIFF UNIV) s0))) (iapply (iapply s_b_ (iapply connected (iapply outside s0))) (iapply w_ (iapply (iapply a_ (iapply outside s0)) EMPTY))))
(rule (iapply (iapply a_ (iapply components s0)) (iapply (iapply INSERT s0) EMPTY)) (iapply (iapply s_b_ (iapply connected s0)) (iapply w_ (iapply (iapply a_ s0) EMPTY))))
(rule (iapply (iapply realu_add m) n) (iapply (iapply realu_add n) m))
(rule (iapply (iapply realu_mul m) n) (iapply (iapply realu_mul n) m))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x12 r) r) r) a) b) c) (iapply (iapply realu_mul c) (iapply (iapply realu_add b) (iapply (iapply realu_sub a) c))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply delta r) r) r) a) b) c) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_neg a)) (iapply (iapply realu_mul b) c))) (iapply (iapply realu_mul r) (iapply (iapply (iapply upsu_x a) b) c))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x13 r) r) r) a) b) c) (iapply (iapply realu_mul b) (iapply (iapply realu_add c) (iapply (iapply realu_sub a) b))))
(rule (iapply (iapply IMAGE lift) (iapply openu_realu_interval (iapply (iapply c_ a) b))) (iapply openu_interval (iapply (iapply c_ (iapply lift a)) (iapply lift b))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x14 r) r) r) a) b) c) (iapply (iapply realu_mul a) (iapply (iapply realu_add c) (iapply (iapply realu_sub b) a))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_x14 r) r) r) a) b) c) (iapply (iapply realu_mul a) (iapply (iapply realu_add b) (iapply (iapply realu_sub c) a))))
(rule (iapply (iapply s_b_ p) (iapply (iapply s_b_ q) r)) (iapply (iapply s_b_ q) (iapply (iapply s_b_ p) r)))
(rule (iapply (iapply s_b_ (iapply (iapply s_b_ p) q)) r) (iapply (iapply s_b_ p) (iapply (iapply s_b_ q) r)))
(rule (iapply (iapply b_s_ p) (iapply (iapply b_s_ q) r)) (iapply (iapply b_s_ q) (iapply (iapply b_s_ p) r)))
(rule (iapply (iapply b_s_ (iapply (iapply b_s_ p) q)) r) (iapply (iapply b_s_ p) (iapply (iapply b_s_ q) r)))
(rule (iapply (iapply a_a_g_ (iapply (iapply s_b_ p) q)) r) (iapply (iapply a_a_g_ p) (iapply (iapply a_a_g_ q) r)))
(rule (iapply (iapply a_a_g_ (iapply (iapply s_b_ p) q)) r) (iapply (iapply a_a_g_ q) (iapply (iapply a_a_g_ p) r)))
(rule (iapply (iapply o_o_ n) n) (iapply (iapply INSERT n) EMPTY))
(rule (iapply (iapply simplex (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) s0) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ (iapply affu_dim s0)) (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ (iapply affu_dim s0)) (iapply intu_ofu_num (iapply dimindex UNIV))) (iapply (iapply a_ (iapply (iapply hull affine) s0)) UNIV))
(rule (iapply (iapply divisionu_of EMPTY) s0) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply SUBSET UNIV) s0) (iapply (iapply a_ s0) UNIV))
(rule (iapply (iapply homeomorphic EMPTY) s0) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply homeomorphic s0) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply divisionu_of s0) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply dimindex s0) (iapply dimindex UNIV))
(rule (iapply (iapply a_ (iapply LENGTH l)) (iapply NUMERAL u_0)) (iapply (iapply a_ l) NIL))
(rule (iapply (iapply a_u_c s0) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply HASu_SIZE s0) (iapply NUMERAL u_0)) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply l_a_u_c s0) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply a_ (iapply dim s0)) (iapply dimindex UNIV)) (iapply (iapply a_ (iapply span s0)) UNIV))
(rule (iapply (iapply faceu_of s0) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply SUBSET s0) EMPTY) (iapply (iapply a_ s0) EMPTY))
(rule (iapply (iapply affu_ge V) EMPTY) (iapply (iapply affu_gt V) EMPTY))
(rule (iapply (iapply vectoru_add (iapply cnj z)) z) (iapply Cx (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply Re z))))
(rule (iapply (iapply vectoru_add z) (iapply cnj z)) (iapply Cx (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply Re z))))
(rule (iapply (iapply vectoru_angle x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))) (iapply acs (iapply (iapply realu_div (iapply Re x)) (iapply vectoru_norm x))))
(rule (iapply P (iapply (iapply (iapply COND c) x) y)) (iapply (iapply s_b_ (iapply (iapply a_a_g_ c) (iapply P x))) (iapply (iapply a_a_g_ (iapply w_ c)) (iapply P y))))
(rule (iapply (iapply (iapply arcV v0) vc) vb) (iapply (iapply (iapply arcV v0) vb) vc))
(rule (iapply (iapply (iapply MAP2 f) (iapply (iapply CONS h1) t1)) (iapply (iapply CONS h2) t2)) (iapply (iapply CONS (iapply (iapply f h1) h2)) (iapply (iapply (iapply MAP2 f) t1) t2)))
(rule (iapply (iapply (iapply ALL2 P) (iapply (iapply CONS h1) t1)) l2) (iapply (iapply (iapply COND (iapply (iapply a_ l2) NIL)) F) (iapply (iapply s_b_ (iapply (iapply P h1) (iapply HD l2))) (iapply (iapply (iapply ALL2 P) t1) (iapply TL l2)))))
(rule (iapply (iapply (iapply ALL2 P) (iapply (iapply CONS h1) t1)) (iapply (iapply CONS h2) t2)) (iapply (iapply s_b_ (iapply (iapply P h1) h2)) (iapply (iapply (iapply ALL2 P) t1) t2)))
(rule (iapply (iapply IN r) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply dimindex UNIV))) (iapply (iapply a_ (iapply destu_finiteu_image (iapply finiteu_index r))) r))
(rule (iapply (iapply IN r) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply p_ (iapply dimindex UNIV)) (iapply dimindex UNIV)))) (iapply (iapply a_ (iapply destu_finiteu_sum (iapply mku_finiteu_sum r))) r))
(rule (iapply (iapply IN r) (iapply (iapply o_o_ (iapply NUMERAL (iapply BIT1 u_0))) (iapply (iapply t_ (iapply dimindex UNIV)) (iapply dimindex UNIV)))) (iapply (iapply a_ (iapply destu_finiteu_product (iapply mku_finiteu_product r))) r))
(rule (iapply (iapply t_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) n) (iapply (iapply p_ n) n))
(rule (iapply (iapply EXP n) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply t_ n) n))
(rule (iapply (iapply MEM x) (iapply (iapply CONS h) t)) (iapply (iapply b_s_ (iapply (iapply a_ x) h)) (iapply (iapply MEM x) t)))
(rule u_FALSITYu_ F)
(rule (iapply (iapply EX P) (iapply (iapply CONS h) t)) (iapply (iapply b_s_ (iapply P h)) (iapply (iapply EX P) t)))
(rule (iapply (iapply ALL P) (iapply (iapply CONS h) t)) (iapply (iapply s_b_ (iapply P h)) (iapply (iapply ALL P) t)))
(rule (iapply (iapply (iapply (iapply ITLIST2 f) (iapply (iapply CONS h1) t1)) (iapply (iapply CONS h2) t2)) b) (iapply (iapply (iapply f h1) h2) (iapply (iapply (iapply (iapply ITLIST2 f) t1) t2) b)))
(rule (iapply (iapply (iapply (iapply (iapply FINREC f) b) s0) a) (iapply NUMERAL u_0)) (iapply (iapply s_b_ (iapply (iapply a_ s0) EMPTY)) (iapply (iapply a_ a) b)))
(rule (iapply (iapply complexu_pow ii) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply vectoru_neg (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply (iapply arcV u) v) u) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply (iapply arcV u) u) v) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply hrealu_add m) (iapply (iapply hrealu_add n) p)) (iapply (iapply hrealu_add n) (iapply (iapply hrealu_add m) p)))
(rule (iapply (iapply hrealu_add (iapply (iapply hrealu_add m) n)) p) (iapply (iapply hrealu_add m) (iapply (iapply hrealu_add n) p)))
(rule (iapply (iapply (iapply lifted op) (iapply SOME x)) (iapply SOME y)) (iapply SOME (iapply (iapply op x) y)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply delta (iapply (iapply realu_sub a01) h)) (iapply (iapply realu_sub a02) h)) (iapply (iapply realu_sub a03) h)) x12) x13) x23) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply delta a01) a02) a03) x12) x13) x23)) (iapply (iapply realu_mul h) (iapply (iapply (iapply upsu_x x12) x13) x23))))
(rule (iapply Cx (iapply realu_neg x)) (iapply vectoru_neg (iapply Cx x)))
(rule (iapply w_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_abs x)))
(rule (iapply tan (iapply realu_neg x)) (iapply realu_neg (iapply tan x)))
(rule (iapply realu_abs (iapply realu_inv x)) (iapply realu_inv (iapply realu_abs x)))
(rule (iapply Cx (iapply sin x)) (iapply csin (iapply Cx x)))
(rule (iapply Cx (iapply tan x)) (iapply ctan (iapply Cx x)))
(rule (iapply realu_sgn (iapply realu_neg x)) (iapply realu_neg (iapply realu_sgn x)))
(rule (iapply realu_inv (iapply realu_neg x)) (iapply realu_neg (iapply realu_inv x)))
(rule (iapply realu_abs (iapply realu_sgn x)) (iapply realu_sgn (iapply realu_abs x)))
(rule (iapply Cx (iapply atn x)) (iapply catn (iapply Cx x)))
(rule (iapply exp (iapply realu_neg x)) (iapply realu_inv (iapply exp x)))
(rule (iapply realu_abs (iapply atn x)) (iapply atn (iapply realu_abs x)))
(rule (iapply Cx (iapply cos x)) (iapply ccos (iapply Cx x)))
(rule (iapply sin (iapply realu_neg x)) (iapply realu_neg (iapply sin x)))
(rule (iapply Cx (iapply exp x)) (iapply cexp (iapply Cx x)))
(rule (iapply lift (iapply realu_neg x)) (iapply vectoru_neg (iapply lift x)))
(rule (iapply Cx (iapply realu_inv x)) (iapply complexu_inv (iapply Cx x)))
(rule (iapply atn (iapply realu_neg x)) (iapply realu_neg (iapply atn x)))
(rule (iapply (iapply realu_sub a) (iapply (iapply realu_sub b) c)) (iapply (iapply realu_add (iapply (iapply realu_sub a) b)) c))
(rule (iapply (iapply realu_sub a) (iapply (iapply realu_add b) c)) (iapply (iapply realu_sub (iapply (iapply realu_sub a) b)) c))
(rule (iapply mku_hreal (iapply naddu_eq (iapply naddu_inv x))) (iapply hrealu_inv (iapply mku_hreal (iapply naddu_eq x))))
(rule (iapply (iapply a_ (iapply intu_abs x)) x) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply intu_le (iapply intu_neg x)) x) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x) (iapply (iapply a_ (iapply intu_ofu_num (iapply numu_ofu_int x))) x))
(rule (iapply (iapply intu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply intu_mul x) x))
(rule (iapply setu_ofu_list (iapply (iapply CONS h) t)) (iapply (iapply INSERT h) (iapply setu_ofu_list t)))
(rule (iapply bnu_concat (iapply (iapply CONS x) xs)) (iapply (iapply APPEND x) (iapply bnu_concat xs)))
(rule (iapply (iapply IN x) (iapply (iapply UNION A0) B0)) (iapply (iapply b_s_ (iapply (iapply IN x) A0)) (iapply (iapply IN x) B0)))
(rule (iapply (iapply IMAGE f) (iapply (iapply INSERT x) s0)) (iapply (iapply INSERT (iapply f x)) (iapply (iapply IMAGE f) s0)))
(rule (iapply TC (iapply INV R)) (iapply INV (iapply TC R)))
(rule (iapply (iapply INSERT x) (iapply (iapply INSERT y) s0)) (iapply (iapply INSERT y) (iapply (iapply INSERT x) s0)))
(rule (iapply RSTC (iapply INV R)) (iapply INV (iapply RSTC R)))
(rule (iapply (iapply SUBSET (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) s0) (iapply (iapply s_b_ (iapply (iapply IN a) s0)) (iapply (iapply IN b) s0)))
(rule (iapply (iapply cross (iapply (iapply vectoru_sub b) a)) (iapply (iapply vectoru_sub c) d)) (iapply (iapply cross (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub d) c)))
(rule (iapply (iapply IN (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) E) (iapply (iapply IN (iapply (iapply c_ a) b)) (iapply ordu_pairs E)))
(rule (iapply RTC (iapply INV R)) (iapply INV (iapply RTC R)))
(rule (iapply (iapply SUBSET (iapply (iapply INSERT a) s0)) ss) (iapply (iapply s_b_ (iapply (iapply IN a) ss)) (iapply (iapply SUBSET s0) ss)))
(rule (iapply (iapply UNION (iapply (iapply INSERT x) S)) U) (iapply (iapply UNION S) (iapply (iapply INSERT x) U)))
(rule (iapply SC (iapply INV R)) (iapply INV (iapply SC R)))
(rule (iapply STC (iapply INV R)) (iapply INV (iapply STC R)))
(rule (iapply INTERS (iapply (iapply INSERT s0) u)) (iapply (iapply INTER s0) (iapply INTERS u)))
(rule (iapply UNIONS (iapply (iapply INSERT s0) u)) (iapply (iapply UNION s0) (iapply UNIONS u)))
(rule (iapply (iapply UNION p) (iapply (iapply UNION q) r)) (iapply (iapply UNION q) (iapply (iapply UNION p) r)))
(rule (iapply (iapply UNION (iapply (iapply UNION p) q)) r) (iapply (iapply UNION p) (iapply (iapply UNION q) r)))
(rule (iapply (iapply INTER p) (iapply (iapply INTER q) r)) (iapply (iapply INTER q) (iapply (iapply INTER p) r)))
(rule (iapply (iapply INTER (iapply (iapply INTER p) q)) r) (iapply (iapply INTER p) (iapply (iapply INTER q) r)))
(rule (iapply (iapply vectoru_add m) (iapply (iapply vectoru_add n) p)) (iapply (iapply vectoru_add n) (iapply (iapply vectoru_add m) p)))
(rule (iapply (iapply vectoru_add (iapply (iapply vectoru_add m) n)) p) (iapply (iapply vectoru_add m) (iapply (iapply vectoru_add n) p)))
(rule (iapply RSC (iapply INV R)) (iapply INV (iapply RSC R)))
(rule (iapply (iapply complexu_mul m) (iapply (iapply complexu_mul n) p)) (iapply (iapply complexu_mul n) (iapply (iapply complexu_mul m) p)))
(rule (iapply (iapply complexu_mul (iapply (iapply complexu_mul m) n)) p) (iapply (iapply complexu_mul m) (iapply (iapply complexu_mul n) p)))
(rule (iapply RC (iapply INV R)) (iapply INV (iapply RC R)))
(rule (iapply (iapply matrixu_add A0) (iapply (iapply matrixu_add B0) C0)) (iapply (iapply matrixu_add B0) (iapply (iapply matrixu_add A0) C0)))
(rule (iapply (iapply matrixu_add (iapply (iapply matrixu_add A0) B0)) C0) (iapply (iapply matrixu_add A0) (iapply (iapply matrixu_add B0) C0)))
(rule (iapply (iapply r_ c) (iapply vectoru_neg x)) (iapply vectoru_neg (iapply (iapply r_ c) x)))
(rule (iapply vectoru_norm (iapply (iapply vectoru_sub x) y)) (iapply vectoru_norm (iapply (iapply vectoru_sub y) x)))
(rule (iapply (iapply projection e) (iapply (iapply r_ t) x)) (iapply (iapply r_ t) (iapply (iapply projection e) x)))
(rule (iapply (iapply vectoru_add a) (iapply (iapply vectoru_add b) c)) (iapply (iapply vectoru_add c) (iapply (iapply vectoru_add b) a)))
(rule (iapply ssqrt (iapply realu_ofu_num n)) (iapply sqrt (iapply realu_ofu_num n)))
(rule (iapply PRE (iapply NUMERAL n)) (iapply NUMERAL (iapply PRE n)))
(rule (iapply SUC (iapply BIT1 n)) (iapply BIT0 (iapply SUC n)))
(rule (iapply SUC (iapply NUMERAL n)) (iapply NUMERAL (iapply SUC n)))
(rule (iapply EVEN (iapply SUC n)) (iapply w_ (iapply EVEN n)))
(rule (iapply ODD (iapply SUC n)) (iapply w_ (iapply ODD n)))
(rule (iapply (iapply (iapply ITLIST f) (iapply (iapply APPEND l) (iapply (iapply CONS a) NIL))) b) (iapply (iapply (iapply ITLIST f) l) (iapply (iapply f a) b)))
(rule (iapply (iapply POWER f) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply o f) f))
(rule (iapply isu_interval s0) (iapply convex s0))
(rule (iapply connected s0) (iapply convex s0))
(rule (iapply tameu_5a H) (iapply isu_nou_doubleu_joints H))
(rule (iapply Vu_SY v) (iapply rows v))
(rule (iapply conv0u_2 s0) (iapply conv0 s0))
(rule (iapply (iapply complexu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply complexu_mul x) x))
(rule (iapply map1 x) (iapply ccube x))
(rule (iapply convex s0) (iapply connected s0))
(rule (iapply (iapply a_ s0) EMPTY) (iapply (iapply DISJOINT s0) s0))
(rule (iapply (iapply realu_pow (iapply vectoru_norm x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply dot x) x))
(rule (iapply part0 u) (iapply FST u))
(rule (iapply complete s0) (iapply closed s0))
(rule (iapply isu_interval s0) (iapply connected s0))
(rule (iapply GABS P) (iapply h_ P))
(rule (iapply drop0 u) (iapply SND u))
(rule (iapply (iapply hull convex) s0) (iapply (iapply affu_ge EMPTY) s0))
(rule (iapply tameu_3 H) (iapply isu_edgeu_nondegenerate H))
(rule (iapply tameu_4 H) (iapply nou_loops H))
(rule (iapply (iapply POWER f) n) (iapply (iapply ITER n) f))
(rule (iapply (iapply EL n) (iapply TL l)) (iapply (iapply EL (iapply (iapply p_ n) (iapply NUMERAL (iapply BIT1 u_0)))) l))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) x) (iapply (iapply vectoru_add x) x))
(rule (iapply bnu_triangle (iapply (iapply c_ vs) f)) (iapply (iapply a_ (iapply LENGTH vs)) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) y)) y) (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) y)) x) (iapply (iapply a_ y) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply affu_dim (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply a_ (iapply realu_abs (iapply (iapply dot x) y))) (iapply (iapply realu_mul (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY)))))
(rule (iapply (iapply a_ (iapply (iapply r_ a) x)) (iapply vec (iapply NUMERAL u_0))) (iapply (iapply b_s_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply vectoru_norm (iapply (iapply pastecart x) y)) (iapply sqrt (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ w) (iapply vec (iapply NUMERAL u_0))))) (iapply w_ (iapply (iapply IN v1) (iapply aff (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT w) EMPTY)))))) (iapply w_ (iapply (iapply a_ (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot w) w)) v1)) (iapply (iapply r_ (iapply (iapply dot v1) w)) w))) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply realu_pow (iapply (iapply dot x) y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply dot x) x)) (iapply (iapply dot y) y))) (iapply collinear (iapply (iapply INSERT (iapply vec (iapply NUMERAL u_0))) (iapply (iapply INSERT x) (iapply (iapply INSERT y) EMPTY)))))
(rule (iapply measure (iapply UNIONS (iapply setu_ofu_cube (iapply (iapply intu_ball x) r)))) (iapply realu_ofu_num (iapply CARD (iapply setu_ofu_cube (iapply (iapply intu_ball x) r)))))
(rule (iapply (iapply a_ (iapply (iapply matrixu_mul A0) Ai_)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply a_ (iapply (iapply matrixu_mul Ai_) A0)) (iapply mat (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply sign (iapply swap (iapply (iapply c_ a) b))) (iapply (iapply (iapply COND (iapply (iapply a_ a) b)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_neg (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply intu_pow (iapply intu_neg (iapply intu_ofu_num x))) (iapply NUMERAL (iapply BIT1 n))) (iapply intu_neg (iapply (iapply intu_pow (iapply intu_ofu_num x)) (iapply NUMERAL (iapply BIT1 n)))))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm v1)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm v2)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_add v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_sub v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply realu_measure (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply realu_max (iapply (iapply realu_sub b) a)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply intu_add x) y)) x) (iapply (iapply a_ y) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply hasu_integral f) i0) EMPTY) (iapply (iapply a_ i0) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply realu_add x) y)) y) (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)) (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))))
(rule (iapply (iapply a_ (iapply (iapply realu_add x) y)) x) (iapply (iapply a_ y) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply CARD (iapply (iapply o_o_ m) (iapply (iapply p_ m) d))) (iapply (iapply p_ d) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v0) v1) w1) w2)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v0) v1) w2) w1)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply intu_add x) y)) y) (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply cross x) y)) y) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply (iapply cross x) y)) x) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply hasu_realu_integral f) i0) EMPTY) (iapply (iapply a_ i0) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply measure (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))))
(rule (iapply (iapply a_ (iapply (iapply realu_div a) b)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply realu_mul a) b)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply m_ (iapply BIT0 m)) (iapply BIT1 n)) (iapply PRE (iapply BIT0 (iapply (iapply m_ m) n))))
(rule (iapply (iapply t_ (iapply BIT0 m)) (iapply BIT0 n)) (iapply BIT0 (iapply BIT0 (iapply (iapply t_ m) n))))
(rule (iapply (iapply p_ (iapply BIT1 m)) (iapply BIT1 n)) (iapply BIT0 (iapply SUC (iapply (iapply p_ m) n))))
(rule (iapply (iapply intu_add (iapply intu_neg (iapply intu_ofu_num x))) (iapply intu_ofu_num y)) (iapply (iapply intu_add (iapply intu_ofu_num y)) (iapply intu_neg (iapply intu_ofu_num x))))
(rule (iapply (iapply t_ (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply binom (iapply (iapply c_ (iapply (iapply p_ p) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply t_ (iapply (iapply p_ p) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply binom (iapply (iapply c_ p) k))))
(rule (iapply interior (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply (iapply COND (iapply (iapply l_a_ (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply dimindex UNIV))) EMPTY) (iapply openu_segment (iapply (iapply c_ a) b))))
(rule (iapply (iapply IMAGE realu_neg) (iapply openu_realu_interval (iapply (iapply c_ a) b))) (iapply openu_realu_interval (iapply (iapply c_ (iapply realu_neg b)) (iapply realu_neg a))))
(rule (iapply (iapply t_ (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply binom (iapply (iapply c_ n) (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))))) (iapply (iapply t_ (iapply (iapply m_ n) k)) (iapply binom (iapply (iapply c_ n) k))))
(rule (iapply (iapply IN b) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply w_ (iapply (iapply a_ (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)))
(rule (iapply (iapply IN a) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply w_ (iapply (iapply a_ (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)))
(rule (iapply (iapply a_ (iapply (iapply p_ m) n)) m) (iapply (iapply a_ n) (iapply NUMERAL u_0)))
(rule (iapply (iapply dot (iapply (iapply projection d) v)) d) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ b) a)) NIL)))
(rule (iapply (iapply IN b) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply w_ (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)))
(rule (iapply (iapply IN a) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply w_ (iapply (iapply a_ (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) EMPTY)))
(rule (iapply (iapply IMAGE realu_neg) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply realu_neg b)) (iapply realu_neg a))) NIL)))
(rule (iapply (iapply a_ (iapply (iapply APPEND l) m)) NIL) (iapply (iapply s_b_ (iapply (iapply a_ l) NIL)) (iapply (iapply a_ m) NIL)))
(rule (iapply (iapply a_ (iapply (iapply p_ m) n)) n) (iapply (iapply a_ m) (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ (iapply (iapply UNION s0) t)) EMPTY) (iapply (iapply s_b_ (iapply (iapply a_ s0) EMPTY)) (iapply (iapply a_ t) EMPTY)))
(rule (iapply (iapply (iapply (iapply azim v) v) w1) w2) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply a_ (iapply (iapply CROSS s0) t)) EMPTY) (iapply (iapply b_s_ (iapply (iapply a_ s0) EMPTY)) (iapply (iapply a_ t) EMPTY)))
(rule (iapply (iapply dot (iapply (iapply cross y) x)) y) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply dot (iapply (iapply cross x) y)) y) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply dot x) (iapply (iapply cross y) x)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply dot x) (iapply (iapply cross x) y)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_lt (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply vectoru_sub b) a)) x)))
(rule (iapply columnvector (iapply (iapply matrixu_vectoru_mul A0) v)) (iapply (iapply matrixu_mul A0) (iapply columnvector v)))
(rule (iapply openu_segment (iapply (iapply c_ a) b)) (iapply openu_segment (iapply (iapply c_ b) a)))
(rule (iapply (iapply complexu_mul x) (iapply vectoru_neg y)) (iapply vectoru_neg (iapply (iapply complexu_mul x) y)))
(rule (iapply intu_neg (iapply (iapply intu_mul x) y)) (iapply (iapply intu_mul x) (iapply intu_neg y)))
(rule (iapply (iapply rpow x) (iapply realu_neg y)) (iapply realu_inv (iapply (iapply rpow x) y)))
(rule (iapply COUNTABLE (iapply (iapply UNION s0) t)) (iapply (iapply s_b_ (iapply COUNTABLE s0)) (iapply COUNTABLE t)))
(rule (iapply (iapply projection d) (iapply vectoru_neg v)) (iapply vectoru_neg (iapply (iapply projection d) v)))
(rule (iapply (iapply a_ (iapply realu_neg x)) y) (iapply (iapply a_ x) (iapply realu_neg y)))
(rule (iapply Im (iapply (iapply r_ a) z)) (iapply (iapply realu_mul a) (iapply Im z)))
(rule (iapply (iapply cross (iapply vectoru_neg x)) y) (iapply vectoru_neg (iapply (iapply cross x) y)))
(rule (iapply (iapply m_ m) (iapply SUC n)) (iapply PRE (iapply (iapply m_ m) n)))
(rule (iapply realu_neg (iapply (iapply realu_mul x) y)) (iapply (iapply realu_mul x) (iapply realu_neg y)))
(rule (iapply (iapply a_ (iapply intu_neg x)) y) (iapply (iapply a_ x) (iapply intu_neg y)))
(rule (iapply measure (iapply (iapply voronoiu_closed s0) v)) (iapply measure (iapply (iapply voronoiu_open s0) v)))
(rule (iapply (iapply cross x) (iapply vectoru_neg y)) (iapply vectoru_neg (iapply (iapply cross x) y)))
(rule (iapply (iapply complexu_mul (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub (iapply (iapply complexu_mul x) x)) (iapply (iapply complexu_mul y) y)))
(rule (iapply transp (iapply (iapply r_r_ c) A0)) (iapply (iapply r_r_ c) (iapply transp A0)))
(rule (iapply interior (iapply (iapply voronoiu_closed S) v)) (iapply interior (iapply (iapply voronoiu_open S) v)))
(rule (iapply (iapply (iapply netord atu_infinity) x) y) (iapply (iapply realu_ge (iapply vectoru_norm x)) (iapply vectoru_norm y)))
(rule (iapply REVERSE (iapply (iapply MAP f) l)) (iapply (iapply MAP f) (iapply REVERSE l)))
(rule (iapply (iapply vectoru_sub (iapply vectoru_neg x)) y) (iapply vectoru_neg (iapply (iapply vectoru_add x) y)))
(rule (iapply infnorm (iapply (iapply r_ a) x)) (iapply (iapply realu_mul (iapply realu_abs a)) (iapply infnorm x)))
(rule (iapply negligible (iapply (iapply UNION s0) t)) (iapply (iapply s_b_ (iapply negligible s0)) (iapply negligible t)))
(rule (iapply distance (iapply (iapply c_ x) y)) (iapply distance (iapply (iapply c_ y) x)))
(rule (iapply (iapply o f) (iapply reversepath p)) (iapply reversepath (iapply (iapply o f) p)))
(rule (iapply (iapply vectoru_angle (iapply vectoru_neg x)) y) (iapply (iapply realu_sub pi) (iapply (iapply vectoru_angle x) y)))
(rule (iapply trace (iapply (iapply matrixu_sub A0) B0)) (iapply (iapply realu_sub (iapply trace A0)) (iapply trace B0)))
(rule (iapply (iapply p_ m) (iapply SUC n)) (iapply SUC (iapply (iapply p_ m) n)))
(rule (iapply (iapply p_ (iapply SUC m)) n) (iapply SUC (iapply (iapply p_ m) n)))
(rule (iapply midpoint (iapply (iapply c_ a) b)) (iapply midpoint (iapply (iapply c_ b) a)))
(rule (iapply (iapply vectoru_angle x) (iapply vectoru_neg y)) (iapply (iapply realu_sub pi) (iapply (iapply vectoru_angle x) y)))
(rule (iapply Re (iapply (iapply r_ a) z)) (iapply (iapply realu_mul a) (iapply Re z)))
(rule (iapply vectoru_neg (iapply (iapply complexu_mul x) y)) (iapply (iapply complexu_mul x) (iapply vectoru_neg y)))
(rule (iapply infnorm (iapply (iapply vectoru_sub x) y)) (iapply infnorm (iapply (iapply vectoru_sub y) x)))
(rule (iapply sndcart (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub (iapply sndcart x)) (iapply sndcart y)))
(rule (iapply pathu_image (iapply (iapply o f) p)) (iapply (iapply IMAGE f) (iapply pathu_image p)))
(rule (iapply (iapply a_ (iapply vectoru_neg x)) y) (iapply (iapply a_ x) (iapply vectoru_neg y)))
(rule (iapply (iapply IN (iapply (iapply pastecart x) (iapply lift y))) (iapply (iapply epigraph s0) f)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply (iapply realu_le (iapply f x)) y)))
(rule (iapply (iapply intu_mul (iapply intu_neg x)) y) (iapply intu_neg (iapply (iapply intu_mul x) y)))
(rule (iapply realu_abs (iapply (iapply realu_sub x) y)) (iapply realu_abs (iapply (iapply realu_sub y) x)))
(rule (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ a) b))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub a) b)))
(rule (iapply w_ (iapply (iapply a_a_g_ t1) t2)) (iapply (iapply s_b_ t1) (iapply w_ t2)))
(rule (iapply LENGTH (iapply (iapply APPEND l) m)) (iapply (iapply p_ (iapply LENGTH l)) (iapply LENGTH m)))
(rule (iapply fstcart (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub (iapply fstcart x)) (iapply fstcart y)))
(rule (iapply (iapply realu_mul (iapply realu_neg x)) y) (iapply realu_neg (iapply (iapply realu_mul x) y)))
(rule (iapply lift (iapply (iapply realu_mul c) x)) (iapply (iapply r_ c) (iapply lift x)))
(rule (iapply (iapply s_b_ (iapply (iapply convexu_on f) s0)) (iapply convex s0)) (iapply convex (iapply (iapply epigraph s0) f)))
(rule (iapply (iapply a_ (iapply vectoru_norm (iapply (iapply vectoru_add x) y))) (iapply (iapply realu_add (iapply vectoru_norm x)) (iapply vectoru_norm y))) (iapply (iapply a_ (iapply (iapply r_ (iapply vectoru_norm x)) y)) (iapply (iapply r_ (iapply vectoru_norm y)) x)))
(rule (iapply drop (iapply (iapply r_ c) x)) (iapply (iapply realu_mul c) (iapply drop x)))
(rule (iapply (iapply intu_mul x) (iapply intu_neg y)) (iapply intu_neg (iapply (iapply intu_mul x) y)))
(rule (iapply intu_abs (iapply (iapply intu_sub x) y)) (iapply intu_abs (iapply (iapply intu_sub y) x)))
(rule (iapply (iapply realu_pow (iapply realu_inv x)) n) (iapply realu_inv (iapply (iapply realu_pow x) n)))
(rule (iapply trace (iapply (iapply matrixu_mul A0) B0)) (iapply trace (iapply (iapply matrixu_mul B0) A0)))
(rule (iapply trace (iapply (iapply matrixu_add A0) B0)) (iapply (iapply realu_add (iapply trace A0)) (iapply trace B0)))
(rule (iapply pathfinish (iapply (iapply o f) p)) (iapply f (iapply pathfinish p)))
(rule (iapply det (iapply (iapply matrixu_mul A0) B0)) (iapply (iapply realu_mul (iapply det A0)) (iapply det B0)))
(rule (iapply FINITE (iapply (iapply UNION s0) t)) (iapply (iapply s_b_ (iapply FINITE s0)) (iapply FINITE t)))
(rule (iapply (iapply realu_mul x) (iapply realu_neg y)) (iapply realu_neg (iapply (iapply realu_mul x) y)))
(rule (iapply bnu_nextVertex (iapply (iapply c_ vs) f)) (iapply (iapply bnu_nextElem vs) (iapply HD vs)))
(rule (iapply setu_ofu_list (iapply (iapply MAP f) l)) (iapply (iapply IMAGE f) (iapply setu_ofu_list l)))
(rule (iapply midpoint (iapply (iapply c_ a) b)) (iapply (iapply r_ (iapply realu_inv (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply vectoru_add a) b)))
(rule (iapply bounded (iapply (iapply UNION s0) t)) (iapply (iapply s_b_ (iapply bounded s0)) (iapply bounded t)))
(rule (iapply vectoru_norm (iapply (iapply r_ a) x)) (iapply (iapply realu_mul (iapply realu_abs a)) (iapply vectoru_norm x)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_add x) y)) (iapply (iapply realu_sub x) y)) (iapply (iapply realu_sub (iapply (iapply realu_mul x) x)) (iapply (iapply realu_mul y) y)))
(rule (iapply sndcart (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_add (iapply sndcart x)) (iapply sndcart y)))
(rule (iapply (iapply complexu_pow (iapply complexu_inv x)) n) (iapply complexu_inv (iapply (iapply complexu_pow x) n)))
(rule (iapply (iapply realu_pow (iapply realu_ofu_num x)) n) (iapply realu_ofu_num (iapply (iapply EXP x) n)))
(rule (iapply setdist (iapply (iapply c_ s0) t)) (iapply setdist (iapply (iapply c_ t) s0)))
(rule (iapply (iapply intu_sub (iapply intu_neg x)) y) (iapply intu_neg (iapply (iapply intu_add x) y)))
(rule (iapply (iapply intu_pow (iapply intu_ofu_num x)) n) (iapply intu_ofu_num (iapply (iapply EXP x) n)))
(rule (iapply FINITE (iapply (iapply p_u_c s0) t)) (iapply (iapply s_b_ (iapply FINITE s0)) (iapply FINITE t)))
(rule (iapply (iapply cpow w) (iapply vectoru_neg z)) (iapply complexu_inv (iapply (iapply cpow w) z)))
(rule (iapply FINITE (iapply openu_interval (iapply (iapply c_ a) b))) (iapply (iapply realu_le (iapply drop b)) (iapply drop a)))
(rule (iapply (iapply intu_mul (iapply (iapply intu_add x) y)) (iapply (iapply intu_sub x) y)) (iapply (iapply intu_sub (iapply (iapply intu_mul x) x)) (iapply (iapply intu_mul y) y)))
(rule (iapply fstcart (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_add (iapply fstcart x)) (iapply fstcart y)))
(rule (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_div a) b)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul a) b)))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_div a) b)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply realu_mul a) b)))
(rule (iapply (iapply rpow (iapply realu_inv x)) y) (iapply realu_inv (iapply (iapply rpow x) y)))
(rule (iapply pathstart (iapply (iapply o f) p)) (iapply f (iapply pathstart p)))
(rule (iapply (iapply realu_sub (iapply realu_neg x)) y) (iapply realu_neg (iapply (iapply realu_add x) y)))
(rule (iapply (iapply complexu_mul (iapply vectoru_neg x)) y) (iapply vectoru_neg (iapply (iapply complexu_mul x) y)))
(rule (iapply (iapply (iapply mirror H) x) (iapply NUMERAL u_0)) (iapply (iapply nodeu_contour H) (iapply (iapply nodeu_map H) x)))
(rule (iapply swap (iapply (iapply c_ a) b)) (iapply swap (iapply (iapply c_ b) a)))
(rule (iapply (iapply (iapply ITER (iapply SUC n)) f) x) (iapply f (iapply (iapply (iapply ITER n) f) x)))
(rule (iapply (iapply mcell4 V) ul) (iapply (iapply (iapply COND (iapply (iapply realu_lt (iapply hl ul)) (iapply sqrt (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply hull convex) (iapply setu_ofu_list ul))) EMPTY))
(rule (iapply (iapply a_ (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply interior (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) EMPTY))
(rule (iapply intu_neg (iapply (iapply intu_mul x) y)) (iapply (iapply intu_mul (iapply intu_neg x)) y))
(rule (iapply (iapply s_b_ t1) t2) (iapply (iapply s_b_ t2) t1))
(rule (iapply (iapply b_s_ t1) t2) (iapply (iapply b_s_ t2) t1))
(rule (iapply realu_neg (iapply (iapply realu_mul x) y)) (iapply (iapply realu_mul (iapply realu_neg x)) y))
(rule (iapply Cx (iapply (iapply realu_pow x) n)) (iapply (iapply complexu_pow (iapply Cx x)) n))
(rule (iapply (iapply g_a_ m) n) (iapply (iapply l_a_ n) m))
(rule (iapply (iapply g_ m) n) (iapply (iapply l_ n) m))
(rule (iapply vectoru_norm (iapply (iapply complexu_pow z) n)) (iapply (iapply realu_pow (iapply vectoru_norm z)) n))
(rule (iapply (iapply hrealu_add x) y) (iapply (iapply hrealu_add y) x))
(rule (iapply (iapply IN x) (iapply cball (iapply (iapply c_ x) e))) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) e))
(rule (iapply (iapply naddu_eq x) y) (iapply (iapply naddu_eq y) x))
(rule (iapply realu_ofu_int (iapply (iapply intu_pow x) n)) (iapply (iapply realu_pow (iapply realu_ofu_int x)) n))
(rule (iapply (iapply t_ m) n) (iapply (iapply t_ n) m))
(rule (iapply (iapply intu_max x) y) (iapply (iapply intu_max y) x))
(rule (iapply (iapply intu_ge x) y) (iapply (iapply intu_le y) x))
(rule (iapply (iapply intu_gt x) y) (iapply (iapply intu_lt y) x))
(rule (iapply (iapply intu_lt y) (iapply (iapply intu_add x) y)) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply intu_lt x) (iapply (iapply intu_add x) y)) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) y))
(rule (iapply (iapply hrealu_mul x) y) (iapply (iapply hrealu_mul y) x))
(rule (iapply (iapply intu_add x) y) (iapply (iapply intu_add y) x))
(rule (iapply realu_abs (iapply (iapply float a) n)) (iapply (iapply float (iapply intu_abs a)) n))
(rule (iapply realu_abs (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow (iapply realu_abs x)) n))
(rule (iapply realu_inv (iapply (iapply realu_pow x) n)) (iapply (iapply realu_pow (iapply realu_inv x)) n))
(rule (iapply (iapply p_ m) n) (iapply (iapply p_ n) m))
(rule (iapply (iapply intu_le y) (iapply (iapply intu_add x) y)) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply intu_le x) (iapply (iapply intu_add x) y)) (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) y))
(rule (iapply (iapply realu_max x) y) (iapply (iapply realu_max y) x))
(rule (iapply (iapply intu_mul x) y) (iapply (iapply intu_mul y) x))
(rule (iapply intu_abs (iapply (iapply intu_pow x) n)) (iapply (iapply intu_pow (iapply intu_abs x)) n))
(rule (iapply (iapply intu_min x) y) (iapply (iapply intu_min y) x))
(rule (iapply (iapply realu_lt y) (iapply (iapply realu_add x) y)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_lt x) (iapply (iapply realu_add x) y)) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) y))
(rule (iapply cnj (iapply (iapply complexu_pow z) n)) (iapply (iapply complexu_pow (iapply cnj z)) n))
(rule (iapply (iapply l_ m) (iapply (iapply p_ m) n)) (iapply (iapply l_ (iapply NUMERAL u_0)) n))
(rule (iapply realu_inv (iapply (iapply rpow x) y)) (iapply (iapply rpow (iapply realu_inv x)) y))
(rule (iapply (iapply IN x) (iapply ball (iapply (iapply c_ x) e))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) e))
(rule (iapply realu_abs (iapply (iapply rpow x) y)) (iapply (iapply rpow (iapply realu_abs x)) y))
(rule (iapply (iapply realu_le y) (iapply (iapply realu_add x) y)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_le x) (iapply (iapply realu_add x) y)) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) y))
(rule (iapply (iapply l_ n) (iapply (iapply p_ m) n)) (iapply (iapply l_ (iapply NUMERAL u_0)) m))
(rule (iapply realu_neg (iapply (iapply float a) m)) (iapply (iapply float (iapply intu_neg a)) m))
(rule (iapply (iapply realu_min x) y) (iapply (iapply realu_min y) x))
(rule (iapply (iapply realu_ge x) y) (iapply (iapply realu_le y) x))
(rule (iapply (iapply realu_gt x) y) (iapply (iapply realu_lt y) x))
(rule (iapply matrix I) (iapply mat (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_pow x) (iapply NUMERAL u_0)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))) (iapply SUC (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply vectoru_sub b) a)) x)) (iapply (iapply realu_lt (iapply (iapply dot x) (iapply (iapply vectoru_sub a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply cos (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply sign I) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply a_ (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) c)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ (iapply (iapply dot (iapply (iapply vectoru_sub b) a)) c)) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply exp (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply intu_pow x) (iapply NUMERAL u_0)) (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply a_ (iapply (iapply vectoru_add x) y)) x) (iapply (iapply a_ y) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply unit6 x1) x2) x3) x4) x5) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply twopow (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply dart (iapply (iapply faceu_walkup H) x)) (iapply (iapply DELETE (iapply dart H)) x))
(rule (iapply dart (iapply (iapply nodeu_walkup H) x)) (iapply (iapply DELETE (iapply dart H)) x))
(rule (iapply (iapply GEQ a) b) (iapply (iapply a_ a) b))
(rule (iapply (iapply a_ x) y) (iapply (iapply a_ y) x))
(rule (iapply (iapply g_u_c s0) t) (iapply (iapply l_u_c t) s0))
(rule (iapply (iapply DISJOINT s0) t) (iapply (iapply DISJOINT t) s0))
(rule (iapply (iapply vectoru_add x) y) (iapply (iapply vectoru_add y) x))
(rule (iapply (iapply affu_ge s0) EMPTY) (iapply (iapply hull affine) s0))
(rule (iapply (iapply complexu_mul x) y) (iapply (iapply complexu_mul y) x))
(rule (iapply (iapply affu_gt s0) EMPTY) (iapply (iapply hull affine) s0))
(rule (iapply (iapply bis p) q) (iapply (iapply bis q) p))
(rule (iapply (iapply vectoru_angle x) y) (iapply (iapply vectoru_angle y) x))
(rule (iapply (iapply d3 x) y) (iapply (iapply d3 y) x))
(rule (iapply (iapply trealu_add x) y) (iapply (iapply trealu_add y) x))
(rule (iapply (iapply matrixu_add A0) B0) (iapply (iapply matrixu_add B0) A0))
(rule (iapply (iapply homeomorphic s0) t) (iapply (iapply homeomorphic t) s0))
(rule (iapply vectoru_neg (iapply (iapply complexu_mul x) y)) (iapply (iapply complexu_mul (iapply vectoru_neg x)) y))
(rule (iapply (iapply INTER s0) t) (iapply (iapply INTER t) s0))
(rule (iapply (iapply affu_lt s0) EMPTY) (iapply (iapply hull affine) s0))
(rule (iapply (iapply g_a_u_c s0) t) (iapply (iapply l_a_u_c t) s0))
(rule (iapply (iapply orthogonal x) y) (iapply (iapply orthogonal y) x))
(rule (iapply (iapply dot x) y) (iapply (iapply dot y) x))
(rule (iapply (iapply affu_le s0) EMPTY) (iapply (iapply hull affine) s0))
(rule (iapply (iapply trealu_eq x) y) (iapply (iapply trealu_eq y) x))
(rule (iapply (iapply UNION s0) t) (iapply (iapply UNION t) s0))
(rule (iapply topspace (iapply (iapply subtopology top) u)) (iapply (iapply INTER (iapply topspace top)) u))
(rule (iapply (iapply trealu_mul x) y) (iapply (iapply trealu_mul y) x))
(rule (iapply (iapply a_u_c s0) t) (iapply (iapply a_u_c t) s0))
(rule hold I)
(rule (iapply realu_ofu_int (iapply intu_abs x)) (iapply realu_abs (iapply realu_ofu_int x)))
(rule (iapply twopow (iapply intu_neg a)) (iapply realu_inv (iapply twopow a)))
(rule (iapply realu_ofu_int (iapply intu_sgn x)) (iapply realu_sgn (iapply realu_ofu_int x)))
(rule (iapply intu_abs (iapply intu_sgn x)) (iapply intu_sgn (iapply intu_abs x)))
(rule (iapply realu_ofu_int (iapply intu_neg x)) (iapply realu_neg (iapply realu_ofu_int x)))
(rule (iapply w_ (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply intu_lt (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply intu_abs x)))
(rule (iapply intu_sgn (iapply intu_neg x)) (iapply intu_neg (iapply intu_sgn x)))
(rule (iapply (iapply realu_pow (iapply vectoru_norm (iapply (iapply vectoru_add (iapply (iapply r_ a) x)) (iapply (iapply r_ b) y)))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_pow a) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm x)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_mul a) b)) (iapply (iapply dot x) y)))) (iapply (iapply realu_mul (iapply (iapply realu_pow b) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply vectoru_norm y)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))
(rule (iapply vectoru_norm (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply (iapply dot vc) vc)) va)) (iapply (iapply r_ (iapply (iapply dot va) vc)) vc))) (iapply sqrt (iapply (iapply realu_mul (iapply (iapply dot vc) vc)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply dot va) va)) (iapply (iapply dot vc) vc))) (iapply (iapply realu_pow (iapply (iapply dot va) vc)) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))
(rule (iapply (iapply realu_sub mm1) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0))))))) mm2)) (iapply sqrt (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))
(rule (iapply (iapply intu_le (iapply intu_ofu_num (iapply NUMERAL u_0))) (iapply affu_dim s0)) (iapply w_ (iapply (iapply a_ s0) EMPTY)))
(rule (iapply (iapply a_ (iapply det A0)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply l_ (iapply rank A0)) (iapply dimindex UNIV)))
(rule i I)
(rule mdtau2ufu_yu_LC mdtau2ufu_y)
(rule dartu_std3u_big dartu_std3)
(rule bnu_filter FILTER)
(rule mdtauu_yu_LC mdtauu_y)
(rule muyu_delta delta)
(rule (iapply (iapply m_ n) n) (iapply NUMERAL u_0))
(rule (iapply (iapply IMAGE drop) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply drop a)) (iapply drop b))) NIL)))
(rule (iapply (iapply IMAGE lift) (iapply closedu_realu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply lift a)) (iapply lift b))) NIL)))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)) (iapply (iapply INSERT b) (iapply (iapply INSERT a) EMPTY)))
(rule (iapply (iapply a_ (iapply (iapply INTER (iapply (iapply INSERT a) s0)) ss)) EMPTY) (iapply (iapply s_b_ (iapply w_ (iapply (iapply IN a) ss))) (iapply (iapply a_ (iapply (iapply INTER s0) ss)) EMPTY)))
(rule NONLIN T)
(rule T T)
(rule (iapply (iapply integral EMPTY) f) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply l_a_ m) (iapply NUMERAL u_0)) (iapply (iapply a_ m) (iapply NUMERAL u_0)))
(rule (iapply binom (iapply (iapply c_ n) n)) (iapply NUMERAL (iapply BIT1 u_0)))
(rule (iapply (iapply vectoru_sub x) x) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply sum EMPTY) f) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply vectoru_add (iapply vectoru_neg x)) x) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply vectoru_add x) (iapply vectoru_neg x)) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply distance (iapply (iapply c_ x) x)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply sol x) EMPTY) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply d3 x) x) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply matrixu_add (iapply matrixu_neg A0)) A0) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply Im (iapply Cx x)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply vsum EMPTY) f) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply intu_sub x) x) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply matrixu_add A0) (iapply matrixu_neg A0)) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply setdist (iapply (iapply c_ s0) s0)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply frac (iapply realu_ofu_num n)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_sub x) x) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply matrixu_sub A0) A0) (iapply mat (iapply NUMERAL u_0)))
(rule (iapply (iapply intu_add (iapply intu_neg x)) x) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_add (iapply realu_neg x)) x) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply intu_add x) (iapply intu_neg x)) (iapply intu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply cross x) x) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_integral EMPTY) f) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply realu_add x) (iapply realu_neg x)) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule atn2 atan2u_temp)
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y4) y2) y6) y1) y5) y3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y5) y1) y6) y2) y4) y3))
(rule (iapply affu_dim EMPTY) (iapply intu_neg (iapply intu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply ccos (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply cexp (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply upsu_x (iapply (iapply realu_pow x1) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow x2) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow x6) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_mul (iapply (iapply realu_add x1) (iapply (iapply realu_add x2) x6))) (iapply (iapply realu_mul (iapply (iapply realu_add x1) (iapply (iapply realu_sub x2) x6))) (iapply (iapply realu_mul (iapply (iapply realu_add x2) (iapply (iapply realu_sub x6) x1))) (iapply (iapply realu_add x6) (iapply (iapply realu_sub x1) x2))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y6) y1) y5) y3) y4) y2))
(rule (iapply (iapply (iapply lunar (iapply (iapply c_ v) w)) V) E) (iapply (iapply (iapply lunar (iapply (iapply c_ w) v)) V) E))
(rule (iapply (iapply a_a_g_ p) (iapply (iapply a_a_g_ q) r)) (iapply (iapply a_a_g_ (iapply (iapply s_b_ p) q)) r))
(rule (iapply (iapply (iapply ITLIST f) (iapply (iapply CONS h) t)) b) (iapply (iapply f h) (iapply (iapply (iapply ITLIST f) t) b)))
(rule (iapply (iapply IN x) (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY)))) (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply b_s_ (iapply (iapply a_ x) b)) (iapply (iapply a_ x) c))))
(rule (iapply (iapply vectoru_add x) (iapply (iapply vectoru_add y) z)) (iapply (iapply vectoru_add (iapply (iapply vectoru_add x) y)) z))
(rule (iapply (iapply eeu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) u) (iapply (iapply (iapply COND (iapply (iapply IN u) (iapply (iapply dartsu_ofu_hyp E) V))) (iapply (iapply c_ (iapply SND u)) (iapply FST u))) u))
(rule (iapply (iapply (iapply (iapply ITLIST2 f) (iapply (iapply CONS h1) t1)) l2) b) (iapply (iapply (iapply f h1) (iapply HD l2)) (iapply (iapply (iapply (iapply ITLIST2 f) t1) (iapply TL l2)) b)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points f) x) V) E) v) w) n) (iapply (iapply (iapply ITER n) (iapply (iapply (iapply (iapply f x) V) E) v)) w))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))) (iapply (iapply INSERT c) (iapply (iapply INSERT b) (iapply (iapply INSERT a) EMPTY))))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))) (iapply (iapply INSERT b) (iapply (iapply INSERT a) (iapply (iapply INSERT c) EMPTY))))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT a) EMPTY))))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))) (iapply (iapply INSERT c) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY))) (iapply (iapply INSERT a) (iapply (iapply INSERT c) (iapply (iapply INSERT b) EMPTY))))
(rule (iapply marchalu_quartic hminus) (iapply lmfun hminus))
(rule (iapply (iapply intu_max x) (iapply (iapply intu_max y) z)) (iapply (iapply intu_max y) (iapply (iapply intu_max x) z)))
(rule (iapply (iapply intu_max (iapply (iapply intu_max x) y)) z) (iapply (iapply intu_max x) (iapply (iapply intu_max y) z)))
(rule (iapply (iapply intu_min x) (iapply (iapply intu_min y) z)) (iapply (iapply intu_min y) (iapply (iapply intu_min x) z)))
(rule (iapply (iapply intu_min (iapply (iapply intu_min x) y)) z) (iapply (iapply intu_min x) (iapply (iapply intu_min y) z)))
(rule (iapply (iapply a_ (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ a) c)) (iapply (iapply a_ b) d))) (iapply (iapply s_b_ (iapply (iapply a_ a) d)) (iapply (iapply a_ b) c))))
(rule (iapply (iapply p_ m) (iapply (iapply p_ n) p)) (iapply (iapply p_ n) (iapply (iapply p_ m) p)))
(rule (iapply (iapply p_ (iapply (iapply p_ m) n)) p) (iapply (iapply p_ m) (iapply (iapply p_ n) p)))
(rule (iapply (iapply t_ m) (iapply (iapply t_ n) p)) (iapply (iapply t_ n) (iapply (iapply t_ m) p)))
(rule (iapply (iapply t_ (iapply (iapply t_ m) n)) p) (iapply (iapply t_ m) (iapply (iapply t_ n) p)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points f) x) V) E) v) w) (iapply SUC n)) (iapply (iapply (iapply (iapply (iapply f x) V) E) v) (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points f) x) V) E) v) w) n)))
(rule (iapply (iapply intu_add m) (iapply (iapply intu_add n) p)) (iapply (iapply intu_add n) (iapply (iapply intu_add m) p)))
(rule (iapply (iapply intu_add (iapply (iapply intu_add m) n)) p) (iapply (iapply intu_add m) (iapply (iapply intu_add n) p)))
(rule (iapply (iapply intu_mul m) (iapply (iapply intu_mul n) p)) (iapply (iapply intu_mul n) (iapply (iapply intu_mul m) p)))
(rule (iapply (iapply intu_mul (iapply (iapply intu_mul m) n)) p) (iapply (iapply intu_mul m) (iapply (iapply intu_mul n) p)))
(rule (iapply (iapply d_ (iapply (iapply (iapply COND b) x) y)) i0) (iapply (iapply (iapply COND b) (iapply (iapply d_ x) i0)) (iapply (iapply d_ y) i0)))
(rule (iapply NUMERAL (iapply BIT1 u_0)) (iapply SUC (iapply NUMERAL u_0)))
(rule (iapply diameter EMPTY) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply neutral vectoru_add) (iapply vec (iapply NUMERAL u_0)))
(rule (iapply measure EMPTY) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply FACT (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT1 u_0)))
(rule (iapply content EMPTY) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply azim v0) v1) w1) v1) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply azim v0) v1) w1) v0) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply SUC u_0) (iapply BIT1 u_0))
(rule (iapply neutral p_) (iapply NUMERAL u_0))
(rule (iapply (iapply (iapply (iapply dihV a) b) x) y) (iapply (iapply (iapply (iapply dihV a) b) y) x))
(rule (iapply complexu_inv ii) (iapply vectoru_neg ii))
(rule (iapply dim UNIV) (iapply dimindex UNIV))
(rule (iapply intervalu_upperbound EMPTY) (iapply intervalu_lowerbound EMPTY))
(rule (iapply cnj ii) (iapply vectoru_neg ii))
(rule (iapply (iapply realu_pow x) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply realu_mul x) x))
(rule (iapply (iapply a_ (iapply realu_abs x)) x) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply a_ (iapply exp (iapply log x))) x) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x) (iapply (iapply realu_add x) x))
(rule (iapply (iapply realu_le (iapply realu_neg x)) x) (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) x))
(rule (iapply (iapply realu_add x) x) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x))
(rule (iapply cnj (iapply ctan z)) (iapply ctan (iapply cnj z)))
(rule (iapply complexu_inv (iapply vectoru_neg x)) (iapply vectoru_neg (iapply complexu_inv x)))
(rule (iapply RC (iapply SC R)) (iapply SC (iapply RC R)))
(rule (iapply RC (iapply TC R)) (iapply TC (iapply RC R)))
(rule (iapply SC (iapply RC R)) (iapply RC (iapply SC R)))
(rule (iapply (iapply higheru_realu_derivative (iapply SUC n)) f) (iapply realu_derivative (iapply (iapply higheru_realu_derivative n) f)))
(rule (iapply TC (iapply RC R)) (iapply RC (iapply TC R)))
(rule (iapply (iapply complexu_pow (iapply Cx (iapply vectoru_norm z))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) (iapply (iapply complexu_mul z) (iapply cnj z)))
(rule (iapply Im (iapply vectoru_neg x)) (iapply realu_neg (iapply Im x)))
(rule (iapply Re (iapply vectoru_neg x)) (iapply realu_neg (iapply Re x)))
(rule (iapply (iapply UNION s0) (iapply inside s0)) (iapply (iapply DIFF UNIV) (iapply outside s0)))
(rule (iapply interior (iapply (iapply DIFF UNIV) s0)) (iapply (iapply DIFF UNIV) (iapply closure s0)))
(rule (iapply closure (iapply (iapply IMAGE vectoru_neg) s0)) (iapply (iapply IMAGE vectoru_neg) (iapply closure s0)))
(rule (iapply (iapply UNION s0) (iapply outside s0)) (iapply (iapply DIFF UNIV) (iapply inside s0)))
(rule (iapply cnj (iapply complexu_inv z)) (iapply complexu_inv (iapply cnj z)))
(rule (iapply cofactor (iapply transp A0)) (iapply transp (iapply cofactor A0)))
(rule (iapply cnj (iapply ccos z)) (iapply ccos (iapply cnj z)))
(rule (iapply (iapply higheru_complexu_derivative (iapply SUC n)) f) (iapply complexu_derivative (iapply (iapply higheru_complexu_derivative n) f)))
(rule (iapply csin (iapply vectoru_neg z)) (iapply vectoru_neg (iapply csin z)))
(rule (iapply cnj (iapply cexp z)) (iapply cexp (iapply cnj z)))
(rule (iapply transp (iapply matrixu_neg A0)) (iapply matrixu_neg (iapply transp A0)))
(rule (iapply vectoru_norm (iapply cexp z)) (iapply exp (iapply Re z)))
(rule (iapply closure (iapply (iapply DIFF UNIV) s0)) (iapply (iapply DIFF UNIV) (iapply interior s0)))
(rule (iapply cnj (iapply vectoru_neg z)) (iapply vectoru_neg (iapply cnj z)))
(rule (iapply cexp (iapply vectoru_neg z)) (iapply complexu_inv (iapply cexp z)))
(rule (iapply vectoru_neg (iapply complexu_inv x)) (iapply complexu_inv (iapply vectoru_neg x)))
(rule (iapply drop (iapply vectoru_neg x)) (iapply realu_neg (iapply drop x)))
(rule (iapply (iapply a_ (iapply (iapply hull affine) s0)) (iapply span s0)) (iapply (iapply IN (iapply vec (iapply NUMERAL u_0))) (iapply (iapply hull affine) s0)))
(rule (iapply Im (iapply cnj z)) (iapply realu_neg (iapply Im z)))
(rule (iapply vectoru_norm (iapply complexu_inv z)) (iapply realu_inv (iapply vectoru_norm z)))
(rule (iapply interior (iapply (iapply IMAGE vectoru_neg) s0)) (iapply (iapply IMAGE vectoru_neg) (iapply interior s0)))
(rule (iapply ctan (iapply vectoru_neg z)) (iapply vectoru_neg (iapply ctan z)))
(rule (iapply cnj (iapply csin z)) (iapply csin (iapply cnj z)))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY)))) (iapply (iapply INSERT d) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT a) EMPTY)))))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY)))) (iapply (iapply INSERT c) (iapply (iapply INSERT b) (iapply (iapply INSERT a) (iapply (iapply INSERT d) EMPTY)))))
(rule (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY)))) (iapply (iapply INSERT b) (iapply (iapply INSERT a) (iapply (iapply INSERT c) (iapply (iapply INSERT d) EMPTY)))))
(rule (iapply dim (iapply (iapply INSERT x) EMPTY)) (iapply (iapply (iapply COND (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply NUMERAL u_0)) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply a_ (iapply (iapply dot x) x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply vectoru_sub x) x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply measure (iapply ccube x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply orthogonal x) x) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply vectoru_angle x) x) (iapply (iapply (iapply COND (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))) (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply realu_abs (iapply sign p)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply vectoru_add (iapply vectoru_neg x)) x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply pathstart g) (iapply g (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply vectoru_add x) (iapply vectoru_neg x)) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply infnorm x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply a_ (iapply vectoru_norm x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply (iapply realu_mul (iapply sign p)) (iapply sign p)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply intu_le x) (iapply intu_neg x)) (iapply (iapply intu_le x) (iapply intu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply det (iapply matrix (iapply rotate2d t))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_le (iapply vectoru_norm x)) (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0))))
(rule (iapply measure (iapply cube x)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_le x) (iapply realu_neg x)) (iapply (iapply realu_le x) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply product EMPTY) f) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply dimindex s0) (iapply (iapply (iapply COND (iapply FINITE UNIV)) (iapply CARD UNIV)) (iapply NUMERAL (iapply BIT1 u_0))))
(rule (iapply (iapply realu_min x) (iapply (iapply realu_min y) z)) (iapply (iapply realu_min y) (iapply (iapply realu_min x) z)))
(rule (iapply (iapply realu_min (iapply (iapply realu_min x) y)) z) (iapply (iapply realu_min x) (iapply (iapply realu_min y) z)))
(rule (iapply (iapply realu_max x) (iapply (iapply realu_max y) z)) (iapply (iapply realu_max y) (iapply (iapply realu_max x) z)))
(rule (iapply (iapply realu_max (iapply (iapply realu_max x) y)) z) (iapply (iapply realu_max x) (iapply (iapply realu_max y) z)))
(rule (iapply (iapply realu_add m) (iapply (iapply realu_add n) p)) (iapply (iapply realu_add n) (iapply (iapply realu_add m) p)))
(rule (iapply (iapply realu_add (iapply (iapply realu_add m) n)) p) (iapply (iapply realu_add m) (iapply (iapply realu_add n) p)))
(rule (iapply (iapply realu_mul m) (iapply (iapply realu_mul n) p)) (iapply (iapply realu_mul n) (iapply (iapply realu_mul m) p)))
(rule (iapply (iapply realu_mul (iapply (iapply realu_mul m) n)) p) (iapply (iapply realu_mul m) (iapply (iapply realu_mul n) p)))
(rule (iapply (iapply realu_mul a) (iapply (iapply realu_mul b) c)) (iapply (iapply realu_mul a) (iapply (iapply realu_mul c) b)))
(rule (iapply (iapply (iapply MAP2 f) (iapply (iapply CONS h1) t1)) l) (iapply (iapply CONS (iapply (iapply f h1) (iapply HD l))) (iapply (iapply (iapply MAP2 f) t1) (iapply TL l))))
(rule (iapply (iapply IMAGE drop) (iapply openu_interval (iapply (iapply c_ a) b))) (iapply openu_realu_interval (iapply (iapply c_ (iapply drop a)) (iapply drop b))))
(rule (iapply mku_real (iapply trealu_eq (iapply trealu_inv x))) (iapply realu_inv (iapply mku_real (iapply trealu_eq x))))
(rule (iapply distance (iapply (iapply c_ (iapply (iapply vectoru_sub a) v0)) b)) (iapply distance (iapply (iapply c_ a) (iapply (iapply vectoru_add b) v0))))
(rule (iapply (iapply complexu_mul (iapply Cx (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) pi))) (iapply (iapply complexu_mul ii) (iapply unwinding z))) (iapply (iapply vectoru_sub z) (iapply clog (iapply cexp z))))
(rule (iapply mku_real (iapply trealu_eq (iapply trealu_neg x1))) (iapply realu_neg (iapply mku_real (iapply trealu_eq x1))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_126u_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_n x1) x2) (iapply (iapply realu_mul sqrt2) sqrt2)) (iapply (iapply realu_mul sqrt2) sqrt2)) (iapply (iapply realu_mul sqrt2) sqrt2)) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_xu_234 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply arclength (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih6u_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih3u_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x5) x6) x4) x2) x3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply delta x1) x2) x3) x6) x5) x4) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x3) x4) x5) x6))
(rule (iapply (iapply SUBSET (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply openu_segment (iapply (iapply c_ c) d))) (iapply (iapply s_b_ (iapply (iapply IN a) (iapply openu_segment (iapply (iapply c_ c) d)))) (iapply (iapply IN b) (iapply openu_segment (iapply (iapply c_ c) d)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply betau_bumpu_forceu_y y1) y2) y3) y4) y5) y6) (iapply (iapply realu_sub (iapply bump (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply bump (iapply (iapply realu_div y4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih5u_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flatu_x x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply edgeu_flat (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x5)) (iapply sqrt x6)))
(rule (iapply (iapply realu_add (iapply (iapply float b) (iapply intu_neg (iapply intu_ofu_num n)))) (iapply (iapply float a) (iapply intu_ofu_num m))) (iapply (iapply realu_add (iapply (iapply float a) (iapply intu_ofu_num m))) (iapply (iapply float b) (iapply intu_neg (iapply intu_ofu_num n)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih2u_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply edgeu_flat2u_x x1) x2) x3) x4) x5) x6) (iapply (iapply realu_pow (iapply (iapply (iapply (iapply (iapply edgeu_flat (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x5)) (iapply sqrt x6))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply acsu_sqrtu_x2u_d4 x1) x2) x3) x4) x5) x6) (iapply acs (iapply (iapply realu_div (iapply sqrt x2)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply vol3u_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply vol3r (iapply sqrt x1)) (iapply sqrt x3)) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply condA v1) v2) v3) v4) x12) x13) x14) x23) x24) x34) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ v1) v2))) (iapply (iapply s_b_ (iapply coplanaru_alt (iapply (iapply INSERT v1) (iapply (iapply INSERT v2) (iapply (iapply INSERT v3) (iapply (iapply INSERT v4) EMPTY)))))) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v2))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x12)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x13)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v1) v4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x14)) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v2) v3))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x23)) (iapply (iapply a_ (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ v2) v4))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x24))))))))
(rule (iapply (iapply o f) (iapply (iapply o g) (iapply (iapply o h) r))) (iapply (iapply o f) (iapply (iapply o (iapply (iapply o g) h)) r)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih4u_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldih6u_xu_126u_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply ldih6u_xu_n x1) x2) (iapply (iapply realu_mul sqrt2) sqrt2)) (iapply (iapply realu_mul sqrt2) sqrt2)) (iapply (iapply realu_mul sqrt2) sqrt2)) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply vol3fu_sqrt2u_lmplus y1) y2) y3) y4) y5) y6) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) pi))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div y2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div y6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_yu_LC y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_y y1) y2) y3) y4) y5) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply div6 f) g) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_div (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply g x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply promoteu_pow2 x1) x2) x3) x4) x5) x6) (iapply (iapply realu_pow x1) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply promoteu_pow3 x1) x2) x3) x4) x5) x6) (iapply (iapply realu_pow x1) (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0)))))
(rule (iapply quadraticu_rootu_plus (iapply (iapply c_ x1) (iapply (iapply c_ (iapply (iapply realu_add (iapply (iapply realu_mul x1) x1)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_sub x3) x5)) (iapply (iapply realu_sub x2) x6))) (iapply (iapply realu_mul x1) (iapply (iapply realu_add x2) (iapply (iapply realu_add x3) (iapply (iapply realu_add x5) x6))))))) (iapply (iapply realu_add (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x3) x5))) (iapply (iapply realu_sub (iapply (iapply realu_sub (iapply (iapply realu_mul x1) (iapply (iapply realu_mul x2) x6))) (iapply (iapply realu_mul x3) (iapply (iapply realu_mul (iapply (iapply realu_add x1) (iapply (iapply realu_add (iapply (iapply realu_sub x2) x3)) (iapply (iapply realu_sub x5) x6)))) x6)))) (iapply (iapply realu_mul x2) (iapply (iapply realu_mul x5) (iapply (iapply realu_add (iapply (iapply realu_sub x1) x2)) (iapply (iapply realu_add (iapply (iapply realu_sub x3) x5)) x6))))))))) (iapply (iapply realu_div (iapply (iapply realu_add (iapply realu_neg (iapply (iapply realu_mul x1) x1))) (iapply (iapply realu_add (iapply (iapply realu_mul x1) x2)) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul x1) x3)) (iapply (iapply realu_mul x2) x3))) (iapply (iapply realu_add (iapply (iapply realu_mul x1) x5)) (iapply (iapply realu_add (iapply (iapply realu_mul x2) x5)) (iapply (iapply realu_add (iapply (iapply realu_mul x1) x6)) (iapply (iapply realu_add (iapply (iapply realu_sub (iapply (iapply realu_mul x3) x6)) (iapply (iapply realu_mul x5) x6))) (iapply sqrt (iapply (iapply realu_mul (iapply (iapply (iapply upsu_x x1) x3) x5)) (iapply (iapply (iapply upsu_x x1) x2) x6))))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x1)))
(rule (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply (iapply pastecart a) c)) (iapply (iapply pastecart b) d))) NIL))) (iapply (iapply realu_mul (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL)))) (iapply content (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ c) d)) NIL)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_xu_126 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply arclength (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply dihV x) y) z) t) (iapply (iapply (iapply (iapply dihV y) x) z) t))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply matrixu_sub A0) B0)) i0)) j) (iapply (iapply realu_sub (iapply (iapply d_ (iapply (iapply d_ A0) i0)) j)) (iapply (iapply d_ (iapply (iapply d_ B0) i0)) j)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih4u_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_xu_su_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135u_su_n (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x1) x3) x2) x4) x6) x5))
(rule (iapply f (iapply (iapply (iapply COND b) x) y)) (iapply (iapply (iapply COND b) (iapply f x)) (iapply f y)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y3) y2) y4) y6) y5))
(rule (iapply (iapply (iapply (iapply (iapply (iapply mdtau2 y1) y2) y3) y4) y5) y6) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih2u_x x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x2) x1) x3) x5) x4) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y2) y1) y3) y5) y4) y6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply tauq (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply sqrt x7)) (iapply sqrt x8)) (iapply sqrt x9)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply taumu_x x7) x2) x3) x4) x8) x9)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldih2u_xu_126u_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply ldih2u_xu_n x1) x2) (iapply (iapply realu_mul sqrt2) sqrt2)) (iapply (iapply realu_mul sqrt2) sqrt2)) (iapply (iapply realu_mul sqrt2) sqrt2)) x6))
(rule (iapply (iapply (iapply (iapply (iapply (iapply arclengthu_xu_123 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply arclength (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)))
(rule (iapply (iapply (iapply (iapply homotopicu_with P) (iapply (iapply c_ X) Y)) f) f) (iapply (iapply s_b_ (iapply (iapply continuousu_on f) X)) (iapply (iapply s_b_ (iapply (iapply SUBSET (iapply (iapply IMAGE f) X)) Y)) (iapply P f))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply mdtau y1) y2) y3) y4) y5) y6) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply (iapply (iapply wu_dartu_fan x) V) E) (iapply (iapply c_ y) (iapply (iapply c_ v) (iapply (iapply c_ w) w1)))) (iapply (iapply (iapply COND (iapply (iapply g_ (iapply CARD (iapply (iapply (iapply setu_ofu_edge v) V) E))) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply (iapply (iapply wedge x) v) w) (iapply (iapply (iapply (iapply (iapply sigmau_fan x) V) E) v) w))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply (iapply setu_ofu_edge v) V) E)) (iapply (iapply INSERT w) EMPTY))) (iapply (iapply DIFF UNIV) (iapply (iapply affu_ge (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY))) (iapply (iapply INSERT w) EMPTY)))) (iapply (iapply (iapply COND (iapply (iapply a_ (iapply (iapply (iapply setu_ofu_edge v) V) E)) EMPTY)) (iapply (iapply DIFF UNIV) (iapply aff (iapply (iapply INSERT x) (iapply (iapply INSERT v) EMPTY))))) EMPTY))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih3u_x x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x3) x1) x2) x6) x4) x5))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y3) y1) y2) y6) y4) y5))
(rule (iapply (iapply (iapply (iapply (iapply (iapply vol3fu_xu_lfun x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply vol3f (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x6)) sqrt2) lfun))
(rule (iapply (iapply eeu_ofu_hyp (iapply (iapply c_ x) (iapply (iapply c_ V) E))) (iapply (iapply c_ a) b)) (iapply (iapply (iapply COND (iapply (iapply IN (iapply (iapply c_ a) b)) (iapply (iapply dartsu_ofu_hyp E) V))) (iapply (iapply c_ b) a)) (iapply (iapply c_ a) b)))
(rule (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v) w) b) a)) (iapply (iapply (iapply (iapply azim v) w) c) a)) (iapply (iapply a_ (iapply (iapply (iapply (iapply azim v) w) a) b)) (iapply (iapply (iapply (iapply azim v) w) a) c)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126 y1) y2) y3) y4) y5) y6) f) (iapply (iapply (iapply (iapply (iapply gamma3f y1) y2) y6) sqrt2) f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135 y1) y2) y3) y4) y5) y6) f) (iapply (iapply (iapply (iapply (iapply gamma3f y1) y3) y5) sqrt2) f))
(rule (iapply (iapply (iapply (iapply (iapply (iapply betau_bumpu_forceu_y (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x3)) (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply halfbumpu_x1 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply halfbumpu_x4 x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_vol3f c) m4) m5) m6) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_solu_x c) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_solu_x c) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_solu_x c) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x4)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m4)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x c) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x5)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m5)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x c) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x6)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m6)) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_dihu_x c) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih6u_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply deltau_pentu_x x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply deltau_x x1) x2) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_pow (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))
(rule (iapply (iapply trealu_add (iapply (iapply c_ x1) y1)) (iapply (iapply c_ x2) y2)) (iapply (iapply c_ (iapply (iapply hrealu_add x1) x2)) (iapply (iapply hrealu_add y1) y2)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply acsu_sqrtu_x1u_d4 x1) x2) x3) x4) x5) x6) (iapply acs (iapply (iapply realu_div (iapply sqrt x1)) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih5u_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldih5u_xu_135u_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply ldih5u_xu_n x1) (iapply (iapply realu_mul sqrt2) sqrt2)) x3) (iapply (iapply realu_mul sqrt2) sqrt2)) x5) (iapply (iapply realu_mul sqrt2) sqrt2)))
(rule (iapply (iapply realu_sub (iapply (iapply realu_add a) b)) (iapply (iapply realu_add c) d)) (iapply (iapply realu_add (iapply (iapply realu_sub a) c)) (iapply (iapply realu_sub b) d)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply scale6 f) r) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) r))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_135u_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_n x1) (iapply (iapply realu_mul sqrt2) sqrt2)) x3) (iapply (iapply realu_mul sqrt2) sqrt2)) x5) (iapply (iapply realu_mul sqrt2) sqrt2)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply vol3u_xu_sqrt x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply volu_y sqrt2) sqrt2) sqrt2) (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x6)))
(rule (iapply (iapply realu_add (iapply (iapply float a) (iapply (iapply intu_add m) (iapply intu_ofu_num c)))) (iapply (iapply float b) m)) (iapply (iapply float (iapply (iapply intu_add (iapply (iapply intu_mul (iapply intu_ofu_num (iapply (iapply EXP (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))) c))) a)) b)) m))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply mul6 f) g) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_mul (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply g x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply IN x) (iapply (iapply (iapply support op) f) s0)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply w_ (iapply (iapply a_ (iapply f x)) (iapply neutral op)))))
(rule (iapply (iapply SUBSET (iapply cball (iapply (iapply c_ a) r))) (iapply cball (iapply (iapply c_ ai_) ri_))) (iapply (iapply b_s_ (iapply (iapply realu_le (iapply (iapply realu_add (iapply distance (iapply (iapply c_ a) ai_))) r)) ri_)) (iapply (iapply realu_lt r) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply SUBSET (iapply cball (iapply (iapply c_ a) r))) (iapply ball (iapply (iapply c_ ai_) ri_))) (iapply (iapply b_s_ (iapply (iapply realu_lt (iapply (iapply realu_add (iapply distance (iapply (iapply c_ a) ai_))) r)) ri_)) (iapply (iapply realu_lt r) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply SUBSET (iapply ball (iapply (iapply c_ a) r))) (iapply cball (iapply (iapply c_ ai_) ri_))) (iapply (iapply b_s_ (iapply (iapply realu_le (iapply (iapply realu_add (iapply distance (iapply (iapply c_ a) ai_))) r)) ri_)) (iapply (iapply realu_le r) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply SUBSET (iapply ball (iapply (iapply c_ a) r))) (iapply ball (iapply (iapply c_ ai_) ri_))) (iapply (iapply b_s_ (iapply (iapply realu_le (iapply (iapply realu_add (iapply distance (iapply (iapply c_ a) ai_))) r)) ri_)) (iapply (iapply realu_le r) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldih3u_xu_135u_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply ldih3u_xu_n x1) (iapply (iapply realu_mul sqrt2) sqrt2)) x3) (iapply (iapply realu_mul sqrt2) sqrt2)) x5) (iapply (iapply realu_mul sqrt2) sqrt2)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih2u_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_135 y1) y2) y3) y4) y5) y6) f) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply vol3r y1) y3) y5) sqrt2)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) sqrt2) y3) sqrt2) y5) sqrt2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) sqrt2) y3) sqrt2) y5) sqrt2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) sqrt2) y3) sqrt2) y5) sqrt2))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) sqrt2) y3) sqrt2) y5) sqrt2)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) sqrt2) y3) sqrt2) y5) sqrt2)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) sqrt2) y3) sqrt2) y5) sqrt2)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) pi))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) sqrt2) y3) sqrt2) y5) sqrt2))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y3) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) sqrt2) y3) sqrt2) y5) sqrt2))) (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) sqrt2) y3) sqrt2) y5) sqrt2))))))))
(rule (iapply (iapply (iapply netord (iapply (iapply within n) s0)) x) y) (iapply (iapply s_b_ (iapply (iapply (iapply netord n) x) y)) (iapply (iapply IN x) s0)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply surfR126d c2) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply surfRdyc2 (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x6)) c2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply eta2u_126 x1) x2) x3) x4) x5) x6) (iapply (iapply realu_pow (iapply (iapply (iapply etau_y (iapply sqrt x1)) (iapply sqrt x2)) (iapply sqrt x6))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply ldihu_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_div (iapply sqrt x1)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply eta2u_135 x1) x2) x3) x4) x5) x6) (iapply (iapply realu_pow (iapply (iapply (iapply etau_y (iapply sqrt x1)) (iapply sqrt x3)) (iapply sqrt x5))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_xu_su_n x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126u_su_n (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply d_ (iapply (iapply d_ (iapply (iapply matrixu_add A0) B0)) i0)) j) (iapply (iapply realu_add (iapply (iapply d_ (iapply (iapply d_ A0) i0)) j)) (iapply (iapply d_ (iapply (iapply d_ B0) i0)) j)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply sub6 f) g) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply g x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply trealu_eq (iapply (iapply c_ x1) y1)) (iapply (iapply c_ x2) y2)) (iapply (iapply a_ (iapply (iapply hrealu_add x1) y2)) (iapply (iapply hrealu_add x2) y1)))
(rule (iapply (iapply trealu_le (iapply (iapply c_ x1) y1)) (iapply (iapply c_ x2) y2)) (iapply (iapply hrealu_le (iapply (iapply hrealu_add x1) y2)) (iapply (iapply hrealu_add x2) y1)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply yu_ofu_x f) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply f (iapply (iapply realu_mul y1) y1)) (iapply (iapply realu_mul y2) y2)) (iapply (iapply realu_mul y3) y3)) (iapply (iapply realu_mul y4) y4)) (iapply (iapply realu_mul y5) y5)) (iapply (iapply realu_mul y6) y6)))
(rule (iapply (iapply IN x) (iapply (iapply (iapply preimage dom) f) Z)) (iapply (iapply s_b_ (iapply (iapply IN x) dom)) (iapply (iapply IN (iapply f x)) Z)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply add6 f) g) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply f x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply g x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_135u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y (iapply sqrt x1)) sqrt2) (iapply sqrt x3)) sqrt2) (iapply sqrt x5)) sqrt2))
(rule (iapply (iapply vectoru_sub (iapply (iapply vectoru_add a) b)) (iapply (iapply vectoru_add c) d)) (iapply (iapply vectoru_add (iapply (iapply vectoru_sub a) c)) (iapply (iapply vectoru_sub b) d)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y5) y6) y4) y2) y3))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_xu_divu_sqrtdelta m4) m5) m6) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_sub (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_euleru_xu_divu_sqrtdelta x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_euleru_xu_divu_sqrtdelta x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply (iapply (iapply (iapply solu_euleru_xu_divu_sqrtdelta x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x4)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m4)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_divu_sqrtdeltau_posbranch x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x5)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m5)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_divu_sqrtdeltau_posbranch x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x6)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m6)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_xu_divu_sqrtdeltau_posbranch x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))))))
(rule (iapply (iapply sphericalu_map (iapply (iapply c_ e1) (iapply (iapply c_ e2) e3))) (iapply (iapply c_ r) (iapply (iapply c_ theta) phi))) (iapply (iapply vectoru_add (iapply (iapply r_ (iapply (iapply realu_mul r) (iapply (iapply realu_mul (iapply cos theta)) (iapply sin phi)))) e1)) (iapply (iapply vectoru_add (iapply (iapply r_ (iapply (iapply realu_mul r) (iapply (iapply realu_mul (iapply sin theta)) (iapply sin phi)))) e2)) (iapply (iapply r_ (iapply (iapply realu_mul r) (iapply cos phi))) e3))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply eta2u_456 x1) x2) x3) x4) x5) x6) (iapply (iapply realu_pow (iapply (iapply (iapply etau_y (iapply sqrt x4)) (iapply sqrt x5)) (iapply sqrt x6))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_y1 a) b) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply taum (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) a) b) y1))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_y2 a) b) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply taum (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) a) b) y2))
(rule (iapply (iapply (iapply (iapply (iapply (iapply asn797k k) x2) x3) x4) x5) x6) (iapply (iapply realu_mul k) (iapply asn (iapply (iapply realu_mul (iapply cos (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT1 u_0)))))))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 (iapply BIT1 u_0)))))))))))))) (iapply sin (iapply (iapply realu_div pi) k))))))
(rule (iapply (iapply (iapply (iapply (iapply COVER6u_SY p) q) s0) s1) s2) (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply IN (iapply (iapply INSERT p) (iapply (iapply INSERT q) EMPTY))) (iapply Ju_SY s1))) (iapply (iapply IN (iapply (iapply INSERT p) (iapply (iapply INSERT q) EMPTY))) (iapply Ju_SY s2)))) (iapply (iapply a_ (iapply (iapply IN (iapply (iapply INSERT p) (iapply (iapply INSERT q) EMPTY))) (iapply Ju_SY s1))) (iapply (iapply b_s_ (iapply earu_sy s1)) (iapply earu_sy s2)))))
(rule (iapply (iapply PASSOC f) (iapply (iapply c_ x) (iapply (iapply c_ y) z))) (iapply f (iapply (iapply c_ (iapply (iapply c_ x) y)) z)))
(rule (iapply (iapply (iapply ITLIST f) (iapply (iapply APPEND l1) l2)) a) (iapply (iapply (iapply ITLIST f) l1) (iapply (iapply (iapply ITLIST f) l2) a)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply dih3u_xu_126u_s2 x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y (iapply sqrt x1)) (iapply sqrt x2)) sqrt2) sqrt2) sqrt2) (iapply sqrt x6)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3u_x m1) x1) x2) x3) x4) x5) x6) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply volu_x (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) x5) x6)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_x x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply solu_x x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply (iapply (iapply (iapply (iapply solu_x x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi)))) (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x4)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) m1)) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x5)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_mul (iapply lfun (iapply (iapply realu_mul (iapply sqrt x6)) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_x x6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x5) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))))))
(rule (iapply (iapply a_ (iapply cball (iapply (iapply c_ a) r))) (iapply cball (iapply (iapply c_ ai_) ri_))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ a) ai_)) (iapply (iapply a_ r) ri_))) (iapply (iapply s_b_ (iapply (iapply realu_lt r) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt ri_) (iapply realu_ofu_num (iapply NUMERAL u_0))))))
(rule (iapply (iapply a_ (iapply cball (iapply (iapply c_ a) r))) (iapply ball (iapply (iapply c_ ai_) ri_))) (iapply (iapply s_b_ (iapply (iapply realu_lt r) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_le ri_) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply ball (iapply (iapply c_ a) r))) (iapply cball (iapply (iapply c_ ai_) ri_))) (iapply (iapply s_b_ (iapply (iapply realu_le r) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_lt ri_) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply ball (iapply (iapply c_ a) r))) (iapply ball (iapply (iapply c_ ai_) ri_))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply a_ a) ai_)) (iapply (iapply a_ r) ri_))) (iapply (iapply s_b_ (iapply (iapply realu_le r) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply realu_le ri_) (iapply realu_ofu_num (iapply NUMERAL u_0))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply taumu_y1u_y2 a) y1) y2) y3) y4) y5) y6) (iapply (iapply (iapply (iapply (iapply (iapply taum (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) a) y1) y2))
(rule (iapply (iapply a_ (iapply (iapply NUMPAIR x1) y1)) (iapply (iapply NUMPAIR x2) y2)) (iapply (iapply s_b_ (iapply (iapply a_ x1) x2)) (iapply (iapply a_ y1) y2)))
(rule (iapply (iapply a_ (iapply (iapply realu_sub (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ x) v))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_pow (iapply distance (iapply (iapply c_ y) v))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) c) (iapply (iapply a_ (iapply (iapply dot (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) v)) (iapply (iapply vectoru_add x) y))) (iapply (iapply vectoru_sub y) x))) c))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply (iapply compose6 f) p1) p2) p3) p4) p5) p6) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply f (iapply (iapply (iapply (iapply (iapply (iapply p1 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply p2 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply p3 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply p4 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply p5 x1) x2) x3) x4) x5) x6)) (iapply (iapply (iapply (iapply (iapply (iapply p6 x1) x2) x3) x4) x5) x6)))
(rule (iapply (iapply (iapply (iapply homotopicu_with P) (iapply (iapply c_ X) Y)) f) g) (iapply (iapply (iapply (iapply homotopicu_with P) (iapply (iapply c_ X) Y)) g) f))
(rule (iapply (iapply (iapply (iapply COND b) f) g) x) (iapply (iapply (iapply COND b) (iapply f x)) (iapply g x)))
(rule (iapply (iapply a_ (iapply (iapply NUMSUM b1) x1)) (iapply (iapply NUMSUM b2) x2)) (iapply (iapply s_b_ (iapply (iapply a_ b1) b2)) (iapply (iapply a_ x1) x2)))
(rule (iapply (iapply intu_sub (iapply (iapply intu_add a) b)) (iapply (iapply intu_add c) d)) (iapply (iapply intu_add (iapply (iapply intu_sub a) c)) (iapply (iapply intu_sub b) d)))
(rule (iapply (iapply realu_mul (iapply (iapply float a) m)) (iapply (iapply float b) n)) (iapply (iapply float (iapply (iapply intu_mul a) b)) (iapply (iapply intu_add m) n)))
(rule (iapply (iapply a_ (iapply (iapply (iapply CONSTR c1) i1) r1)) (iapply (iapply (iapply CONSTR c2) i2) r2)) (iapply (iapply s_b_ (iapply (iapply a_ c1) c2)) (iapply (iapply s_b_ (iapply (iapply a_ i1) i2)) (iapply (iapply a_ r1) r2))))
(rule (iapply (iapply a_ (iapply (iapply c_ a) (iapply (iapply c_ b) (iapply (iapply c_ c) d)))) (iapply (iapply c_ a1) (iapply (iapply c_ b1) (iapply (iapply c_ c1) d1)))) (iapply (iapply s_b_ (iapply (iapply a_ a) a1)) (iapply (iapply s_b_ (iapply (iapply a_ b) b1)) (iapply (iapply s_b_ (iapply (iapply a_ c) c1)) (iapply (iapply a_ d) d1)))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply asnFnhk h) k) x3) x4) x5) x6) (iapply (iapply realu_mul k) (iapply asn (iapply (iapply realu_mul (iapply (iapply realu_add (iapply (iapply realu_mul h) (iapply (iapply realu_div sqrt3) (iapply (iapply DECIMAL (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0)))))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 (iapply BIT0 (iapply BIT1 u_0))))))))) (iapply (iapply realu_div (iapply sqrt (iapply (iapply realu_sub (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply (iapply realu_pow (iapply (iapply realu_div h) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply sin (iapply (iapply realu_div pi) k))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma3fu_126 y1) y2) y3) y4) y5) y6) f) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply vol3r y1) y2) y6) sqrt2)) (iapply (iapply realu_sub (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply realu_div mm1) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih3u_y y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply (iapply realu_add (iapply (iapply (iapply (iapply (iapply (iapply dih4u_y y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply (iapply realu_sub (iapply (iapply (iapply (iapply (iapply (iapply dih5u_y y1) y2) sqrt2) sqrt2) sqrt2) y6)) (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 (iapply BIT1 u_0))))) pi))))))))) (iapply (iapply realu_mul (iapply (iapply realu_mul (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT0 (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply realu_div mm2) pi))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y1) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dihu_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_add (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y2) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih2u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))) (iapply (iapply realu_mul (iapply f (iapply (iapply realu_div y6) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))))) (iapply (iapply (iapply (iapply (iapply (iapply dih6u_y y1) y2) sqrt2) sqrt2) sqrt2) y6))))))))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply poweru_mapu_points sigmau_fan) (iapply vec (iapply NUMERAL u_0))) V) E) v) u) i0) (iapply (iapply (iapply POWER (iapply (iapply (iapply (iapply sigmau_fan (iapply vec (iapply NUMERAL u_0))) V) E) v)) i0) u))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_vol3ru_456 c) x1) x2) x3) x4) x5) x6) (iapply (iapply (iapply (iapply (iapply (iapply (iapply truncateu_volu_x c) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x4) x5) x6))
(rule (iapply (iapply a_ x) (iapply (iapply swap (iapply (iapply c_ a) b)) y)) (iapply (iapply a_ y) (iapply (iapply swap (iapply (iapply c_ a) b)) x)))
(rule (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma4fgcy y1) y2) y3) y4) y5) y6) f) (iapply (iapply (iapply (iapply (iapply (iapply (iapply gamma4f y1) y2) y3) y4) y5) y6) f))
(rule (iapply (iapply APPEND (iapply (iapply CONS h) t)) l) (iapply (iapply CONS h) (iapply (iapply APPEND t) l)))
(rule (iapply (iapply a_a_g_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) A0)) (iapply (iapply a_a_g_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) B0)) C0)) (iapply (iapply a_a_g_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) B0)) (iapply (iapply a_a_g_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) A0)) C0)))
(rule (iapply (iapply a_a_g_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) A0)) (iapply (iapply a_a_g_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) B0)) C0)) (iapply (iapply a_a_g_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) B0)) (iapply (iapply a_a_g_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) A0)) C0)))
(rule (iapply (iapply MAP (iapply (iapply o g) f)) l) (iapply (iapply MAP g) (iapply (iapply MAP f) l)))
(rule (iapply (iapply intu_pow (iapply (iapply intu_pow x) m)) n) (iapply (iapply intu_pow x) (iapply (iapply t_ m) n)))
(rule (iapply convu_trg (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))) (iapply conv (iapply (iapply INSERT x) (iapply (iapply INSERT y) (iapply (iapply INSERT z) EMPTY)))))
(rule (iapply (iapply matrixu_vectoru_mul (iapply (iapply matrixu_sub A0) B0)) x) (iapply (iapply vectoru_sub (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply (iapply matrixu_vectoru_mul B0) x)))
(rule (iapply (iapply dropout k) (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub (iapply (iapply dropout k) x)) (iapply (iapply dropout k) y)))
(rule (iapply (iapply a_ (iapply (iapply realu_mul x) y)) (iapply (iapply realu_mul x) z)) (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) z)))
(rule (iapply fan1 (iapply (iapply c_ x) (iapply (iapply c_ V) E))) (iapply (iapply s_b_ (iapply FINITE V)) (iapply w_ (iapply (iapply SUBSET V) EMPTY))))
(rule (iapply (iapply (iapply leftu_action p) f) x) (iapply f (iapply (iapply inverse p) x)))
(rule (iapply (iapply a_ (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ x) b)))) pi) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) a))) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ x) b))) (iapply (iapply between x) (iapply (iapply c_ a) b)))))
(rule (iapply (iapply dot x) (iapply (iapply vectoru_sub y) z)) (iapply (iapply realu_sub (iapply (iapply dot x) y)) (iapply (iapply dot x) z)))
(rule (iapply (iapply realu_lt (iapply distance (iapply (iapply c_ x) a))) (iapply distance (iapply (iapply c_ x) b))) (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub (iapply (iapply r_ (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0))))) x)) (iapply (iapply vectoru_add a) b)))))
(rule (iapply (iapply a_ (iapply (iapply intu_sub x) y)) z) (iapply (iapply a_ x) (iapply (iapply intu_add z) y)))
(rule (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) NIL))) (iapply (iapply CONS a) (iapply (iapply CONS b) (iapply (iapply CONS c) NIL))))
(rule (iapply (iapply complexu_pow (iapply (iapply complexu_pow x) m)) n) (iapply (iapply complexu_pow x) (iapply (iapply t_ m) n)))
(rule (iapply (iapply (iapply ITER (iapply SUC n)) f) x) (iapply (iapply (iapply ITER n) f) (iapply f x)))
(rule (iapply (iapply d_ (iapply (iapply vectoru_sub x) y)) i0) (iapply (iapply realu_sub (iapply (iapply d_ x) i0)) (iapply (iapply d_ y) i0)))
(rule (iapply (iapply cross (iapply (iapply r_ c) x)) y) (iapply (iapply r_ c) (iapply (iapply cross x) y)))
(rule (iapply (iapply m_ (iapply (iapply m_ m) n)) p) (iapply (iapply m_ m) (iapply (iapply p_ n) p)))
(rule (iapply (iapply matrixu_vectoru_mul A0) (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_add (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply (iapply matrixu_vectoru_mul A0) y)))
(rule (iapply (iapply realu_lt (iapply (iapply realu_add x) y)) z) (iapply (iapply realu_lt x) (iapply (iapply realu_sub z) y)))
(rule (iapply (iapply mul6 (iapply (iapply scalar6 f) m)) g) (iapply (iapply mul6 f) (iapply (iapply scalar6 g) m)))
(rule (iapply (iapply a_ (iapply (iapply intu_mul x) z)) (iapply (iapply intu_mul y) z)) (iapply (iapply b_s_ (iapply (iapply a_ x) y)) (iapply (iapply a_ z) (iapply intu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply intu_lt (iapply (iapply intu_add x) y)) z) (iapply (iapply intu_lt x) (iapply (iapply intu_sub z) y)))
(rule (iapply (iapply s_b_ (iapply (iapply a_ (iapply (iapply truncateu_simplex k) zl)) xl)) (iapply (iapply l_a_ (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0)))) (iapply LENGTH zl))) (iapply (iapply s_b_ (iapply (iapply initialu_sublist xl) zl)) (iapply (iapply a_ (iapply LENGTH xl)) (iapply (iapply p_ k) (iapply NUMERAL (iapply BIT1 u_0))))))
(rule (iapply (iapply matrixu_mul A0) (iapply (iapply matrixu_add B0) C0)) (iapply (iapply matrixu_add (iapply (iapply matrixu_mul A0) B0)) (iapply (iapply matrixu_mul A0) C0)))
(rule (iapply (iapply a_ (iapply (iapply t_ m) n)) (iapply (iapply t_ m) p)) (iapply (iapply b_s_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply a_ n) p)))
(rule (iapply (iapply within (iapply (iapply within net0) s0)) t) (iapply (iapply within net0) (iapply (iapply INTER s0) t)))
(rule (iapply (iapply IN x) (iapply (iapply DELETE s0) y)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply w_ (iapply (iapply a_ x) y))))
(rule (iapply (iapply IN x) (iapply (iapply INSERT y) s0)) (iapply (iapply b_s_ (iapply (iapply a_ x) y)) (iapply (iapply IN x) s0)))
(rule (iapply (iapply a_ (iapply (iapply complexu_mul x) z)) (iapply (iapply complexu_mul y) z)) (iapply (iapply b_s_ (iapply (iapply a_ x) y)) (iapply (iapply a_ z) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))))
(rule (iapply (iapply l_a_ (iapply (iapply t_ m) p)) (iapply (iapply t_ n) p)) (iapply (iapply b_s_ (iapply (iapply l_a_ m) n)) (iapply (iapply a_ p) (iapply NUMERAL u_0))))
(rule (iapply (iapply rotate2d (iapply (iapply realu_add s0) t)) x) (iapply (iapply rotate2d s0) (iapply (iapply rotate2d t) x)))
(rule (iapply (iapply IN x) (iapply (iapply DIFF s0) t)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply w_ (iapply (iapply IN x) t))))
(rule (iapply (iapply between x) (iapply (iapply c_ a) b)) (iapply (iapply between x) (iapply (iapply c_ b) a)))
(rule (iapply (iapply a_ (iapply distance (iapply (iapply c_ p) a))) (iapply distance (iapply (iapply c_ p) b))) (iapply (iapply a_ (iapply (iapply dot (iapply (iapply vectoru_sub p) (iapply (iapply r_ (iapply (iapply realu_div (iapply realu_ofu_num (iapply NUMERAL (iapply BIT1 u_0)))) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply (iapply vectoru_add a) b)))) (iapply (iapply vectoru_sub a) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply (iapply support op) g) (iapply (iapply IMAGE f) s0)) (iapply (iapply IMAGE f) (iapply (iapply (iapply support op) (iapply (iapply o g) f)) s0)))
(rule (iapply (iapply intu_le (iapply (iapply intu_sub x) y)) z) (iapply (iapply intu_le x) (iapply (iapply intu_add z) y)))
(rule (iapply (iapply matrixu_vectoru_mul A0) (iapply (iapply r_ c) x)) (iapply (iapply r_ c) (iapply (iapply matrixu_vectoru_mul A0) x)))
(rule (iapply (iapply cross x) (iapply (iapply r_ c) y)) (iapply (iapply r_ c) (iapply (iapply cross x) y)))
(rule (iapply (iapply SUBSET X) (iapply (iapply INTER A0) B0)) (iapply (iapply s_b_ (iapply (iapply SUBSET X) A0)) (iapply (iapply SUBSET X) B0)))
(rule (iapply (iapply realu_pow (iapply (iapply realu_pow x) m)) n) (iapply (iapply realu_pow x) (iapply (iapply t_ m) n)))
(rule (iapply (iapply ALL P) (iapply (iapply APPEND l1) l2)) (iapply (iapply s_b_ (iapply (iapply ALL P) l1)) (iapply (iapply ALL P) l2)))
(rule (iapply (iapply dot (iapply (iapply vectoru_add x) y)) z) (iapply (iapply realu_add (iapply (iapply dot x) z)) (iapply (iapply dot y) z)))
(rule (iapply (iapply UNION (iapply (iapply INSERT x) s0)) t) (iapply (iapply INSERT x) (iapply (iapply UNION s0) t)))
(rule (iapply (iapply dot (iapply (iapply vectoru_matrixu_mul x) A0)) y) (iapply (iapply dot x) (iapply (iapply matrixu_vectoru_mul A0) y)))
(rule (iapply (iapply a_ (iapply (iapply vectoru_sub x) y)) z) (iapply (iapply a_ x) (iapply (iapply vectoru_add z) y)))
(rule (iapply (iapply a_ (iapply (iapply realu_mul x) z)) (iapply (iapply realu_mul y) z)) (iapply (iapply b_s_ (iapply (iapply a_ x) y)) (iapply (iapply a_ z) (iapply realu_ofu_num (iapply NUMERAL u_0)))))
(rule (iapply (iapply matrixu_vectoru_mul (iapply (iapply matrixu_add A0) B0)) x) (iapply (iapply vectoru_add (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply (iapply matrixu_vectoru_mul B0) x)))
(rule (iapply (iapply matrixu_mul A0) (iapply (iapply matrixu_sub B0) C0)) (iapply (iapply matrixu_sub (iapply (iapply matrixu_mul A0) B0)) (iapply (iapply matrixu_mul A0) C0)))
(rule (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c))) (iapply (iapply vectoru_angle (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub c) b)))
(rule (iapply (iapply matrixu_mul (iapply (iapply matrixu_add A0) B0)) C0) (iapply (iapply matrixu_add (iapply (iapply matrixu_mul A0) C0)) (iapply (iapply matrixu_mul B0) C0)))
(rule (iapply (iapply dropout k) (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_add (iapply (iapply dropout k) x)) (iapply (iapply dropout k) y)))
(rule (iapply (iapply IN x) (iapply (iapply INTER s0) t)) (iapply (iapply s_b_ (iapply (iapply IN x) s0)) (iapply (iapply IN x) t)))
(rule (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0))) (iapply angle (iapply (iapply c_ C0) (iapply (iapply c_ B0) A0))))
(rule (iapply (iapply dot x) (iapply (iapply vectoru_add y) z)) (iapply (iapply realu_add (iapply (iapply dot x) y)) (iapply (iapply dot x) z)))
(rule (iapply (iapply (iapply e3u_fan x) v) u) (iapply (iapply r_ (iapply realu_inv (iapply vectoru_norm (iapply (iapply vectoru_sub v) x)))) (iapply (iapply vectoru_sub v) x)))
(rule (iapply (iapply MEM x) (iapply (iapply FILTER P) l)) (iapply (iapply s_b_ (iapply P x)) (iapply (iapply MEM x) l)))
(rule (iapply (iapply a_ (iapply (iapply EXP x) n)) (iapply (iapply EXP y) n)) (iapply (iapply b_s_ (iapply (iapply a_ x) y)) (iapply (iapply a_ n) (iapply NUMERAL u_0))))
(rule (iapply (iapply l_a_ (iapply (iapply EXP x) n)) (iapply (iapply EXP y) n)) (iapply (iapply b_s_ (iapply (iapply l_a_ x) y)) (iapply (iapply a_ n) (iapply NUMERAL u_0))))
(rule (iapply (iapply l_ (iapply (iapply EXP x) n)) (iapply (iapply EXP y) n)) (iapply (iapply s_b_ (iapply (iapply l_ x) y)) (iapply w_ (iapply (iapply a_ n) (iapply NUMERAL u_0)))))
(rule (iapply (iapply a_ (iapply (iapply complexu_mul x) y)) (iapply (iapply complexu_mul x) z)) (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply Cx (iapply realu_ofu_num (iapply NUMERAL u_0))))) (iapply (iapply a_ y) z)))
(rule (iapply (iapply a_ (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply INSERT c) EMPTY)) (iapply (iapply s_b_ (iapply (iapply a_ a) c)) (iapply (iapply a_ b) c)))
(rule (iapply (iapply l_a_ (iapply (iapply t_ m) n)) (iapply (iapply t_ m) p)) (iapply (iapply b_s_ (iapply (iapply a_ m) (iapply NUMERAL u_0))) (iapply (iapply l_a_ n) p)))
(rule (iapply (iapply IN (iapply lift c)) (iapply closedu_interval (iapply (iapply CONS (iapply (iapply c_ (iapply lift a)) (iapply lift b))) NIL))) (iapply (iapply s_b_ (iapply (iapply realu_le a) c)) (iapply (iapply realu_le c) b)))
(rule (iapply (iapply matrixu_mul (iapply (iapply matrixu_sub A0) B0)) C0) (iapply (iapply matrixu_sub (iapply (iapply matrixu_mul A0) C0)) (iapply (iapply matrixu_mul B0) C0)))
(rule (iapply (iapply vecmat i0) (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub (iapply (iapply vecmat i0) x)) (iapply (iapply vecmat i0) y)))
(rule (iapply (iapply l_ (iapply (iapply t_ m) p)) (iapply (iapply t_ n) p)) (iapply (iapply s_b_ (iapply (iapply l_ m) n)) (iapply w_ (iapply (iapply a_ p) (iapply NUMERAL u_0)))))
(rule (iapply (iapply realu_lt (iapply (iapply realu_sub x) y)) z) (iapply (iapply realu_lt x) (iapply (iapply realu_add z) y)))
(rule (iapply (iapply realu_le (iapply (iapply realu_sub x) y)) z) (iapply (iapply realu_le x) (iapply (iapply realu_add z) y)))
(rule (iapply (iapply a_ (iapply (iapply r_ a) x)) (iapply (iapply r_ b) x)) (iapply (iapply b_s_ (iapply (iapply a_ a) b)) (iapply (iapply a_ x) (iapply vec (iapply NUMERAL u_0)))))
(rule (iapply (iapply FILTER P) (iapply (iapply MAP f) l)) (iapply (iapply MAP f) (iapply (iapply FILTER (iapply (iapply o P) f)) l)))
(rule (iapply (iapply IN (iapply Cx x)) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ (iapply Cx a)) (iapply Cx b))) NIL))) (iapply (iapply b_s_ (iapply (iapply s_b_ (iapply (iapply realu_le a) x)) (iapply (iapply realu_le x) b))) (iapply (iapply s_b_ (iapply (iapply realu_le b) x)) (iapply (iapply realu_le x) a))))
(rule (iapply (iapply IMAGE f) (iapply (iapply UNION s0) t)) (iapply (iapply UNION (iapply (iapply IMAGE f) s0)) (iapply (iapply IMAGE f) t)))
(rule (iapply pathu_image (iapply (iapply (iapply subpath u) v) g)) (iapply (iapply IMAGE g) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ u) v)) NIL))))
(rule (iapply (iapply IN x) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY))) (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply a_ x) b)))
(rule (iapply (iapply a_a_g_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) A0)) (iapply (iapply a_a_g_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) B0)) C0)) (iapply (iapply a_a_g_ (iapply (iapply realu_le (iapply realu_ofu_num (iapply NUMERAL u_0))) B0)) (iapply (iapply a_a_g_ (iapply (iapply realu_lt (iapply realu_ofu_num (iapply NUMERAL u_0))) A0)) C0)))
(rule (iapply (iapply SUBSET (iapply (iapply INSERT a) (iapply (iapply INSERT b) (iapply (iapply INSERT c) EMPTY)))) s0) (iapply (iapply s_b_ (iapply (iapply IN a) s0)) (iapply (iapply s_b_ (iapply (iapply IN b) s0)) (iapply (iapply IN c) s0))))
(rule (iapply (iapply matrixu_mul (iapply (iapply r_r_ c) A0)) B0) (iapply (iapply r_r_ c) (iapply (iapply matrixu_mul A0) B0)))
(rule (iapply (iapply IMAGE (iapply (iapply o f) g)) s0) (iapply (iapply IMAGE f) (iapply (iapply IMAGE g) s0)))
(rule (iapply (iapply SUBSET s0) (iapply (iapply DELETE t) x)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply IN x) s0))) (iapply (iapply SUBSET s0) t)))
(rule (iapply (iapply intu_lt (iapply (iapply intu_sub x) y)) z) (iapply (iapply intu_lt x) (iapply (iapply intu_add z) y)))
(rule (iapply (iapply matrixu_mul A0) (iapply (iapply r_r_ c) B0)) (iapply (iapply r_r_ c) (iapply (iapply matrixu_mul A0) B0)))
(rule (iapply (iapply a_ (iapply (iapply pastecart x) y)) (iapply vec n)) (iapply (iapply s_b_ (iapply (iapply a_ x) (iapply vec n))) (iapply (iapply a_ y) (iapply vec n))))
(rule (iapply (iapply realu_mul (iapply sin (iapply angle (iapply (iapply c_ A0) (iapply (iapply c_ B0) C0))))) (iapply distance (iapply (iapply c_ B0) C0))) (iapply (iapply realu_mul (iapply sin (iapply angle (iapply (iapply c_ B0) (iapply (iapply c_ A0) C0))))) (iapply distance (iapply (iapply c_ A0) C0))))
(rule (iapply (iapply scale (iapply (iapply r_ s0) t)) x) (iapply (iapply r_ s0) (iapply (iapply scale t) x)))
(rule (iapply (iapply dropout k) (iapply (iapply r_ c) x)) (iapply (iapply r_ c) (iapply (iapply dropout k) x)))
(rule (iapply (iapply l_ (iapply (iapply t_ m) n)) (iapply (iapply t_ m) p)) (iapply (iapply s_b_ (iapply w_ (iapply (iapply a_ m) (iapply NUMERAL u_0)))) (iapply (iapply l_ n) p)))
(rule (iapply (iapply DISJOINT (iapply (iapply INSERT x) s0)) t) (iapply (iapply s_b_ (iapply (iapply DISJOINT s0) t)) (iapply w_ (iapply (iapply IN x) t))))
(rule (iapply (iapply matrixu_vectoru_mul A0) (iapply (iapply vectoru_sub x) y)) (iapply (iapply vectoru_sub (iapply (iapply matrixu_vectoru_mul A0) x)) (iapply (iapply matrixu_vectoru_mul A0) y)))
(rule (iapply (iapply vecmat i0) (iapply (iapply vectoru_add x) y)) (iapply (iapply vectoru_add (iapply (iapply vecmat i0) x)) (iapply (iapply vecmat i0) y)))
(rule (iapply (iapply a_ (iapply (iapply r_ a) x)) (iapply (iapply r_ a) y)) (iapply (iapply b_s_ (iapply (iapply a_ a) (iapply realu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ x) y)))
(rule (iapply (iapply a_ (iapply (iapply realu_sub x) y)) z) (iapply (iapply a_ x) (iapply (iapply realu_add z) y)))
(rule (iapply (iapply SUBSET (iapply (iapply UNION s0) t)) u) (iapply (iapply s_b_ (iapply (iapply SUBSET s0) u)) (iapply (iapply SUBSET t) u)))
(rule (iapply (iapply (iapply CURRY f) x) y) (iapply f (iapply (iapply c_ x) y)))
(rule (iapply (iapply a_ (iapply (iapply t_ m) p)) (iapply (iapply t_ n) p)) (iapply (iapply b_s_ (iapply (iapply a_ m) n)) (iapply (iapply a_ p) (iapply NUMERAL u_0))))
(rule (iapply (iapply extremeu_pointu_of x) (iapply (iapply hull convex) (iapply (iapply INSERT a) (iapply (iapply INSERT b) EMPTY)))) (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply a_ x) b)))
(rule (iapply (iapply voronoiu_set V) (iapply (iapply INSERT u) (iapply (iapply INSERT v) EMPTY))) (iapply (iapply INTER (iapply (iapply voronoiu_closed V) v)) (iapply (iapply voronoiu_closed V) u)))
(rule (iapply (iapply a_ (iapply (iapply intu_mul x) y)) (iapply (iapply intu_mul x) z)) (iapply (iapply b_s_ (iapply (iapply a_ x) (iapply intu_ofu_num (iapply NUMERAL u_0)))) (iapply (iapply a_ y) z)))
(rule (iapply (iapply (iapply (iapply azim v0) v1) w) w) (iapply realu_ofu_num (iapply NUMERAL u_0)))
(rule (iapply (iapply extremeu_pointu_of x) (iapply closedu_segment (iapply (iapply CONS (iapply (iapply c_ a) b)) NIL))) (iapply (iapply b_s_ (iapply (iapply a_ x) a)) (iapply (iapply a_ x) b)))
(rule (iapply (iapply MAP f) (iapply (iapply APPEND l1) l2)) (iapply (iapply APPEND (iapply (iapply MAP f) l1)) (iapply (iapply MAP f) l2)))
(rule (iapply (iapply MAP f) (iapply (iapply CONS h) t)) (iapply (iapply CONS (iapply f h)) (iapply (iapply MAP f) t)))
(rule (iapply (iapply limitu_pointu_of x) (iapply (iapply UNION s0) t)) (iapply (iapply b_s_ (iapply (iapply limitu_pointu_of x) s0)) (iapply (iapply limitu_pointu_of x) t)))
(rule (iapply (iapply d_ (iapply (iapply vectoru_add x) y)) i0) (iapply (iapply realu_add (iapply (iapply d_ x) i0)) (iapply (iapply d_ y) i0)))
(rule (iapply (iapply MEM x) (iapply (iapply APPEND l1) l2)) (iapply (iapply b_s_ (iapply (iapply MEM x) l1)) (iapply (iapply MEM x) l2)))
(rule (iapply (iapply o f) (iapply (iapply p_p_ p) q)) (iapply (iapply p_p_ (iapply (iapply o f) p)) (iapply (iapply o f) q)))
(rule (iapply (iapply dot (iapply (iapply vectoru_sub x) y)) z) (iapply (iapply realu_sub (iapply (iapply dot x) z)) (iapply (iapply dot y) z)))
(rule (iapply (iapply DISJOINT (iapply (iapply UNION s0) t)) u) (iapply (iapply s_b_ (iapply (iapply DISJOINT s0) u)) (iapply (iapply DISJOINT t) u)))
(rule (iapply (iapply realu_lt (iapply (iapply realu_div pi) (iapply realu_ofu_num (iapply NUMERAL (iapply BIT0 (iapply BIT1 u_0)))))) (iapply angle (iapply (iapply c_ a) (iapply (iapply c_ b) c)))) (iapply (iapply realu_lt (iapply (iapply dot (iapply (iapply vectoru_sub a) b)) (iapply (iapply vectoru_sub c) b))) (iapply realu_ofu_num (iapply NUMERAL u_0))))
(rule (iapply (iapply intu_mul x) (iapply (iapply intu_mul y) z)) (iapply (iapply intu_mul (iapply (iapply intu_mul x) y)) z))
(rule (iapply (iapply (iapply obstruct x) y) s0) (iapply (iapply (iapply obstructed x) y) s0))
(rule (iapply (iapply complexu_mul x) (iapply (iapply complexu_mul y) z)) (iapply (iapply complexu_mul (iapply (iapply complexu_mul x) y)) z))
(rule (iapply (iapply (iapply POWER p) n) (iapply p x)) (iapply (iapply (iapply POWER p) (iapply SUC n)) x))
(rule (iapply (iapply intu_le x) (iapply (iapply intu_sub y) z)) (iapply (iapply intu_le (iapply (iapply intu_add x) z)) y))
(rule (iapply (iapply INTER (iapply (iapply DELETE s0) x)) t) (iapply (iapply DELETE (iapply (iapply INTER s0) t)) x))
(rule (iapply (iapply dot (iapply (iapply cross x) y)) z) (iapply (iapply dot (iapply (iapply cross y) z)) x))
(rule (iapply (iapply EX P) (iapply (iapply MAP f) l)) (iapply (iapply EX (iapply (iapply o P) f)) l))
(rule (iapply (iapply matrixu_vectoru_mul A0) (iapply (iapply matrixu_vectoru_mul B0) x)) (iapply (iapply matrixu_vectoru_mul (iapply (iapply matrixu_mul A0) B0)) x))
(rule (iapply (iapply ALL P) (iapply (iapply MAP f) l)) (iapply (iapply ALL (iapply (iapply o P) f)) l))
(rule (iapply (iapply a_ x) (iapply (iapply vectoru_sub y) z)) (iapply (iapply a_ (iapply (iapply vectoru_add x) z)) y))
(rule (iapply (iapply EXP m) (iapply (iapply t_ n) p)) (iapply (iapply EXP (iapply (iapply EXP m) n)) p))
(rule (iapply (iapply APPEND l) (iapply (iapply APPEND m) n)) (iapply (iapply APPEND (iapply (iapply APPEND l) m)) n))
(rule (iapply (iapply (iapply support op) f) (iapply (iapply DELETE s0) x)) (iapply (iapply DELETE (iapply (iapply (iapply support op) f) s0)) x))
(rule (iapply (iapply intu_add x) (iapply (iapply intu_add y) z)) (iapply (iapply intu_add (iapply (iapply intu_add x) y)) z))
(rule (iapply (iapply IN y) (iapply cball (iapply (iapply c_ x) e))) (iapply (iapply realu_le (iapply distance (iapply (iapply c_ x) y))) e))
(rule (iapply (iapply (iapply connectedu_component s0) x) y) (iapply (iapply (iapply connectedu_component s0) y) x))
(rule (iapply p (iapply (iapply (iapply POWER p) n) x)) (iapply (iapply (iapply POWER p) (iapply SUC n)) x))
(rule (iapply (iapply (iapply homotopicu_loops s0) p) q) (iapply (iapply (iapply homotopicu_loops s0) q) p))
(rule (iapply (iapply realu_max x) (iapply (iapply realu_max y) z)) (iapply (iapply realu_max (iapply (iapply realu_max x) y)) z))
(rule (iapply (iapply p_ m) (iapply (iapply p_ n) p)) (iapply (iapply p_ (iapply (iapply p_ m) n)) p))
(rule (iapply (iapply t_ m) (iapply (iapply t_ n) p)) (iapply (iapply t_ (iapply (iapply t_ m) n)) p))
(rule (iapply (iapply (iapply arclength a) b) c) (iapply (iapply (iapply arclength b) a) c))
(rule (iapply (iapply bnu_prevVertex (iapply (iapply c_ vs) f)) v) (iapply (iapply (iapply bnu_nextElem (iapply REVERSE vs)) (iapply LAST vs)) v))
(rule (iapply (iapply realu_lt x) (iapply (iapply realu_sub y) z)) (iapply (iapply realu_lt (iapply (iapply realu_add x) z)) y))
(rule (iapply (iapply DELETE (iapply (iapply DELETE s0) x)) y) (iapply (iapply DELETE (iapply (iapply DELETE s0) y)) x))
(rule (iapply (iapply realu_le x) (iapply (iapply realu_sub y) z)) (iapply (iapply realu_le (iapply (iapply realu_add x) z)) y))
(rule (iapply (iapply o f) (iapply (iapply o g) h)) (iapply (iapply o (iapply (iapply o f) g)) h))
(rule (iapply (iapply realu_mul x) (iapply (iapply realu_mul y) z)) (iapply (iapply realu_mul (iapply (iapply realu_mul x) y)) z))
(rule (iapply (iapply matrixu_mul A0) (iapply (iapply matrixu_mul B0) C0)) (iapply (iapply matrixu_mul (iapply (iapply matrixu_mul A0) B0)) C0))
(rule (iapply (iapply realu_add x) (iapply (iapply realu_add y) z)) (iapply (iapply realu_add (iapply (iapply realu_add x) y)) z))
(rule (iapply (iapply IN y) (iapply ball (iapply (iapply c_ x) e))) (iapply (iapply realu_lt (iapply distance (iapply (iapply c_ x) y))) e))
(rule (iapply (iapply hrealu_add x) (iapply (iapply hrealu_add y) z)) (iapply (iapply hrealu_add (iapply (iapply hrealu_add x) y)) z))
(rule (iapply (iapply (iapply radial r) x) C0) (iapply (iapply (iapply radialu_norm r) x) C0))
(rule (iapply (iapply SUBSET s0) (iapply (iapply INSERT x) t)) (iapply (iapply SUBSET (iapply (iapply DELETE s0) x)) t))
(rule (iapply (iapply intu_lt x) (iapply (iapply intu_sub y) z)) (iapply (iapply intu_lt (iapply (iapply intu_add x) z)) y))
(rule (iapply (iapply DISJOINT (iapply (iapply DELETE s0) x)) t) (iapply (iapply DISJOINT (iapply (iapply DELETE t) x)) s0))
(rule (iapply (iapply (iapply homotopicu_paths s0) p) q) (iapply (iapply (iapply homotopicu_paths s0) q) p))
(rule (iapply (iapply b_s_ t1) (iapply (iapply b_s_ t2) t3)) (iapply (iapply b_s_ (iapply (iapply b_s_ t1) t2)) t3))
(rule (iapply (iapply DIFF s0) (iapply (iapply INSERT x) t)) (iapply (iapply DIFF (iapply (iapply DELETE s0) x)) t))
(rule (iapply (iapply (iapply upsu_x a) b) c) (iapply (iapply (iapply upsu_x b) a) c))
(rule (iapply (iapply a_ x) (iapply (iapply realu_sub y) z)) (iapply (iapply a_ (iapply (iapply realu_add x) z)) y))
(rule (iapply (iapply compose f) (iapply (iapply compose g) h)) (iapply (iapply compose (iapply (iapply compose f) g)) h))
(rule (iapply (iapply matrixu_add A0) (iapply (iapply matrixu_add B0) C0)) (iapply (iapply matrixu_add (iapply (iapply matrixu_add A0) B0)) C0))
(rule (iapply (iapply intu_max x) (iapply (iapply intu_max y) z)) (iapply (iapply intu_max (iapply (iapply intu_max x) y)) z))
(rule (iapply (iapply s_b_ t1) (iapply (iapply s_b_ t2) t3)) (iapply (iapply s_b_ (iapply (iapply s_b_ t1) t2)) t3))
(rule (iapply (iapply intu_min x) (iapply (iapply intu_min y) z)) (iapply (iapply intu_min (iapply (iapply intu_min x) y)) z))
(rule (iapply (iapply hrealu_mul x) (iapply (iapply hrealu_mul y) z)) (iapply (iapply hrealu_mul (iapply (iapply hrealu_mul x) y)) z))
(rule (iapply (iapply realu_min x) (iapply (iapply realu_min y) z)) (iapply (iapply realu_min (iapply (iapply realu_min x) y)) z))
(rule (iapply (iapply a_ x) (iapply (iapply intu_sub y) z)) (iapply (iapply a_ (iapply (iapply intu_add x) z)) y))
(rule (iapply (iapply (iapply intervalu_eps (iapply realu_neg x)) f) ex) (iapply (iapply (iapply intervalu_eps x) (iapply realu_neg f)) ex))
