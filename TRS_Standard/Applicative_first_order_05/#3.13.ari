; @origtpdbfilename ./TRS/currying/AG01/#3.13.trs
; @xtcfilename "./TRS_Standard/Applicative_first_order_05/#3.13.xml"
(format TRS)
(fun app 2)
(fun eq 0)
(fun 0 0)
(fun true 0)
(fun s 0)
(fun false 0)
(fun or 0)
(fun union 0)
(fun empty 0)
(fun edge 0)
(fun reach 0)
(fun if_reach_1 0)
(fun if_reach_2 0)
(fun map 0)
(fun nil 0)
(fun cons 0)
(fun filter 0)
(fun filter2 0)
(rule (app (app eq 0) 0) true)
(rule (app (app eq 0) (app s x)) false)
(rule (app (app eq (app s x)) 0) false)
(rule (app (app eq (app s x)) (app s y)) (app (app eq x) y))
(rule (app (app or true) y) true)
(rule (app (app or false) y) y)
(rule (app (app union empty) h) h)
(rule (app (app union (app (app (app edge x) y) i)) h) (app (app (app edge x) y) (app (app union i) h)))
(rule (app (app (app (app reach x) y) empty) h) false)
(rule (app (app (app (app reach x) y) (app (app (app edge u) v) i)) h) (app (app (app (app (app if_reach_1 (app (app eq x) u)) x) y) (app (app (app edge u) v) i)) h))
(rule (app (app (app (app (app if_reach_1 true) x) y) (app (app (app edge u) v) i)) h) (app (app (app (app (app if_reach_2 (app (app eq y) v)) x) y) (app (app (app edge u) v) i)) h))
(rule (app (app (app (app (app if_reach_1 false) x) y) (app (app (app edge u) v) i)) h) (app (app (app (app reach x) y) i) (app (app (app edge u) v) h)))
(rule (app (app (app (app (app if_reach_2 true) x) y) (app (app (app edge u) v) i)) h) true)
(rule (app (app (app (app (app if_reach_2 false) x) y) (app (app (app edge u) v) i)) h) (app (app or (app (app (app (app reach x) y) i) h)) (app (app (app (app reach v) y) (app (app union i) h)) empty)))
(rule (app (app map f) nil) nil)
(rule (app (app map f) (app (app cons x) xs)) (app (app cons (app f x)) (app (app map f) xs)))
(rule (app (app filter f) nil) nil)
(rule (app (app filter f) (app (app cons x) xs)) (app (app (app (app filter2 (app f x)) f) x) xs))
(rule (app (app (app (app filter2 true) f) x) xs) (app (app cons x) (app (app filter f) xs)))
(rule (app (app (app (app filter2 false) f) x) xs) (app (app filter f) xs))
