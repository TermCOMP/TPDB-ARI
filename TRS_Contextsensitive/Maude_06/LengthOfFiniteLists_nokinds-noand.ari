; @origtpdbfilename ./TRS/CSR_Maude/length-lazy-list/LengthOfFiniteLists_nokinds-noand.trs
; @xtcfilename "./TRS_Contextsensitive/Maude_06/LengthOfFiniteLists_nokinds-noand.xml"
(format CSTRS)
(fun zeros 0 :replacement-map ())
(fun cons 2 :replacement-map (1))
(fun |0| 0 :replacement-map ())
(fun U11 1 :replacement-map (1))
(fun tt 0 :replacement-map ())
(fun U21 1 :replacement-map (1))
(fun U31 1 :replacement-map (1))
(fun U41 2 :replacement-map (1))
(fun U42 1 :replacement-map (1))
(fun isNatIList 1 :replacement-map ())
(fun U51 2 :replacement-map (1))
(fun U52 1 :replacement-map (1))
(fun isNatList 1 :replacement-map ())
(fun U61 3 :replacement-map (1))
(fun U62 2 :replacement-map (1))
(fun isNat 1 :replacement-map ())
(fun s 1 :replacement-map (1))
(fun length 1 :replacement-map (1))
(fun nil 0 :replacement-map ())
(rule zeros (cons |0| zeros))
(rule (U11 tt) tt)
(rule (U21 tt) tt)
(rule (U31 tt) tt)
(rule (U41 tt V2) (U42 (isNatIList V2)))
(rule (U42 tt) tt)
(rule (U51 tt V2) (U52 (isNatList V2)))
(rule (U52 tt) tt)
(rule (U61 tt L N) (U62 (isNat N) L))
(rule (U62 tt L) (s (length L)))
(rule (isNat |0|) tt)
(rule (isNat (length V1)) (U11 (isNatList V1)))
(rule (isNat (s V1)) (U21 (isNat V1)))
(rule (isNatIList V) (U31 (isNatList V)))
(rule (isNatIList zeros) tt)
(rule (isNatIList (cons V1 V2)) (U41 (isNat V1) V2))
(rule (isNatList nil) tt)
(rule (isNatList (cons V1 V2)) (U51 (isNat V1) V2))
(rule (length nil) |0|)
(rule (length (cons N L)) (U61 (isNatList L) L N))
