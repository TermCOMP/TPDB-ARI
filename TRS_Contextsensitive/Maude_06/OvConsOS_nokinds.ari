; @origtpdbfilename ./TRS/CSR_Maude/lazy-nat-list/OvConsOS_nokinds.trs
; @xtcfilename "./TRS_Contextsensitive/Maude_06/OvConsOS_nokinds.xml"
(format CSTRS)
(fun zeros 0 :replacement-map ())
(fun cons 2 :replacement-map (1))
(fun 0 0 :replacement-map ())
(fun U11 2 :replacement-map (1))
(fun tt 0 :replacement-map ())
(fun s 1 :replacement-map (1))
(fun length 1 :replacement-map (1))
(fun U21 1 :replacement-map (1))
(fun nil 0 :replacement-map ())
(fun U31 4 :replacement-map (1))
(fun take 2 :replacement-map (1 2))
(fun and 2 :replacement-map (1))
(fun isNat 1 :replacement-map ())
(fun isNatList 1 :replacement-map ())
(fun isNatIList 1 :replacement-map ())
(rule zeros (cons 0 zeros))
(rule (U11 tt L) (s (length L)))
(rule (U21 tt) nil)
(rule (U31 tt IL M N) (cons N (take M IL)))
(rule (and tt X) X)
(rule (isNat 0) tt)
(rule (isNat (length V1)) (isNatList V1))
(rule (isNat (s V1)) (isNat V1))
(rule (isNatIList V) (isNatList V))
(rule (isNatIList zeros) tt)
(rule (isNatIList (cons V1 V2)) (and (isNat V1) (isNatIList V2)))
(rule (isNatList nil) tt)
(rule (isNatList (cons V1 V2)) (and (isNat V1) (isNatList V2)))
(rule (isNatList (take V1 V2)) (and (isNat V1) (isNatIList V2)))
(rule (length nil) 0)
(rule (length (cons N L)) (U11 (and (isNatList L) (isNat N)) L))
(rule (take 0 IL) (U21 (isNatIList IL)))
(rule (take (s M) (cons N IL)) (U31 (and (isNatIList IL) (and (isNat M) (isNat N))) IL M N))
