; @origtpdbfilename ./TRS/CSR_Maude/lazy-nat-list/OvConsOS_complete.trs
; @xtcfilename "./TRS_Contextsensitive/Maude_06/OvConsOS_complete.xml"
(format CSTRS)
(fun zeros 0 :replacement-map ())
(fun cons 2 :replacement-map (1))
(fun |0| 0 :replacement-map ())
(fun U11 2 :replacement-map (1))
(fun tt 0 :replacement-map ())
(fun U12 1 :replacement-map (1))
(fun isNatList 1 :replacement-map ())
(fun U21 2 :replacement-map (1))
(fun U22 1 :replacement-map (1))
(fun isNat 1 :replacement-map ())
(fun U31 2 :replacement-map (1))
(fun U32 1 :replacement-map (1))
(fun U41 3 :replacement-map (1))
(fun U42 2 :replacement-map (1))
(fun U43 1 :replacement-map (1))
(fun isNatIList 1 :replacement-map ())
(fun U51 3 :replacement-map (1))
(fun U52 2 :replacement-map (1))
(fun U53 1 :replacement-map (1))
(fun U61 3 :replacement-map (1))
(fun U62 2 :replacement-map (1))
(fun U63 1 :replacement-map (1))
(fun U71 2 :replacement-map (1))
(fun s 1 :replacement-map (1))
(fun length 1 :replacement-map (1))
(fun U81 1 :replacement-map (1))
(fun nil 0 :replacement-map ())
(fun U91 4 :replacement-map (1))
(fun take 2 :replacement-map (1 2))
(fun and 2 :replacement-map (1))
(fun isNatIListKind 1 :replacement-map ())
(fun isNatKind 1 :replacement-map ())
(rule zeros (cons |0| zeros))
(rule (U11 tt V1) (U12 (isNatList V1)))
(rule (U12 tt) tt)
(rule (U21 tt V1) (U22 (isNat V1)))
(rule (U22 tt) tt)
(rule (U31 tt V) (U32 (isNatList V)))
(rule (U32 tt) tt)
(rule (U41 tt V1 V2) (U42 (isNat V1) V2))
(rule (U42 tt V2) (U43 (isNatIList V2)))
(rule (U43 tt) tt)
(rule (U51 tt V1 V2) (U52 (isNat V1) V2))
(rule (U52 tt V2) (U53 (isNatList V2)))
(rule (U53 tt) tt)
(rule (U61 tt V1 V2) (U62 (isNat V1) V2))
(rule (U62 tt V2) (U63 (isNatIList V2)))
(rule (U63 tt) tt)
(rule (U71 tt L) (s (length L)))
(rule (U81 tt) nil)
(rule (U91 tt IL M N) (cons N (take M IL)))
(rule (and tt X) X)
(rule (isNat |0|) tt)
(rule (isNat (length V1)) (U11 (isNatIListKind V1) V1))
(rule (isNat (s V1)) (U21 (isNatKind V1) V1))
(rule (isNatIList V) (U31 (isNatIListKind V) V))
(rule (isNatIList zeros) tt)
(rule (isNatIList (cons V1 V2)) (U41 (and (isNatKind V1) (isNatIListKind V2)) V1 V2))
(rule (isNatIListKind nil) tt)
(rule (isNatIListKind zeros) tt)
(rule (isNatIListKind (cons V1 V2)) (and (isNatKind V1) (isNatIListKind V2)))
(rule (isNatIListKind (take V1 V2)) (and (isNatKind V1) (isNatIListKind V2)))
(rule (isNatKind |0|) tt)
(rule (isNatKind (length V1)) (isNatIListKind V1))
(rule (isNatKind (s V1)) (isNatKind V1))
(rule (isNatList nil) tt)
(rule (isNatList (cons V1 V2)) (U51 (and (isNatKind V1) (isNatIListKind V2)) V1 V2))
(rule (isNatList (take V1 V2)) (U61 (and (isNatKind V1) (isNatIListKind V2)) V1 V2))
(rule (length nil) |0|)
(rule (length (cons N L)) (U71 (and (and (isNatList L) (isNatIListKind L)) (and (isNat N) (isNatKind N))) L))
(rule (take |0| IL) (U81 (and (isNatIList IL) (isNatIListKind IL))))
(rule (take (s M) (cons N IL)) (U91 (and (and (isNatIList IL) (isNatIListKind IL)) (and (and (isNat M) (isNatKind M)) (and (isNat N) (isNatKind N)))) IL M N))
