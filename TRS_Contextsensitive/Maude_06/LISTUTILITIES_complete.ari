; @origtpdbfilename ./TRS/CSR_Maude/PEPM04/LISTUTILITIES_complete.trs
; @xtcfilename "./TRS_Contextsensitive/Maude_06/LISTUTILITIES_complete.xml"
(format CSTRS)
(fun U101 3 :replacement-map (1))
(fun tt 0 :replacement-map ())
(fun U102 2 :replacement-map (1))
(fun isNatural 1 :replacement-map ())
(fun U103 1 :replacement-map (1))
(fun isLNat 1 :replacement-map ())
(fun U11 3 :replacement-map (1))
(fun snd 1 :replacement-map (1))
(fun splitAt 2 :replacement-map (1 2))
(fun U111 2 :replacement-map (1))
(fun U112 1 :replacement-map (1))
(fun U121 2 :replacement-map (1))
(fun U122 1 :replacement-map (1))
(fun U131 3 :replacement-map (1))
(fun U132 2 :replacement-map (1))
(fun U133 1 :replacement-map (1))
(fun U141 3 :replacement-map (1))
(fun U142 2 :replacement-map (1))
(fun U143 1 :replacement-map (1))
(fun U151 3 :replacement-map (1))
(fun U152 2 :replacement-map (1))
(fun U153 1 :replacement-map (1))
(fun U161 2 :replacement-map (1))
(fun cons 2 :replacement-map (1))
(fun natsFrom 1 :replacement-map (1))
(fun s 1 :replacement-map (1))
(fun U171 3 :replacement-map (1))
(fun head 1 :replacement-map (1))
(fun afterNth 2 :replacement-map (1 2))
(fun U181 2 :replacement-map (1))
(fun U191 2 :replacement-map (1))
(fun pair 2 :replacement-map (1 2))
(fun nil 0 :replacement-map ())
(fun U201 4 :replacement-map (1))
(fun U202 2 :replacement-map (1))
(fun U21 2 :replacement-map (1))
(fun U211 2 :replacement-map (1))
(fun U221 3 :replacement-map (1))
(fun fst 1 :replacement-map (1))
(fun U31 2 :replacement-map (1))
(fun U41 3 :replacement-map (1))
(fun U42 2 :replacement-map (1))
(fun U43 1 :replacement-map (1))
(fun U51 3 :replacement-map (1))
(fun U52 2 :replacement-map (1))
(fun U53 1 :replacement-map (1))
(fun U61 2 :replacement-map (1))
(fun U62 1 :replacement-map (1))
(fun isPLNat 1 :replacement-map ())
(fun U71 2 :replacement-map (1))
(fun U72 1 :replacement-map (1))
(fun U81 2 :replacement-map (1))
(fun U82 1 :replacement-map (1))
(fun U91 2 :replacement-map (1))
(fun U92 1 :replacement-map (1))
(fun and 2 :replacement-map (1))
(fun isNaturalKind 1 :replacement-map ())
(fun isLNatKind 1 :replacement-map ())
(fun isPLNatKind 1 :replacement-map ())
(fun tail 1 :replacement-map (1))
(fun take 2 :replacement-map (1 2))
(fun |0| 0 :replacement-map ())
(fun sel 2 :replacement-map (1 2))
(rule (U101 tt V1 V2) (U102 (isNatural V1) V2))
(rule (U102 tt V2) (U103 (isLNat V2)))
(rule (U103 tt) tt)
(rule (U11 tt N XS) (snd (splitAt N XS)))
(rule (U111 tt V1) (U112 (isLNat V1)))
(rule (U112 tt) tt)
(rule (U121 tt V1) (U122 (isNatural V1)))
(rule (U122 tt) tt)
(rule (U131 tt V1 V2) (U132 (isNatural V1) V2))
(rule (U132 tt V2) (U133 (isLNat V2)))
(rule (U133 tt) tt)
(rule (U141 tt V1 V2) (U142 (isLNat V1) V2))
(rule (U142 tt V2) (U143 (isLNat V2)))
(rule (U143 tt) tt)
(rule (U151 tt V1 V2) (U152 (isNatural V1) V2))
(rule (U152 tt V2) (U153 (isLNat V2)))
(rule (U153 tt) tt)
(rule (U161 tt N) (cons N (natsFrom (s N))))
(rule (U171 tt N XS) (head (afterNth N XS)))
(rule (U181 tt Y) Y)
(rule (U191 tt XS) (pair nil XS))
(rule (U201 tt N X XS) (U202 (splitAt N XS) X))
(rule (U202 (pair YS ZS) X) (pair (cons X YS) ZS))
(rule (U21 tt X) X)
(rule (U211 tt XS) XS)
(rule (U221 tt N XS) (fst (splitAt N XS)))
(rule (U31 tt N) N)
(rule (U41 tt V1 V2) (U42 (isNatural V1) V2))
(rule (U42 tt V2) (U43 (isLNat V2)))
(rule (U43 tt) tt)
(rule (U51 tt V1 V2) (U52 (isNatural V1) V2))
(rule (U52 tt V2) (U53 (isLNat V2)))
(rule (U53 tt) tt)
(rule (U61 tt V1) (U62 (isPLNat V1)))
(rule (U62 tt) tt)
(rule (U71 tt V1) (U72 (isNatural V1)))
(rule (U72 tt) tt)
(rule (U81 tt V1) (U82 (isPLNat V1)))
(rule (U82 tt) tt)
(rule (U91 tt V1) (U92 (isLNat V1)))
(rule (U92 tt) tt)
(rule (afterNth N XS) (U11 (and (and (isNatural N) (isNaturalKind N)) (and (isLNat XS) (isLNatKind XS))) N XS))
(rule (and tt X) X)
(rule (fst (pair X Y)) (U21 (and (and (isLNat X) (isLNatKind X)) (and (isLNat Y) (isLNatKind Y))) X))
(rule (head (cons N XS)) (U31 (and (and (isNatural N) (isNaturalKind N)) (and (isLNat XS) (isLNatKind XS))) N))
(rule (isLNat nil) tt)
(rule (isLNat (afterNth V1 V2)) (U41 (and (isNaturalKind V1) (isLNatKind V2)) V1 V2))
(rule (isLNat (cons V1 V2)) (U51 (and (isNaturalKind V1) (isLNatKind V2)) V1 V2))
(rule (isLNat (fst V1)) (U61 (isPLNatKind V1) V1))
(rule (isLNat (natsFrom V1)) (U71 (isNaturalKind V1) V1))
(rule (isLNat (snd V1)) (U81 (isPLNatKind V1) V1))
(rule (isLNat (tail V1)) (U91 (isLNatKind V1) V1))
(rule (isLNat (take V1 V2)) (U101 (and (isNaturalKind V1) (isLNatKind V2)) V1 V2))
(rule (isLNatKind nil) tt)
(rule (isLNatKind (afterNth V1 V2)) (and (isNaturalKind V1) (isLNatKind V2)))
(rule (isLNatKind (cons V1 V2)) (and (isNaturalKind V1) (isLNatKind V2)))
(rule (isLNatKind (fst V1)) (isPLNatKind V1))
(rule (isLNatKind (natsFrom V1)) (isNaturalKind V1))
(rule (isLNatKind (snd V1)) (isPLNatKind V1))
(rule (isLNatKind (tail V1)) (isLNatKind V1))
(rule (isLNatKind (take V1 V2)) (and (isNaturalKind V1) (isLNatKind V2)))
(rule (isNatural |0|) tt)
(rule (isNatural (head V1)) (U111 (isLNatKind V1) V1))
(rule (isNatural (s V1)) (U121 (isNaturalKind V1) V1))
(rule (isNatural (sel V1 V2)) (U131 (and (isNaturalKind V1) (isLNatKind V2)) V1 V2))
(rule (isNaturalKind |0|) tt)
(rule (isNaturalKind (head V1)) (isLNatKind V1))
(rule (isNaturalKind (s V1)) (isNaturalKind V1))
(rule (isNaturalKind (sel V1 V2)) (and (isNaturalKind V1) (isLNatKind V2)))
(rule (isPLNat (pair V1 V2)) (U141 (and (isLNatKind V1) (isLNatKind V2)) V1 V2))
(rule (isPLNat (splitAt V1 V2)) (U151 (and (isNaturalKind V1) (isLNatKind V2)) V1 V2))
(rule (isPLNatKind (pair V1 V2)) (and (isLNatKind V1) (isLNatKind V2)))
(rule (isPLNatKind (splitAt V1 V2)) (and (isNaturalKind V1) (isLNatKind V2)))
(rule (natsFrom N) (U161 (and (isNatural N) (isNaturalKind N)) N))
(rule (sel N XS) (U171 (and (and (isNatural N) (isNaturalKind N)) (and (isLNat XS) (isLNatKind XS))) N XS))
(rule (snd (pair X Y)) (U181 (and (and (isLNat X) (isLNatKind X)) (and (isLNat Y) (isLNatKind Y))) Y))
(rule (splitAt |0| XS) (U191 (and (isLNat XS) (isLNatKind XS)) XS))
(rule (splitAt (s N) (cons X XS)) (U201 (and (and (isNatural N) (isNaturalKind N)) (and (and (isNatural X) (isNaturalKind X)) (and (isLNat XS) (isLNatKind XS)))) N X XS))
(rule (tail (cons N XS)) (U211 (and (and (isNatural N) (isNaturalKind N)) (and (isLNat XS) (isLNatKind XS))) XS))
(rule (take N XS) (U221 (and (and (isNatural N) (isNaturalKind N)) (and (isLNat XS) (isLNatKind XS))) N XS))
