; @origtpdbfilename ./TRS/CSR_Maude/lazy-nat-list/OvConsOS_complete-noand.trs
; @xtcfilename "./TRS_Contextsensitive/Maude_06/OvConsOS_complete-noand.xml"
(format CSTRS)
(fun zeros 0 :replacement-map ())
(fun cons 2 :replacement-map (1))
(fun 0 0 :replacement-map ())
(fun U101 3 :replacement-map (1))
(fun tt 0 :replacement-map ())
(fun U102 3 :replacement-map (1))
(fun isNatKind 1 :replacement-map ())
(fun U103 3 :replacement-map (1))
(fun isNatIListKind 1 :replacement-map ())
(fun U104 3 :replacement-map (1))
(fun U105 2 :replacement-map (1))
(fun isNat 1 :replacement-map ())
(fun U106 1 :replacement-map (1))
(fun isNatIList 1 :replacement-map ())
(fun U11 2 :replacement-map (1))
(fun U12 2 :replacement-map (1))
(fun U111 3 :replacement-map (1))
(fun U112 3 :replacement-map (1))
(fun U113 3 :replacement-map (1))
(fun U114 2 :replacement-map (1))
(fun s 1 :replacement-map (1))
(fun length 1 :replacement-map (1))
(fun U13 1 :replacement-map (1))
(fun isNatList 1 :replacement-map ())
(fun U121 2 :replacement-map (1))
(fun U122 1 :replacement-map (1))
(fun nil 0 :replacement-map ())
(fun U131 4 :replacement-map (1))
(fun U132 4 :replacement-map (1))
(fun U133 4 :replacement-map (1))
(fun U134 4 :replacement-map (1))
(fun U135 4 :replacement-map (1))
(fun U136 4 :replacement-map (1))
(fun take 2 :replacement-map (1 2))
(fun U21 2 :replacement-map (1))
(fun U22 2 :replacement-map (1))
(fun U23 1 :replacement-map (1))
(fun U31 2 :replacement-map (1))
(fun U32 2 :replacement-map (1))
(fun U33 1 :replacement-map (1))
(fun U41 3 :replacement-map (1))
(fun U42 3 :replacement-map (1))
(fun U43 3 :replacement-map (1))
(fun U44 3 :replacement-map (1))
(fun U45 2 :replacement-map (1))
(fun U46 1 :replacement-map (1))
(fun U51 2 :replacement-map (1))
(fun U52 1 :replacement-map (1))
(fun U61 2 :replacement-map (1))
(fun U62 1 :replacement-map (1))
(fun U71 1 :replacement-map (1))
(fun U81 1 :replacement-map (1))
(fun U91 3 :replacement-map (1))
(fun U92 3 :replacement-map (1))
(fun U93 3 :replacement-map (1))
(fun U94 3 :replacement-map (1))
(fun U95 2 :replacement-map (1))
(fun U96 1 :replacement-map (1))
(rule zeros (cons 0 zeros))
(rule (U101 tt V1 V2) (U102 (isNatKind V1) V1 V2))
(rule (U102 tt V1 V2) (U103 (isNatIListKind V2) V1 V2))
(rule (U103 tt V1 V2) (U104 (isNatIListKind V2) V1 V2))
(rule (U104 tt V1 V2) (U105 (isNat V1) V2))
(rule (U105 tt V2) (U106 (isNatIList V2)))
(rule (U106 tt) tt)
(rule (U11 tt V1) (U12 (isNatIListKind V1) V1))
(rule (U111 tt L N) (U112 (isNatIListKind L) L N))
(rule (U112 tt L N) (U113 (isNat N) L N))
(rule (U113 tt L N) (U114 (isNatKind N) L))
(rule (U114 tt L) (s (length L)))
(rule (U12 tt V1) (U13 (isNatList V1)))
(rule (U121 tt IL) (U122 (isNatIListKind IL)))
(rule (U122 tt) nil)
(rule (U13 tt) tt)
(rule (U131 tt IL M N) (U132 (isNatIListKind IL) IL M N))
(rule (U132 tt IL M N) (U133 (isNat M) IL M N))
(rule (U133 tt IL M N) (U134 (isNatKind M) IL M N))
(rule (U134 tt IL M N) (U135 (isNat N) IL M N))
(rule (U135 tt IL M N) (U136 (isNatKind N) IL M N))
(rule (U136 tt IL M N) (cons N (take M IL)))
(rule (U21 tt V1) (U22 (isNatKind V1) V1))
(rule (U22 tt V1) (U23 (isNat V1)))
(rule (U23 tt) tt)
(rule (U31 tt V) (U32 (isNatIListKind V) V))
(rule (U32 tt V) (U33 (isNatList V)))
(rule (U33 tt) tt)
(rule (U41 tt V1 V2) (U42 (isNatKind V1) V1 V2))
(rule (U42 tt V1 V2) (U43 (isNatIListKind V2) V1 V2))
(rule (U43 tt V1 V2) (U44 (isNatIListKind V2) V1 V2))
(rule (U44 tt V1 V2) (U45 (isNat V1) V2))
(rule (U45 tt V2) (U46 (isNatIList V2)))
(rule (U46 tt) tt)
(rule (U51 tt V2) (U52 (isNatIListKind V2)))
(rule (U52 tt) tt)
(rule (U61 tt V2) (U62 (isNatIListKind V2)))
(rule (U62 tt) tt)
(rule (U71 tt) tt)
(rule (U81 tt) tt)
(rule (U91 tt V1 V2) (U92 (isNatKind V1) V1 V2))
(rule (U92 tt V1 V2) (U93 (isNatIListKind V2) V1 V2))
(rule (U93 tt V1 V2) (U94 (isNatIListKind V2) V1 V2))
(rule (U94 tt V1 V2) (U95 (isNat V1) V2))
(rule (U95 tt V2) (U96 (isNatList V2)))
(rule (U96 tt) tt)
(rule (isNat 0) tt)
(rule (isNat (length V1)) (U11 (isNatIListKind V1) V1))
(rule (isNat (s V1)) (U21 (isNatKind V1) V1))
(rule (isNatIList V) (U31 (isNatIListKind V) V))
(rule (isNatIList zeros) tt)
(rule (isNatIList (cons V1 V2)) (U41 (isNatKind V1) V1 V2))
(rule (isNatIListKind nil) tt)
(rule (isNatIListKind zeros) tt)
(rule (isNatIListKind (cons V1 V2)) (U51 (isNatKind V1) V2))
(rule (isNatIListKind (take V1 V2)) (U61 (isNatKind V1) V2))
(rule (isNatKind 0) tt)
(rule (isNatKind (length V1)) (U71 (isNatIListKind V1)))
(rule (isNatKind (s V1)) (U81 (isNatKind V1)))
(rule (isNatList nil) tt)
(rule (isNatList (cons V1 V2)) (U91 (isNatKind V1) V1 V2))
(rule (isNatList (take V1 V2)) (U101 (isNatKind V1) V1 V2))
(rule (length nil) 0)
(rule (length (cons N L)) (U111 (isNatList L) L N))
(rule (take 0 IL) (U121 (isNatIList IL) IL))
(rule (take (s M) (cons N IL)) (U131 (isNatIList IL) IL M N))
